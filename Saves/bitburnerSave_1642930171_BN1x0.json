{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":185,\"hp\":11,\"max_hp\":11,\"strength\":22,\"defense\":18,\"dexterity\":18,\"agility\":22,\"charisma\":94,\"intelligence\":0,\"hacking_chance_mult\":1,\"hacking_speed_mult\":1,\"hacking_money_mult\":1,\"hacking_grow_mult\":1,\"hacking_exp\":168988.692499971,\"strength_exp\":522.3885000000063,\"defense_exp\":403.1885000000077,\"dexterity_exp\":403.1885000000077,\"agility_exp\":517.9885000000083,\"charisma_exp\":9358.461200001071,\"intelligence_exp\":0,\"hacking_mult\":1,\"strength_mult\":1,\"defense_mult\":1,\"dexterity_mult\":1,\"agility_mult\":1,\"charisma_mult\":1,\"hacking_exp_mult\":1,\"strength_exp_mult\":1,\"defense_exp_mult\":1,\"dexterity_exp_mult\":1,\"agility_exp_mult\":1,\"charisma_exp_mult\":1,\"company_rep_mult\":1,\"faction_rep_mult\":1,\"money\":6432267.774236446,\"city\":\"Sector-12\",\"location\":\"Carmichael Security\",\"jobs\":{\"FoodNStuff\":\"Employee\",\"Joe's Guns\":\"Employee\",\"Carmichael Security\":\"Software Consultant\",\"Central Intelligence Agency\":\"Software Engineering Intern\"},\"companyName\":\"Carmichael Security\",\"currentServer\":\"ps4\",\"purchasedServers\":[\"ps0\",\"ps1\",\"ps2\",\"ps3\",\"ps4\",\"ps5\",\"ps6\",\"ps7\",\"ps8\",\"ps9\",\"ps10\",\"ps11\",\"ps12\",\"ps13\",\"ps14\",\"ps15\",\"ps16\",\"ps17\",\"ps18\",\"ps19\",\"ps20\",\"ps21\",\"ps22\",\"ps23\",\"ps24\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":178,\"moneyGainRatePerSecond\":394.70356349999986,\"onlineTimeSeconds\":40253.799999919625,\"ram\":4,\"totalMoneyGenerated\":7761570.925338215,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":178,\"moneyGainRatePerSecond\":394.70356349999986,\"onlineTimeSeconds\":40132.399999921385,\"ram\":4,\"totalMoneyGenerated\":6736815.110636289,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":158,\"moneyGainRatePerSecond\":350.3548484999999,\"onlineTimeSeconds\":37095.799999971416,\"ram\":4,\"totalMoneyGenerated\":6229123.538049861,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":164,\"moneyGainRatePerSecond\":363.65946299999985,\"onlineTimeSeconds\":37093.39999997146,\"ram\":4,\"totalMoneyGenerated\":6028186.3205297785,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":159,\"moneyGainRatePerSecond\":352.57228424999994,\"onlineTimeSeconds\":37092.799999971474,\"ram\":4,\"totalMoneyGenerated\":6039478.172070231,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":160,\"moneyGainRatePerSecond\":354.7897199999999,\"onlineTimeSeconds\":37092.19999997148,\"ram\":4,\"totalMoneyGenerated\":5703241.840107179,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":163,\"moneyGainRatePerSecond\":361.4420272499999,\"onlineTimeSeconds\":37091.79999997149,\"ram\":4,\"totalMoneyGenerated\":5972096.661788241,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":161,\"moneyGainRatePerSecond\":357.00715574999987,\"onlineTimeSeconds\":35199.00000000651,\"ram\":4,\"totalMoneyGenerated\":5818020.307871515,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":161,\"moneyGainRatePerSecond\":357.00715574999987,\"onlineTimeSeconds\":35196.400000006564,\"ram\":4,\"totalMoneyGenerated\":5901654.822949796,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":151,\"moneyGainRatePerSecond\":334.8327982499999,\"onlineTimeSeconds\":33941.200000027704,\"ram\":4,\"totalMoneyGenerated\":5521202.39301027,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":163,\"moneyGainRatePerSecond\":361.4420272499999,\"onlineTimeSeconds\":29725.600000033483,\"ram\":4,\"totalMoneyGenerated\":5055914.360892248,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":151,\"moneyGainRatePerSecond\":334.8327982499999,\"onlineTimeSeconds\":8803.199999996932,\"ram\":4,\"totalMoneyGenerated\":2119968.042965143,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":151,\"moneyGainRatePerSecond\":334.8327982499999,\"onlineTimeSeconds\":8803.199999996932,\"ram\":4,\"totalMoneyGenerated\":2062192.6515803968,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":101,\"moneyGainRatePerSecond\":1323.2889006856544,\"onlineTimeSeconds\":3493.999999999013,\"ram\":64,\"totalMoneyGenerated\":4601559.995387055,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":9,\"level\":177,\"moneyGainRatePerSecond\":5411.072435476984,\"onlineTimeSeconds\":3492.7999999990143,\"ram\":64,\"totalMoneyGenerated\":7885639.285149394,\"name\":\"hacknet-node-14\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"CyberSec\",\"Netburners\"],\"factionInvitations\":[\"Sector-12\"],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"NeuroFlux Governor\"},{\"level\":2,\"name\":\"NeuroFlux Governor\"},{\"level\":3,\"name\":\"NeuroFlux Governor\"},{\"level\":4,\"name\":\"NeuroFlux Governor\"}],\"augmentations\":[],\"sourceFiles\":[],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":1,\"crime_success_mult\":1,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Company part-time\",\"workCostMult\":20,\"workExpMult\":10,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0.096,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0.036,\"workRepGainRate\":0.17107692307692307,\"workMoneyGainRate\":79.2,\"workMoneyLossRate\":0,\"workHackExpGained\":295.31519999999006,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":110.74320000000377,\"workRepGained\":522.7512615384436,\"workMoneyGained\":243635.03999998208,\"createProgramName\":\"\",\"createProgramReqLvl\":75,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":750800,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":28800000,\"work_money_mult\":1,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1642930170615,\"totalPlaytime\":45842400,\"playtimeSinceLastAug\":45842400,\"playtimeSinceLastBitnode\":45842400,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-1418337.599999997,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":264911817.00725022,\"hacknet\":83436664.42815626,\"hacknet_expenses\":-173197454.85229713,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":6431267.774236454,\"work\":953651.1999997545,\"servers\":-25283432.9157632,\"other\":-200000,\"augmentations\":-142771639.49319798}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-1418337.599999997,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":264911817.00725022,\"hacknet\":83436664.42815626,\"hacknet_expenses\":-173197454.85229713,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":6431267.774236454,\"work\":953651.1999997545,\"servers\":-25283432.9157632,\"other\":-200000,\"augmentations\":-142771639.49319798}},\"scriptProdSinceLastAug\":262666991,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1642889930041},{\"ID\":\"NS2\",\"unlockedOn\":1642891731038},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1642903858976},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1642903918947},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1642915338657},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1642920825237},{\"ID\":\"WORKOUT\",\"unlockedOn\":1642922025236},{\"ID\":\"TOR\",\"unlockedOn\":1642923064230}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"89.0.0.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"j0.msg\",\"sector-12-crime.lit\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"AutoLink.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe-33.99%-INC\"],\"ramUsed\":2.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[2254892,14,89,8]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":841.875,\"onlineMoneyMade\":2254892,\"onlineRunningTime\":5322.009999997351,\"pid\":70,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///a441b17d-fe78-4aaa-9101-cf2cb6661e77\",\"moduleSequenceNumber\":7}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"while(true) {\\n\\t//hack('n00dles');\\n\\tgrow('n00dles');\\n\\tweaken('noodles');\\n}\",\"filename\":\"n00dles.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.9,\"server\":\"home\",\"moduleSequenceNumber\":1685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tlet moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"GLASS\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///3ddceae7-040f-47de-97a9-7dd0c19dca60\",\"moduleSequenceNumber\":2570}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"home\",\"moduleSequenceNumber\":3010,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":1689,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// Continuously try to purchase servers until we've reached the maximum\\n\\t// amount of servers\\n\\tvar ram = 8;\\n\\tvar i = 0;\\n\\twhile (i < ns.getPurchasedServerLimit()) {\\n\\t\\t// Check if we have enough money to purchase a server\\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {\\n\\t\\t\\t// Don't buy server /w name if already exists\\n\\t\\t\\tif (ns.serverExists(\\\"ps\\\"+ i)) {++i; continue;}\\n\\t\\t\\t// If we have enough money, then:\\n\\t\\t\\t//  1. Purchase the server\\n\\t\\t\\t//  2. Copy our hacking script onto the newly-purchased server\\n\\t\\t\\t//  3. Run our hacking script on the newly-purchased server with 3 threads\\n\\t\\t\\t//  4. Increment our iterator to indicate that we've bought a new server\\n\\t\\t\\tvar hostname = ns.purchaseServer(\\\"ps\\\" + i, ram);\\n\\t\\t\\tawait ns.scp(\\\"farm.js\\\", hostname);\\n\\t\\t\\tns.exec(\\\"farm.js\\\", hostname, 3);\\n\\t\\t\\t++i;\\n\\t\\t}\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\tns.print(\\\"Purchased all possible Servers\\\");\\n\\tawait ns.sleep(1000000);\\n}\",\"filename\":\"server-farmer.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"server-farmer.js\",\"url\":\"blob:file:///dc8306a8-de4e-411b-b6f6-adcff6b9f31f\",\"moduleSequenceNumber\":2658}],\"dependents\":[],\"ramUsage\":6.25,\"server\":\"home\",\"moduleSequenceNumber\":6382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet i = 0;\\n\\twhile (\\\"asdf\\\") {\\n\\t\\tif (!ns.serverExists(\\\"ps\\\" + i)) {break;}\\n\\n\\t\\tlet hostname = \\\"ps\\\" + i;\\n\\t\\tns.killall(hostname);\\n\\t\\tawait ns.scp(\\\"farm.js\\\", hostname);\\n\\t\\tns.exec(\\\"farm.js\\\", hostname, 3);\\n\\t\\t++i;\\n\\t}\\t\\n}\",\"filename\":\"server-updater.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"server-updater.js\",\"url\":\"blob:file:///4089b9ac-896c-42fa-943e-82ac5383a698\",\"moduleSequenceNumber\":157}],\"dependents\":[],\"ramUsage\":4.1,\"server\":\"home\",\"moduleSequenceNumber\":3008,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import(\\\".\\\").NS } ns */\\nexport async function main(ns) {\\n\\n    let allowance = 0.5;\\n\\n    while (true) {\\n        // Figure out what the cheapest upgrade will be\\n        var upgradeType = \\\"null\\\";\\n        var upgradeNode = 0;\\n        var upgradeCost = 100000000000;\\n        \\n        if (ns.hacknet.numNodes() < ns.hacknet.maxNumNodes()) {\\n            upgradeType = \\\"new\\\";\\n            upgradeCost = ns.hacknet.getPurchaseNodeCost();\\n        }\\n        for (let i = 0; i < ns.hacknet.numNodes(); i++) {\\n            if (ns.hacknet.getLevelUpgradeCost(i, 1) < upgradeCost){\\n                upgradeType = \\\"level\\\";\\n                upgradeNode = i;\\n            }\\n            if (ns.hacknet.getRamUpgradeCost(i, 1) < upgradeCost){\\n                upgradeType = \\\"ram\\\";\\n                upgradeNode = i;\\n            }\\n            if (ns.hacknet.getCoreUpgradeCost(i, 1) < upgradeCost){\\n                upgradeType = \\\"core\\\";\\n                upgradeNode = i;\\n            }\\n        }\\n        \\n        // Try buying it?\\n        if (upgradeType == null) { \\n            ns.alert(\\\"Maxed out hacknet?!\\\")\\n            return;\\n        }\\n        // Sleep longer to wait for money\\n        let money = ns.getPlayer().money * allowance;\\n        ns.print(\\\"I have \\\" + money + \\\"; Planning to buy \\\" + upgradeType + \\\" for node \\\" + upgradeNode + \\\" for \\\" + upgradeCost);\\n        if (money < upgradeCost) { await ns.sleep(500); continue;}\\n        switch (upgradeType) {\\n            case \\\"new\\\":\\n                ns.hacknet.purchaseNode();\\n                break;\\n            case \\\"level\\\":\\n                ns.hacknet.upgradeLevel(upgradeNode, 1);\\n                break;\\n            case \\\"ram\\\":\\n                ns.hacknet.upgradeRam(upgradeNode, 1);\\n                break;\\n            case \\\"core\\\":\\n                ns.hacknet.upgradeCore(upgradeNode, 1);\\n                break;\\n        }\\n        await ns.sleep(10);\\n    }\\n}\",\"filename\":\"hacknet-lord.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacknet-lord.js\",\"url\":\"blob:file:///e0372c4a-4989-459f-a6e1-1111fc342ab9\",\"moduleSequenceNumber\":5459}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":5737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * @public\\n */\\n type FilenameOrPID = number | string;\\n\\n /**\\n  * @public\\n  */\\n interface Player {\\n   hacking: number;\\n   hp: number;\\n   max_hp: number;\\n   strength: number;\\n   defense: number;\\n   dexterity: number;\\n   agility: number;\\n   charisma: number;\\n   intelligence: number;\\n   hacking_chance_mult: number;\\n   hacking_speed_mult: number;\\n   hacking_money_mult: number;\\n   hacking_grow_mult: number;\\n   hacking_exp: number;\\n   strength_exp: number;\\n   defense_exp: number;\\n   dexterity_exp: number;\\n   agility_exp: number;\\n   charisma_exp: number;\\n   hacking_mult: number;\\n   strength_mult: number;\\n   defense_mult: number;\\n   dexterity_mult: number;\\n   agility_mult: number;\\n   charisma_mult: number;\\n   hacking_exp_mult: number;\\n   strength_exp_mult: number;\\n   defense_exp_mult: number;\\n   dexterity_exp_mult: number;\\n   agility_exp_mult: number;\\n   charisma_exp_mult: number;\\n   company_rep_mult: number;\\n   faction_rep_mult: number;\\n   numPeopleKilled: number;\\n   money: number;\\n   city: string;\\n   location: string;\\n   companyName: string;\\n   crime_money_mult: number;\\n   crime_success_mult: number;\\n   isWorking: boolean;\\n   workType: string;\\n   currentWorkFactionName: string;\\n   currentWorkFactionDescription: string;\\n   workHackExpGainRate: number;\\n   workStrExpGainRate: number;\\n   workDefExpGainRate: number;\\n   workDexExpGainRate: number;\\n   workAgiExpGainRate: number;\\n   workChaExpGainRate: number;\\n   workRepGainRate: number;\\n   workMoneyGainRate: number;\\n   workMoneyLossRate: number;\\n   workHackExpGained: number;\\n   workStrExpGained: number;\\n   workDefExpGained: number;\\n   workDexExpGained: number;\\n   workAgiExpGained: number;\\n   workChaExpGained: number;\\n   workRepGained: number;\\n   workMoneyGained: number;\\n   createProgramName: string;\\n   createProgramReqLvl: number;\\n   className: string;\\n   crimeType: string;\\n   work_money_mult: number;\\n   hacknet_node_money_mult: number;\\n   hacknet_node_purchase_cost_mult: number;\\n   hacknet_node_ram_cost_mult: number;\\n   hacknet_node_core_cost_mult: number;\\n   hacknet_node_level_cost_mult: number;\\n   hasWseAccount: boolean;\\n   hasTixApiAccess: boolean;\\n   has4SData: boolean;\\n   has4SDataTixApi: boolean;\\n   bladeburner_max_stamina_mult: number;\\n   bladeburner_stamina_gain_mult: number;\\n   bladeburner_analysis_mult: number;\\n   bladeburner_success_chance_mult: number;\\n   bitNodeN: number;\\n   totalPlaytime: number;\\n   playtimeSinceLastAug: number;\\n   playtimeSinceLastBitnode: number;\\n   jobs: any;\\n   factions: string[];\\n   tor: boolean;\\n   hasCorporation: boolean;\\n }\\n \\n /**\\n  * @public\\n  */\\n interface RunningScript {\\n   args: string[];\\n   filename: string;\\n   logs: string[];\\n   offlineExpGained: number;\\n   offlineMoneyMade: number;\\n   offlineRunningTime: number;\\n   onlineExpGained: number;\\n   onlineMoneyMade: number;\\n   onlineRunningTime: number;\\n   pid: number;\\n   ramUsage: number;\\n   server: string;\\n   threads: number;\\n }\\n \\n /**\\n  * Data representing the internal values of a crime.\\n  * @public\\n  */\\n export interface CrimeStats {\\n   /** Number representing the difficulty of the crime. Used for success chance calculations */\\n   difficulty: number;\\n   /** Amount of karma lost for successfully committing this crime */\\n   karma: number;\\n   /** How many people die as a result of this crime */\\n   kills: number;\\n   /** How much money is given */\\n   money: number;\\n   /** Name of crime */\\n   name: number;\\n   /** Milliseconds it takes to attempt the crime */\\n   time: number;\\n   /** Description of the crime activity */\\n   type: string;\\n   /** hacking level impact on success change of the crime */\\n   hacking_success_weight: number;\\n   /** strength level impact on success change of the crime */\\n   strength_success_weight: number;\\n   /** defense level impact on success change of the crime */\\n   defense_success_weight: number;\\n   /** dexterity level impact on success change of the crime */\\n   dexterity_success_weight: number;\\n   /** agility level impact on success change of the crime */\\n   agility_success_weight: number;\\n   /** charisma level impact on success change of the crime */\\n   charisma_success_weight: number;\\n   /** hacking exp gained from crime */\\n   hacking_exp: number;\\n   /** strength exp gained from crime */\\n   strength_exp: number;\\n   /** defense exp gained from crime */\\n   defense_exp: number;\\n   /** dexterity exp gained from crime */\\n   dexterity_exp: number;\\n   /** agility exp gained from crime */\\n   agility_exp: number;\\n   /** charisma exp gained from crime */\\n   charisma_exp: number;\\n   /** intelligence exp gained from crime */\\n   intelligence_exp: number;\\n }\\n \\n /**\\n  * Data representing the internal values of an Augmentation.\\n  * @public\\n  */\\n export interface AugmentationStats {\\n   /** Multipler to hacking skill */\\n   hacking_mult?: number;\\n   /** Multipler to strength skill */\\n   strength_mult?: number;\\n   /** Multipler to defense skill */\\n   defense_mult?: number;\\n   /** Multipler to dexterity skill */\\n   dexterity_mult?: number;\\n   /** Multipler to agility skill */\\n   agility_mult?: number;\\n   /** Multipler to charisma skill */\\n   charisma_mult?: number;\\n   /** Multipler to hacking experience gain rate */\\n   hacking_exp_mult?: number;\\n   /** Multipler to strength experience gain rate */\\n   strength_exp_mult?: number;\\n   /** Multipler to defense experience gain rate */\\n   defense_exp_mult?: number;\\n   /** Multipler to dexterity experience gain rate */\\n   dexterity_exp_mult?: number;\\n   /** Multipler to agility experience gain rate */\\n   agility_exp_mult?: number;\\n   /** Multipler to charisma experience gain rate */\\n   charisma_exp_mult?: number;\\n   /** Multipler to chance of successfully performing a hack */\\n   hacking_chance_mult?: number;\\n   /** Multipler to hacking speed */\\n   hacking_speed_mult?: number;\\n   /** Multipler to amount of money the player gains from hacking */\\n   hacking_money_mult?: number;\\n   /** Multipler to amount of money injected into servers using grow */\\n   hacking_grow_mult?: number;\\n   /** Multipler to amount of reputation gained when working */\\n   company_rep_mult?: number;\\n   /** Multipler to amount of reputation gained when working */\\n   faction_rep_mult?: number;\\n   /** Multipler to amount of money gained from crimes */\\n   crime_money_mult?: number;\\n   /** Multipler to crime success rate */\\n   crime_success_mult?: number;\\n   /** Multipler to amount of money gained from working */\\n   work_money_mult?: number;\\n   /** Multipler to amount of money produced by Hacknet Nodes */\\n   hacknet_node_money_mult?: number;\\n   /** Multipler to cost of purchasing a Hacknet Node */\\n   hacknet_node_purchase_cost_mult?: number;\\n   /** Multipler to cost of ram for a Hacknet Node */\\n   hacknet_node_ram_cost_mult?: number;\\n   /** Multipler to cost of core for a Hacknet Node */\\n   hacknet_node_core_cost_mult?: number;\\n   /** Multipler to cost of leveling up a Hacknet Node */\\n   hacknet_node_level_cost_mult?: number;\\n   /** Multipler to Bladeburner max stamina */\\n   bladeburner_max_stamina_mult?: number;\\n   /** Multipler to Bladeburner stamina gain rate */\\n   bladeburner_stamina_gain_mult?: number;\\n   /** Multipler to effectiveness in Bladeburner Field Analysis */\\n   bladeburner_analysis_mult?: number;\\n   /** Multipler to success chance in Bladeburner contracts/operations */\\n   bladeburner_success_chance_mult?: number;\\n }\\n \\n /**\\n  * Options to affect the behavior of {@link NS.hack | hack}, {@link NS.grow | grow}, and {@link NS.weaken | weaken}.\\n  * @public\\n  */\\n export interface BasicHGWOptions {\\n   /** Number of threads to use for this function. Must be less than or equal to the number of threads the script is running with. */\\n   threads?: number;\\n   /** Set to true this action will affect the stock market. */\\n   stock?: boolean;\\n }\\n \\n /**\\n  * Options to affect the behavior of {@link CodingContract} attempt.\\n  * @public\\n  */\\n export interface CodingAttemptOptions {\\n   /** If truthy, then the function will return a string that states the contract’s reward when it is successfully solved. */\\n   returnReward: boolean;\\n }\\n \\n /**\\n  * Return value of {@link Sleeve.getSleevePurchasableAugs | getSleevePurchasableAugs}\\n  * @public\\n  */\\n export interface AugmentPair {\\n   /** augmentation name */\\n   name: string;\\n   /** augmentation cost */\\n   cost: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export enum PositionTypes {\\n   Long = \\\"L\\\",\\n   Short = \\\"S\\\",\\n }\\n \\n /**\\n  * @public\\n  */\\n export enum OrderTypes {\\n   LimitBuy = \\\"Limit Buy Order\\\",\\n   LimitSell = \\\"Limit Sell Order\\\",\\n   StopBuy = \\\"Stop Buy Order\\\",\\n   StopSell = \\\"Stop Sell Order\\\",\\n }\\n \\n /**\\n  * Value in map of {@link StockOrder}\\n  * @public\\n  */\\n export interface StockOrderObject {\\n   /** Number of shares */\\n   shares: number;\\n   /** Price per share */\\n   price: number;\\n   /** Order type */\\n   type: OrderTypes;\\n   /** Order position */\\n   position: PositionTypes;\\n }\\n \\n /**\\n  * Return value of {@link TIX.getOrders | getOrders}\\n  *\\n  * Keys are stock symbols, properties are arrays of {@link StockOrderObject}\\n  * @public\\n  */\\n export interface StockOrder {\\n   [key: string]: StockOrderObject[];\\n }\\n \\n /**\\n  * A single process on a server.\\n  * @public\\n  */\\n export interface ProcessInfo {\\n   /** Script name. */\\n   filename: string;\\n   /** Number of threads script is running with */\\n   threads: number;\\n   /** Script's arguments */\\n   args: string[];\\n   /** Process ID */\\n   pid: number;\\n }\\n \\n /**\\n  * Hack related multipliers.\\n  * @public\\n  */\\n export interface HackingMultipliers {\\n   /** Player's hacking chance multiplier. */\\n   chance: number;\\n   /** Player's hacking speed multiplier. */\\n   speed: number;\\n   /** Player's hacking money stolen multiplier. */\\n   money: number;\\n   /** Player's hacking growth multiplier */\\n   growth: number;\\n }\\n \\n /**\\n  * Hacknet related multipliers.\\n  * @public\\n  */\\n export interface HacknetMultipliers {\\n   /** Player's hacknet production multiplier */\\n   production: number;\\n   /** Player's hacknet purchase cost multiplier */\\n   purchaseCost: number;\\n   /** Player's hacknet ram cost multiplier */\\n   ramCost: number;\\n   /** Player's hacknet core cost multiplier */\\n   coreCost: number;\\n   /** Player's hacknet level cost multiplier */\\n   levelCost: number;\\n }\\n \\n /**\\n  * Hacknet node related constants\\n  * @public\\n  */\\n export interface HacknetNodeConstants {\\n   /** Amount of money gained per level */\\n   MoneyGainPerLevel: number;\\n   /** Base cost for a new node */\\n   BaseCost: number;\\n   /** Base cost per level */\\n   LevelBaseCost: number;\\n   /** Base cost to incrase RAM */\\n   RamBaseCost: number;\\n   /** Base cost to increase cores */\\n   CoreBaseCost: number;\\n   /** Multiplier to purchase new node */\\n   PurchaseNextMult: number;\\n   /** Multiplier to increase node level */\\n   UpgradeLevelMult: number;\\n   /** Multiplier to increase RAM */\\n   UpgradeRamMult: number;\\n   /** Multiplier to increase cores */\\n   UpgradeCoreMult: number;\\n   /** Max node level */\\n   MaxLevel: number;\\n   /** Max amount of RAM in GB */\\n   MaxRam: number;\\n   /** Max number of cores */\\n   MaxCores: number;\\n }\\n \\n /**\\n  * Hacknet server related constants\\n  * @public\\n  */\\n export interface HacknetServerConstants {\\n   /** Number of hashes calculated per level */\\n   HashesPerLevel: number;\\n   /** Base cost for a new server */\\n   BaseCost: number;\\n   /** Base cost to increase RAM */\\n   RamBaseCost: number;\\n   /** Base cost to increase cores */\\n   CoreBaseCost: number;\\n   /** Base cost to upgrade cache */\\n   CacheBaseCost: number;\\n   /** Multiplier to purchase a new server */\\n   PurchaseMult: number;\\n   /** Multiplier to increase server level */\\n   UpgradeLevelMult: number;\\n   /** Multiplier to increase RAM */\\n   UpgradeRamMult: number;\\n   /** Multiplier to increase cores */\\n   UpgradeCoreMult: number;\\n   /** Multiplier to upgrade cache */\\n   UpgradeCacheMult: number;\\n   /** Max number of servers */\\n   MaxServers: number;\\n   /** Max level for a server */\\n   MaxLevel: number;\\n   /** Max amount of RAM in GB */\\n   MaxRam: number;\\n   /** Max number of cores */\\n   MaxCores: number;\\n   /** Max cache size */\\n   MaxCache: number;\\n }\\n \\n /**\\n  * A single server.\\n  * @public\\n  */\\n export interface Server {\\n   /**\\n    * How many CPU cores this server has. Maximum of 8.\\n    * Affects magnitude of grow and weaken.\\n    */\\n   cpuCores: number;\\n \\n   /** Flag indicating whether the FTP port is open */\\n   ftpPortOpen: boolean;\\n \\n   /** Flag indicating whether player has admin/root access to this server */\\n   hasAdminRights: boolean;\\n \\n   /** Hostname. Must be unique */\\n   hostname: string;\\n \\n   /** Flag indicating whether HTTP Port is open */\\n   httpPortOpen: boolean;\\n \\n   /** IP Address. Must be unique */\\n   ip: string;\\n \\n   /** Flag indicating whether player is curently connected to this server */\\n   isConnectedTo: boolean;\\n \\n   /** RAM (GB) available on this server */\\n   maxRam: number;\\n \\n   /**\\n    * Name of company/faction/etc. that this server belongs to.\\n    * Optional, not applicable to all Servers\\n    */\\n   organizationName: string;\\n \\n   /** RAM (GB) used. i.e. unavailable RAM */\\n   ramUsed: number;\\n \\n   /** Flag indicating whether SMTP Port is open */\\n   smtpPortOpen: boolean;\\n \\n   /** Flag indicating whether SQL Port is open */\\n   sqlPortOpen: boolean;\\n \\n   /** Flag indicating whether the SSH Port is open */\\n   sshPortOpen: boolean;\\n \\n   /** Flag indicating whether this is a purchased server */\\n   purchasedByPlayer: boolean;\\n \\n   /** Flag indicating whether this server has a backdoor installed by a player */\\n   backdoorInstalled: boolean;\\n \\n   /**\\n    * Initial server security level\\n    * (i.e. security level when the server was created)\\n    */\\n   baseDifficulty: number;\\n \\n   /** Server Security Level */\\n   hackDifficulty: number;\\n \\n   /** Minimum server security level that this server can be weakened to */\\n   minDifficulty: number;\\n \\n   /** How much money currently resides on the server and can be hacked */\\n   moneyAvailable: number;\\n \\n   /** Maximum amount of money that this server can hold */\\n   moneyMax: number;\\n \\n   /** Number of open ports required in order to gain admin/root access */\\n   numOpenPortsRequired: number;\\n \\n   /** How many ports are currently opened on the server */\\n   openPortCount: number;\\n \\n   /** Hacking level required to hack this server */\\n   requiredHackingSkill: number;\\n \\n   /**\\n    * Parameter that affects how effectively this server's money can\\n    * be increased using the grow() Netscript function\\n    */\\n   serverGrowth: number;\\n }\\n \\n /**\\n  * All multipliers affecting the difficulty of the current challenge.\\n  * @public\\n  */\\n export interface BitNodeMultipliers {\\n   /** Influences how quickly the player's agility level (not exp) scales */\\n   AgilityLevelMultiplier: number;\\n   /** Influences the base cost to purchase an augmentation. */\\n   AugmentationMoneyCost: number;\\n   /** Influences the base rep the player must have with a faction to purchase an augmentation. */\\n   AugmentationRepCost: number;\\n   /** Influences how quickly the player can gain rank within Bladeburner. */\\n   BladeburnerRank: number;\\n   /** Influences the cost of skill levels from Bladeburner. */\\n   BladeburnerSkillCost: number;\\n   /** Influences how quickly the player's charisma level (not exp) scales */\\n   CharismaLevelMultiplier: number;\\n   /** Influences the experience gained for each ability when a player completes a class. */\\n   ClassGymExpGain: number;\\n   /** Influences the amount of money gained from completing Coding Contracts */\\n   CodingContractMoney: number;\\n   /** Influences the experience gained for each ability when the player completes working their job. */\\n   CompanyWorkExpGain: number;\\n   /** Influences how much money the player earns when completing working their job. */\\n   CompanyWorkMoney: number;\\n   /** Influences the valuation of corporations created by the player. */\\n   CorporationValuation: number;\\n   /** Influences the base experience gained for each ability when the player commits a crime. */\\n   CrimeExpGain: number;\\n   /** Influences the base money gained when the player commits a crime. */\\n   CrimeMoney: number;\\n   /** Influences how many Augmentations you need in order to get invited to the Daedalus faction */\\n   DaedalusAugsRequirement: number;\\n   /** Influences how quickly the player's defense level (not exp) scales */\\n   DefenseLevelMultiplier: number;\\n   /** Influences how quickly the player's dexterity level (not exp) scales */\\n   DexterityLevelMultiplier: number;\\n   /** Influences how much rep the player gains in each faction simply by being a member. */\\n   FactionPassiveRepGain: number;\\n   /** Influences the experience gained for each ability when the player completes work for a Faction. */\\n   FactionWorkExpGain: number;\\n   /** Influences how much rep the player gains when performing work for a faction. */\\n   FactionWorkRepGain: number;\\n   /** Influences how much it costs to unlock the stock market's 4S Market Data API */\\n   FourSigmaMarketDataApiCost: number;\\n   /** Influences how much it costs to unlock the stock market's 4S Market Data (NOT API) */\\n   FourSigmaMarketDataCost: number;\\n   /** Influences the respect gain and money gain of your gang. */\\n   GangSoftcap: number;\\n   /** Influences the experienced gained when hacking a server. */\\n   HackExpGain: number;\\n   /** Influences how quickly the player's hacking level (not experience) scales */\\n   HackingLevelMultiplier: number;\\n   /** Influences how much money is produced by Hacknet Nodes and the hash rate of Hacknet Servers (unlocked in BitNode-9) */\\n   HacknetNodeMoney: number;\\n   /** Influences how much money it costs to upgrade your home computer's RAM */\\n   HomeComputerRamCost: number;\\n   /** Influences how much money is gained when the player infiltrates a company. */\\n   InfiltrationMoney: number;\\n   /** Influences how much rep the player can gain from factions when selling stolen documents and secrets */\\n   InfiltrationRep: number;\\n   /** Influences how much money can be stolen from a server when the player performs a hack against it through the Terminal. */\\n   ManualHackMoney: number;\\n   /** Influence how much it costs to purchase a server */\\n   PurchasedServerCost: number;\\n   /** Influences the maximum number of purchased servers you can have */\\n   PurchasedServerLimit: number;\\n   /** Influences the maximum allowed RAM for a purchased server */\\n   PurchasedServerMaxRam: number;\\n   /** Influences cost of any purchased server at or above 128GB */\\n   PurchasedServerSoftCap: number;\\n   /** Influences the minimum favor the player must have with a faction before they can donate to gain rep. */\\n   RepToDonateToFaction: number;\\n   /** Influences how much the money on a server can be reduced when a script performs a hack against it. */\\n   ScriptHackMoney: number;\\n   /** Influences how much of the money stolen by a scripted hack will be added to the player's money. */\\n   ScriptHackMoneyGain: number;\\n   /** Influences the growth percentage per cycle against a server. */\\n   ServerGrowthRate: number;\\n   /** Influences the maxmimum money that a server can grow to. */\\n   ServerMaxMoney: number;\\n   /** Influences the initial money that a server starts with. */\\n   ServerStartingMoney: number;\\n   /** Influences the initial security level (hackDifficulty) of a server. */\\n   ServerStartingSecurity: number;\\n   /** Influences the weaken amount per invocation against a server. */\\n   ServerWeakenRate: number;\\n   /** Influences how quickly the player's strength level (not exp) scales */\\n   StrengthLevelMultiplier: number;\\n   /** Influences the power of the gift */\\n   StaneksGiftPowerMultiplier: number;\\n   /** Influences the size of the gift */\\n   StaneksGiftExtraSize: number;\\n   /** Influences the hacking skill required to backdoor the world daemon. */\\n   WorldDaemonDifficulty: number;\\n }\\n \\n /**\\n  * Object representing all the values related to a hacknet node.\\n  * @public\\n  */\\n export interface NodeStats {\\n   /** Node's name */\\n   name: string;\\n   /** Node's level */\\n   level: number;\\n   /** Node's RAM (GB) */\\n   ram: number;\\n   /** Node's used RAM (GB) */\\n   ramUsed: number;\\n   /** Node's number of cores */\\n   cores: number;\\n   /** Cache level. Only applicable for Hacknet Servers */\\n   cache: number;\\n   /** Hash Capacity provided by this Node. Only applicable for Hacknet Servers */\\n   hashCapacity: number;\\n   /** Node's production per second */\\n   production: number;\\n   /** Number of seconds since Node has been purchased */\\n   timeOnline: number;\\n   /** Total number of money Node has produced */\\n   totalProduction: number;\\n }\\n \\n /**\\n  * Short summary of the players skills.\\n  * @public\\n  */\\n export interface PlayerSkills {\\n   /** Hacking level */\\n   hacking: number;\\n   /** Strength level */\\n   strength: number;\\n   /** Defense level */\\n   defense: number;\\n   /** Dexterity level */\\n   dexterity: number;\\n   /** Agility level */\\n   agility: number;\\n   /** Chraisma level */\\n   charisma: number;\\n   /** Intelligence level */\\n   intelligence: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface CharacterMult {\\n   /** Agility stat */\\n   agility: number;\\n   /** Agility exp */\\n   agilityExp: number;\\n   /** Company reputation */\\n   companyRep: number;\\n   /** Money earned from crimes */\\n   crimeMoney: number;\\n   /** Crime success chance */\\n   crimeSuccess: number;\\n   /** Defense stat */\\n   defense: number;\\n   /** Defense exp */\\n   defenseExp: number;\\n   /** Dexterity stat */\\n   dexterity: number;\\n   /** Dexterity exp */\\n   dexterityExp: number;\\n   /** Faction reputation */\\n   factionRep: number;\\n   /** Hacking stat */\\n   hacking: number;\\n   /** Hacking exp */\\n   hackingExp: number;\\n   /** Strength stat */\\n   strength: number;\\n   /** Strength exp */\\n   strengthExp: number;\\n   /** Money earned from jobs */\\n   workMoney: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface CharacterInfo {\\n   /** Current BitNode number */\\n   bitnode: number;\\n   /** Name of city you are currently in */\\n   city: string;\\n   /** Array of factions you are currently a member of */\\n   factions: string[];\\n   /** Current health points */\\n   hp: number;\\n   /** Array of all companies at which you have jobs */\\n   company: string[];\\n   /** Array of job positions for all companies you are employed at. Same order as 'jobs' */\\n   jobTitle: string[];\\n   /** Maximum health points */\\n   maxHp: number;\\n   /** Boolean indicating whether or not you have a tor router */\\n   tor: boolean;\\n   /** Object with many of the player's multipliers from Augmentations/Source Files */\\n   mult: CharacterMult;\\n   /** Timed worked in ms */\\n   timeWorked: number;\\n   /** Hacking experience earned so far from work */\\n   workHackExpGain: number;\\n   /** Str experience earned so far from work */\\n   workStrExpGain: number;\\n   /** Def experience earned so far from work */\\n   workDefExpGain: number;\\n   /** Dex experience earned so far from work */\\n   workDexExpGain: number;\\n   /** Agi experience earned so far from work */\\n   workAgiExpGain: number;\\n   /** Cha experience earned so far from work */\\n   workChaExpGain: number;\\n   /** Reputation earned so far from work, if applicable */\\n   workRepGain: number;\\n   /** Money earned so far from work, if applicable */\\n   workMoneyGain: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface SleeveWorkGains {\\n   /** Hacking exp gained from work */\\n   workHackExpGain: number;\\n   /** Strength exp gained from work */\\n   workStrExpGain: number;\\n   /** Defense exp gained from work, */\\n   workDefExpGain: number;\\n   /** Dexterity exp gained from work */\\n   workDexExpGain: number;\\n   /** Agility exp gained from work */\\n   workAgiExpGain: number;\\n   /** Charisma exp gained from work */\\n   workChaExpGain: number;\\n   /** Money gained from work */\\n   workMoneyGain: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface SourceFileLvl {\\n   /** The number of the source file */\\n   n: number;\\n   /** The level of the source file */\\n   lvl: number;\\n }\\n \\n /**\\n  * Bladeburner current action.\\n  * @public\\n  */\\n export interface BladeburnerCurAction {\\n   /** Type of Action */\\n   type: string;\\n   /** Name of Action */\\n   name: string;\\n }\\n \\n /**\\n  * Gang general info.\\n  * @public\\n  */\\n export interface GangGenInfo {\\n   /** Name of faction that the gang belongs to (\\\"Slum Snakes\\\", etc.) */\\n   faction: string;\\n   /** Indicating whether or not it's a hacking gang */\\n   isHacking: boolean;\\n   /** Money earned per game cycle */\\n   moneyGainRate: number;\\n   /** Gang's power for territory warfare */\\n   power: number;\\n   /** Gang's respect */\\n   respect: number;\\n   /** Respect earned per game cycle */\\n   respectGainRate: number;\\n   /** Amount of territory held */\\n   territory: number;\\n   /** Clash chance */\\n   territoryClashChance: number;\\n   /** Gang's wanted level */\\n   wantedLevel: number;\\n   /** Wanted level gained/lost per game cycle (negative for losses) */\\n   wantedLevelGainRate: number;\\n   /** Indicating if territory warfare is enabled */\\n   territoryWarfareEngaged: boolean;\\n   /** Number indicating the current wanted penalty */\\n   wantedPenalty: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface GangOtherInfoObject {\\n   /** Gang power */\\n   power: number;\\n   /** Gang territory, in decimal form */\\n   territory: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface GangOtherInfo {\\n   \\\"Slum Snakes\\\": GangOtherInfoObject;\\n   Tetrads: GangOtherInfoObject;\\n   \\\"The Syndicate\\\": GangOtherInfoObject;\\n   \\\"The Dark Army\\\": GangOtherInfoObject;\\n   \\\"Speakers for the Dead\\\": GangOtherInfoObject;\\n   NiteSec: GangOtherInfoObject;\\n   \\\"The Black Hand\\\": GangOtherInfoObject;\\n }\\n \\n /**\\n  * Object representing data representing a gang member task.\\n  * @public\\n  */\\n export interface GangTaskStats {\\n   /** Task name */\\n   name: string;\\n   /** Task Description */\\n   desc: string;\\n   /** Is a task of a hacking gang */\\n   isHacking: boolean;\\n   /** Is a task of a combat gang */\\n   isCombat: boolean;\\n   /** Base respect earned */\\n   baseRespect: number;\\n   /** Base wanted earned */\\n   baseWanted: number;\\n   /** Base money earned */\\n   baseMoney: number;\\n   /** Hacking skill impact on task scaling */\\n   hackWeight: number;\\n   /** Stength skill impact on task scaling */\\n   strWeight: number;\\n   /** Defense skill impact on task scaling */\\n   defWeight: number;\\n   /** Dexterity skill impact on task scaling */\\n   dexWeight: number;\\n   /** Agility skill impact on task scaling */\\n   agiWeight: number;\\n   /** Charisma skill impact on task scaling */\\n   chaWeight: number;\\n   /** Number representing the difficulty of the task */\\n   difficulty: number;\\n   /** Territory impact on task scaling */\\n   territory: GangTerritory;\\n }\\n \\n /**\\n  * Object representing data representing a gang member equipment.\\n  * @public\\n  */\\n export interface EquipmentStats {\\n   /** Strength multiplier */\\n   str?: number;\\n   /** Defense multiplier */\\n   def?: number;\\n   /** Dexterity multiplier */\\n   dex?: number;\\n   /** Agility multiplier */\\n   agi?: number;\\n   /** Charisma multiplier */\\n   cha?: number;\\n   /** Hacking multiplier */\\n   hack?: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface GangTerritory {\\n   /** Money gain impact on task scaling */\\n   money: number;\\n   /** Respect gain impact on task scaling */\\n   respect: number;\\n   /** Wanted gain impact on task scaling */\\n   wanted: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface GangMemberInfo {\\n   name: string;\\n   task: string;\\n   earnedRespect: number;\\n   hack: number;\\n   str: number;\\n   def: number;\\n   dex: number;\\n   agi: number;\\n   cha: number;\\n \\n   hack_exp: number;\\n   str_exp: number;\\n   def_exp: number;\\n   dex_exp: number;\\n   agi_exp: number;\\n   cha_exp: number;\\n \\n   hack_mult: number;\\n   str_mult: number;\\n   def_mult: number;\\n   dex_mult: number;\\n   agi_mult: number;\\n   cha_mult: number;\\n \\n   hack_asc_mult: number;\\n   str_asc_mult: number;\\n   def_asc_mult: number;\\n   dex_asc_mult: number;\\n   agi_asc_mult: number;\\n   cha_asc_mult: number;\\n \\n   hack_asc_points: number;\\n   str_asc_points: number;\\n   def_asc_points: number;\\n   dex_asc_points: number;\\n   agi_asc_points: number;\\n   cha_asc_points: number;\\n \\n   upgrades: string[];\\n   augmentations: string[];\\n \\n   respectGain: number;\\n   wantedLevelGain: number;\\n   moneyGain: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface GangMemberAscension {\\n   /** Amount of respect lost from ascending */\\n   respect: number;\\n   /** Hacking multiplier gained from ascending */\\n   hack: number;\\n   /** Strength multiplier gained from ascending */\\n   str: number;\\n   /** Defense multiplier gained from ascending */\\n   def: number;\\n   /** Dexterity multiplier gained from ascending */\\n   dex: number;\\n   /** Agility multiplier gained from ascending */\\n   agi: number;\\n   /** Charisma multiplier gained from ascending */\\n   cha: number;\\n }\\n \\n /**\\n  * Object representing a sleeve stats.\\n  * @public\\n  */\\n export interface SleeveSkills {\\n   /** Current shock of the sleeve [0-100] */\\n   shock: number;\\n   /** Current sync of the sleeve [0-100] */\\n   sync: number;\\n   /** Current hacking skill of the sleeve */\\n   hacking: number;\\n   /** Current strength of the sleeve */\\n   strength: number;\\n   /** Current defense of the sleeve */\\n   defense: number;\\n   /** Current dexterity of the sleeve */\\n   dexterity: number;\\n   /** Current agility of the sleeve */\\n   agility: number;\\n   /** Current charisma of the sleeve */\\n   charisma: number;\\n }\\n \\n /**\\n  * Object representing sleeve information.\\n  * @public\\n  */\\n export interface SleeveInformation {\\n   /** Location of the sleeve */\\n   city: string;\\n   /** Current hp of the sleeve */\\n   hp: number;\\n   /** Max hp of the sleeve */\\n   maxHp: number;\\n   /** Jobs available to the sleeve */\\n   jobs: string[];\\n   /** Job titles available to the sleeve */\\n   jobTitle: string[];\\n   /** Does this sleeve have access to the tor router */\\n   tor: boolean;\\n   /** Sleeve multipliers */\\n   mult: CharacterMult;\\n   /** Time spent on the current task in milliseconds */\\n   timeWorked: number;\\n   /** Earnings synchronized to other sleeves */\\n   earningsForSleeves: SleeveWorkGains;\\n   /** Earnings synchronized to the player */\\n   earningsForPlayer: SleeveWorkGains;\\n   /** Earnings for this sleeve */\\n   earningsForTask: SleeveWorkGains;\\n   /** Faction or company reputation gained for the current task */\\n   workRepGain: number;\\n }\\n \\n /**\\n  * Object representing a sleeve current task.\\n  * @public\\n  */\\n export interface SleeveTask {\\n   /** Task type */\\n   task: string;\\n   /** Crime currently attempting, if any */\\n   crime: string;\\n   /** Location of the task, if any */\\n   location: string;\\n   /** Stat being trained at the gym, if any */\\n   gymStatType: string;\\n   /** Faction work type being performed, if any */\\n   factionWorkType: string;\\n }\\n \\n /**\\n  * Object representing a port. A port is a serialized queue.\\n  * @public\\n  */\\n export interface NetscriptPort {\\n   /**\\n    * Write data to a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns The data popped off the queue if it was full.\\n    */\\n   write(value: string | number): null | string | number;\\n \\n   /**\\n    * Attempt to write data to the port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns True if the data was added to the port, false if the port was full\\n    */\\n   tryWrite(value: string | number): boolean;\\n \\n   /**\\n    * Shift an element out of the port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function will remove the first element from the port and return it.\\n    * If the port is empty, then the string “NULL PORT DATA” will be returned.\\n    * @returns the data read.\\n    */\\n   read(): string | number;\\n \\n   /**\\n    * Retrieve the first element from the port without removing it.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is used to peek at the data from a port. It returns the\\n    * first element in the specified port without removing that element. If\\n    * the port is empty, the string “NULL PORT DATA” will be returned.\\n    * @returns the data read\\n    */\\n   peek(): string | number;\\n \\n   /**\\n    * Check if the port is full.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns true if the port is full, otherwise false\\n    */\\n   full(): boolean;\\n \\n   /**\\n    * Check if the port is empty.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns true if the port is empty, otherwise false\\n    */\\n   empty(): boolean;\\n \\n   /**\\n    * Empties all data from the port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   clear(): void;\\n }\\n \\n /**\\n  * Stock market API\\n  * @public\\n  */\\n export interface TIX {\\n   /**\\n    * Returns an array of the symbols of the tradable stocks\\n    *\\n    * @remarks RAM cost: 2 GB\\n    * @returns Array of the symbols of the tradable stocks.\\n    */\\n   getSymbols(): string[];\\n \\n   /**\\n    * Returns the price of a stock\\n    *\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * The stock’s price is the average of its bid and ask price.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1\\n    * stock.getPrice(\\\"FISG\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2\\n    * ns.stock.getPrice(\\\"FISG\\\");\\n    * ```\\n    * @param sym - Stock symbol.\\n    * @returns The price of a stock.\\n    */\\n   getPrice(sym: string): number;\\n \\n   /**\\n    * Returns the ask price of that stock.\\n    * @remarks RAM cost: 2 GB\\n    *\\n    * @param sym - Stock symbol.\\n    * @returns The ask price of a stock.\\n    */\\n   getAskPrice(sym: string): number;\\n \\n   /**\\n    * Returns the bid price of that stock.\\n    * @remarks RAM cost: 2 GB\\n    *\\n    * @param sym - Stock symbol.\\n    * @returns The bid price of a stock.\\n    */\\n   getBidPrice(sym: string): number;\\n \\n   /**\\n    * Returns the player’s position in a stock.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * Returns an array of four elements that represents the player’s position in a stock.\\n    *\\n    * The first element is the returned array is the number of shares the player owns of\\n    * the stock in the Long position. The second element in the array is the average price\\n    * of the player’s shares in the Long position.\\n    *\\n    * The third element in the array is the number of shares the player owns of the stock\\n    * in the Short position. The fourth element in the array is the average price of the\\n    * player’s Short position.\\n    *\\n    * All elements in the returned array are numeric.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1\\n    * var pos = stock.getPosition(\\\"ECP\\\");\\n    * var shares      = pos[0];\\n    * var avgPx       = pos[1];\\n    * var sharesShort = pos[2];\\n    * var avgPxShort  = pos[3];\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2\\n    * const [shares, avgPx, sharesShort, avgPxShort] = ns.stock.getPosition(\\\"ECP\\\");\\n    * ```\\n    * @param sym - Stock symbol.\\n    * @returns Array of four elements that represents the player’s position in a stock.\\n    */\\n   getPosition(sym: string): [number, number, number, number];\\n \\n   /**\\n    * Returns the maximum number of shares of a stock.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * This is the maximum amount of the stock that can be purchased\\n    * in both the Long and Short positions combined.\\n    *\\n    * @param sym - Stock symbol.\\n    * @returns Maximum number of shares that the stock has.\\n    */\\n   getMaxShares(sym: string): number;\\n \\n   /**\\n    * Calculates cost of buying stocks.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * Calculates and returns how much it would cost to buy a given number of shares of a stock.\\n    * This takes into account spread, large transactions influencing the price of the stock and commission fees.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to purchase.\\n    * @param posType - Specifies whether the order is a “Long” or “Short” position.\\n    * @returns Cost to buy a given number of shares of a stock.\\n    */\\n   getPurchaseCost(sym: string, shares: number, posType: string): number;\\n \\n   /**\\n    * Calculate profit of selling stocks.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * Calculates and returns how much you would gain from selling a given number of shares of a stock.\\n    * This takes into account spread, large transactions influencing the price of the stock and commission fees.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to sell.\\n    * @param posType - Specifies whether the order is a “Long” or “Short” position.\\n    * @returns Gain from selling a given number of shares of a stock.\\n    */\\n   getSaleGain(sym: string, shares: number, posType: string): number;\\n \\n   /**\\n    * Buy stocks.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Attempts to purchase shares of a stock using a Market Order.\\n    *\\n    * If the player does not have enough money to purchase the specified number of shares,\\n    * then no shares will be purchased. Remember that every transaction on the stock exchange\\n    * costs a certain commission fee.\\n    *\\n    * If this function successfully purchases the shares, it will return the stock price at which\\n    * each share was purchased. Otherwise, it will return 0.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to purchased. Must be positive. Will be rounded to nearest integer.\\n    * @returns The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased.\\n    */\\n   buy(sym: string, shares: number): number;\\n \\n   /**\\n    * Sell stocks.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Attempts to sell shares of a stock using a Market Order.\\n    *\\n    * If the specified number of shares in the function exceeds the amount that the player\\n    * actually owns, then this function will sell all owned shares. Remember that every\\n    * transaction on the stock exchange costs a certain commission fee.\\n    *\\n    * The net profit made from selling stocks with this function is reflected in the script’s\\n    * statistics. This net profit is calculated as:\\n    *\\n    *    shares * (sell_price - average_price_of_purchased_shares)\\n    *\\n    * If the sale is successful, this function will return the stock price at\\n    * which each share was sold. Otherwise, it will return 0.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to sell. Must be positive. Will be rounded to nearest integer.\\n    * @returns The stock price at which each share was sold, otherwise 0 if the shares weren't sold.\\n    */\\n   sell(sym: string, shares: number): number;\\n \\n   /**\\n    * Short stocks.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Attempts to purchase a short position of a stock using a Market Order.\\n    *\\n    * The ability to short a stock is **not** immediately available to the player and\\n    * must be unlocked later on in the game.\\n    *\\n    * If the player does not have enough money to purchase the specified number of shares,\\n    * then no shares will be purchased. Remember that every transaction on the stock exchange\\n    * costs a certain commission fee.\\n    *\\n    * If the purchase is successful, this function will return the stock price at which each\\n    * share was purchased. Otherwise, it will return 0.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to short. Must be positive. Will be rounded to nearest integer.\\n    * @returns The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased.\\n    */\\n   short(sym: string, shares: number): number;\\n \\n   /**\\n    * Sell short stock.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Attempts to sell a short position of a stock using a Market Order.\\n    *\\n    * The ability to short a stock is **not** immediately available to the player and\\n    * must be unlocked later on in the game.\\n    *\\n    * If the specified number of shares exceeds the amount that the player actually owns,\\n    * then this function will sell all owned shares. Remember that every transaction on\\n    * the stock exchange costs a certain commission fee.\\n    *\\n    * If the sale is successful, this function will return the stock price at which each\\n    * share was sold. Otherwise it will return 0.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares to sell. Must be positive. Will be rounded to nearest integer.\\n    * @returns The stock price at which each share was sold, otherwise 0 if the shares weren't sold.\\n    */\\n   sellShort(sym: string, shares: number): number;\\n \\n   /**\\n    * Place order for stocks.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Places an order on the stock market. This function only works for Limit and Stop Orders.\\n    *\\n    * The ability to place limit and stop orders is **not** immediately available to the player and\\n    * must be unlocked later on in the game.\\n    *\\n    * Returns true if the order is successfully placed, and false otherwise.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares for order. Must be positive. Will be rounded to nearest integer.\\n    * @param price - Execution price for the order.\\n    * @param type - Type of order.\\n    * @param pos - Specifies whether the order is a “Long” or “Short” position.\\n    * @returns True if the order is successfully placed, and false otherwise.\\n    */\\n   placeOrder(sym: string, shares: number, price: number, type: string, pos: string): boolean;\\n \\n   /**\\n    * Cancel order for stocks.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Cancels an oustanding Limit or Stop order on the stock market.\\n    *\\n    * The ability to use limit and stop orders is **not** immediately available to the player and\\n    * must be unlocked later on in the game.\\n    *\\n    * @param sym - Stock symbol.\\n    * @param shares - Number of shares for order. Must be positive. Will be rounded to nearest integer.\\n    * @param price - Execution price for the order.\\n    * @param type - Type of order.\\n    * @param pos - Specifies whether the order is a “Long” or “Short” position.\\n    */\\n   cancelOrder(sym: string, shares: number, price: number, type: string, pos: string): void;\\n \\n   /**\\n    * Returns your order book for the stock market.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * This is an object containing information for all the Limit and Stop Orders you have in the stock market.\\n    * For each symbol you have a position in, the returned object will have a key with that symbol's name.\\n    * The object's properties are each an array of {@link StockOrderObject}\\n    * The object has the following structure:\\n    *\\n    * ```ts\\n    * {\\n    *  string1: [ // Array of orders for this stock\\n    *      {\\n    *          shares: Order quantity\\n    *          price: Order price\\n    *          type: Order type\\n    *          position: Either \\\"L\\\" or \\\"S\\\" for Long or Short position\\n    *      },\\n    *      {\\n    *          ...\\n    *      },\\n    *      ...\\n    *  ],\\n    *  string2: [ // Array of orders for this stock\\n    *      ...\\n    *  ],\\n    *  ...\\n    * }\\n    * ```\\n    * The “Order type” property can have one of the following four values: \\\"Limit Buy Order\\\", \\\"Limit Sell Order\\\", \\\"Stop Buy Order\\\", \\\"Stop Sell Order\\\".\\n    * Note that the order book will only contain information for stocks that you actually have orders in.\\n    *\\n    * @example\\n    * ```ts\\n    * \\\"If you do not have orders in Nova Medical (NVMD), then the returned object will not have a “NVMD” property.\\\"\\n    * {\\n    *  ECP: [\\n    *      {\\n    *          shares: 5,\\n    *          price: 100,000\\n    *          type: \\\"Stop Buy Order\\\",\\n    *          position: \\\"S\\\",\\n    *      },\\n    *      {\\n    *          shares: 25,\\n    *          price: 125,000\\n    *          type: \\\"Limit Sell Order\\\",\\n    *          position: \\\"L\\\",\\n    *      },\\n    *  ],\\n    *  SYSC: [\\n    *      {\\n    *          shares: 100,\\n    *          price: 10,000\\n    *          type: \\\"Limit Buy Order\\\",\\n    *          position: \\\"L\\\",\\n    *      },\\n    *  ],\\n    * }\\n    * ```\\n    * @returns Object containing information for all the Limit and Stop Orders you have in the stock market.\\n    */\\n   getOrders(): StockOrder;\\n \\n   /**\\n    * Returns the volatility of the specified stock.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * Volatility represents the maximum percentage by which a stock’s price can change every tick.\\n    * The volatility is returned as a decimal value, NOT a percentage\\n    * (e.g. if a stock has a volatility of 3%, then this function will return 0.03, NOT 3).\\n    *\\n    * In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.\\n    *\\n    * @param sym - Stock symbol.\\n    * @returns Volatility of the specified stock.\\n    */\\n   getVolatility(sym: string): number;\\n \\n   /**\\n    * Returns the probability that the specified stock’s price will increase (as opposed to decrease) during the next tick.\\n    * @remarks\\n    * RAM cost: 2.5 GB\\n    * The probability is returned as a decimal value, NOT a percentage\\n    * (e.g. if a stock has a 60% chance of increasing, then this function will return 0.6, NOT 60).\\n    *\\n    * In other words, if this function returned 0.30 for a stock, then this means that the stock’s price has a\\n    * 30% chance of increasing and a 70% chance of decreasing during the next tick.\\n    *\\n    * In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.\\n    *\\n    * @param sym - Stock symbol.\\n    * @returns Probability that the specified stock’s price will increase (as opposed to decrease) during the next tick.\\n    */\\n   getForecast(sym: string): number;\\n \\n   /**\\n    * Purchase 4S Market Data Access.\\n    * @remarks RAM cost: 2.5 GB\\n    * @returns True if you successfully purchased it or if you already have access, false otherwise.\\n    */\\n   purchase4SMarketData(): boolean;\\n \\n   /**\\n    * Purchase 4S Market Data TIX API Access.\\n    * @remarks RAM cost: 2.5 GB\\n    * @returns True if you successfully purchased it or if you already have access, false otherwise.\\n    */\\n   purchase4SMarketDataTixApi(): boolean;\\n }\\n \\n /**\\n  * Singularity API\\n  * @remarks\\n  * This API requires Source-File 4 to use. The RAM cost of all these functions is multiplied by 16/4/1 based on Source-File 4 levels.\\n  * @public\\n  */\\n export interface Singularity {\\n   /**\\n    * Take university class.\\n    *\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically set you to start taking a course at a university.\\n    * If you are already in the middle of some “working” action (such as working at a\\n    * company, for a faction, or on a program), then running this function will automatically\\n    * cancel that action and give you your earnings.\\n    *\\n    * The cost and experience gains for all of these universities and classes are the same as\\n    * if you were to manually visit and take these classes.\\n    *\\n    * @param universityName - Name of university. You must be in the correct city for whatever university you specify.\\n    * @param courseName - Name of course.\\n    * @param focus - Acquire player focus on this class. Optional. Defaults to true.\\n    * @returns True if actions is successfully started, false otherwise.\\n    */\\n   universityCourse(universityName: string, courseName: string, focus?: boolean): boolean;\\n \\n   /**\\n    * Workout at the gym.\\n    *\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n \\n    * This function will automatically set you to start working out at a gym to train\\n    * a particular stat. If you are already in the middle of some “working” action\\n    * (such as working at a company, for a faction, or on a program), then running\\n    * this function will automatically cancel that action and give you your earnings.\\n    *\\n    * The cost and experience gains for all of these gyms are the same as if you were\\n    * to manually visit these gyms and train\\n    *\\n    * @param gymName - Name of gym. You must be in the correct city for whatever gym you specify.\\n    * @param stat - The stat you want to train.\\n    * @param focus - Acquire player focus on this gym workout. Optional. Defaults to true.\\n    * @returns True if actions is successfully started, false otherwise.\\n    */\\n   gymWorkout(gymName: string, stat: string, focus?: boolean): boolean;\\n \\n   /**\\n    * Travel to another city.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * This function allows the player to travel to any city. The cost for using this\\n    * function is the same as the cost for traveling through the Travel Agency.\\n    *\\n    * @param city - City to travel to.\\n    * @returns True if actions is successful, false otherwise.\\n    */\\n   travelToCity(city: string): boolean;\\n \\n   /**\\n    * Purchase the TOR router.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * This function allows you to automatically purchase a TOR router. The cost for\\n    * purchasing a TOR router using this function is the same as if you were to\\n    * manually purchase one.\\n    *\\n    * @returns True if actions is successful, false otherwise.\\n    */\\n   purchaseTor(): boolean;\\n \\n   /**\\n    * Purchase a program from the dark web.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * This function allows you to automatically purchase programs. You MUST have a\\n    * TOR router in order to use this function. The cost of purchasing programs\\n    * using this function is the same as if you were purchasing them through the Dark\\n    * Web using the Terminal buy command.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1\\n    * purchaseProgram(\\\"brutessh.exe\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2\\n    * ns.purchaseProgram(\\\"brutessh.exe\\\");\\n    * ```\\n    * @param programName - Name of program to purchase.\\n    * @returns True if the specified program is purchased, and false otherwise.\\n    */\\n   purchaseProgram(programName: string): boolean;\\n \\n   /**\\n    * Check if the player is busy.\\n    * @remarks\\n    * RAM cost: 0.5 GB * 16/4/1\\n    *\\n    *\\n    * Returns a boolean indicating whether or not the player is currently performing an\\n    * ‘action’. These actions include working for a company/faction, studying at a univeristy,\\n    * working out at a gym, creating a program, committing a crime, or carrying out a Hacking Mission.\\n    *\\n    * @returns True if the player is currently performing an ‘action’, false otherwise.\\n    */\\n   isBusy(): boolean;\\n \\n   /**\\n    * Stop the current action.\\n    * @remarks\\n    * RAM cost: 1 GB * 16/4/1\\n    *\\n    *\\n    * This function is used to end whatever ‘action’ the player is currently performing.\\n    * The player will receive whatever money/experience/etc. he has earned from that action.\\n    *\\n    * The actions that can be stopped with this function are:\\n    *\\n    * * Studying at a university\\n    * * Working for a company/faction\\n    * * Creating a program\\n    * * Committing a Crime\\n    *\\n    * This function will return true if the player’s action was ended.\\n    * It will return false if the player was not performing an action when this function was called.\\n    *\\n    * @returns True if the player’s action was ended, false if the player was not performing an action.\\n    */\\n   stopAction(): boolean;\\n \\n   /**\\n    * Upgrade home computer RAM.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will upgrade amount of RAM on the player’s home computer. The cost is\\n    * the same as if you were to do it manually.\\n    *\\n    * This function will return true if the player’s home computer RAM is successfully upgraded, and false otherwise.\\n    *\\n    * @returns True if the player’s home computer RAM is successfully upgraded, and false otherwise.\\n    */\\n   upgradeHomeRam(): boolean;\\n \\n   /**\\n    * Upgrade home computer cores.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will upgrade amount of cores on the player’s home computer. The cost is\\n    * the same as if you were to do it manually.\\n    *\\n    * This function will return true if the player’s home computer cores is successfully upgraded, and false otherwise.\\n    *\\n    * @returns True if the player’s home computer cores is successfully upgraded, and false otherwise.\\n    */\\n   upgradeHomeCores(): boolean;\\n \\n   /**\\n    * Get the price of upgrading home RAM.\\n    * @remarks\\n    * RAM cost: 1.5 GB * 16/4/1\\n    *\\n    *\\n    * Returns the cost of upgrading the player’s home computer RAM.\\n    *\\n    * @returns Cost of upgrading the player’s home computer RAM.\\n    */\\n   getUpgradeHomeRamCost(): number;\\n \\n   /**\\n    * Get the price of upgrading home cores.\\n    * @remarks\\n    * RAM cost: 1.5 GB * 16/4/1\\n    *\\n    *\\n    * Returns the cost of upgrading the player’s home computer cores.\\n    *\\n    * @returns Cost of upgrading the player’s home computer cores.\\n    */\\n   getUpgradeHomeCoresCost(): number;\\n \\n   /**\\n    * Work for a company.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically set you to start working at the company\\n    * at which you are employed. If you are already in the middle of some “working”\\n    * action (such as working for a faction, training at a gym, or creating a program),\\n    * then running this function will automatically cancel that action and give you\\n    * your earnings.\\n    *\\n    * This function will return true if the player starts working, and false otherwise.\\n    *\\n    * Note that when you are working for a company, you will not actually receive your earnings (reputation, money, experience) until you FINISH the action.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings:\\n    * while (getCompanyRep(COMPANY HERE) < VALUE) {\\n    *    workForCompany();\\n    *    sleep(60000);\\n    * }\\n    * //This way, your company reputation will be updated every minute.\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings:\\n    * while (ns.getCompanyRep(COMPANY HERE) < VALUE) {\\n    *    ns.workForCompany();\\n    *    await ns.sleep(60000);\\n    * }\\n    * //This way, your company reputation will be updated every minute.\\n    * ```\\n    * @param companyName - Name of company to work for. Must be an exact match. Optional. If not specified, this argument defaults to the last job that you worked\\n    * @param focus - Acquire player focus on this work operation. Optional. Defaults to true.\\n    * @returns True if the player starts working, and false otherwise.\\n    */\\n   workForCompany(companyName?: string, focus?: boolean): boolean;\\n \\n   /**\\n    * Apply for a job at a company.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically try to apply to the specified company\\n    * for a position in the specified field. This function can also be used to\\n    * apply for promotions by specifying the company and field you are already\\n    * employed at.\\n    *\\n    * This function will return true if you successfully get a job/promotion,\\n    * and false otherwise. Note that if you are trying to use this function to\\n    * apply for a promotion and you don’t get one, it will return false.\\n    *\\n    * @param companyName - Name of company to apply to.\\n    * @param field - Field to which you want to apply.\\n    * @returns True if the player successfully get a job/promotion, and false otherwise.\\n    */\\n   applyToCompany(companyName: string, field: string): boolean;\\n \\n   /**\\n    * Get company reputation.\\n    * @remarks\\n    * RAM cost: 1 GB * 16/4/1\\n    *\\n    *\\n    * This function will return the amount of reputation you have at the specified company.\\n    * If the company passed in as an argument is invalid, -1 will be returned.\\n    *\\n    * @param companyName - Name of the company.\\n    * @returns Amount of reputation you have at the specified company.\\n    */\\n   getCompanyRep(companyName: string): number;\\n \\n   /**\\n    * Get company favor.\\n    * @remarks\\n    * RAM cost: 1 GB * 16/4/1\\n    *\\n    *\\n    * This function will return the amount of favor you have at the specified company.\\n    * If the company passed in as an argument is invalid, -1 will be returned.\\n    *\\n    * @param companyName - Name of the company.\\n    * @returns Amount of favor you have at the specified company.\\n    */\\n   getCompanyFavor(companyName: string): number;\\n \\n   /**\\n    * Get company favor gain.\\n    * @remarks\\n    * RAM cost: 0.75 GB * 16/4/1\\n    *\\n    *\\n    * This function will return the amount of favor you will gain for the specified\\n    * company when you reset by installing Augmentations.\\n    *\\n    * @param companyName - Name of the company.\\n    * @returns Amount of favor you gain at the specified company when you reset by installing Augmentations.\\n    */\\n   getCompanyFavorGain(companyName: string): number;\\n \\n   /**\\n    * List all current faction invitations.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * Returns an array with the name of all Factions you currently have oustanding invitations from.\\n    *\\n    * @returns Array with the name of all Factions you currently have oustanding invitations from.\\n    */\\n   checkFactionInvitations(): string[];\\n \\n   /**\\n    * Join a faction.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically accept an invitation from a faction and join it.\\n    *\\n    * @param faction - Name of faction to join.\\n    * @returns True if player joined the faction, and false otherwise.\\n    */\\n   joinFaction(faction: string): boolean;\\n \\n   /**\\n    * Work for a faction.\\n    * @remarks\\n    * RAM cost: 3 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically set you to start working for the specified faction.\\n    * Obviously, you must be a member of the faction or else this function will fail. If\\n    * you are already in the middle of some “working” action (such as working for a company,\\n    * training at a gym, or creating a program), then running this function will automatically\\n    * cancel that action and give you your earnings.\\n    *\\n    * This function will return true if you successfully start working for the specified faction, and false otherwise.\\n    *\\n    * Note that when you are working for a faction, you will not actually receive your earnings (reputation, experience) until you FINISH the action.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings:\\n    * while (getFactionRep(FACTION NAME) < VALUE) {\\n    *    workForFaction(FACNAME, WORKTYPE);\\n    *    sleep(60000);\\n    * }\\n    * //This way, your faction reputation will be updated every minute.\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings:\\n    * while (ns.getFactionRep(FACTION NAME) < VALUE) {\\n    *    ns.workForFaction(FACNAME, WORKTYPE);\\n    *    await ns.sleep(60000);\\n    * }\\n    * //This way, your faction reputation will be updated every minute.\\n    * ```\\n    * @param faction - Name of faction to work for.\\n    * @param workType - Type of work to perform for the faction.\\n    * @param focus - Acquire player focus on this work operation. Optional. Defaults to true.\\n    * @returns True if the player starts working, and false otherwise.\\n    */\\n   workForFaction(faction: string, workType: string, focus?: boolean): boolean;\\n \\n   /**\\n    * Get faction reputation.\\n    * @remarks\\n    * RAM cost: 1 GB * 16/4/1\\n    *\\n    *\\n    * This function returns the amount of reputation you have for the specified faction.\\n    *\\n    * @param faction - Name of faction to work for.\\n    * @returns Amount of reputation you have for the specified faction.\\n    */\\n   getFactionRep(faction: string): number;\\n \\n   /**\\n    * Get faction favor.\\n    * @remarks\\n    * RAM cost: 1 GB * 16/4/1\\n    *\\n    *\\n    * This function returns the amount of favor you have for the specified faction.\\n    *\\n    * @param faction - Name of faction.\\n    * @returns Amount of favor you have for the specified faction.\\n    */\\n   getFactionFavor(faction: string): number;\\n \\n   /**\\n    * Get faction favor gain.\\n    * @remarks\\n    * RAM cost: 0.75 GB * 16/4/1\\n    *\\n    *\\n    * This function returns the amount of favor you will gain for the specified\\n    * faction when you reset by installing Augmentations.\\n    *\\n    * @param faction - Name of faction.\\n    * @returns Amount of favor you will gain for the specified faction when you reset by installing Augmentations.\\n    */\\n   getFactionFavorGain(faction: string): number;\\n \\n   /**\\n    * Donate to a faction.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * Attempts to donate money to the specified faction in exchange for reputation.\\n    * Returns true if you successfully donate the money, and false otherwise.\\n    *\\n    * @param faction - Name of faction to donate to.\\n    * @param amount - Amount of money to donate.\\n    * @returns True if the money was donated, and false otherwise.\\n    */\\n   donateToFaction(faction: string, amount: number): boolean;\\n \\n   /**\\n    * Create a program.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically set you to start working on creating the\\n    * specified program. If you are already in the middle of some “working” action\\n    * (such as working for a company, training at a gym, or taking a course), then\\n    * running this function will automatically cancel that action and give you your\\n    * earnings.\\n    *\\n    * This function returns true if you successfully start working on the specified program, and false otherwise.\\n    *\\n    * Note that creating a program using this function has the same hacking level requirements as it normally would. These level requirements are:\\n    * * BruteSSH.exe: 50\\n    * * FTPCrack.exe: 100\\n    * * relaySMTP.exe: 250\\n    * * HTTPWorm.exe: 500\\n    * * SQLInject.exe: 750\\n    * * DeepscanV1.exe: 75\\n    * * DeepscanV2.exe: 400\\n    * * ServerProfiler.exe: 75\\n    * * AutoLink.exe: 25\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * createProgram(“relaysmtp.exe”);\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.createProgram(“relaysmtp.exe”);\\n    * ```\\n    * @param program - Name of program to create.\\n    * @param focus - Acquire player focus on this program creation. Optional. Defaults to true.\\n    * @returns True if you successfully start working on the specified program, and false otherwise.\\n    */\\n   createProgram(program: string, focus?: boolean): boolean;\\n \\n   /**\\n    * Commit a crime.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function is used to automatically attempt to commit crimes.\\n    * If you are already in the middle of some ‘working’ action (such\\n    * as working for a company or training at a gym), then running this\\n    * function will automatically cancel that action and give you your\\n    * earnings.\\n    *\\n    * This function returns the number of milliseconds it takes to attempt the\\n    * specified crime (e.g It takes 60 seconds to attempt the ‘Rob Store’ crime,\\n    * so running `commitCrime('rob store')` will return 60,000).\\n    *\\n    * Warning: I do not recommend using the time returned from this function to try\\n    * and schedule your crime attempts. Instead, I would use the isBusy Singularity\\n    * function to check whether you have finished attempting a crime. This is because\\n    * although the game sets a certain crime to be X amount of seconds, there is no\\n    * guarantee that your browser will follow that time limit.\\n    *\\n    * @param crime - Name of crime to attempt.\\n    * @returns The number of milliseconds it takes to attempt the specified crime.\\n    */\\n   commitCrime(crime: string): number;\\n \\n   /**\\n    * Get chance to successfully commit a crime.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function returns your chance of success at commiting the specified crime.\\n    *\\n    * @param crime - Name of crime.\\n    * @returns Chance of success at commiting the specified crime.\\n    */\\n   getCrimeChance(crime: string): number;\\n \\n   /**\\n    * Get stats related to a crime.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * Returns the stats of the crime.\\n    *\\n    * @param crime - Name of crime. Not case-sensitive\\n    * @returns The stats of the crime.\\n    */\\n   getCrimeStats(crime: string): CrimeStats;\\n \\n   /**\\n    * Get a list of owned augmentation.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function returns an array containing the names (as strings) of all Augmentations you have.\\n    *\\n    * @param purchased - Specifies whether the returned array should include Augmentations you have purchased but not yet installed. By default, this argument is false which means that the return value will NOT have the purchased Augmentations.\\n    * @returns Array containing the names (as strings) of all Augmentations you have.\\n    */\\n   getOwnedAugmentations(purchased?: boolean): string[];\\n \\n   /**\\n    * Get a list of augmentation available from a faction.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * Returns an array containing the names (as strings) of all Augmentations\\n    * that are available from the specified faction.\\n    *\\n    * @param faction - Name of faction.\\n    * @returns Array containing the names of all Augmentations.\\n    */\\n   getAugmentationsFromFaction(faction: string): string[];\\n \\n   /**\\n    * Get the pre-requisite of an augmentation.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function returns an array with the names of the prerequisite Augmentation(s) for the specified Augmentation.\\n    * If there are no prerequisites, a blank array is returned.\\n    *\\n    * @param augName - Name of Augmentation.\\n    * @returns Array with the names of the prerequisite Augmentation(s) for the specified Augmentation.\\n    */\\n   getAugmentationPrereq(augName: string): string[];\\n \\n   /**\\n    * Get the price and reputation of an augmentation.\\n    * @deprecated use getAugmentationPrice getAugmentationRepCost\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function returns an array with two elements that gives the cost for\\n    * the specified Augmentation. The first element in the returned array is the\\n    * reputation requirement of the Augmentation, and the second element is the\\n    * money cost.\\n    *\\n    * If an invalid Augmentation name is passed in for the augName argument, this\\n    * function will return the array [-1, -1].\\n    *\\n    * @param augName - Name of Augmentation.\\n    * @returns Array with first element as a reputation requirement and second element as the money cost.\\n    */\\n   getAugmentationCost(augName: string): [number, number];\\n \\n   /**\\n    * Get price of an augmentation.\\n    * @remarks\\n    * RAM cost: 2.5 GB * 16/4/1\\n    *\\n    *\\n    * @param augName - Name of Augmentation.\\n    * @returns Price of the augmentation.\\n    */\\n   getAugmentationPrice(augName: string): number;\\n \\n   /**\\n    * Get reputation requirement of an augmentation.\\n    * @remarks\\n    * RAM cost: 2.5 GB * 16/4/1\\n    *\\n    *\\n    * @param augName - Name of Augmentation.\\n    * @returns Reputation requirement of the augmentation.\\n    */\\n   getAugmentationRepReq(augName: string): number;\\n \\n   /**\\n    * Purchase an augmentation\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function will try to purchase the specified Augmentation through the given Faction.\\n    *\\n    * This function will return true if the Augmentation is successfully purchased, and false otherwise.\\n    *\\n    * @param faction - Name of faction to purchase Augmentation from.\\n    * @param augmentation - Name of Augmentation to purchase.\\n    * @returns True if the Augmentation is successfully purchased, and false otherwise.\\n    */\\n   purchaseAugmentation(faction: string, augmentation: string): boolean;\\n \\n   /**\\n    * Get the stats of an augmentation.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function returns augmentation stats.\\n    *\\n    * @param name - Name of Augmentation. CASE-SENSITIVE.\\n    * @returns Augmentation stats.\\n    */\\n   getAugmentationStats(name: string): AugmentationStats;\\n \\n   /**\\n    * Install your purchased augmentations.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function will automatically install your Augmentations, resetting the game as usual.\\n    *\\n    * @param cbScript - This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer.\\n    */\\n   installAugmentations(cbScript?: string): void;\\n \\n   /**\\n    * Returns an object with the Player’s stats.\\n    * @deprecated use getPlayer\\n    *\\n    * @remarks\\n    * RAM cost: 0.5 GB * 16/4/1\\n    *\\n    *\\n    * @example\\n    * ```ts\\n    * res = getStats();\\n    * print('My charisma level is: ' + res.charisma);\\n    * ```\\n    * @returns Object with the Player’s stats.\\n    */\\n   getStats(): PlayerSkills;\\n \\n   /**\\n    * Returns an object with various information about your character.\\n    * @deprecated use getPlayer\\n    *\\n    * @remarks\\n    * RAM cost: 0.5 GB * 16/4/1\\n    *\\n    *\\n    * @returns Object with various information about your character.\\n    */\\n   getCharacterInformation(): CharacterInfo;\\n \\n   /**\\n    * Hospitalize the player.\\n    * @remarks\\n    * RAM cost: 0.25 GB * 16/4/1\\n    *\\n    *\\n    * @returns The cost of the hospitalization.\\n    */\\n   hospitalize(): number;\\n \\n   /**\\n    * Soft reset the game.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * This function will perform a reset even if you don’t have any augmentation installed.\\n    *\\n    * @param cbScript - This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer.\\n    */\\n   softReset(cbScript: string): void;\\n \\n   /**\\n    * Go to a location.\\n    * @remarks\\n    * RAM cost: 5 GB * 16/4/1\\n    *\\n    *\\n    * Move the player to a specific location.\\n    *\\n    * @param locationName - Name of the location.\\n    * @returns True if the player was moved there, false otherwise.\\n    */\\n   goToLocation(locationName: string): boolean;\\n \\n   /**\\n    * Get the current server.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * @returns Name of the current server.\\n    */\\n   getCurrentServer(): string;\\n \\n   /**\\n    * Connect to a server.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * Run the connect HOSTNAME command in the terminal. Can only connect to neighbors.\\n    *\\n    * @returns True if the connect command was successful, false otherwise.\\n    */\\n   connect(hostname: string): boolean;\\n \\n   /**\\n    * Run the hack command in the terminal.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * @returns Amount of money stolen by manual hacking.\\n    */\\n   manualHack(): Promise<number>;\\n \\n   /**\\n    * Run the backdoor command in the terminal.\\n    * @remarks\\n    * RAM cost: 2 GB * 16/4/1\\n    *\\n    *\\n    * @returns Promise waiting for the installation to finish.\\n    */\\n   installBackdoor(): Promise<void>;\\n \\n   /**\\n    * Check if the player is focused.\\n    * @remarks\\n    * RAM cost: 0.1 GB * 16/4/1\\n    *\\n    *\\n    * @returns True if the player is focused.\\n    */\\n   isFocused(): boolean;\\n \\n   /**\\n    * Set the players focus.\\n    * @remarks\\n    * RAM cost: 0.1 GB * 16/4/1\\n    *\\n    * @returns True if the focus was changed.\\n    */\\n   setFocus(focus: boolean): boolean;\\n }\\n \\n /**\\n  * Hacknet API\\n  * @remarks\\n  * Not all these functions are immediately available.\\n  * @public\\n  */\\n export interface Hacknet {\\n   /**\\n    * Get the number of hacknet nodes you own.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the number of Hacknet Nodes you own.\\n    *\\n    * @returns number of hacknet nodes.\\n    */\\n   numNodes(): number;\\n \\n   /**\\n    * Get the maximum number of hacknet nodes.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns maximum number of hacknet nodes.\\n    */\\n   maxNumNodes(): number;\\n \\n   /**\\n    * Purchase a new hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Purchases a new Hacknet Node. Returns a number with the index of the\\n    * Hacknet Node. This index is equivalent to the number at the end of\\n    * the Hacknet Node’s name (e.g The Hacknet Node named `hacknet-node-4`\\n    * will have an index of 4).\\n    *\\n    * If the player cannot afford to purchase a new Hacknet Node then the function will return -1.\\n    *\\n    * @returns The index of the Hacknet Node or if the player cannot afford to purchase a new Hacknet Node the function will return -1.\\n    */\\n   purchaseNode(): number;\\n \\n   /**\\n    * Get the price of the next hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the cost of purchasing a new Hacknet Node.\\n    *\\n    * @returns Cost of purchasing a new Hacknet Node.\\n    */\\n   getPurchaseNodeCost(): number;\\n \\n   /**\\n    * Get the stats of a hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns an object containing a variety of stats about the specified Hacknet Node.\\n    *\\n    * Note that for Hacknet Nodes, production refers to the amount of money the node generates.\\n    * For Hacknet Servers (the upgraded version of Hacknet Nodes), production refers to the\\n    * amount of hashes the node generates.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node\\n    * @returns Object containing a variety of stats about the specified Hacknet Node.\\n    */\\n   getNodeStats(index: number): NodeStats;\\n \\n   /**\\n    * Upgrade the level of a hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Tries to upgrade the level of the specified Hacknet Node by n.\\n    *\\n    * Returns true if the Hacknet Node’s level is successfully upgraded by n\\n    * or if it is upgraded by some positive amount and the Node reaches its max level.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of levels to purchase. Must be positive. Rounded to nearest integer.\\n    * @returns True if the Hacknet Node’s level is successfully upgraded, false otherwise.\\n    */\\n   upgradeLevel(index: number, n: number): boolean;\\n \\n   /**\\n    * Upgrade the RAM of a hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Tries to upgrade the specified Hacknet Node’s RAM n times.\\n    * Note that each upgrade doubles the Node’s RAM.\\n    * So this is equivalent to multiplying the Node’s RAM by 2 n.\\n    *\\n    * Returns true if the Hacknet Node’s RAM is successfully upgraded n times\\n    * or if it is upgraded some positive number of times and the Node reaches it max RAM.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of times to upgrade RAM. Must be positive. Rounded to nearest integer.\\n    * @returns True if the Hacknet Node’s ram is successfully upgraded, false otherwise.\\n    */\\n   upgradeRam(index: number, n: number): boolean;\\n \\n   /**\\n    * Upgrade the core of a hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Tries to purchase n cores for the specified Hacknet Node.\\n    *\\n    * Returns true if it successfully purchases n cores for the Hacknet Node\\n    * or if it purchases some positive amount and the Node reaches its max number of cores.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of cores to purchase. Must be positive. Rounded to nearest integer.\\n    * @returns True if the Hacknet Node’s cores are successfully purchased, false otherwise.\\n    */\\n   upgradeCore(index: number, n: number): boolean;\\n \\n   /**\\n    * Upgrade the cache of a hacknet node.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Tries to upgrade the specified Hacknet Server’s cache n times.\\n    *\\n    * Returns true if it successfully upgrades the Server’s cache n times,\\n    * or if it purchases some positive amount and the Server reaches its max cache level.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of cache levels to purchase. Must be positive. Rounded to nearest integer.\\n    * @returns True if the Hacknet Node’s cores are successfully purchased, false otherwise.\\n    */\\n   upgradeCache(index: number, n: number): boolean;\\n \\n   /**\\n    * Calculate the cost of upgrading hacknet node levels.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the cost of upgrading the specified Hacknet Node by n levels.\\n    *\\n    * If an invalid value for n is provided, then this function returns 0.\\n    * If the specified Hacknet Node is already at max level, then Infinity is returned.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of levels to upgrade. Must be positive. Rounded to nearest integer.\\n    * @returns Cost of upgrading the specified Hacknet Node.\\n    */\\n   getLevelUpgradeCost(index: number, n: number): number;\\n \\n   /**\\n    * Calculate the cost of upgrading hacknet node RAM.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the cost of upgrading the RAM of the specified Hacknet Node n times.\\n    *\\n    * If an invalid value for n is provided, then this function returns 0.\\n    * If the specified Hacknet Node is already at max level, then Infinity is returned.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of times to upgrade RAM. Must be positive. Rounded to nearest integer.\\n    * @returns Cost of upgrading the specified Hacknet Node's ram.\\n    */\\n   getRamUpgradeCost(index: number, n: number): number;\\n \\n   /**\\n    * Calculate the cost of upgrading hacknet node cores.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the cost of upgrading the number of cores of the specified Hacknet Node by n.\\n    *\\n    * If an invalid value for n is provided, then this function returns 0.\\n    * If the specified Hacknet Node is already at max level, then Infinity is returned.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of times to upgrade cores. Must be positive. Rounded to nearest integer.\\n    * @returns Cost of upgrading the specified Hacknet Node's number of cores.\\n    */\\n   getCoreUpgradeCost(index: number, n: number): number;\\n \\n   /**\\n    * Calculate the cost of upgrading hacknet node cache.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Returns the cost of upgrading the cache level of the specified Hacknet Server by n.\\n    *\\n    * If an invalid value for n is provided, then this function returns 0.\\n    * If the specified Hacknet Node is already at max level, then Infinity is returned.\\n    *\\n    * @param index - Index/Identifier of Hacknet Node.\\n    * @param n - Number of times to upgrade cache. Must be positive. Rounded to nearest integer.\\n    * @returns Cost of upgrading the specified Hacknet Node's cache.\\n    */\\n   getCacheUpgradeCost(index: number, n: number): number;\\n \\n   /**\\n    * Get the total number of hashes stored.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Returns the number of hashes you have.\\n    *\\n    * @returns Number of hashes you have.\\n    */\\n   numHashes(): number;\\n \\n   /**\\n    * Get the maximum number of hashes you can store.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Returns the number of hashes you can store.\\n    *\\n    * @returns Number of hashes you can store.\\n    */\\n   hashCapacity(): number;\\n \\n   /**\\n    * Get the cost of a hash upgrade.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Returns the number of hashes required for the specified upgrade. The name of the upgrade must be an exact match.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var upgradeName = \\\"Sell for Corporation Funds\\\";\\n    * if (hacknet.numHashes() > hacknet.hashCost(upgradeName)) {\\n    *    hacknet.spendHashes(upgName);\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const upgradeName = \\\"Sell for Corporation Funds\\\";\\n    * if (ns.hacknet.numHashes() > ns.hacknet.hashCost(upgradeName)) {\\n    *    ns.hacknet.spendHashes(upgName);\\n    * }\\n    * ```\\n    * @param upgName - Name of the upgrade of Hacknet Node.\\n    * @returns Number of hashes required for the specified upgrade.\\n    */\\n   hashCost(upgName: string): number;\\n \\n   /**\\n    * Purchase a hash upgrade.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Spend the hashes generated by your Hacknet Servers on an upgrade.\\n    * Returns a boolean value - true if the upgrade is successfully purchased, and false otherwise.\\n    *\\n    * The name of the upgrade must be an exact match.\\n    * The `upgTarget` argument is used for upgrades such as `Reduce Minimum Security`, which applies to a specific server.\\n    * In this case, the `upgTarget` argument must be the hostname of the server.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * hacknet.spendHashes(\\\"Sell for Corporation Funds\\\");\\n    * hacknet.spendHashes(\\\"Increase Maximum Money\\\", \\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * NS2:\\n    * ns.hacknet.spendHashes(\\\"Sell for Corporation Funds\\\");\\n    * ns.hacknet.spendHashes(\\\"Increase Maximum Money\\\", \\\"foodnstuff\\\");\\n    * ```\\n    * @param upgName - Name of the upgrade of Hacknet Node.\\n    * @param upgTarget - Object to which upgrade applies. Required for certain upgrades.\\n    * @returns True if the upgrade is successfully purchased, and false otherwise..\\n    */\\n   spendHashes(upgName: string, upgTarget?: string): boolean;\\n \\n   /**\\n    * Get the list of hash upgrades\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * Returns the list of all available hash upgrades that can be used in the spendHashes function.\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var upgrades = hacknet.getHashUpgrades(); // [\\\"Sell for Money\\\",\\\"Sell for Corporation Funds\\\",...]\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const upgrades = ns.hacknet.getHashUpgrades(); // [\\\"Sell for Money\\\",\\\"Sell for Corporation Funds\\\",...]\\n    * ```\\n    * @returns An array containing the available upgrades\\n    */\\n   getHashUpgrades(): string[];\\n \\n   /**\\n    * Get the level of a hash upgrade.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * @returns Level of the upgrade.\\n    */\\n   getHashUpgradeLevel(upgName: string): number;\\n \\n   /**\\n    * Get the multipler to study.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * @returns Multiplier.\\n    */\\n   getStudyMult(): number;\\n \\n   /**\\n    * Get the multipler to training.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).\\n    *\\n    * @returns Multiplier.\\n    */\\n   getTrainingMult(): number;\\n }\\n \\n /**\\n  * Bladeburner API\\n  * @remarks\\n  * You have to be employed in the Bladeburner division and be in BitNode-7\\n  * or have Source-File 7 in order to use this API.\\n  * @public\\n  */\\n export interface Bladeburner {\\n   /**\\n    * List all contracts.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    *\\n    * Returns an array of strings containing the names of all Bladeburner contracts.\\n    *\\n    * @returns Array of strings containing the names of all Bladeburner contracts.\\n    */\\n   getContractNames(): string[];\\n \\n   /**\\n    * List all operations.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    *\\n    * Returns an array of strings containing the names of all Bladeburner operations.\\n    *\\n    * @returns Array of strings containing the names of all Bladeburner operations.\\n    */\\n   getOperationNames(): string[];\\n \\n   /**\\n    * List all black ops.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    *\\n    * Returns an array of strings containing the names of all Bladeburner Black Ops.\\n    *\\n    * @returns Array of strings containing the names of all Bladeburner Black Ops.\\n    */\\n   getBlackOpNames(): string[];\\n \\n   /**\\n    * List all general actions.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    *\\n    * Returns an array of strings containing the names of all general Bladeburner actions.\\n    *\\n    * @returns Array of strings containing the names of all general Bladeburner actions.\\n    */\\n   getGeneralActionNames(): string[];\\n \\n   /**\\n    * List all skills.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    *\\n    * Returns an array of strings containing the names of all general Bladeburner skills.\\n    *\\n    * @returns Array of strings containing the names of all general Bladeburner skills.\\n    */\\n   getSkillNames(): string[];\\n \\n   /**\\n    * Start an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Attempts to start the specified Bladeburner action.\\n    * Returns true if the action was started successfully, and false otherwise.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match\\n    * @returns True if the action was started successfully, and false otherwise.\\n    */\\n   startAction(type: string, name: string): boolean;\\n \\n   /**\\n    * Stop current action.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Stops the current Bladeburner action.\\n    *\\n    */\\n   stopBladeburnerAction(): void;\\n \\n   /**\\n    * Get current action.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns an object that represents the player’s current Bladeburner action.\\n    * If the player is not performing an action, the function will return an object with the ‘type’ property set to “Idle”.\\n    *\\n    * @returns Object that represents the player’s current Bladeburner action.\\n    */\\n   getCurrentAction(): BladeburnerCurAction;\\n \\n   /**\\n    * Get the time to complete an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the number of seconds it takes to complete the specified action\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Number of milliseconds it takes to complete the specified action.\\n    */\\n   getActionTime(type: string, name: string): number;\\n \\n   /**\\n    * Get estimate success chance of an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the estimated success chance for the specified action.\\n    * This chance is returned as a decimal value, NOT a percentage\\n    * (e.g. if you have an estimated success chance of 80%, then this function will return 0.80, NOT 80).\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Estimated success chance for the specified action.\\n    */\\n   getActionEstimatedSuccessChance(type: string, name: string): [number, number];\\n \\n   /**\\n    * Get the reputation gain of an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the average Bladeburner reputation gain for successfully\\n    * completing the specified action.\\n    * Note that this value is an ‘average’ and the real reputation gain may vary slightly from this value.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @param level - Optional action level at which to calculate the gain\\n    * @returns Average Bladeburner reputation gain for successfully completing the specified action.\\n    */\\n   getActionRepGain(type: string, name: string, level: number): number;\\n \\n   /**\\n    * Get action count remaining.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the remaining count of the specified action.\\n    *\\n    * Note that this is meant to be used for Contracts and Operations.\\n    * This function will return ‘Infinity’ for actions such as Training and Field Analysis.\\n    * This function will return 1 for BlackOps not yet completed regardless of wether\\n    * the player has the required rank to attempt the mission or not.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Remaining count of the specified action.\\n    */\\n   getActionCountRemaining(type: string, name: string): number;\\n \\n   /**\\n    * Get the maximum level of an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the maximum level for this action.\\n    *\\n    * Returns -1 if an invalid action is specified.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Maximum level of the specified action.\\n    */\\n   getActionMaxLevel(type: string, name: string): number;\\n \\n   /**\\n    * Get the current level of an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the current level of this action.\\n    *\\n    * Returns -1 if an invalid action is specified.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Current level of the specified action.\\n    */\\n   getActionCurrentLevel(type: string, name: string): number;\\n \\n   /**\\n    * Get wether an action is set to autolevel.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not this action is currently set to autolevel.\\n    *\\n    * Returns false if an invalid action is specified.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns True if the action is set to autolevel, and false otherwise.\\n    */\\n   getActionAutolevel(type: string, name: string): boolean;\\n \\n   /**\\n    * Set an action autolevel.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Enable/disable autoleveling for the specified action.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @param autoLevel - Whether or not to autolevel this action\\n    */\\n   setActionAutolevel(type: string, name: string, autoLevel: boolean): void;\\n \\n   /**\\n    * Set the level of an action.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Set the level for the specified action.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @param level - Level to set this action to.\\n    */\\n   setActionLevel(type: string, name: string, level: number): void;\\n \\n   /**\\n    * Get player bladeburner rank.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the player’s Bladeburner Rank.\\n    *\\n    * @returns Player’s Bladeburner Rank.\\n    */\\n   getRank(): number;\\n \\n   /**\\n    * Get black op required rank.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Returns the rank required to complete this BlackOp.\\n    *\\n    * Returns -1 if an invalid action is specified.\\n    *\\n    * @param name - Name of BlackOp. Must be an exact match.\\n    * @returns Rank required to complete this BlackOp.\\n    */\\n   getBlackOpRank(name: string): number;\\n \\n   /**\\n    * Get bladeburner skill points.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the number of Bladeburner skill points you have.\\n    *\\n    * @returns Number of Bladeburner skill points you have.\\n    */\\n   getSkillPoints(): number;\\n \\n   /**\\n    * Get skill level.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * This function returns your level in the specified skill.\\n    *\\n    * The function returns -1 if an invalid skill name is passed in.\\n    *\\n    * @param skillName - Name of skill. Case-sensitive and must be an exact match\\n    * @returns Level in the specified skill.\\n    */\\n   getSkillLevel(name: string): number;\\n \\n   /**\\n    * Get cost to upgrade skill.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * This function returns the number of skill points needed to upgrade the specified skill.\\n    *\\n    * The function returns -1 if an invalid skill name is passed in.\\n    *\\n    * @param skillName - Name of skill. Case-sensitive and must be an exact match\\n    * @returns Number of skill points needed to upgrade the specified skill.\\n    */\\n   getSkillUpgradeCost(name: string): number;\\n \\n   /**\\n    * Upgrade skill.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Attempts to upgrade the specified Bladeburner skill.\\n    *\\n    * Returns true if the skill is successfully upgraded, and false otherwise.\\n    *\\n    * @param skillName - Name of skill to be upgraded. Case-sensitive and must be an exact match\\n    * @returns true if the skill is successfully upgraded, and false otherwise.\\n    */\\n   upgradeSkill(name: string): boolean;\\n \\n   /**\\n    * Get team size.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the number of Bladeburner team members you have assigned to the specified action.\\n    *\\n    * Setting a team is only applicable for Operations and BlackOps. This function will return 0 for other action types.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @returns Number of Bladeburner team members that were assigned to the specified action.\\n    */\\n   getTeamSize(type: string, name: string): number;\\n \\n   /**\\n    * Set team size.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Set the team size for the specified Bladeburner action.\\n    *\\n    * Returns the team size that was set, or -1 if the function failed.\\n    *\\n    * @param type - Type of action.\\n    * @param name - Name of action. Must be an exact match.\\n    * @param size - Number of team members to set. Will be converted using Math.round().\\n    * @returns Number of Bladeburner team members you assigned to the specified action.\\n    */\\n   setTeamSize(type: string, name: string, size: number): number;\\n \\n   /**\\n    * Get estimated population in city.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the estimated number of Synthoids in the specified city,\\n    * or -1 if an invalid city was specified.\\n    *\\n    * @param cityName - Name of city. Case-sensitive\\n    * @returns Estimated number of Synthoids in the specified city.\\n    */\\n   getCityEstimatedPopulation(name: string): number;\\n \\n   /**\\n    * Get number of communities in a city.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the estimated number of Synthoid communities in the specified city,\\n    * or -1 if an invalid city was specified.\\n    *\\n    * @param cityName - Name of city. Case-sensitive\\n    * @returns Number of Synthoids communities in the specified city.\\n    */\\n   getCityCommunities(name: string): number;\\n \\n   /**\\n    * Get chaos of a city.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the chaos in the specified city,\\n    * or -1 if an invalid city was specified.\\n    *\\n    * @param cityName - Name of city. Case-sensitive\\n    * @returns Chaos in the specified city.\\n    */\\n   getCityChaos(name: string): number;\\n \\n   /**\\n    * Get current city.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the city that the player is currently in (for Bladeburner).\\n    *\\n    * @returns City that the player is currently in (for Bladeburner).\\n    */\\n   getCity(): string;\\n \\n   /**\\n    * Travel to another city in bladeburner.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    * Attempts to switch to the specified city (for Bladeburner only).\\n    *\\n    * Returns true if successful, and false otherwise\\n    *\\n    * @param cityName - Name of city. Case-sensitive\\n    * @returns true if successful, and false otherwise\\n    */\\n   switchCity(name: string): boolean;\\n \\n   /**\\n    * Get bladeburner stamina.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    * Returns an array with two elements:\\n    * * [Current stamina, Max stamina]\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * function getStaminaPercentage() {\\n    *    var res = bladeburner.getStamina();\\n    *    return res[0] / res[1];\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * function getStaminaPercentage() {\\n    *    const [current, max] = ns.bladeburner.getStamina();\\n    *    return current / max;\\n    * }\\n    * ```\\n    * @returns Array containing current stamina and max stamina.\\n    */\\n   getStamina(): [number, number];\\n \\n   /**\\n    * Join the bladeburner faction.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    * Attempts to join the Bladeburner faction.\\n    *\\n    * Returns true if you successfully join the Bladeburner faction, or if you are already a member.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @returns True if you successfully join the Bladeburner faction, or if you are already a member, false otherwise.\\n    */\\n   joinBladeburnerFaction(): boolean;\\n \\n   /**\\n    * Join the bladeburner division.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Attempts to join the Bladeburner division.\\n    *\\n    * Returns true if you successfully join the Bladeburner division, or if you are already a member.\\n    *\\n    * Returns false otherwise.\\n    *\\n    * @returns True if you successfully join the Bladeburner division, or if you are already a member, false otherwise.\\n    */\\n   joinBladeburnerDivision(): boolean;\\n \\n   /**\\n    * Get bladeburner bonus time.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the amount of accumulated “bonus time” (seconds) for the Bladeburner mechanic.\\n    *\\n    * “Bonus time” is accumulated when the game is offline or if the game is inactive in the browser.\\n    *\\n    * “Bonus time” makes the game progress faster, up to 5x the normal speed.\\n    * For example, if an action takes 30 seconds to complete but you’ve accumulated over\\n    * 30 seconds in bonus time, then the action will only take 6 seconds in real life to complete.\\n    *\\n    * @returns Amount of accumulated “bonus time” (milliseconds) for the Bladeburner mechanic.\\n    */\\n   getBonusTime(): number;\\n }\\n \\n /**\\n  * Coding Contract API\\n  * @public\\n  */\\n export interface CodingContract {\\n   /**\\n    * Attemps a coding contract.\\n    * @remarks\\n    * RAM cost: 10 GB\\n    *\\n    * Attempts to solve the Coding Contract with the provided solution.\\n    *\\n    * @param answer - Solution for the contract.\\n    * @param fn - Filename of the contract.\\n    * @param host - Host of the server containing the contract. Optional. Defaults to current server if not provided.\\n    * @param opts - Optional parameters for configuring function behavior.\\n    * @returns True if the solution was correct, false otherwise. If the returnReward option is configured, then the function will instead return a string. If the contract is successfully solved, the string will contain a description of the contract’s reward. Otherwise, it will be an empty string.\\n    */\\n   attempt(answer: string[] | number, filename: string, host?: string, opts?: CodingAttemptOptions): boolean | string;\\n \\n   /**\\n    * Get the type of a coding contract.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * Returns a name describing the type of problem posed by the Coding Contract.\\n    * (e.g. Find Largest Prime Factor, Total Ways to Sum, etc.)\\n    *\\n    * @param fn - Filename of the contract.\\n    * @param host - Host of the server containing the contract. Optional. Defaults to current server if not provided.\\n    * @returns Name describing the type of problem posed by the Coding Contract.\\n    */\\n   getContractType(filename: string, host?: string): string;\\n \\n   /**\\n    * Get the description.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * Get the full text description for the problem posed by the Coding Contract.\\n    *\\n    * @param fn - Filename of the contract.\\n    * @param host - Host of the server containing the contract. Optional. Defaults to current server if not provided.\\n    * @returns Contract’s text description.\\n    */\\n   getDescription(filename: string, host?: string): string;\\n \\n   /**\\n    * Get the input data.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * Get the data associated with the specific Coding Contract.\\n    * Note that this is not the same as the contract’s description.\\n    * This is just the data that the contract wants you to act on in order to solve\\n    *\\n    * @param filename - Filename of the contract.\\n    * @param host - Host of the server containing the contract. Optional. Defaults to current server if not provided.\\n    * @returns The specified contract’s data, data type depends on contract type.;\\n    */\\n   getData(filename: string, host?: string): any;\\n \\n   /**\\n    * Get the number of attempt remaining.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get the number of tries remaining on the contract before it self-destructs.\\n    *\\n    * @param fn - Filename of the contract.\\n    * @param host - Host of the server containing the contract. Optional. Defaults to current server if not provided.\\n    * @returns How many attempts are remaining for the contract;\\n    */\\n   getNumTriesRemaining(filename: string, host?: string): number;\\n }\\n \\n /**\\n  * Gang API\\n  * @remarks\\n  * If you are not in BitNode-2, then you must have Source-File 2 in order to use this API.\\n  * @public\\n  */\\n export interface Gang {\\n   /**\\n    * Create a gang.\\n    * @remarks\\n    * RAM cost: 1GB\\n    *\\n    * Create a gang with the specified faction.\\n    * @returns True if the gang was created, false otherwise.\\n    */\\n   createGang(faction: string): boolean;\\n \\n   /**\\n    * Check if you're in a gang.\\n    * @remarks\\n    * RAM cost: 1GB\\n    * @returns True if you're in a gang, false otherwise.\\n    */\\n   inGang(): boolean;\\n \\n   /**\\n    * List all gang members.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Get the names of all Gang members\\n    *\\n    * @returns Names of all Gang members.\\n    */\\n   getMemberNames(): string[];\\n \\n   /**\\n    * Get information about your gang.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get general information about the gang.\\n    *\\n    * @returns Object containing general information about the gang.\\n    */\\n   getGangInformation(): GangGenInfo;\\n \\n   /**\\n    * Get information about the other gangs.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get territory and power information about all gangs.\\n    *\\n    * @returns Object containing territory and power information about all gangs.\\n    */\\n   getOtherGangInformation(): GangOtherInfo;\\n \\n   /**\\n    * Get information about a specific gang member.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get stat and equipment-related information about a Gang Member\\n    *\\n    * @param name - Name of member.\\n    * @returns Object containing stat and equipment-related information about a Gang Member.\\n    */\\n   getMemberInformation(name: string): GangMemberInfo;\\n \\n   /**\\n    * Check if you can recruit a new gang member.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns boolean indicating whether a member can currently be recruited\\n    *\\n    * @returns True if a member can currently be recruited, false otherwise.\\n    */\\n   canRecruitMember(): boolean;\\n \\n   /**\\n    * Recruit a new gang member.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Attempt to recruit a new gang member.\\n    *\\n    * Possible reasons for failure:\\n    * * Cannot currently recruit a new member\\n    * * There already exists a member with the specified name\\n    *\\n    * @param name - Name of member to recruit.\\n    * @returns True if the member was successfully recruited, false otherwise.\\n    */\\n   recruitMember(name: string): boolean;\\n \\n   /**\\n    * List member task names.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Get the name of all valid tasks that Gang members can be assigned to.\\n    *\\n    * @returns All valid tasks that Gang members can be assigned to.\\n    */\\n   getTaskNames(): string[];\\n \\n   /**\\n    * Set gang member to task.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Attempts to assign the specified Gang Member to the specified task.\\n    * If an invalid task is specified, the Gang member will be set to idle (“Unassigned”).\\n    *\\n    * @param memberName - Name of Gang member to assign.\\n    * @param taskName - Task to assign.\\n    * @returns True if the Gang Member was successfully assigned to the task, false otherwise.\\n    */\\n   setMemberTask(memberName: string, taskName: string): boolean;\\n \\n   /**\\n    * Get stats of a task.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Get the stats of a gang task stats. This is typically used to evaluate which action should be executed next.\\n    *\\n    * @param name -  Name of the task.\\n    * @returns Detailed stats of a task.\\n    */\\n   getTaskStats(name: string): GangTaskStats;\\n \\n   /**\\n    * List equipment names.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Get the name of all possible equipment/upgrades you can purchase for your Gang Members.\\n    * This includes Augmentations.\\n    *\\n    * @returns Names of all Equipments/Augmentations.\\n    */\\n   getEquipmentNames(): string[];\\n \\n   /**\\n    * Get cost of equipment.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get the amount of money it takes to purchase a piece of Equipment or an Augmentation.\\n    * If an invalid Equipment/Augmentation is specified, this function will return Infinity.\\n    *\\n    * @param equipName - Name of equipment.\\n    * @returns Cost to purchase the specified Equipment/Augmentation (number). Infinity for invalid arguments\\n    */\\n   getEquipmentCost(equipName: string): number;\\n \\n   /**\\n    * Get type of an equipment.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get the specified equipment type.\\n    *\\n    * @param equipName - Name of equipment.\\n    * @returns Type of the equipment.\\n    */\\n   getEquipmentType(equipName: string): string;\\n \\n   /**\\n    * Get stats of an equipment.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get the specified equipment stats.\\n    *\\n    * @param equipName - Name of equipment.\\n    * @returns A dictionary containing the stats of the equipment.\\n    */\\n   getEquipmentStats(equipName: string): EquipmentStats;\\n \\n   /**\\n    * Purchase an equipment for a gang member.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Attempt to purchase the specified Equipment/Augmentation for the specified Gang member.\\n    *\\n    * @param memberName - Name of Gang member to purchase the equipment for.\\n    * @param equipName - Name of Equipment/Augmentation to purchase.\\n    * @returns True if the equipment was successfully purchased. False otherwise\\n    */\\n   purchaseEquipment(memberName: string, equipName: string): boolean;\\n \\n   /**\\n    * Ascend a gang member.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Ascend the specified Gang Member.\\n    *\\n    * @param memberName - Name of member to ascend.\\n    * @returns Object with info about the ascension results. undefined if ascension did not occur.\\n    */\\n   ascendMember(memberName: string): GangMemberAscension | undefined;\\n \\n   /**\\n    * Get the result of an ascension without ascending.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Get the result of an ascension without ascending.\\n    *\\n    * @param memberName - Name of member.\\n    * @returns Object with info about the ascension results. undefined if ascension is impossible.\\n    */\\n   getAscensionResult(memberName: string): GangMemberAscension | undefined;\\n \\n   /**\\n    * Enable/Disable territory warfare.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Set whether or not the gang should engage in territory warfare\\n    *\\n    * @param engage - Whether or not to engage in territory warfare.\\n    */\\n   setTerritoryWarfare(engage: boolean): void;\\n \\n   /**\\n    * Get chance to win clash with other gang.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns the chance you have to win a clash with the specified gang. The chance is returned in decimal form, not percentage\\n    *\\n    * @param gangName - Target gang\\n    * @returns Chance you have to win a clash with the specified gang.\\n    */\\n   getChanceToWinClash(gangName: string): number;\\n \\n   /**\\n    * Get bonus time.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns the amount of accumulated “bonus time” (seconds) for the Gang mechanic.\\n    *\\n    * “Bonus time” is accumulated when the game is offline or if the game is inactive in the browser.\\n    *\\n    * “Bonus time” makes the game progress faster, up to 10x the normal speed.\\n    *\\n    * @returns Bonus time for the Gang mechanic in milliseconds.\\n    */\\n   getBonusTime(): number;\\n }\\n \\n /**\\n  * Sleeve API\\n  * @remarks\\n  * If you are not in BitNode-10, then you must have Source-File 10 in order to use this API.\\n  * @public\\n  */\\n export interface Sleeve {\\n   /**\\n    * Get the number of sleeves you own.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return the number of duplicate sleeves the player has.\\n    *\\n    * @returns number of duplicate sleeves the player has.\\n    */\\n   getNumSleeves(): number;\\n \\n   /**\\n    * Get the stats of a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a structure containing the stats of the sleeve.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to get stats of.\\n    * @returns Object containing the stats of the sleeve.\\n    */\\n   getSleeveStats(sleeveNumber: number): SleeveSkills;\\n \\n   /**\\n    * Get information about a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a struct containing tons of information about this sleeve\\n    *\\n    * @param sleeveNumber - Index of the sleeve to retrieve information.\\n    * @returns Object containing tons of information about this sleeve.\\n    */\\n   getInformation(sleeveNumber: number): SleeveInformation;\\n \\n   /**\\n    * Get task of a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return the current task that the sleeve is performing. type is set to “Idle” if the sleeve isn’t doing anything.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to retrieve task from.\\n    * @returns Object containing information the current task that the sleeve is performing.\\n    */\\n   getTask(sleeveNumber: number): SleeveTask;\\n \\n   /**\\n    * Set a sleeve to shock recovery.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not this action was set successfully.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to start recovery.\\n    * @returns True if this action was set successfully, false otherwise.\\n    */\\n   setToShockRecovery(sleeveNumber: number): boolean;\\n \\n   /**\\n    * Set a sleeve to synchronize.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not this action was set successfully.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to start synchronizing.\\n    * @returns True if this action was set successfully, false otherwise.\\n    */\\n   setToSynchronize(sleeveNumber: number): boolean;\\n \\n   /**\\n    * Set a sleeve to commit crime.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not this action was set successfully.\\n    *\\n    * Returns false if an invalid action is specified.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to start commiting crime.\\n    * @param name - Name of the crime. Must be an exact match.\\n    * @returns True if this action was set successfully, false otherwise.\\n    */\\n   setToCommitCrime(sleeveNumber: number, name: string): boolean;\\n \\n   /**\\n    * Set a sleeve to work for a faction.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not the sleeve started working or this faction.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to work for the faction.\\n    * @param factionName - Name of the faction to work for.\\n    * @param factionWorkType - Name of the action to perform for this faction.\\n    * @returns True if the sleeve started working on this faction, false otherwise.\\n    */\\n   setToFactionWork(sleeveNumber: number, factionName: string, factionWorkType: string): boolean;\\n \\n   /**\\n    * Set a sleeve to work for a company.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not the sleeve started working or this company.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to work for the company.\\n    * @param companyName - Name of the company to work for.\\n    * @returns True if the sleeve started working on this company, false otherwise.\\n    */\\n   setToCompanyWork(sleeveNumber: number, companyName: string): boolean;\\n \\n   /**\\n    * Set a sleeve to take a class at a university.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not this action was set successfully.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to start taking class.\\n    * @param university - Name of the university to attend.\\n    * @param className - Name of the class to follow.\\n    * @returns True if this action was set successfully, false otherwise.\\n    */\\n   setToUniversityCourse(sleeveNumber: number, university: string, className: string): boolean;\\n \\n   /**\\n    * Set a sleeve to workout at the gym.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not the sleeve started working out.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to workout at the gym.\\n    * @param gymName - Name of the gym.\\n    * @param stat - Name of the stat to train.\\n    * @returns True if the sleeve started working out, false otherwise.\\n    */\\n   setToGymWorkout(sleeveNumber: number, gymName: string, stat: string): boolean;\\n \\n   /**\\n    * Make a sleeve travel to another city.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a boolean indicating whether or not the sleeve reached destination.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to travel.\\n    * @param cityName - Name of the destination city.\\n    * @returns True if the sleeve reached destination, false otherwise.\\n    */\\n   travel(sleeveNumber: number, cityName: string): boolean;\\n \\n   /**\\n    * Get augmentations installed on a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a list of augmentation names that this sleeve has installed.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to retrieve augmentations from.\\n    * @returns List of augmentation names that this sleeve has installed.\\n    */\\n   getSleeveAugmentations(sleeveNumber: number): string[];\\n \\n   /**\\n    * List purchasable augs for a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return a list of augmentations that the player can buy for this sleeve.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to retrieve purchasable augmentations from.\\n    * @returns List of augmentations that the player can buy for this sleeve.\\n    */\\n   getSleevePurchasableAugs(sleeveNumber: number): AugmentPair[];\\n \\n   /**\\n    * Purchase an aug for a sleeve.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Return true if the aug was purchased and installed on the sleeve.\\n    *\\n    * @param sleeveNumber - Index of the sleeve to buy an aug for.\\n    * @param augName - Name of the aug to buy. Must be an exact match.\\n    * @returns True if the aug was purchased and installed on the sleeve, false otherwise.\\n    */\\n   purchaseSleeveAug(sleeveNumber: number, augName: string): boolean;\\n }\\n \\n /**\\n  * Skills formulas\\n  * @public\\n  */\\n interface SkillsFormulas {\\n   /**\\n    * Calculate skill level.\\n    * @param exp - experience for that skill\\n    * @param skillMult - Multiplier for that skill, defaults to 1.\\n    * @returns The calculated skill level.\\n    */\\n   calculateSkill(exp: number, skillMult?: number): number;\\n   /**\\n    * Calculate exp for skill level.\\n    * @param skill - target skill level\\n    * @param skillMult - Multiplier for that skill, defaults to 1.\\n    * @returns The calculated exp required.\\n    */\\n   calculateExp(skill: number, skillMult?: number): number;\\n }\\n \\n /**\\n  * Hacking formulas\\n  * @public\\n  */\\n interface HackingFormulas {\\n   /**\\n    * Calculate hack chance.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated hack chance.\\n    */\\n   hackChance(server: Server, player: Player): number;\\n   /**\\n    * Calculate hack exp for one thread.\\n    * @remarks\\n    * Multiply by thread to get total exp\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated hack exp.\\n    */\\n   hackExp(server: Server, player: Player): number;\\n   /**\\n    * Calculate hack percent for one thread.\\n    * @remarks\\n    * Multiply by thread to get total percent hacked.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated hack percent.\\n    */\\n   hackPercent(server: Server, player: Player): number;\\n   /**\\n    * Calculate the percent a server would grow.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param threads - Amount of thread.\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @param cores - Number of cores on the computer that will execute grow.\\n    * @returns The calculated grow percent.\\n    */\\n   growPercent(server: Server, threads: number, player: Player, cores?: number): number;\\n   /**\\n    * Calculate hack time.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated hack time.\\n    */\\n   hackTime(server: Server, player: Player): number;\\n   /**\\n    * Calculate grow time.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated grow time.\\n    */\\n   growTime(server: Server, player: Player): number;\\n   /**\\n    * Calculate weaken time.\\n    * @param server - Server info from {@link NS.getServer | getServer}\\n    * @param player - Player info from {@link NS.getPlayer | getPlayer}\\n    * @returns The calculated weaken time.\\n    */\\n   weakenTime(server: Server, player: Player): number;\\n }\\n \\n /**\\n  * Hacknet Node formulas\\n  * @public\\n  */\\n interface HacknetNodesFormulas {\\n   /**\\n    * Calculate money gain rate.\\n    * @param level - level of the node.\\n    * @param ram - ram of the node.\\n    * @param cores - cores of the node.\\n    * @param mult - player production mult (default to 1)\\n    * @returns The calculated money gain rate.\\n    */\\n   moneyGainRate(level: number, ram: number, cores: number, mult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet node level.\\n    * @param startingLevel - starting level\\n    * @param extraLevels - amount of level to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet node ram.\\n    * @param startingRam - starting ram\\n    * @param extraLevels - amount of level of ram to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet node cores.\\n    * @param startingCore - starting cores\\n    * @param extraCores - amount of cores to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number;\\n   /**\\n    * Calculate the cost of a hacknet node.\\n    * @param n - number of the hacknet node\\n    * @param mult - player cost reduction (defaults to 1)\\n    * @returns The calculated cost.\\n    */\\n   hacknetNodeCost(n: number, mult: number): number;\\n   /**\\n    * All constants used by the game.\\n    * @returns An object with all hacknet node constants used by the game.\\n    */\\n   constants(): HacknetNodeConstants;\\n }\\n \\n /**\\n  * Hacknet Server formulas\\n  * @public\\n  */\\n interface HacknetServersFormulas {\\n   /**\\n    * Calculate hash gain rate.\\n    * @param level - level of the server.\\n    * @param ramUsed - ramUsed of the server.\\n    * @param maxRam - maxRam of the server.\\n    * @param cores - cores of the server.\\n    * @param mult - player production mult (default to 1)\\n    * @returns The calculated hash gain rate.\\n    */\\n   hashGainRate(level: number, ramUsed: number, maxRam: number, cores: number, mult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet server level.\\n    * @param startingLevel - starting level\\n    * @param extraLevels - amount of level to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet server ram.\\n    * @param startingRam - starting ram\\n    * @param extraLevels - amount of level of ram to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet server cores.\\n    * @param startingCore - starting cores\\n    * @param extraCores - amount of cores to purchase (defaults to 1)\\n    * @param costMult - player cost reduction (default to 1)\\n    * @returns The calculated cost.\\n    */\\n   coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number;\\n   /**\\n    * Calculate cost of upgrading hacknet server cache.\\n    * @param startingCache - starting cache level\\n    * @param extraCache - amount of levels of cache to purchase (defaults to 1)\\n    * @returns The calculated cost.\\n    */\\n   cacheUpgradeCost(startingCache: number, extraCache?: number): number;\\n   /**\\n    * Calculate hash cost of an upgrade.\\n    * @param upgName - name of the upgrade\\n    * @param level - level of the upgrade\\n    * @returns The calculated hash cost.\\n    */\\n   hashUpgradeCost(upgName: number, level: number): number;\\n   /**\\n    * Calculate the cost of a hacknet server.\\n    * @param n - number of the hacknet server\\n    * @param mult - player cost reduction (defaults to 1)\\n    * @returns The calculated cost.\\n    */\\n   hacknetServerCost(n: number, mult?: number): number;\\n   /**\\n    * All constants used by the game.\\n    * @returns An object with all hacknet server constants used by the game.\\n    */\\n   constants(): HacknetServerConstants;\\n }\\n \\n /**\\n  * Gang formulas\\n  * @public\\n  */\\n interface GangFormulas {\\n   /**\\n    * Calculate the wanted penalty.\\n    * @param gang - Gang info from {@link Gang.getGangInformation | getGangInformation}\\n    * @returns The calculated wanted penalty.\\n    */\\n   wantedPenalty(gang: GangGenInfo): number;\\n   /**\\n    * Calculate respect gain per tick.\\n    * @param gang - Gang info from {@link Gang.getGangInformation | getGangInformation}\\n    * @param member - Gang info from {@link Gang.getMemberInformation | getMemberInformation}\\n    * @param task - Gang info from {@link Gang.getTaskStats | getTaskStats}\\n    * @returns The calculated respect gain.\\n    */\\n   respectGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;\\n   /**\\n    * Calculate wanted gain per tick.\\n    * @param gang - Gang info from {@link Gang.getGangInformation | getGangInformation}\\n    * @param member - Member info from {@link Gang.getMemberInformation | getMemberInformation}\\n    * @param task - Task info from {@link Gang.getTaskStats | getTaskStats}\\n    * @returns The calculated wanted gain.\\n    */\\n   wantedLevelGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;\\n   /**\\n    * Calculate money gain per tick.\\n    * @param gang - Gang info from {@link Gang.getGangInformation | getGangInformation}\\n    * @param member - Member info from {@link Gang.getMemberInformation | getMemberInformation}\\n    * @param task - Task info from {@link Gang.getTaskStats | getTaskStats}\\n    * @returns The calculated money gain.\\n    */\\n   moneyGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;\\n \\n   /**\\n    * Calculate ascension point gain.\\n    * @param exp - Experience point before ascension.\\n    * @returns The calculated ascension point gain.\\n    */\\n   ascensionPointsGain(exp: number): number;\\n \\n   /**\\n    * Calculate ascension mult.\\n    * @param points - Amount of ascension points.\\n    * @returns The calculated ascension mult.\\n    */\\n   ascensionMultiplier(points: number): number;\\n }\\n \\n /**\\n  * Formulas API\\n  * @remarks\\n  * You need Formulas.exe on your home computer to use this API.\\n  * @public\\n  */\\n export interface Formulas {\\n   /** Skills formulas */\\n   skills: SkillsFormulas;\\n   /** Hacking formulas */\\n   hacking: HackingFormulas;\\n   /** Hacknet Nodes formulas */\\n   hacknetNodes: HacknetNodesFormulas;\\n   /** Hacknet Servers formulas */\\n   hacknetServers: HacknetServersFormulas;\\n   /** Gang formulas */\\n   gang: GangFormulas;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface Fragment {\\n   id: number;\\n   shape: boolean[][];\\n   type: number;\\n   power: number;\\n   limit: number;\\n }\\n \\n /**\\n  * @public\\n  */\\n export interface ActiveFragment {\\n   id: number;\\n   avgCharge: number;\\n   numCharge: number;\\n   rotation: number;\\n   x: number;\\n   y: number;\\n }\\n \\n /**\\n  * Stanek's Gift API.\\n  * @public\\n  */\\n interface Stanek {\\n   /**\\n    * Stanek's Gift width.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    * @returns The width of the gift.\\n    */\\n   width(): number;\\n   /**\\n    * Stanek's Gift height.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    * @returns The height of the gift.\\n    */\\n   height(): number;\\n \\n   /**\\n    * Charge a fragment, increasing its power.\\n    * @remarks\\n    * RAM cost: 0.4 GB\\n    * @param rootX - rootX Root X against which to align the top left of the fragment.\\n    * @param rootY - rootY Root Y against which to align the top left of the fragment.\\n    * @returns Promise that lasts until the charge action is over.\\n    */\\n   charge(rootX: number, rootY: number): Promise<void>;\\n \\n   /**\\n    * List possible fragments.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns List of possible fragments.\\n    */\\n   fragmentDefinitions(): Fragment[];\\n \\n   /**\\n    * List of fragments in Stanek's Gift.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * @returns List of active fragments placed on Stanek's Gift.\\n    */\\n   activeFragments(): ActiveFragment[];\\n \\n   /**\\n    * Clear the board of all fragments.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   clear(): void;\\n \\n   /**\\n    * Check if fragment can be placed at specified location.\\n    * @remarks\\n    * RAM cost: 0.5 GB\\n    *\\n    * @param rootX - rootX Root X against which to align the top left of the fragment.\\n    * @param rootY - rootY Root Y against which to align the top left of the fragment.\\n    * @param rotation - rotation A number from 0 to 3, the mount of 90 degree turn to take.\\n    * @param fragmentId - fragmentId ID of the fragment to place.\\n    * @returns true if the fragment can be placed at that position. false otherwise.\\n    */\\n   canPlace(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean;\\n   /**\\n    * Place fragment on Stanek's Gift.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * @param rootX - X against which to align the top left of the fragment.\\n    * @param rootY - Y against which to align the top left of the fragment.\\n    * @param rotation - A number from 0 to 3, the mount of 90 degree turn to take.\\n    * @param fragmentId - ID of the fragment to place.\\n    * @returns true if the fragment can be placed at that position. false otherwise.\\n    */\\n   place(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean;\\n   /**\\n    * Get placed fragment at location.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * @param rootX - X against which to align the top left of the fragment.\\n    * @param rootY - Y against which to align the top left of the fragment.\\n    * @returns The fragment at [rootX, rootY], if any.\\n    */\\n   get(rootX: number, rootY: number): ActiveFragment | undefined;\\n \\n   /**\\n    * Remove fragment at location.\\n    * @remarks\\n    * RAM cost: 0.15 GB\\n    *\\n    * @param rootX - X against which to align the top left of the fragment.\\n    * @param rootY - Y against which to align the top left of the fragment.\\n    * @returns The fragment at [rootX, rootY], if any.\\n    */\\n   remove(rootX: number, rootY: number): boolean;\\n }\\n \\n /**\\n  * User Interface API.\\n  * @public\\n  */\\n interface UserInterface {\\n   /**\\n    * Get the current theme\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns An object containing the theme's colors\\n    */\\n   getTheme(): UserInterfaceTheme;\\n \\n   /**\\n    * Sets the current theme\\n    * @remarks\\n    * RAM cost: 0 GB\\n    * @example\\n    * Usage example (NS2)\\n    * ```ts\\n    * const theme = ns.ui.getTheme();\\n    * theme.primary = '#ff5500';\\n    * ns.ui.setTheme(theme);\\n    * ```\\n    */\\n   setTheme(newTheme: UserInterfaceTheme): void;\\n \\n   /**\\n    * Resets the player's theme to the default values\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   resetTheme(): void;\\n \\n   /**\\n    * Get the current styles\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @returns An object containing the player's styles\\n    */\\n   getStyles(): IStyleSettings;\\n \\n   /**\\n    * Sets the current styles\\n    * @remarks\\n    * RAM cost: 0 GB\\n    * @example\\n    * Usage example (NS2)\\n    * ```ts\\n    * const styles = ns.ui.getStyles();\\n    * styles.fontFamily = 'Comic Sans Ms';\\n    * ns.ui.setStyles(styles);\\n    * ```\\n    */\\n   setStyles(newStyles: IStyleSettings): void;\\n \\n   /**\\n    * Resets the player's styles to the default values\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   resetStyles(): void;\\n \\n   /**\\n    * Gets the current game information (version, commit, ...)\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   getGameInfo(): GameInfo;\\n }\\n \\n /**\\n  * Collection of all functions passed to scripts\\n  * @public\\n  * @remarks\\n  * <b>Basic ns1 usage example:</b>\\n  * ```ts\\n  *  // Basic ns functions can be used directly\\n  *  getHostname();\\n  *  // Some related functions are gathered within a common namespace\\n  *  stock.getPrice();\\n  * ```\\n  * {@link https://bitburner.readthedocs.io/en/latest/netscript/netscript1.html| ns1 in-game docs}\\n  * <hr>\\n  * <b>Basic ns2 usage example:</b>\\n  * ```ts\\n  * export async function main(ns) {\\n  *  // Basic ns functions can be accessed on the ns object\\n  *  ns.getHostname();\\n  *  // Some related functions are gathered under a sub-property of the ns object\\n  *  ns.stock.getPrice();\\n  *  // Some functions need to be await ed\\n  *  await ns.hack('n00dles');\\n  * }\\n  * ```\\n  * {@link https://bitburner.readthedocs.io/en/latest/netscript/netscriptjs.html| ns2 in-game docs}\\n  * <hr>\\n  */\\n export interface NS extends Singularity {\\n   /**\\n    * Namespace for hacknet functions.\\n    * @remarks RAM cost: 4 GB\\n    */\\n   readonly hacknet: Hacknet;\\n   /**\\n    *\\n    * Namespace for bladeburner functions.\\n    * @remarks RAM cost: 0 GB\\n    */\\n   readonly bladeburner: Bladeburner;\\n   /**\\n    *\\n    * Namespace for codingcontract functions.\\n    * @remarks RAM cost: 0 GB\\n    */\\n   readonly codingcontract: CodingContract;\\n   /**\\n    *\\n    * Namespace for gang functions.\\n    * @remarks RAM cost: 0 GB\\n    */\\n   readonly gang: Gang;\\n   /**\\n    *\\n    * Namespace for sleeve functions.\\n    * @remarks RAM cost: 0 GB\\n    */\\n   readonly sleeve: Sleeve;\\n   /**\\n    *\\n    * Namespace for stock functions.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   readonly stock: TIX;\\n   /**\\n    *\\n    * Namespace for formulas functions.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   readonly formulas: Formulas;\\n   /**\\n    * Namespace for stanek functions.\\n    * RAM cost: 0 GB\\n    */\\n   readonly stanek: Stanek;\\n   /**\\n    * Namespace for corporation functions.\\n    * RAM cost: 0 GB\\n    */\\n   readonly corporation: Corporation;\\n \\n   /**\\n    * Namespace for user interface functions.\\n    * RAM cost: 0 GB\\n    */\\n   readonly ui: UserInterface;\\n \\n   /**\\n    * Arguments passed into the script.\\n    *\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Arguments passed into a script can be accessed using a normal\\n    * array using the [] operator (args[0], args[1], etc…).\\n    *\\n    * It is also possible to get the number of arguments that was passed into a script using: 'args.length'\\n    * WARNING: Do not try to modify the args array. This will break the game.\\n    */\\n   readonly args: (string | number | boolean)[];\\n \\n   /**\\n    * Steal a servers money.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Function that is used to try and hack servers to steal money and gain hacking experience.\\n    * The runtime for this command depends on your hacking level and the target server’s\\n    * security level when this function is called. In order to hack a server you must first gain root access to that server\\n    * and also have the required hacking level.\\n    *\\n    * A script can hack a server from anywhere. It does not need to be running on the same\\n    * server to hack that server. For example, you can create a script that hacks the `foodnstuff`\\n    * server and run that script on any server in the game.\\n    *\\n    * A successful `hack()` on a server will raise that server’s security level by 0.002.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var earnedMoney = hack(\\\"foodnstuff\\\");\\n    * earnedMoney = earnedMoney + hack(\\\"foodnstuff\\\", { threads: 5 }); // Only use 5 threads to hack\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * let earnedMoney = await ns.hack(\\\"foodnstuff\\\");\\n    * earnedMoney += await ns.hack(\\\"foodnstuff\\\", { threads: 5 }); // Only use 5 threads to hack\\n    * ```\\n    * @param host - Hostname of the target server to hack.\\n    * @param opts - Optional parameters for configuring function behavior.\\n    * @returns The amount of money stolen if the hack is successful, and zero otherwise.\\n    */\\n   hack(host: string, opts?: BasicHGWOptions): Promise<number>;\\n \\n   /**\\n    * Spoof money in a servers bank account, increasing the amount available.\\n    * @remarks\\n    * RAM cost: 0.15 GB\\n    *\\n    * Use your hacking skills to increase the amount of money available on a server.\\n    * The runtime for this command depends on your hacking level and the target server’s\\n    * security level. When `grow` completes, the money available on a target server will\\n    * be increased by a certain, fixed percentage. This percentage is determined by the\\n    * target server’s growth rate (which varies between servers) and security level. Generally,\\n    * higher-level servers have higher growth rates. The getServerGrowth() function can be used\\n    * to obtain a server’s growth rate.\\n    *\\n    * Like hack, `grow` can be called on any server, regardless of where the script is running.\\n    * The grow() command requires root access to the target server, but there is no required hacking\\n    * level to run the command. It also raises the security level of the target server by 0.004.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var availableMoney = getServerMoneyAvailable(\\\"foodnstuff\\\");\\n    * currentMoney = currentMoney * (1 + grow(\\\"foodnstuff\\\"));\\n    * currentMoney = currentMoney * (1 + grow(\\\"foodnstuff\\\", { threads: 5 })); // Only use 5 threads to grow\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * let availableMoney = ns.getServerMoneyAvailable(\\\"foodnstuff\\\");\\n    * currentMoney *= (1 + await ns.grow(\\\"foodnstuff\\\"));\\n    * currentMoney *= (1 + await ns.grow(\\\"foodnstuff\\\", { threads: 5 })); // Only use 5 threads to grow\\n    * ```\\n    * @param host - Hostname of the target server to grow.\\n    * @param opts - Optional parameters for configuring function behavior.\\n    * @returns The number by which the money on the server was multiplied for the growth.\\n    */\\n   grow(host: string, opts?: BasicHGWOptions): Promise<number>;\\n \\n   /**\\n    * Reduce a server security level.\\n    * @remarks\\n    * RAM cost: 0.15 GB\\n    *\\n    * Use your hacking skills to attack a server’s security, lowering the server’s security level.\\n    * The runtime for this command depends on your hacking level and the target server’s security\\n    * level when this function is called. This function lowers the security level of the target server by 0.05.\\n    *\\n    * Like hack and grow, `weaken` can be called on any server, regardless of\\n    * where the script is running. This command requires root access to the target server, but\\n    * there is no required hacking level to run the command.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var currentSecurity = getServerSecurityLevel(\\\"foodnstuff\\\");\\n    * currentSecurity = currentSecurity - weaken(\\\"foodnstuff\\\");\\n    * currentSecurity = currentSecurity - weaken(\\\"foodnstuff\\\", { threads: 5 }); // Only use 5 threads to weaken\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * let currentSecurity = ns.getServerSecurityLevel(\\\"foodnstuff\\\");\\n    * currentSecurity -= await ns.weaken(\\\"foodnstuff\\\");\\n    * currentSecurity -= await ns.weaken(\\\"foodnstuff\\\", { threads: 5 }); // Only use 5 threads to weaken\\n    * ```\\n    * @param host - Hostname of the target server to weaken.\\n    * @param opts - Optional parameters for configuring function behavior.\\n    * @returns The amount by which the target server’s security level was decreased. This is equivalent to 0.05 multiplied by the number of script threads.\\n    */\\n   weaken(host: string, opts?: BasicHGWOptions): Promise<number>;\\n \\n   /**\\n    * Predict the effect of weaken.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns the security decrease that would occur if a weaken with this many threads happened.\\n    *\\n    * @param threads - Amount of threads that will be used.\\n    * @param cores - Optional. The number of cores of the server that would run weaken.\\n    * @returns The security decrease.\\n    */\\n   weakenAnalyze(threads: number, cores?: number): number;\\n \\n   /**\\n    * Predict the effect of hack.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * This function returns the number of script threads you need when running the hack command\\n    * to steal the specified amount of money from the target server.\\n    * If hackAmount is less than zero or greater than the amount of money available on the server,\\n    * then this function returns -1.\\n    *\\n    * Warning: The value returned by this function isn’t necessarily a whole number.\\n    *\\n    * @example\\n    * ```ts\\n    * //For example, let’s say the foodnstuff server has $10m and you run:\\n    * hackAnalyzeThreads(\\\"foodnstuff\\\", 1e6);\\n    * //If this function returns 50, this means that if your next hack call is run on a script with 50 threads, it will steal $1m from the foodnstuff server.\\n    * ```\\n    * @param host - Hostname of the target server to analyze.\\n    * @param hackAmount - Amount of money you want to hack from the server.\\n    * @returns The number of threads needed to hack the server for hackAmount money.\\n    */\\n   hackAnalyzeThreads(host: string, hackAmount: number): number;\\n \\n   /**\\n    * Get the part of money stolen with a single thread.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns the part of the specified server’s money you will steal with a single thread hack.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //For example, assume the following returns 0.01:\\n    * var hackAmount = hackAnalyze(\\\"foodnstuff\\\");\\n    * //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money.\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //For example, assume the following returns 0.01:\\n    * const hackAmount = ns.hackAnalyze(\\\"foodnstuff\\\");\\n    * //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money.\\n    * ```\\n    * @param host - Hostname of the target server.\\n    * @returns The part of money you will steal from the target server with a single thread hack.\\n    */\\n   hackAnalyze(host: string): number;\\n \\n   /**\\n    * Get the security increase for a number of thread.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns the security increase that would occur if a hack with this many threads happened.\\n    *\\n    * @param threads - Amount of threads that will be used.\\n    * @returns The security increase.\\n    */\\n   hackAnalyzeSecurity(threads: number): number;\\n \\n   /**\\n    * Get the chance of successfully hacking a server.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns the chance you have of successfully hacking the specified server.\\n    *\\n    * This returned value is in decimal form, not percentage.\\n    *\\n    * @param host - Hostname of the target server.\\n    * @returns The chance you have of successfully hacking the target server.\\n    */\\n   hackAnalyzeChance(host: string): number;\\n \\n   /**\\n    * Calculate the number of grow thread needed to grow a server by a certain multiplier.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * This function returns the number of “growths” needed in order to increase\\n    * the amount of money available on the specified server by the specified amount.\\n    * The specified amount is multiplicative and is in decimal form, not percentage.\\n    *\\n    * Warning: The value returned by this function isn’t necessarily a whole number.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use:\\n    * var growTimes = growthAnalyze(\\\"foodnstuff\\\", 2);\\n    * //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads).\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use:\\n    * const growTimes = ns.growthAnalyze(\\\"foodnstuff\\\", 2);\\n    * //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads).\\n    * ```\\n    * @param host - Hostname of the target server.\\n    * @param growthAmount - Multiplicative factor by which the server is grown. Decimal form..\\n    * @returns The amount of grow calls needed to grow the specified server by the specified amount\\n    */\\n   growthAnalyze(host: string, growthAmount: number, cores?: number): number;\\n \\n   /**\\n    * Calculate the security increase for a number of thread.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns the security increase that would occur if a grow with this many threads happened.\\n    *\\n    * @param threads - Amount of threads that will be used.\\n    * @returns The security increase.\\n    */\\n   growthAnalyzeSecurity(threads: number): number;\\n \\n   /**\\n    * Suspends the script for n milliseconds.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param millis - Number of milliseconds to sleep.\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * // This will count from 1 to 10 in your terminal, with one number every 5 seconds\\n    * for (var i=0; i<10; i++) {\\n    *   tprint(i + 1);\\n    *   sleep(5000);\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * // This will count from 1 to 10 in your terminal, with one number every 5 seconds\\n    * for (var i=0; i<10; i++) {\\n    *   ns.tprint(i + 1);\\n    *   await ns.sleep(5000);\\n    * }\\n    * ```\\n    * @returns\\n    */\\n   sleep(millis: number): Promise<void>;\\n \\n   /**\\n    * Suspends the script for n milliseconds. Doesn't block with concurrent calls.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param millis - Number of milliseconds to sleep.\\n    * @returns\\n    */\\n   asleep(millis: number): Promise<void>;\\n \\n   /**\\n    * Prints one or move values or variables to the script’s logs.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param args - Value(s) to be printed.\\n    */\\n   print(...args: any[]): void;\\n \\n   /**\\n    * Prints one or more values or variables to the Terminal.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param args - Value(s) to be printed.\\n    */\\n   tprint(...args: any[]): void;\\n \\n   /**\\n    * Prints a raw value or a variable to the Terminal.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param format - format of the message\\n    * @param msg - Value to be printed.\\n    */\\n   tprintf(format: string, ...values: any[]): void;\\n \\n   /**\\n    * Clears the script’s logs.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   clearLog(): void;\\n \\n   /**\\n    * Disables logging for the given function.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Logging can be disabled for all functions by passing `ALL` as the argument.\\n    *\\n    * Note that this does not completely remove all logging functionality.\\n    * This only stops a function from logging when the function is successful.\\n    * If the function fails, it will still log the reason for failure.\\n    *\\n    * @param fn - Name of function for which to disable logging.\\n    */\\n   disableLog(fn: string): void;\\n \\n   /**\\n    * Enable logging for a certain function.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Re-enables logging for the given function. If `ALL` is passed into this\\n    * function as an argument, then it will revert the effects of disableLog(`ALL`).\\n    *\\n    * @param fn - Name of function for which to enable logging.\\n    */\\n   enableLog(fn: string): void;\\n \\n   /**\\n    * Checks the status of the logging for the given function.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param fn - Name of function to check.\\n    * @returns Returns a boolean indicating whether or not logging is enabled for that function (or `ALL`)\\n    */\\n   isLogEnabled(fn: string): boolean;\\n \\n   /**\\n    * Get all the logs of a script.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Returns a script’s logs. The logs are returned as an array, where each line is an element in the array.\\n    * The most recently logged line is at the end of the array.\\n    * Note that there is a maximum number of lines that a script stores in its logs. This is configurable in the game’s options.\\n    * If the function is called with no arguments, it will return the current script’s logs.\\n    *\\n    * Otherwise, the fn, hostname/ip, and args… arguments can be used to get the logs from another script.\\n    * Remember that scripts are uniquely identified by both their names and arguments.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //Get logs from foo.script on the current server that was run with no args\\n    * getScriptLogs(\\\"foo.script\\\");\\n    *\\n    * //Open logs from foo.script on the foodnstuff server that was run with no args\\n    * getScriptLogs(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \\\"test\\\"]\\n    * getScriptLogs(\\\"foo.script\\\", \\\"foodnstuff\\\", 1, \\\"test\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //Get logs from foo.script on the current server that was run with no args\\n    * ns.getScriptLogs(\\\"foo.script\\\");\\n    *\\n    * //Open logs from foo.script on the foodnstuff server that was run with no args\\n    * ns.getScriptLogs(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \\\"test\\\"]\\n    * ns.getScriptLogs(\\\"foo.script\\\", \\\"foodnstuff\\\", 1, \\\"test\\\");\\n    * ```\\n    * @param fn - Optional. Filename of script to get logs from.\\n    * @param host - Optional. Hostname of the server that the script is on.\\n    * @param args - Arguments to identify which scripts to get logs for.\\n    * @returns Returns an string array, where each line is an element in the array. The most recently logged line is at the end of the array.\\n    */\\n   getScriptLogs(fn?: string, host?: string, ...args: any[]): string[];\\n \\n   /**\\n    * Open the tail window of a script.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Opens a script’s logs. This is functionally the same as the tail Terminal command.\\n    *\\n    * If the function is called with no arguments, it will open the current script’s logs.\\n    *\\n    * Otherwise, the fn, hostname/ip, and args… arguments can be used to get the logs from another script.\\n    * Remember that scripts are uniquely identified by both their names and arguments.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //Open logs from foo.script on the current server that was run with no args\\n    * tail(\\\"foo.script\\\");\\n    *\\n    * //Get logs from foo.script on the foodnstuff server that was run with no args\\n    * tail(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \\\"test\\\"]\\n    * tail(\\\"foo.script\\\", \\\"foodnstuff\\\", 1, \\\"test\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //Open logs from foo.script on the current server that was run with no args\\n    * ns.tail(\\\"foo.script\\\");\\n    *\\n    * //Get logs from foo.script on the foodnstuff server that was run with no args\\n    * ns.tail(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \\\"test\\\"]\\n    * ns.tail(\\\"foo.script\\\", \\\"foodnstuff\\\", 1, \\\"test\\\");\\n    * ```\\n    * @param fn - Optional. Filename or PID of the script being tailed. If omitted, the current script is tailed.\\n    * @param host - Optional. Hostname of the script being tailed. Defaults to the server this script is running on. If args are specified, this is not optional.\\n    * @param args - Arguments for the script being tailed.\\n    */\\n   tail(fn?: FilenameOrPID, host?: string, ...args: any[]): void;\\n \\n   /**\\n    * Get the list of servers connected to a server.\\n    * @remarks\\n    * RAM cost: 0.2 GB\\n    *\\n    * Returns an array containing the hostnames of all servers that are one\\n    * node way from the specified target server. The hostnames in the returned\\n    * array are strings.\\n    *\\n    * @param host - Optional, Hostname of the server to scan, default to current server.\\n    * @returns Returns an string of hostnames.\\n    */\\n   scan(host?: string): string[];\\n \\n   /**\\n    * Runs NUKE.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Running NUKE.exe on a target server gives you root access which means you can executes scripts on said server. NUKE.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * nuke(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.nuke(\\\"foodnstuff\\\");\\n    * ```\\n    * @param host - Hostname of the target server.\\n    */\\n   nuke(host: string): void;\\n \\n   /**\\n    * Runs BruteSSH.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Runs the BruteSSH.exe program on the target server. BruteSSH.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * brutessh(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.brutessh(\\\"foodnstuff\\\");\\n    * ```\\n    * @param host - Hostname of the target server.\\n    */\\n   brutessh(host: string): void;\\n \\n   /**\\n    * Runs FTPCrack.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Runs the FTPCrack.exe program on the target server. FTPCrack.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * ftpcrack(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.ftpcrack(\\\"foodnstuff\\\");\\n    * ```\\n    * @param host - Hostname of the target server.\\n    */\\n   ftpcrack(host: string): void;\\n \\n   /**\\n    * Runs relaySMTP.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Runs the relaySMTP.exe program on the target server. relaySMTP.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * relaysmtp(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.relaysmtp(\\\"foodnstuff\\\");\\n    * ```\\n    * @param host - Hostname of the target server.\\n    */\\n   relaysmtp(host: string): void;\\n \\n   /**\\n    * Runs HTTPWorm.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Runs the HTTPWorm.exe program on the target server. HTTPWorm.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * httpworm(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.httpworm(\\\"foodnstuff\\\");\\n    * ```\\n    * @param host - Hostname of the target server.\\n    */\\n   httpworm(host: string): void;\\n \\n   /**\\n    * Runs SQLInject.exe on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Runs the SQLInject.exe program on the target server. SQLInject.exe must exist on your home computer.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * sqlinject(\\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.sqlinject(\\\"foodnstuff\\\");\\n    * ```\\n    * @remarks RAM cost: 0.05 GB\\n    * @param host - Hostname of the target server.\\n    */\\n   sqlinject(host: string): void;\\n \\n   /**\\n    * Start another script on the current server.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Run a script as a separate process. This function can only be used to run scripts located on the\\n    * current server (the server running the script that calls this function). Requires a significant\\n    * amount of RAM to run this command.\\n    *\\n    * If the script was successfully started, then this functions returns the PID of that script.\\n    * Otherwise, it returns 0.\\n    *\\n    * PID stands for Process ID. The PID is a unique identifier for each script.\\n    * The PID will always be a positive integer.\\n    *\\n    * Running this function with a numThreads argument of 0 will return 0 without running the script.\\n    * However, running this function with a negative numThreads argument will cause a runtime error.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The simplest way to use the run command is to call it with just the script name. The following example will run ‘foo.script’ single-threaded with no arguments:\\n    * run(\\\"foo.script\\\");\\n    *\\n    * //The following example will run ‘foo.script’ but with 5 threads instead of single-threaded:\\n    * run(\\\"foo.script\\\", 5);\\n    *\\n    * //This next example will run ‘foo.script’ single-threaded, and will pass the string ‘foodnstuff’ into the script as an argument:\\n    * run(\\\"foo.script\\\", 1, 'foodnstuff');\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //The simplest way to use the run command is to call it with just the script name. The following example will run ‘foo.script’ single-threaded with no arguments:\\n    * ns.run(\\\"foo.script\\\");\\n    *\\n    * //The following example will run ‘foo.script’ but with 5 threads instead of single-threaded:\\n    * ns.run(\\\"foo.script\\\", 5);\\n    *\\n    * //This next example will run ‘foo.script’ single-threaded, and will pass the string ‘foodnstuff’ into the script as an argument:\\n    * ns.run(\\\"foo.script\\\", 1, 'foodnstuff');\\n    * ```\\n    * @param script - Filename of script to run.\\n    * @param numThreads - Optional thread count for new script. Set to 1 by default. Will be rounded to nearest integer.\\n    * @param args - Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the second argument numThreads must be filled in with a value.\\n    * @returns Returns the PID of a successfully started script, and 0 otherwise.\\n    */\\n   run(script: string, numThreads?: number, ...args: Array<string | number | boolean>): number;\\n \\n   /**\\n    * Start another script on any server.\\n    * @remarks\\n    * RAM cost: 1.3 GB\\n    *\\n    * Run a script as a separate process on a specified server. This is similar to the run function\\n    * except that it can be used to run a script on any server, instead of just the current server.\\n    *\\n    * If the script was successfully started, then this functions returns the PID of that script.\\n    * Otherwise, it returns 0.\\n    *\\n    * PID stands for Process ID. The PID is a unique identifier for each script.\\n    * The PID will always be a positive integer.\\n    *\\n    * Running this function with a numThreads argument of 0 will return 0 without running the script.\\n    * However, running this function with a negative numThreads argument will cause a runtime error.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The simplest way to use the exec command is to call it with just the script name and the target server. The following example will try to run generic-hack.script on the foodnstuff server:\\n    * exec(\\\"generic-hack.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The following example will try to run the script generic-hack.script on the joesguns server with 10 threads:\\n    * exec(\\\"generic-hack.script\\\", \\\"joesguns\\\", 10);\\n    *\\n    * //This last example will try to run the script foo.script on the foodnstuff server with 5 threads. It will also pass the number 1 and the string “test” in as arguments to the script:\\n    * exec(\\\"foo.script\\\", \\\"foodnstuff\\\", 5, 1, \\\"test\\\");\\n    * ```\\n    * * @example\\n    * ```ts\\n    * // NS2:\\n    * //The simplest way to use the exec command is to call it with just the script name and the target server. The following example will try to run generic-hack.script on the foodnstuff server:\\n    * ns.exec(\\\"generic-hack.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The following example will try to run the script generic-hack.script on the joesguns server with 10 threads:\\n    * ns.exec(\\\"generic-hack.script\\\", \\\"joesguns\\\", 10);\\n    *\\n    * //This last example will try to run the script foo.script on the foodnstuff server with 5 threads. It will also pass the number 1 and the string “test” in as arguments to the script:\\n    * ns.exec(\\\"foo.script\\\", \\\"foodnstuff\\\", 5, 1, \\\"test\\\");\\n    * ```\\n    * @param script - Filename of script to execute.\\n    * @param host - Hostname of the `target server` on which to execute the script.\\n    * @param numThreads - Optional thread count for new script. Set to 1 by default. Will be rounded to nearest integer.\\n    * @param args - Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the third argument numThreads must be filled in with a value.\\n    * @returns Returns the PID of a successfully started script, and 0 otherwise.\\n    */\\n   exec(script: string, host: string, numThreads?: number, ...args: Array<string | number | boolean>): number;\\n \\n   /**\\n    * Terminate current script and start another in 10s.\\n    * @remarks\\n    * RAM cost: 2 GB\\n    *\\n    * Terminates the current script, and then after a delay of about 10 seconds it will execute the\\n    * newly-specified script. The purpose of this function is to execute a new script without being\\n    * constrained by the RAM usage of the current one. This function can only be used to run scripts\\n    * on the local server.\\n    *\\n    * Because this function immediately terminates the script, it does not have a return value.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The following example will execute the script ‘foo.script’ with 10 threads and the arguments ‘foodnstuff’ and 90:\\n    * spawn('foo.script', 10, 'foodnstuff', 90);\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //The following example will execute the script ‘foo.script’ with 10 threads and the arguments ‘foodnstuff’ and 90:\\n    * ns.spawn('foo.script', 10, 'foodnstuff', 90);\\n    * ```\\n    * @param script - Filename of script to execute.\\n    * @param numThreads - Number of threads to spawn new script with. Will be rounded to nearest integer.\\n    * @param args - Additional arguments to pass into the new script that is being run.\\n    */\\n   spawn(script: string, numThreads?: number, ...args: string[]): void;\\n \\n   /**\\n    * Terminate another script.\\n    * @remarks\\n    * RAM cost: 0.5 GB\\n    *\\n    * Kills the script on the target server specified by the script’s name and arguments.\\n    * Remember that scripts are uniquely identified by both their name and arguments.\\n    * For example, if `foo.script` is run with the argument 1, then this is not the same as\\n    * `foo.script` run with the argument 2, even though they have the same code.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments:\\n    * kill(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The following will try to kill a script named foo.script on the current server that was ran with no arguments:\\n    * kill(\\\"foo.script\\\", getHostname());\\n    *\\n    * //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and “foodnstuff”:\\n    * kill(\\\"foo.script\\\", getHostname(), 1, \\\"foodnstuff\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments:\\n    * ns.kill(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The following will try to kill a script named foo.script on the current server that was ran with no arguments:\\n    * ns.kill(\\\"foo.script\\\", getHostname());\\n    *\\n    * //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and “foodnstuff”:\\n    * ns.kill(\\\"foo.script\\\", getHostname(), 1, \\\"foodnstuff\\\");\\n    * ```\\n    * @param script - Filename or pid of the script to kill\\n    * @param host - Hostname of the server on which to kill the script.\\n    * @param args - Arguments to identify which script to kill.\\n    * @returns True if the script is successfully killed, and false otherwise.\\n    */\\n   kill(script: number): boolean;\\n   kill(script: string, host: string, ...args: string[]): boolean;\\n \\n   /**\\n    * Terminate all scripts on a server.\\n    * @remarks\\n    * RAM cost: 0.5 GB\\n    *\\n    * Kills all running scripts on the specified server. This function returns true\\n    * if any scripts were killed, and false otherwise. In other words, it will return\\n    * true if there are any scripts running on the target server.\\n    * If no host is defined, it will kill all scripts, where the script is running.\\n    *\\n    * @param host - IP or hostname of the server on which to kill all scripts.\\n    * @returns True if any scripts were killed, and false otherwise.\\n    */\\n   killall(host?: string): boolean;\\n \\n   /**\\n    * Terminates the current script immediately.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    */\\n   exit(): void;\\n \\n   /**\\n    * Copy file between servers.\\n    * @remarks\\n    * RAM cost: 0.6 GB\\n    *\\n    * Copies a script or literature (.lit) file(s) to another server. The files argument can be either a string\\n    * specifying a single file to copy, or an array of strings specifying multiple files to copy.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //Copies foo.lit from the helios server to the home computer:\\n    * scp(\\\"foo.lit\\\", \\\"helios\\\", \\\"home\\\");\\n    *\\n    * //Tries to copy three files from rothman-uni to home computer:\\n    * files = [\\\"foo1.lit\\\", \\\"foo2.script\\\", \\\"foo3.script\\\"];\\n    * scp(files, \\\"rothman-uni\\\", \\\"home\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //Copies foo.lit from the helios server to the home computer:\\n    * await ns.scp(\\\"foo.lit\\\", \\\"helios\\\", \\\"home\\\");\\n    *\\n    * //Tries to copy three files from rothman-uni to home computer:\\n    * files = [\\\"foo1.lit\\\", \\\"foo2.script\\\", \\\"foo3.script\\\"];\\n    * await ns.scp(files, \\\"rothman-uni\\\", \\\"home\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * //ns2, copies files from home to a target server\\n    * const server = ns.args[0];\\n    * const files = [\\\"hack.js\\\",\\\"weaken.js\\\",\\\"grow.js\\\"];\\n    * await ns.scp(files, \\\"home\\\", server);\\n    * ```\\n    * @param files - Filename or an array of filenames of script/literature files to copy.\\n    * @param source - Host of the source server, which is the server from which the file will be copied. This argument is optional and if it’s omitted the source will be the current server.\\n    * @param destination - Host of the destination server, which is the server to which the file will be copied.\\n    * @returns True if the script/literature file is successfully copied over and false otherwise. If the files argument is an array then this function will return true if at least one of the files in the array is successfully copied.\\n    */\\n   scp(files: string | string[], destination: string): Promise<boolean>;\\n   scp(files: string | string[], source: string, destination: string): Promise<boolean>;\\n \\n   /**\\n    * List files on a server.\\n    * @remarks\\n    * RAM cost: 0.2 GB\\n    *\\n    * Returns an array with the filenames of all files on the specified server\\n    * (as strings). The returned array is sorted in alphabetic order.\\n    *\\n    * @param host - Host of the target server.\\n    * @param grep - A substring to search for in the filename.\\n    * @returns Array with the filenames of all files on the specified server.\\n    */\\n   ls(host: string, grep?: string): string[];\\n \\n   /**\\n    * List running scripts on a server.\\n    * @remarks\\n    * RAM cost: 0.2 GB\\n    *\\n    * Returns an array with general information about all scripts running on the specified target server.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * const scripts = ps(\\\"home\\\");\\n    * for (let i = 0; i < scripts.length; ++i) {\\n    *     tprint(scripts[i].filename + ' ' + scripts[i].threads);\\n    *     tprint(scripts[i].args);\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const ps = ns.ps(\\\"home\\\");\\n    * for (script of ps) {\\n    *     ns.tprint(`${script.filename} ${ps[i].threads}`);\\n    *     ns.tprint(script.args);\\n    * }\\n    * ```\\n    * @param host - Host address of the target server. If not specified, it will be the current server’s IP by default.\\n    * @returns Array with general information about all scripts running on the specified target server.\\n    */\\n   ps(host?: string): ProcessInfo[];\\n \\n   /**\\n    * Check if your have root access on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Returns a boolean indicating whether or not the player has root access to the specified target server.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * if (hasRootAccess(\\\"foodnstuff\\\") == false) {\\n    *    nuke(\\\"foodnstuff\\\");\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * if (ns.hasRootAccess(\\\"foodnstuff\\\") == false) {\\n    *    ns.nuke(\\\"foodnstuff\\\");\\n    * }\\n    * ```\\n    * @param host - Host of the target server\\n    * @returns True if player has root access to the specified target server, and false otherwise.\\n    */\\n   hasRootAccess(host: string): boolean;\\n \\n   /**\\n    * Returns a string with the hostname of the server that the script is running on.\\n    *\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    * @returns Hostname of the server that the script is on.\\n    */\\n   getHostname(): string;\\n \\n   /**\\n    * Returns the player’s current hacking level.\\n    *\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    * @returns Player’s current hacking level\\n    */\\n   getHackingLevel(): number;\\n \\n   /**\\n    * Get hacking related multipliers.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns an object containing the Player’s hacking related multipliers.\\n    * These multipliers are returned in fractional forms, not percentages\\n    * (e.g. 1.5 instead of 150%).\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * // Example of how this can be used:\\n    * var mults = getHackingMultipliers();\\n    * print(mults.chance);\\n    * print(mults.growth);\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * // Example of how this can be used:\\n    * const {chance, growth} = ns.getHackingMultipliers();\\n    * print(chance);\\n    * print(growth);\\n    * ```\\n    * @returns Object containing the Player’s hacking related multipliers.\\n    */\\n   getHackingMultipliers(): HackingMultipliers;\\n \\n   /**\\n    * Get hacknet related multipliers.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns an object containing the Player’s hacknet related multipliers.\\n    * These multipliers are returned in fractional forms, not percentages\\n    * (e.g. 1.5 instead of 150%).\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * // Example of how this can be used:\\n    * var mults = getHacknetMultipliers();\\n    * print(mults.production);\\n    * print(mults.purchaseCost);\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * // Example of how this can be used:\\n    * const {production, purchaseCost} = ns.getHacknetMultipliers();\\n    * print(production);\\n    * print(purchaseCost);\\n    * ```\\n    * @returns Object containing the Player’s hacknet related multipliers.\\n    */\\n   getHacknetMultipliers(): HacknetMultipliers;\\n \\n   /**\\n    * Returns a server object for the given server. Defaults to the running script's server if host is not specified.\\n    *\\n    * @remarks\\n    * RAM cost: 2 GB\\n    * @param host - Optional. Hostname for the requested server object.\\n    * @returns The requested server object.\\n    */\\n   getServer(host?: string): Server;\\n \\n   /**\\n    * Get money available on a server.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the amount of money available on a server.\\n    * Running this function on the home computer will return the player’s money.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * getServerMoneyAvailable(\\\"foodnstuff\\\");\\n    * getServerMoneyAvailable(\\\"home\\\"); //Returns player's money\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * ns.getServerMoneyAvailable(\\\"foodnstuff\\\");\\n    * ns.getServerMoneyAvailable(\\\"home\\\"); // Returns player's money\\n    * ```\\n    * @param host - Host of target server\\n    * @returns Amount of money available on the server.\\n    */\\n   getServerMoneyAvailable(host: string): number;\\n \\n   /**\\n    * Get maximum money available on a server.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the maximum amount of money that can be available on a server.\\n    *\\n    * @param host - Host of target server.\\n    * @returns Maximum amount of money available on the server.\\n    */\\n   getServerMaxMoney(host: string): number;\\n \\n   /**\\n    * Get a server growth parameter.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the server’s intrinsic “growth parameter”. This growth\\n    * parameter is a number typically between 0 and 100 that represents\\n    * how quickly the server’s money grows. This parameter affects the\\n    * percentage by which the server’s money is increased when using the\\n    * grow function. A higher growth parameter will result in a\\n    * higher percentage increase from grow.\\n    *\\n    * @param host - Host of target server.\\n    * @returns Parameter that affects the percentage by which the server’s money is increased when using the grow function.\\n    */\\n   getServerGrowth(host: string): number;\\n \\n   /**\\n    * Get server security level.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the security level of the target server. A server’s security\\n    * level is denoted by a number, typically between 1 and 100\\n    * (but it can go above 100).\\n    *\\n    * @param host - Host of target server.\\n    * @returns Security level of the target server.\\n    */\\n   getServerSecurityLevel(host: string): number;\\n \\n   /**\\n    * Returns the minimum security level of the target server.\\n    *\\n    * @remarks RAM cost: 0.1 GB\\n    * @param host - Host of target server.\\n    * @returns Minimum security level of the target server.\\n    */\\n   getServerMinSecurityLevel(host: string): number;\\n \\n   /**\\n    * @deprecated useless\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    * Returns the base security level of the target server. This is the security\\n    * level that the server starts out with. This is different than\\n    * getServerSecurityLevel because getServerSecurityLevel returns\\n    * the current security level of a server, which can constantly change due to\\n    * hack, grow, and weaken, calls on that server.\\n    * The base security level will stay the same until you reset by\\n    * installing an Augmentation(s).\\n    *\\n    * @param host - Host of target server.\\n    * @returns Base security level of the target server.\\n    */\\n   getServerBaseSecurityLevel(host: string): number;\\n \\n   /**\\n    * @deprecated use getServerMaxRam / getServerUsedRam\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns an array with two elements that gives information about a server’s memory (RAM).\\n    * The first element in the array is the amount of RAM that the server has total (in GB).\\n    * The second element in the array is the amount of RAM that is currently being used on\\n    * the server (in GB).\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var serverRam = getServerRam(\\\"helios\\\");\\n    * var totalRam = serverRam[0];\\n    * var ramUsed = serverRam[1];\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const [totalRam, ramUsed] = ns.getServerRam(\\\"helios\\\");\\n    * ```\\n    * @param host - Host of target server.\\n    * @returns Array with total and used memory on the specified server, in GB.\\n    */\\n   getServerRam(host: string): [number, number];\\n \\n   /**\\n    * Get the max RAM on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * @param host - Hostname of the target server.\\n    * @returns max ram (GB)\\n    */\\n   getServerMaxRam(host: string): number;\\n   /**\\n    * Get the used RAM on a server.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * @param host - Hostname of the target server.\\n    * @returns used ram (GB)\\n    */\\n   getServerUsedRam(host: string): number;\\n \\n   /**\\n    * Returns the required hacking level of the target server.\\n    *\\n    * @remarks RAM cost: 0.1 GB\\n    * @param host - Host of target server.\\n    * @returns The required hacking level of the target server.\\n    */\\n   getServerRequiredHackingLevel(host: string): number;\\n \\n   /**\\n    * Returns the number of open ports required to successfully run NUKE.exe on the specified server.\\n    *\\n    * @remarks RAM cost: 0.1 GB\\n    * @param host - Host of target server.\\n    * @returns The number of open ports required to successfully run NUKE.exe on the specified server.\\n    */\\n   getServerNumPortsRequired(host: string): number;\\n \\n   /**\\n    * Returns a boolean denoting whether or not the specified server exists.\\n    *\\n    * @remarks RAM cost: 0.1 GB\\n    * @param host - Host of target server.\\n    * @returns True if specified server exists, and false otherwise.\\n    */\\n   serverExists(host: string): boolean;\\n \\n   /**\\n    * Check if a file exists.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns a boolean indicating whether the specified file exists on the target server.\\n    * The filename for scripts is case-sensitive, but for other types of files it is not.\\n    * For example, fileExists(“brutessh.exe”) will work fine, even though the actual program\\n    * is named 'BruteSSH.exe'.\\n    *\\n    * If the hostname/ip argument is omitted, then the function will search through the current\\n    * server (the server running the script that calls this function) for the file.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise.\\n    * fileExists(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise.\\n    * fileExists(\\\"ftpcrack.exe\\\");\\n    * ```\\n    * * @example\\n    * ```ts\\n    * // NS2:\\n    * // The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise.\\n    * ns.fileExists(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * // The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise.\\n    * ns.fileExists(\\\"ftpcrack.exe\\\");\\n    * ```\\n    * @param filename - Filename of file to check.\\n    * @param host - Host of target server. This is optional. If it is not specified then the function will use the current server as the target server.\\n    * @returns True if specified file exists, and false otherwise.\\n    */\\n   fileExists(filename: string, host?: string): boolean;\\n \\n   /**\\n    * Check if a script is running.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns a boolean indicating whether the specified script is running on the target server.\\n    * If you use a PID instead of a filename, the hostname and args parameters are unnecessary.\\n    * Remember that a script is uniquely identified by both its name and its arguments.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise:\\n    * isRunning(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise:\\n    * isRunning(\\\"foo.script\\\", getHostname());\\n    *\\n    * //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and “test” (in that order) on the joesguns server, and false otherwise:\\n    * isRunning(\\\"foo.script\\\", \\\"joesguns\\\", 1, 5, \\\"test\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise:\\n    * ns.isRunning(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise:\\n    * ns.isRunning(\\\"foo.script\\\", ns.getHostname());\\n    *\\n    * //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and “test” (in that order) on the joesguns server, and false otherwise:\\n    * ns.isRunning(\\\"foo.script\\\", \\\"joesguns\\\", 1, 5, \\\"test\\\");\\n    * ```\\n    * @param script - Filename or PID of script to check. This is case-sensitive.\\n    * @param host - Host of target server.\\n    * @param args - Arguments to specify/identify which scripts to search for.\\n    * @returns True if specified script is running on the target server, and false otherwise.\\n    */\\n   isRunning(script: FilenameOrPID, host: string, ...args: string[]): boolean;\\n \\n   /**\\n    * Get general info about a running script.\\n    * @remarks\\n    * RAM cost: 0.3 GB\\n    *\\n    * Running with no args returns curent script.\\n    * If you use a PID as the first parameter, the hostname and args parameters are unnecessary.\\n    *\\n    * @param filename - Optional. Filename or PID of the script.\\n    * @param hostname - Optional. Name of host server the script is running on.\\n    * @param args  - Arguments to identify the script\\n    * @returns info about a running script\\n    */\\n   getRunningScript(filename?: FilenameOrPID, hostname?: string, ...args: (string | number)[]): RunningScript;\\n \\n   /**\\n    * Get cost of purchasing a server.\\n    * @remarks\\n    * RAM cost: 0.25 GB\\n    *\\n    * Returns the cost to purchase a server with the specified amount of ram.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * for (i = 1; i <= 20; i++) {\\n    *     tprint(i + \\\" -- \\\" + getPurchasedServerCost(Math.pow(2, i)));\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * for (i = 1; i <= 20; i++) {\\n    *     ns.tprint(i + \\\" -- \\\" + ns.getPurchasedServerCost(Math.pow(2, i)));\\n    * }\\n    * ```\\n    * @param ram - Amount of RAM of a potential purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20).\\n    * @returns The cost to purchase a server with the specified amount of ram.\\n    */\\n   getPurchasedServerCost(ram: number): number;\\n \\n   /**\\n    * Purchase a server.\\n    * @remarks\\n    * 2.25 GB\\n    *\\n    * Purchased a server with the specified hostname and amount of RAM.\\n    *\\n    * The hostname argument can be any data type, but it will be converted to a string\\n    * and have whitespace removed. Anything that resolves to an empty string will cause\\n    * the function to fail. If there is already a server with the specified hostname,\\n    * then the function will automatically append a number at the end of the hostname\\n    * argument value until it finds a unique hostname. For example, if the script calls\\n    * `purchaseServer(“foo”, 4)` but a server named “foo” already exists, the it will\\n    * automatically change the hostname to `foo-0`. If there is already a server with the\\n    * hostname `foo-0`, then it will change the hostname to `foo-1`, and so on.\\n    *\\n    * Note that there is a maximum limit to the amount of servers you can purchase.\\n    *\\n    * Returns the hostname of the newly purchased server as a string. If the function\\n    * fails to purchase a server, then it will return an empty string. The function will\\n    * fail if the arguments passed in are invalid, if the player does not have enough\\n    * money to purchase the specified server, or if the player has exceeded the maximum\\n    * amount of servers.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var ram = 64;\\n    * var prefix = \\\"pserv-\\\";\\n    * for (i = 0; i < 5; ++i) {\\n    *    purchaseServer(prefix + i, ram);\\n    * }\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const ram = 64;\\n    * const prefix = \\\"pserv-\\\";\\n    * for (i = 0; i < 5; ++i) {\\n    *    ns.purchaseServer(prefix + i, ram);\\n    * }\\n    * ```\\n    * @param hostname - Host of the purchased server.\\n    * @param ram - Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20).\\n    * @returns The hostname of the newly purchased server.\\n    */\\n   purchaseServer(hostname: string, ram: number): string;\\n \\n   /**\\n    * Delete a purchased server.\\n    * @remarks\\n    * 2.25 GB\\n    *\\n    * Deletes one of your purchased servers, which is specified by its hostname.\\n    *\\n    * The hostname argument can be any data type, but it will be converted to a string.\\n    * Whitespace is automatically removed from the string. This function will not delete a\\n    * server that still has scripts running on it.\\n    *\\n    * @param host - Host of the server to delete.\\n    * @returns True if successful, and false otherwise.\\n    */\\n   deleteServer(host: string): boolean;\\n \\n   /**\\n    * Returns an array with the hostnames of all of the servers you have purchased.\\n    *\\n    * @remarks 2.25 GB\\n    * @returns Returns an array with the hostnames of all of the servers you have purchased.\\n    */\\n   getPurchasedServers(): string[];\\n \\n   /**\\n    * Returns the maximum number of servers you can purchase.\\n    *\\n    * @remarks RAM cost: 0.05 GB\\n    * @returns Returns the maximum number of servers you can purchase.\\n    */\\n   getPurchasedServerLimit(): number;\\n \\n   /**\\n    * Returns the maximum RAM that a purchased server can have.\\n    *\\n    * @remarks RAM cost: 0.05 GB\\n    * @returns Returns the maximum RAM (in GB) that a purchased server can have.\\n    */\\n   getPurchasedServerMaxRam(): number;\\n \\n   /**\\n    * Write data to a file.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function can be used to write data to a text file (.txt).\\n    *\\n    * This function will write data to that text file. If the specified text file does not exist,\\n    * then it will be created. The third argument mode, defines how the data will be written to\\n    * the text file. If *mode is set to “w”, then the data is written in “write” mode which means\\n    * that it will overwrite all existing data on the text file. If mode is set to any other value\\n    * then the data will be written in “append” mode which means that the data will be added at the\\n    * end of the text file.\\n    *\\n    * @param handle - Filename of the text file that will be written to.\\n    * @param data - Data to write.\\n    * @param mode - Defines the write mode. Only valid when writing to text files.\\n    */\\n   write(handle: string, data?: string[] | number | string, mode?: \\\"w\\\" | \\\"a\\\"): Promise<void>;\\n \\n   /**\\n    * Attempt to write to a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Attempts to write data to the specified Netscript Port.\\n    * If the port is full, the data will not be written.\\n    * Otherwise, the data will be written normally.\\n    *\\n    * @param port - Port or text file that will be written to.\\n    * @param data - Data to write.\\n    * @returns True if the data is successfully written to the port, and false otherwise.\\n    */\\n   tryWritePort(port: number, data: string[] | number): Promise<boolean>;\\n \\n   /**\\n    * Read content of a file.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is used to read data from a text file (.txt).\\n    *\\n    * This function will return the data in the specified text\\n    * file. If the text file does not exist, an empty string will be returned.\\n    *\\n    * @param handle - Filename to read from.\\n    * @returns Data in the specified text file.\\n    */\\n   read(handle: string): any;\\n \\n   /**\\n    * Get a copy of the data from a port without popping it.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * This function is used to peek at the data from a port. It returns the\\n    * first element in the specified port without removing that element. If\\n    * the port is empty, the string “NULL PORT DATA” will be returned.\\n    *\\n    * @param port - Port to peek. Must be an integer between 1 and 20.\\n    * @returns Data in the specified port.\\n    */\\n   peek(port: number): any;\\n \\n   /**\\n    * Clear data from a file.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Delete all data from that text file.\\n    *\\n    * @param handle - Text file to clear.\\n    */\\n   clear(handle: string): void;\\n \\n   /**\\n    * Clear data from a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Deleta all data from the underlying queue.\\n    *\\n    * @param handle - Port to clear.\\n    */\\n   clearPort(handle: number): void;\\n \\n   /**\\n    * Write data to a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Write data to that netscript port.\\n    * @returns The data popped off the queue if it was full.\\n    */\\n   writePort(port: number, data: string | number): Promise<any>;\\n   /**\\n    * Read data from a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Read data from that port. A port is a serialized queue.\\n    * This function will remove the first element from that queue and return it.\\n    * If the queue is empty, then the string “NULL PORT DATA” will be returned.\\n    * @returns the data read.\\n    */\\n   readPort(port: number): any;\\n \\n   /**\\n    * Get all data on a port.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Get a handle to a Netscript Port.\\n    *\\n    * WARNING: Port Handles only work in NetscriptJS (Netscript 2.0). They will not work in Netscript 1.0.\\n    *\\n    * @see https://bitburner.readthedocs.io/en/latest/netscript/netscriptmisc.html#netscript-ports\\n    * @param port - Port number. Must be an integer between 1 and 20.\\n    */\\n   getPortHandle(port: number): NetscriptPort;\\n \\n   /**\\n    * Delete a file.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Removes the specified file from the current server. This function works for every file\\n    * type except message (.msg) files.\\n    *\\n    * @param name - Filename of file to remove. Must include the extension.\\n    * @param host - Host Address of the server on which to delete the file. Optional. Defaults to current server.\\n    * @returns True if it successfully deletes the file, and false otherwise.\\n    */\\n   rm(name: string, host?: string): boolean;\\n \\n   /**\\n    * Check if any script with a filename is running.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Returns a boolean indicating whether any instance of the specified script is running\\n    * on the target server, regardless of its arguments.\\n    *\\n    * This is different than the isRunning function because it does not try to\\n    * identify a specific instance of a running script by its arguments.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise:\\n    * scriptRunning(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The function call will return true if there is any script named “foo.script” running on the current server, and false otherwise:\\n    * scriptRunning(\\\"foo.script\\\", getHostname());\\n    * ```\\n    * * @example\\n    * ```ts\\n    * // NS2:\\n    * //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise:\\n    * ns.scriptRunning(\\\"foo.script\\\", \\\"foodnstuff\\\");\\n    *\\n    * //The function call will return true if there is any script named “foo.script” running on the current server, and false otherwise:\\n    * ns.scriptRunning(\\\"foo.script\\\", ns.getHostname());\\n    * ```\\n    * @param script - Filename of script to check. This is case-sensitive.\\n    * @param host - Host of target server.\\n    * @returns True if the specified script is running, and false otherwise.\\n    */\\n   scriptRunning(script: string, host: string): boolean;\\n \\n   /**\\n    * Kill all scripts with a filename.\\n    * @remarks\\n    * RAM cost: 1 GB\\n    *\\n    * Kills all scripts with the specified filename on the target server specified by hostname,\\n    * regardless of arguments.\\n    *\\n    * @param script - Filename of script to kill. This is case-sensitive.\\n    * @param host - Host of target server.\\n    * @returns true if one or more scripts were successfully killed, and false if none were.\\n    */\\n   scriptKill(script: string, host: string): boolean;\\n \\n   /**\\n    * Returns the current script name.\\n    *\\n    * @remarks RAM cost: 0 GB\\n    * @returns Current script name.\\n    */\\n   getScriptName(): string;\\n \\n   /**\\n    * Get the ram cost of a script.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the amount of RAM required to run the specified script on the target server.\\n    * Returns 0 if the script does not exist.\\n    *\\n    * @param script - Filename of script. This is case-sensitive.\\n    * @param host - Host of target server the script is located on. This is optional, If it is not specified then the function will se the current server as the target server.\\n    * @returns Amount of RAM (in GB) required to run the specified script on the target server, and 0 if the script does not exist.\\n    */\\n   getScriptRam(script: string, host?: string): number;\\n \\n   /**\\n    * Get the execution time of a hack() call.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *When `hack` completes an amount of money is stolen depending on the player's skills.\\n    * Returns the amount of time in milliseconds it takes to execute the hack Netscript function on the target server.\\n    * The function takes in an optional hackLvl parameter that can be specified to see what the hack time would be at different hacking levels.\\n    * The required time is increased by the security level of the target server and decreased by the player's hacking level.\\n    *\\n    * @param host - Host of target server.\\n    * @returns Returns the amount of time in milliseconds it takes to execute the hack Netscript function. Returns Infinity if called on a Hacknet Server.\\n    */\\n   getHackTime(host: string): number;\\n \\n   /**\\n    * Get the execution time of a grow() call.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Returns the amount of time in milliseconds it takes to execute the grow Netscript function on the target server.\\n    * The function takes in an optional hackLvl parameter that can be specified to see what the grow time would be at different hacking levels.\\n    * The required time is increased by the security level of the target server and decreased by the player's hacking level.\\n    *\\n    * @param host - Host of target server.\\n    * @returns Returns the amount of time in milliseconds it takes to execute the grow Netscript function. Returns Infinity if called on a Hacknet Server.\\n    */\\n   getGrowTime(host: string): number;\\n \\n   /**\\n    * Get the execution time of a weaken() call.\\n    * @remarks\\n    * RAM cost: 0.05 GB\\n    *\\n    * Returns the amount of time in milliseconds it takes to execute the weaken Netscript function on the target server.\\n    * The function takes in an optional hackLvl parameter that can be specified to see what the weaken time would be at different hacking levels.\\n    * The required time is increased by the security level of the target server and decreased by the player's hacking level.\\n    *\\n    * @param host - Host of target server.\\n    * @returns Returns the amount of time in milliseconds it takes to execute the weaken Netscript function. Returns Infinity if called on a Hacknet Server.\\n    */\\n   getWeakenTime(host: string): number;\\n \\n   /**\\n    * Get the income of a script.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the amount of income the specified script generates while online\\n    * (when the game is open, does not apply for offline income). Remember that\\n    * a script is uniquely identified by both its name and its arguments. So for\\n    * example if you ran a script with the arguments “foodnstuff” and “5” then\\n    * in order to use this function to get that script’s income you must specify\\n    * those same arguments in the same order in this function call.\\n    *\\n    * This function can also be called with no arguments.\\n    * If called with no arguments, then this function will return an array of two values.\\n    * The first value is the total income (dollar / second) of all of your active scripts\\n    * (scripts that are currently running on any server).\\n    * The second value is the total income (dollar / second) that you’ve earned from scripts\\n    * since you last installed Augmentations.\\n    *\\n    * @param script - Filename of script.\\n    * @param host - Server on which script is running.\\n    * @param args - Arguments that the script is running with.\\n    * @returns Amount of income the specified script generates while online.\\n    */\\n   getScriptIncome(): [number, number];\\n   getScriptIncome(script: string, host: string, ...args: string[]): number;\\n \\n   /**\\n    * Get the exp gain of a script.\\n    * @remarks\\n    * RAM cost: 0.1 GB\\n    *\\n    * Returns the amount of hacking experience the specified script generates while online\\n    * (when the game is open, does not apply for offline experience gains). Remember that a\\n    * script is uniquely identified by both its name and its arguments.\\n    *\\n    * This function can also return the total experience gain rate of all of your active\\n    * scripts by running the function with no arguments.\\n    *\\n    * @param script - Filename of script.\\n    * @param host - Server on which script is running.\\n    * @param args - Arguments that the script is running with.\\n    * @returns Amount of hacking experience the specified script generates while online.\\n    */\\n   getScriptExpGain(): number;\\n   getScriptExpGain(script: string, host: string, ...args: string[]): number;\\n \\n   /**\\n    * Returns the amount of time in milliseconds that have passed since you last installed Augmentations.\\n    *\\n    * @remarks RAM cost: 0.05 GB\\n    * @returns Time in milliseconds that have passed since you last installed Augmentations.\\n    */\\n   getTimeSinceLastAug(): number;\\n \\n   /**\\n    * Format a string.\\n    *\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * see: https://github.com/alexei/sprintf.js\\n    * @param format - String to format.\\n    * @param args - Formating arguments.\\n    * @returns Formated text.\\n    */\\n   sprintf(format: string, ...args: any[]): string;\\n \\n   /**\\n    * Format a string with an array of arguments.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * see: https://github.com/alexei/sprintf.js\\n    * @param format - String to format.\\n    * @param args - Formating arguments.\\n    * @returns Formated text.\\n    */\\n   vsprintf(format: string, args: any[]): string;\\n \\n   /**\\n    * Format a number\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Converts a number into a string with the specified formatter.\\n    * This uses the numeraljs library, so the formatters must be compatible with that.\\n    * This is the same function that the game itself uses to display numbers.\\n    *\\n    * see: http://numeraljs.com/\\n    * @param n - Number to format.\\n    * @param format - Formatter.\\n    * @returns Formated number.\\n    */\\n   nFormat(n: number, format: string): string;\\n \\n   /**\\n    * Format time to readable string\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * @param milliseconds - Number of millisecond to format.\\n    * @param milliPrecision - Format time with subsecond precision, defaults to false.\\n    * @returns The formatted time.\\n    */\\n   tFormat(milliseconds: number, milliPrecision?: boolean): string;\\n \\n   /**\\n    * Prompt the player with a Yes/No modal.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Prompts the player with a dialog box with two options: “Yes” and “No”.\\n    * This function will return true if the player click “Yes” and false if\\n    * the player clicks “No”. The script’s execution is halted until the player\\n    * selects one of the options.\\n    *\\n    * @param txt - Text to appear in the prompt dialog box.\\n    * @returns True if the player click “Yes” and false if the player clicks “No”.\\n    */\\n   prompt(txt: string): Promise<boolean>;\\n \\n   /**\\n    * Open up a message box.\\n    * @param msg - Message to alert.\\n    */\\n   alert(msg: any): void;\\n \\n   /**\\n    * Queue a toast (bottom-right notification).\\n    * @param msg - Message in the toast.\\n    * @param variant - Type of toast, must be one of success, info, warning, error. Defaults to success.\\n    * @param duration - Duration of toast in ms. Can also be `null` to create a persistent toast. Defaults to 2000\\n    */\\n   toast(msg: any, variant?: string, duration?: number | null): void;\\n \\n   /**\\n    * Download a file from the internet.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Retrieves data from a URL and downloads it to a file on the specified server.\\n    * The data can only be downloaded to a script (.script, .ns, .js) or a text file (.txt).\\n    * If the file already exists, it will be overwritten by this command.\\n    * Note that it will not be possible to download data from many websites because they\\n    * do not allow cross-origin resource sharing (CORS).\\n    *\\n    * IMPORTANT: This is an asynchronous function that returns a Promise.\\n    * The Promise’s resolved value will be a boolean indicating whether or not the data was\\n    * successfully retrieved from the URL. Because the function is async and returns a Promise,\\n    * it is recommended you use wget in NetscriptJS (Netscript 2.0).\\n    *\\n    * In NetscriptJS, you must preface any call to wget with the await keyword (like you would hack or sleep).\\n    * wget will still work in Netscript 1.0, but the functions execution will not be synchronous\\n    * (i.e. it may not execute when you expect/want it to).\\n    * Furthermore, since Promises are not supported in ES5,\\n    * you will not be able to process the returned value of wget in Netscript 1.0.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * wget(\\\"https://raw.githubusercontent.com/danielyxie/bitburner/master/README.md\\\", \\\"game_readme.txt\\\");\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * await ns.wget(\\\"https://raw.githubusercontent.com/danielyxie/bitburner/master/README.md\\\", \\\"game_readme.txt\\\");\\n    * ```\\n    * @param url - URL to pull data from.\\n    * @param target - Filename to write data to. Must be script or text file.\\n    * @param host - Optional hostname/ip of server for target file.\\n    * @returns True if the data was successfully retrieved from the URL, false otherwise.\\n    */\\n   wget(url: string, target: string, host?: string): Promise<boolean>;\\n \\n   /**\\n    * Returns the amount of Faction favor required to be able to donate to a faction.\\n    *\\n    * @remarks RAM cost: 0.1 GB\\n    * @returns Amount of Faction favor required to be able to donate to a faction.\\n    */\\n   getFavorToDonate(): number;\\n \\n   /**\\n    * Get the current Bitnode multipliers.\\n    * @remarks\\n    * RAM cost: 4 GB\\n    *\\n    * Returns an object containing the current BitNode multipliers.\\n    * This function requires you to be in Bitnode 5 or have Source-File 5 in order to run.\\n    * The multipliers are returned in decimal forms (e.g. 1.5 instead of 150%).\\n    * The multipliers represent the difference between the current BitNode and\\n    * the original BitNode (BitNode-1).\\n    *\\n    * For example, if the CrimeMoney multiplier has a value of 0.1, then that means\\n    * that committing crimes in the current BitNode will only give 10% of the money\\n    * you would have received in BitNode-1.\\n    *\\n    * @example\\n    * ```ts\\n    * // NS1:\\n    * var mults = getBitNodeMultipliers();\\n    * print(mults.ServerMaxMoney);\\n    * print(mults.HackExpGain);\\n    * ```\\n    * @example\\n    * ```ts\\n    * // NS2:\\n    * const {ServerMaxMoney, HackExpGain} = ns.getBitNodeMultipliers();\\n    * print(ServerMaxMoney);\\n    * print(HackExpGain);\\n    * ```\\n    * @returns Object containing the current BitNode multipliers.\\n    */\\n   getBitNodeMultipliers(): BitNodeMultipliers;\\n \\n   /**\\n    * Get a list of acquired Source-Files.\\n    * @remarks\\n    * RAM cost: 5 GB\\n    *\\n    * Returns an array of source files\\n    *\\n    * @returns Array containing an object with number and level of the source file.\\n    */\\n   getOwnedSourceFiles(): SourceFileLvl[];\\n \\n   /**\\n    * Get information about the player.\\n    * @remarks\\n    * RAM cost: 0.5 GB\\n    *\\n    * Returns an object with information on the current player.\\n    *\\n    * @returns Player info\\n    */\\n   getPlayer(): Player;\\n \\n   /**\\n    * Add callback function when the script dies\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * NS2 exclusive\\n    *\\n    * Add callback to be executed when the script dies.\\n    */\\n   atExit(f: () => void): void;\\n \\n   /**\\n    * Move a file on the target server.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * NS2 exclusive\\n    *\\n    * Move the source file to the specified destination on the target server.\\n    *\\n    * This command only works for scripts and text files (.txt). It cannot, however,  be used\\n    * to convert from script to text file, or vice versa.\\n    *\\n    * This function can also be used to rename files.\\n    *\\n    * @param host - Host of target server.\\n    * @param source - Filename of the source file.\\n    * @param destination - Filename of the destination file.\\n    */\\n   mv(host: string, source: string, destination: string): void;\\n \\n   /**\\n    * Parse command line flags.\\n    * @remarks\\n    * RAM cost: 0 GB\\n    *\\n    * Allows unix like flag parsing.\\n    * @example\\n    * ```ts\\n    * // example.script\\n    * var data = flags([\\n    *     ['delay', 0], // a default number means this flag is a number\\n    *     ['server', 'foodnstuff'], //  a default string means this flag is a string\\n    *     ['exclude', []], // a default array means this flag is a default array of string\\n    *     ['help', false], // a default boolean means this flag is a boolean\\n    * ]);\\n    * tprint(data);\\n    *\\n    * // example.ns\\n    * export async function main(ns) {\\n    *   const data = ns.flags([\\n    *     ['delay', 0], // a default number means this flag is a number\\n    *     ['server', 'foodnstuff'], //  a default string means this flag is a string\\n    *     ['exclude', []], // a default array means this flag is a default array of string\\n    *     ['help', false], // a default boolean means this flag is a boolean\\n    *   ]);\\n    *   ns.tprint(data);\\n    * }\\n    *\\n    * // [home ~/]> run example.script\\n    * // {\\\"_\\\":[],\\\"delay\\\":0,\\\"server\\\":\\\"foodnstuff\\\",\\\"exclude\\\":[],\\\"help\\\":false}\\n    * // [home ~/]> run example.script --delay 3000\\n    * // {\\\"_\\\":[],\\\"server\\\":\\\"foodnstuff\\\",\\\"exclude\\\":[],\\\"help\\\":false,\\\"delay\\\":3000}\\n    * // [home ~/]> run example.script --delay 3000 --server harakiri-sushi\\n    * // {\\\"_\\\":[],\\\"exclude\\\":[],\\\"help\\\":false,\\\"delay\\\":3000,\\\"server\\\":\\\"harakiri-sushi\\\"}\\n    * // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world\\n    * // {\\\"_\\\":[\\\"hello\\\",\\\"world\\\"],\\\"exclude\\\":[],\\\"help\\\":false,\\\"delay\\\":3000,\\\"server\\\":\\\"harakiri-sushi\\\"}\\n    * // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world --exclude a --exclude b\\n    * // {\\\"_\\\":[\\\"hello\\\",\\\"world\\\"],\\\"help\\\":false,\\\"delay\\\":3000,\\\"server\\\":\\\"harakiri-sushi\\\",\\\"exclude\\\":[\\\"a\\\",\\\"b\\\"]}\\n    * // [home ~/]> run example.script --help\\n    * // {\\\"_\\\":[],\\\"delay\\\":0,\\\"server\\\":\\\"foodnstuff\\\",\\\"exclude\\\":[],\\\"help\\\":true}\\n    * ```\\n    */\\n   flags(schema: [string, string | number | boolean | string[]][]): any;\\n \\n   /**\\n    * Share your computer with your factions.\\n    * @remarks\\n    * RAM cost: 2.4 GB\\n    *\\n    * Increases your rep gain of hacking contracts while share is called.\\n    * Scales with thread count.\\n    */\\n   share(): Promise<void>;\\n \\n   /**\\n    * Calculate your share power. Based on all the active share calls.\\n    * @remarks\\n    * RAM cost: 0.2 GB\\n    */\\n   getSharePower(): number;\\n }\\n \\n /**\\n  * Corporation Office API\\n  * @remarks\\n  * Requires the Office API upgrade from your corporation.\\n  * @public\\n  */\\n export interface OfficeAPI {\\n   /**\\n    * Assign an employee to a job.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param employeeName - name of the employee\\n    * @param job - Name of the job.\\n    * @returns A promise that is fulfilled when the assignment is complete.\\n    */\\n   assignJob(divisionName: string, cityName: string, employeeName: string, job: string): Promise<void>;\\n   /**\\n    * Hire an employee.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns The newly hired employee, if any\\n    */\\n   hireEmployee(divisionName: string, cityName: string): Employee | undefined;\\n   /**\\n    * Upgrade office size.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param size - Amount of positions to open\\n    */\\n   upgradeOfficeSize(divisionName: string, cityName: string, size: number): void;\\n   /**\\n    * Throw a party for your employees\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param costPerEmployee - Amount to spend per employee.\\n    * @returns Amount of happiness increased.\\n    */\\n   throwParty(divisionName: string, cityName: string, costPerEmployee: number): Promise<number>;\\n   /**\\n    * Buy coffee for your employees\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns A promise that is fulfilled when the coffee is served.\\n    */\\n   buyCoffee(divisionName: string, cityName: string): Promise<void>;\\n   /**\\n    * Hire AdVert.\\n    * @param divisionName - Name of the division\\n    */\\n   hireAdVert(divisionName: string): void;\\n   /**\\n    * Purchase a research\\n    * @param divisionName - Name of the division\\n    * @param researchName - Name of the research\\n    */\\n   research(divisionName: string, researchName: string): void;\\n   /**\\n    * Get data about an office\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns Office data\\n    */\\n   getOffice(divisionName: string, cityName: string): Office;\\n   /**\\n    * Get data about an employee\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param employeeName - Name of the employee\\n    * @returns Employee data\\n    */\\n   getEmployee(divisionName: string, cityName: string, employeeName: string): Employee;\\n   /**\\n    * Get the cost to Hire AdVert\\n    * @param divisionName - Name of the division\\n    * @returns Cost\\n    */\\n   getHireAdVertCost(divisionName: string): number;\\n   /**\\n    * Get the number of times you have Hired AdVert\\n    * @param divisionName - Name of the division\\n    * @returns Number of times you have Hired AdVert\\n    */\\n   getHireAdVertCount(adivisionName: string): number;\\n   /**\\n    * Get the cost to unlock research\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns cost\\n    */\\n   getResearchCost(divisionName: string, researchName: string): number;\\n   /**\\n    * Gets if you have unlocked a research\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns true is unlocked, false if not\\n    */\\n   hasResearched(divisionName: string, researchName: string): boolean;\\n   /**\\n    * Set the auto job assignment for a job\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param job - Name of the job\\n    * @param amount - Number of employees to assign to that job\\n    * @returns A promise that is fulfilled when the assignment is complete.\\n    */\\n   setAutoJobAssignment(divisionName: string, cityName: string, job: string, amount: number): Promise<boolean>;\\n   /**\\n    * Cost to Upgrade office size.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param size - Amount of positions to open\\n    * @returns Cost of upgrading the office\\n    */\\n   getOfficeSizeUpgradeCost(divisionName: string, cityName: string, asize: number): number;\\n }\\n \\n /**\\n  * Corporation Warehouse API\\n  * @remarks\\n  * Requires the Warehouse API upgrade from your corporation.\\n  * @public\\n  */\\n export interface WarehouseAPI {\\n   /**\\n    * Set material sell data.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param materialName - Name of the material\\n    * @param amt - Amount to sell, can be \\\"MAX\\\"\\n    * @param price - Price to sell, can be \\\"MP\\\"\\n    */\\n   sellMaterial(divisionName: string, cityName: string, materialName: string, amt: string, price: string): void;\\n   /**\\n    * Set product sell data.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param productName - Name of the product\\n    * @param amt - Amount to sell, can be \\\"MAX\\\"\\n    * @param price - Price to sell, can be \\\"MP\\\"\\n    * @param all - Sell in all city\\n    */\\n   sellProduct(\\n     divisionName: string,\\n     cityName: string,\\n     productName: string,\\n     amt: string,\\n     price: string,\\n     all: boolean,\\n   ): void;\\n   /**\\n    * Discontinue a product.\\n    * @param divisionName - Name of the division\\n    * @param productName - Name of the product\\n    */\\n   discontinueProduct(divisionName: string, productName: string): void;\\n   /**\\n    * Set smart supply\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param enabled - smart supply enabled\\n    */\\n   setSmartSupply(divisionName: string, cityName: string, enabled: boolean): void;\\n   /**\\n    * Set material buy data\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param materialName - Name of the material\\n    * @param amt - Amount of material to buy\\n    */\\n   buyMaterial(divisionName: string, cityName: string, materialName: string, amt: number): void;\\n   /**\\n    * Get warehouse data\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @returns warehouse data\\n    */\\n   getWarehouse(divisionName: string, cityName: string): Warehouse;\\n   /**\\n    * Get product data\\n    * @param divisionName - Name of the division\\n    * @param productName - Name of the product\\n    * @returns product data\\n    */\\n   getProduct(divisionName: string, productName: string): Product;\\n   /**\\n    * Get material data\\n    * @param divisionName - Name of the division\\n    * @param materialName - Name of the material\\n    * @returns material data\\n    */\\n   getMaterial(divisionName: string, cityName: string, materialName: string): Material;\\n   /**\\n    * Set market TA 1 for a material.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param materialName - Name of the material\\n    * @param on - market ta enabled\\n    */\\n   setMaterialMarketTA1(divisionName: string, cityName: string, materialName: string, on: boolean): void;\\n   /**\\n    * Set market TA 2 for a material.\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param materialName - Name of the material\\n    * @param on - market ta enabled\\n    */\\n   setMaterialMarketTA2(divisionName: string, cityName: string, materialName: string, on: boolean): void;\\n   /**\\n    * Set market TA 1 for a product.\\n    * @param divisionName - Name of the division\\n    * @param productName - Name of the product\\n    * @param on - market ta enabled\\n    */\\n   setProductMarketTA1(divisionName: string, productName: string, on: boolean): void;\\n   /**\\n    * Set market TA 2 for a product.\\n    * @param divisionName - Name of the division\\n    * @param productName - Name of the product\\n    * @param on - market ta enabled\\n    */\\n   setProductMarketTA2(divisionName: string, productName: string, on: boolean): void;\\n   /**\\n    * Set material export data\\n    * @param sourceDivision - Source division\\n    * @param sourceCity - Source city\\n    * @param targetDivision - Target division\\n    * @param targetCity - Target city\\n    * @param materialName - Name of the material\\n    * @param amt - Amount of material to export.\\n    */\\n   exportMaterial(\\n     sourceDivision: string,\\n     sourceCity: string,\\n     targetDivision: string,\\n     targetCity: string,\\n     materialName: string,\\n     amt: number,\\n   ): void;\\n   /**\\n    * Cancel material export\\n    * @param sourceDivision - Source division\\n    * @param sourceCity - Source city\\n    * @param targetDivision - Target division\\n    * @param targetCity - Target city\\n    * @param materialName - Name of the material\\n    * @param amt - Amount of material to export.\\n    */\\n   cancelExportMaterial(\\n     sourceDivision: string,\\n     sourceCity: string,\\n     targetDivision: string,\\n     targetCity: string,\\n     materialName: string,\\n     amt: number,\\n   ): void;\\n   /**\\n    * Purchase warehouse for a new city\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    */\\n   purchaseWarehouse(divisionName: string, cityName: string): void;\\n   /**\\n    * Upgrade warehouse\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    */\\n   upgradeWarehouse(divisionName: string, cityName: string): void;\\n   /**\\n    * Create a new product\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    * @param productName - Name of the product\\n    * @param designInvest - Amount to invest for the design of the product.\\n    * @param marketingInvest - Amount to invest for the marketing of the product.\\n    */\\n   makeProduct(\\n     divisionName: string,\\n     cityName: string,\\n     productName: string,\\n     designInvest: number,\\n     marketingInvest: number,\\n   ): void;\\n   /**\\n    * Gets the cost to purchase a warehouse\\n    * @returns cost\\n    */\\n   getPurchaseWarehouseCost(): number;\\n   /**\\n    * Gets the cost to upgrade a warehouse to the next level\\n    * @returns cost to upgrade\\n    */\\n   getUpgradeWarehouseCost(adivisionName: any, acityName: any): number;\\n   /**\\n    * Check if you have a warehouse in city\\n    * @returns true if warehouse is present, false if not\\n    */\\n   hasWarehouse(adivisionName: any, acityName: any): boolean;\\n }\\n \\n /**\\n  * Corporation API\\n  * @public\\n  */\\n export interface Corporation extends WarehouseAPI, OfficeAPI {\\n   /**\\n    * Create a Corporation\\n    * @param divisionName - Name of the division\\n    * @param selfFund - If you should self fund, defaults to true, false will only work on Bitnode 3\\n    * @returns true if created and false if not\\n    */\\n   createCorporation(corporationName: string, selfFund: boolean): boolean;\\n   /**\\n    * Check if you have a one time unlockable upgrade\\n    * @param upgradeName - Name of the upgrade\\n    * @returns true if unlocked and false if not\\n    */\\n   hasUnlockUpgrade(upgradeName: string): boolean;\\n   /**\\n    * Gets the cost to unlock a one time unlockable upgrade\\n    * @param upgradeName - Name of the upgrade\\n    * @returns cost of the upgrade\\n    */\\n   getUnlockUpgradeCost(upgradeName: string): number;\\n   /**\\n    * Get the level of a levelable upgrade\\n    * @param upgradeName - Name of the upgrade\\n    * @returns the level of the upgrade\\n    */\\n   getUpgradeLevel(upgradeName: string): number;\\n   /**\\n    * Gets the cost to unlock the next level of a levelable upgrade\\n    * @param upgradeName - Name of the upgrade\\n    * @returns cost of the upgrade\\n    */\\n   getUpgradeLevelCost(upgradeName: string): number;\\n   /**\\n    * Gets the cost to expand into a new industry\\n    * @param industryName - Name of the industry\\n    * @returns cost\\n    */\\n   getExpandIndustryCost(industryName: string): number;\\n   /**\\n    * Gets the cost to expand into a new city\\n    * @returns cost\\n    */\\n   getExpandCityCost(): number;\\n   /**\\n    * Get an offer for investment based on you companies current valuation\\n    * @returns An offer of investment\\n    */\\n   getInvestmentOffer(): InvestmentOffer;\\n   /**\\n    * Accept investment based on you companies current valuation\\n    * @remarks\\n    * Is based on current valuation and will not honer a specific Offer\\n    * @returns An offer of investment\\n    */\\n   acceptInvestmentOffer(): boolean;\\n   /**\\n    * Go public\\n    * @param numShares - number of shares you would like to issue for your IPO\\n    * @returns true if you successfully go public, false if not\\n    */\\n   goPublic(numShares: number): boolean;\\n   /**\\n    * Bribe a faction\\n    * @param factionName - Faction name\\n    * @param amountCash - Amount of money to bribe\\n    * @param amountShares - Amount of shares to bribe\\n    * @returns True if successful, false if not\\n    */\\n   bribe(factionName: string, amountCash: number, amountShares: number): boolean;\\n   /**\\n    * Get corporation data\\n    * @returns Corporation data\\n    */\\n   getCorporation(): CorporationInfo;\\n   /**\\n    * Get division data\\n    * @param divisionName - Name of the division\\n    * @returns Division data\\n    */\\n   getDivision(divisionName: string): Division;\\n   /**\\n    * Expand to a new industry\\n    * @param industryType - Name of the industry\\n    * @param divisionName - Name of the division\\n    */\\n   expandIndustry(industryType: string, divisionName: string): void;\\n   /**\\n    * Expand to a new city\\n    * @param divisionName - Name of the division\\n    * @param cityName - Name of the city\\n    */\\n   expandCity(divisionName: string, cityName: string): void;\\n   /**\\n    * Unlock an upgrade\\n    * @param upgradeName - Name of the upgrade\\n    */\\n   unlockUpgrade(upgradeName: string): void;\\n   /**\\n    * Level an upgrade.\\n    * @param upgradeName - Name of the upgrade\\n    */\\n   levelUpgrade(upgradeName: string): void;\\n   /**\\n    * Issue dividends\\n    * @param percent - Percent of profit to issue as dividends.\\n    */\\n   issueDividends(percent: number): void;\\n }\\n \\n /**\\n  * General info about a corporation\\n  * @public\\n  */\\n interface CorporationInfo {\\n   /** Name of the corporation */\\n   name: string;\\n   /** Funds available */\\n   funds: number;\\n   /** Revenue per second this cycle */\\n   revenue: number;\\n   /** Expenses per second this cycle */\\n   expenses: number;\\n   /** Indicating if the company is public */\\n   public: boolean;\\n   /** Total number of shares issues by this corporation */\\n   totalShares: number;\\n   /** Amount of share owned */\\n   numShares: number;\\n   /** Cooldown until shares can be sold again */\\n   shareSaleCooldown: number;\\n   /** Amount of shares issued */\\n   issuedShares: number;\\n   /** Price of the shares */\\n   sharePrice: number;\\n   /** State of the corporation. Possible states are START, PURCHASE, PRODUCTION, SALE, EXPORT. */\\n   state: string;\\n   /** Array of all divisions */\\n   divisions: Division[];\\n }\\n \\n /**\\n  * Employee in an office\\n  * @public\\n  */\\n interface Employee {\\n   /** Name of the employee */\\n   name: string;\\n   /** Morale */\\n   mor: number;\\n   /** Happiness */\\n   hap: number;\\n   /** Energy */\\n   ene: number;\\n   int: number;\\n   cha: number;\\n   exp: number;\\n   cre: number;\\n   eff: number;\\n   /** Salary */\\n   sal: number;\\n   /** City */\\n   loc: string;\\n   /** Current job */\\n   pos: string;\\n }\\n \\n /**\\n  * Product in a warehouse\\n  * @public\\n  */\\n interface Product {\\n   /** Name of the product */\\n   name: string;\\n   /** Demand for the product */\\n   dmd: number;\\n   /** Competition for the product */\\n   cmp: number;\\n   /** Production cost */\\n   pCost: number;\\n   /** Sell cost, can be \\\"MP+5\\\" */\\n   sCost: string | number;\\n   /** Data refers to the production, sale, and quantity of the products\\n    * These values are specific to a city\\n    * For each city, the data is [qty, prod, sell] */\\n   cityData: { [key: string]: number[] };\\n   /** Creation progress - A number between 0-100 representing percentage */\\n   developmentProgress: number;\\n }\\n \\n /**\\n  * Material in a warehouse\\n  * @public\\n  */\\n interface Material {\\n   /** Name of the material */\\n   name: string;\\n   /** Amount of material  */\\n   qty: number;\\n   /** Quality of the material */\\n   qlt: number;\\n   /** Amount of material produced  */\\n   prod: number;\\n   /** Amount of material sold  */\\n   sell: number;\\n }\\n \\n /**\\n  * Warehouse for a division in a city\\n  * @public\\n  */\\n interface Warehouse {\\n   /** Amount of size upgrade bought */\\n   level: number;\\n   /** City in which the warehouse is located */\\n   loc: string;\\n   /** Total space in the warehouse */\\n   size: number;\\n   /** Used space in the warehouse */\\n   sizeUsed: number;\\n   /** Smart Supply status in the warehouse */\\n   smartSupplyEnabled: boolean;\\n }\\n \\n /**\\n  * Office for a division in a city.\\n  * @public\\n  */\\n interface Office {\\n   /** City of the office */\\n   loc: string;\\n   /** Maximum number of employee */\\n   size: number;\\n   /** Minimum amount of energy of the employees */\\n   minEne: number;\\n   /** Maximum amount of energy of the employees */\\n   maxEne: number;\\n   /** Minimum happiness of the employees */\\n   minHap: number;\\n   /** Maximum happiness of the employees */\\n   maxHap: number;\\n   /** Maximum morale of the employees */\\n   maxMor: number;\\n   /** Name of all the employees */\\n   employees: string[];\\n   /** Positions of the employees */\\n   employeeProd: EmployeeJobs;\\n }\\n \\n /**\\n  * Object representing the number of employee in each job.\\n  * @public\\n  */\\n interface EmployeeJobs {\\n   Operations: number;\\n   Engineer: number;\\n   Business: number;\\n   Management: number;\\n   \\\"Research & Development\\\": number;\\n   Training: number;\\n   Unassigned: number;\\n }\\n \\n /**\\n  * Corporation division\\n  * @public\\n  */\\n interface Division {\\n   /** Name of the division */\\n   name: string;\\n   /** Type of division, like Aggriculture */\\n   type: string;\\n   /** Awareness of the division */\\n   awareness: number;\\n   /** Popularity of the division */\\n   popularity: number;\\n   /** Production multiplier */\\n   prodMult: number;\\n   /** Amount of research in that division */\\n   research: number;\\n   /** Revenue last cycle */\\n   lastCycleRevenue: number;\\n   /** Expenses last cycle */\\n   lastCycleExpenses: number;\\n   /** Revenue this cycle */\\n   thisCycleRevenue: number;\\n   /** Expenses this cycle */\\n   thisCycleExpenses: number;\\n   /** All research bought */\\n   upgrades: number[];\\n   /** Cities in which this division has expanded */\\n   cities: string[];\\n   /** Products developed by this division */\\n   products: string[];\\n }\\n \\n /**\\n  * Corporation investment offer\\n  * @public\\n  */\\n interface InvestmentOffer {\\n   /** Amount of funds you will get from this investment */\\n   funds: number;\\n   /** Amount of share you will give in exchange for this investment */\\n   shares: number;\\n   /** Current round of funding (max 4) */\\n   round: number;\\n }\\n \\n /**\\n  * Interface Theme\\n  * @internal\\n  */\\n interface UserInterfaceTheme {\\n   [key: string]: string | undefined;\\n   primarylight: string;\\n   primary: string;\\n   primarydark: string;\\n   successlight: string;\\n   success: string;\\n   successdark: string;\\n   errorlight: string;\\n   error: string;\\n   errordark: string;\\n   secondarylight: string;\\n   secondary: string;\\n   secondarydark: string;\\n   warninglight: string;\\n   warning: string;\\n   warningdark: string;\\n   infolight: string;\\n   info: string;\\n   infodark: string;\\n   welllight: string;\\n   well: string;\\n   white: string;\\n   black: string;\\n   hp: string;\\n   money: string;\\n   hack: string;\\n   combat: string;\\n   cha: string;\\n   int: string;\\n   rep: string;\\n   disabled: string;\\n   backgroundprimary: string;\\n   backgroundsecondary: string;\\n   button: string;\\n }\\n \\n /**\\n  * Interface Styles\\n  * @internal\\n  */\\n interface IStyleSettings {\\n   fontFamily: string;\\n   lineHeight: number;\\n }\\n \\n /**\\n  * Game Information\\n  * @internal\\n  */\\n interface GameInfo {\\n   version: string;\\n   commit: string;\\n   platform: string;\\n }\",\"filename\":\"index.d.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":2178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"eyJjdG9yIjoiQml0YnVybmVyU2F2ZU9iamVjdCIsImRhdGEiOnsiUGxheWVyU2F2ZSI6IntcImN0b3JcIjpcIlBsYXllck9iamVjdFwiLFwiZGF0YVwiOntcImhhY2tpbmdcIjoxODEsXCJocFwiOjExLFwibWF4X2hwXCI6MTEsXCJzdHJlbmd0aFwiOjE5LFwiZGVmZW5zZVwiOjE4LFwiZGV4dGVyaXR5XCI6MTgsXCJhZ2lsaXR5XCI6MTgsXCJjaGFyaXNtYVwiOjk0LFwiaW50ZWxsaWdlbmNlXCI6MCxcImhhY2tpbmdfY2hhbmNlX211bHRcIjoxLFwiaGFja2luZ19zcGVlZF9tdWx0XCI6MSxcImhhY2tpbmdfbW9uZXlfbXVsdFwiOjEsXCJoYWNraW5nX2dyb3dfbXVsdFwiOjEsXCJoYWNraW5nX2V4cFwiOjE1MDU2NC40ODcyOTk5NDIxMixcInN0cmVuZ3RoX2V4cFwiOjQyOC4zODg1MDAwMDAwMDYzLFwiZGVmZW5zZV9leHBcIjo0MDMuMTg4NTAwMDAwMDA3NyxcImRleHRlcml0eV9leHBcIjo0MDMuMTg4NTAwMDAwMDA3NyxcImFnaWxpdHlfZXhwXCI6NDAzLjE4ODUwMDAwMDAwNzcsXCJjaGFyaXNtYV9leHBcIjo5MjQxLjEwMjAwMDAwMDgzMixcImludGVsbGlnZW5jZV9leHBcIjowLFwiaGFja2luZ19tdWx0XCI6MSxcInN0cmVuZ3RoX211bHRcIjoxLFwiZGVmZW5zZV9tdWx0XCI6MSxcImRleHRlcml0eV9tdWx0XCI6MSxcImFnaWxpdHlfbXVsdFwiOjEsXCJjaGFyaXNtYV9tdWx0XCI6MSxcImhhY2tpbmdfZXhwX211bHRcIjoxLFwic3RyZW5ndGhfZXhwX211bHRcIjoxLFwiZGVmZW5zZV9leHBfbXVsdFwiOjEsXCJkZXh0ZXJpdHlfZXhwX211bHRcIjoxLFwiYWdpbGl0eV9leHBfbXVsdFwiOjEsXCJjaGFyaXNtYV9leHBfbXVsdFwiOjEsXCJjb21wYW55X3JlcF9tdWx0XCI6MSxcImZhY3Rpb25fcmVwX211bHRcIjoxLFwibW9uZXlcIjoxNDYwNzMxOS41NjYxMTA1NTEsXCJjaXR5XCI6XCJTZWN0b3ItMTJcIixcImxvY2F0aW9uXCI6XCJBbHBoYSBFbnRlcnByaXNlc1wiLFwiam9ic1wiOntcIkZvb2ROU3R1ZmZcIjpcIkVtcGxveWVlXCIsXCJKb2UncyBHdW5zXCI6XCJFbXBsb3llZVwiLFwiQ2FybWljaGFlbCBTZWN1cml0eVwiOlwiU29mdHdhcmUgQ29uc3VsdGFudFwifSxcImNvbXBhbnlOYW1lXCI6XCJDYXJtaWNoYWVsIFNlY3VyaXR5XCIsXCJjdXJyZW50U2VydmVyXCI6XCJob21lXCIsXCJwdXJjaGFzZWRTZXJ2ZXJzXCI6W1wicHMwXCIsXCJwczFcIixcInBzMlwiLFwicHMzXCIsXCJwczRcIixcInBzNVwiLFwicHM2XCIsXCJwczdcIixcInBzOFwiLFwicHM5XCIsXCJwczEwXCIsXCJwczExXCIsXCJwczEyXCIsXCJwczEzXCIsXCJwczE0XCIsXCJwczE1XCIsXCJwczE2XCIsXCJwczE3XCIsXCJwczE4XCIsXCJwczE5XCIsXCJwczIwXCIsXCJwczIxXCIsXCJwczIyXCIsXCJwczIzXCIsXCJwczI0XCJdLFwiaGFja25ldE5vZGVzXCI6W3tcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNzgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6Mzk0LjcwMzU2MzQ5OTk5OTg2LFwib25saW5lVGltZVNlY29uZHNcIjozOTE0OC43OTk5OTk5MzU3MDUsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjczMjU0MjMuNDg3NjcyNTU3LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTBcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNzgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6Mzk0LjcwMzU2MzQ5OTk5OTg2LFwib25saW5lVGltZVNlY29uZHNcIjozOTAyNy4zOTk5OTk5Mzc0NjUsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjYzMDA2NjcuNjcyOTcwNjMxLFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTFcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNTgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzUwLjM1NDg0ODQ5OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM1OTkwLjc5OTk5OTk4NzQ5NixcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTg0MTk4MS40MzA0NTgwMTMsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMlwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2NCxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNjMuNjU5NDYyOTk5OTk5ODUsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM1OTg4LjM5OTk5OTk4NzU0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1NjI2MzQyLjYxMzkxNjMwMixcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0zXCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTU5LFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjM1Mi41NzIyODQyNDk5OTk5NCxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzU5ODcuNzk5OTk5OTg3NTU0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1NjQ5ODg1Ljc5Nzk3NjQ5NCxcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS00XCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTYwLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjM1NC43ODk3MTk5OTk5OTk5LFwib25saW5lVGltZVNlY29uZHNcIjozNTk4Ny4xOTk5OTk5ODc1NixcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTMxMTE5OS4xOTk1MDY0MDcsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtNVwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2MyxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNjEuNDQyMDI3MjQ5OTk5OSxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzU5ODYuNzk5OTk5OTg3NTcsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjU1NzI3MDMuMjIxNjc2NjU0LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTZcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNjEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzU3LjAwNzE1NTc0OTk5OTg3LFwib25saW5lVGltZVNlY29uZHNcIjozNDA5NC4wMDAwMDAwMjI1OSxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTQyMzUyNy40MDA3Njg4NTMsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtN1wifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2MSxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNTcuMDA3MTU1NzQ5OTk5ODcsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM0MDkxLjQwMDAwMDAyMjY0NCxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTUwNzE2MS45MTU4NDcxMzQsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtOFwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE1MSxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozMzQuODMyNzk4MjQ5OTk5OSxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzI4MzYuMjAwMDAwMDQzNzg0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1MTUxMjEyLjE1MDk0MTk0LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTlcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNjMsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzYxLjQ0MjAyNzI0OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjI4NjIwLjYwMDAwMDAyOTQ2MyxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NDY1NjUyMC45MjA3ODA2NjE1LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTEwXCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTUxLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjMzNC44MzI3OTgyNDk5OTk5LFwib25saW5lVGltZVNlY29uZHNcIjo3Njk4LjE5OTk5OTk5NTE1OSxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6MTc0OTk3Ny44MDA4OTkzODYsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTFcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNTEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzM0LjgzMjc5ODI0OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjc2OTguMTk5OTk5OTk1MTU5LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjoxNjkyMjAyLjQwOTUxNDYzOTgsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTJcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjoxLFwibGV2ZWxcIjoxMDEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MTMyMy4yODg5MDA2ODU2NTQ0LFwib25saW5lVGltZVNlY29uZHNcIjoyMzg5LjAwMDAwMDAwMDAxOCxcInJhbVwiOjY0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjMxMzkzMjUuNzYwMTMwNjEsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTNcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjo5LFwibGV2ZWxcIjoxNzcsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6NTQxMS4wNzI0MzU0NzY5ODQsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjIzODcuODAwMDAwMDAwMDE5MyxcInJhbVwiOjY0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjE5MDY0MDQuMjQzOTQ3NTEwNixcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0xNFwifX1dLFwiaGFzaE1hbmFnZXJcIjp7XCJjdG9yXCI6XCJIYXNoTWFuYWdlclwiLFwiZGF0YVwiOntcImNhcGFjaXR5XCI6MCxcImhhc2hlc1wiOjAsXCJ1cGdyYWRlc1wiOntcIlNlbGwgZm9yIE1vbmV5XCI6MCxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXCI6MCxcIlJlZHVjZSBNaW5pbXVtIFNlY3VyaXR5XCI6MCxcIkluY3JlYXNlIE1heGltdW0gTW9uZXlcIjowLFwiSW1wcm92ZSBTdHVkeWluZ1wiOjAsXCJJbXByb3ZlIEd5bSBUcmFpbmluZ1wiOjAsXCJFeGNoYW5nZSBmb3IgQ29ycG9yYXRpb24gUmVzZWFyY2hcIjowLFwiRXhjaGFuZ2UgZm9yIEJsYWRlYnVybmVyIFJhbmtcIjowLFwiRXhjaGFuZ2UgZm9yIEJsYWRlYnVybmVyIFNQXCI6MCxcIkdlbmVyYXRlIENvZGluZyBDb250cmFjdFwiOjB9fX0sXCJmYWN0aW9uc1wiOltcIkN5YmVyU2VjXCIsXCJOZXRidXJuZXJzXCJdLFwiZmFjdGlvbkludml0YXRpb25zXCI6W1wiU2VjdG9yLTEyXCJdLFwicXVldWVkQXVnbWVudGF0aW9uc1wiOlt7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJOZXVyb3RyYWluZXIgSVwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJCaXRXaXJlXCJ9LHtcImxldmVsXCI6MSxcIm5hbWVcIjpcIlN5bmFwdGljIEVuaGFuY2VtZW50IEltcGxhbnRcIn0se1wibGV2ZWxcIjoxLFwibmFtZVwiOlwiTmV1cm9GbHV4IEdvdmVybm9yXCJ9LHtcImxldmVsXCI6MixcIm5hbWVcIjpcIk5ldXJvRmx1eCBHb3Zlcm5vclwifV0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJzb3VyY2VGaWxlc1wiOltdLFwibnVtUGVvcGxlS2lsbGVkXCI6MCxcImthcm1hXCI6MCxcImNyaW1lX21vbmV5X211bHRcIjoxLFwiY3JpbWVfc3VjY2Vzc19tdWx0XCI6MSxcImlzV29ya2luZ1wiOmZhbHNlLFwiZm9jdXNcIjp0cnVlLFwid29ya1R5cGVcIjpcIlwiLFwid29ya0Nvc3RNdWx0XCI6MyxcIndvcmtFeHBNdWx0XCI6MixcImN1cnJlbnRXb3JrRmFjdGlvbk5hbWVcIjpcIlwiLFwiY3VycmVudFdvcmtGYWN0aW9uRGVzY3JpcHRpb25cIjpcIlwiLFwid29ya0hhY2tFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrU3RyRXhwR2FpblJhdGVcIjowLFwid29ya0RlZkV4cEdhaW5SYXRlXCI6MCxcIndvcmtEZXhFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrQWdpRXhwR2FpblJhdGVcIjowLFwid29ya0NoYUV4cEdhaW5SYXRlXCI6MCxcIndvcmtSZXBHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlMb3NzUmF0ZVwiOjAsXCJ3b3JrSGFja0V4cEdhaW5lZFwiOjAsXCJ3b3JrU3RyRXhwR2FpbmVkXCI6MCxcIndvcmtEZWZFeHBHYWluZWRcIjowLFwid29ya0RleEV4cEdhaW5lZFwiOjAsXCJ3b3JrQWdpRXhwR2FpbmVkXCI6MCxcIndvcmtDaGFFeHBHYWluZWRcIjowLFwid29ya1JlcEdhaW5lZFwiOjAsXCJ3b3JrTW9uZXlHYWluZWRcIjowLFwiY3JlYXRlUHJvZ3JhbU5hbWVcIjpcIlwiLFwiY3JlYXRlUHJvZ3JhbVJlcUx2bFwiOjc1LFwiY2xhc3NOYW1lXCI6XCJcIixcImNyaW1lVHlwZVwiOlwiXCIsXCJ0aW1lV29ya2VkXCI6MCxcInRpbWVXb3JrZWRDcmVhdGVQcm9ncmFtXCI6MCxcInRpbWVOZWVkZWRUb0NvbXBsZXRlV29ya1wiOjcyMDAwMDAwLFwid29ya19tb25leV9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9tb25leV9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHRcIjoxLFwiaGFja25ldF9ub2RlX3JhbV9jb3N0X211bHRcIjoxLFwiaGFja25ldF9ub2RlX2NvcmVfY29zdF9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9sZXZlbF9jb3N0X211bHRcIjoxLFwiaGFzV3NlQWNjb3VudFwiOmZhbHNlLFwiaGFzVGl4QXBpQWNjZXNzXCI6ZmFsc2UsXCJoYXM0U0RhdGFcIjpmYWxzZSxcImhhczRTRGF0YVRpeEFwaVwiOmZhbHNlLFwiZ2FuZ1wiOm51bGwsXCJjb3Jwb3JhdGlvblwiOm51bGwsXCJibGFkZWJ1cm5lclwiOm51bGwsXCJibGFkZWJ1cm5lcl9tYXhfc3RhbWluYV9tdWx0XCI6MSxcImJsYWRlYnVybmVyX3N0YW1pbmFfZ2Fpbl9tdWx0XCI6MSxcImJsYWRlYnVybmVyX2FuYWx5c2lzX211bHRcIjoxLFwiYmxhZGVidXJuZXJfc3VjY2Vzc19jaGFuY2VfbXVsdFwiOjEsXCJzbGVldmVzXCI6W10sXCJyZXNsZWV2ZXNcIjpbXSxcInNsZWV2ZXNGcm9tQ292ZW5hbnRcIjowLFwiYml0Tm9kZU5cIjoxLFwibGFzdFVwZGF0ZVwiOjE2NDI5MjkwNjU2MTUsXCJ0b3RhbFBsYXl0aW1lXCI6NDQ3Mzc0MDAsXCJwbGF5dGltZVNpbmNlTGFzdEF1Z1wiOjQ0NzM3NDAwLFwicGxheXRpbWVTaW5jZUxhc3RCaXRub2RlXCI6NDQ3Mzc0MDAsXCJtb25leVNvdXJjZUFcIjp7XCJjdG9yXCI6XCJNb25leVNvdXJjZVRyYWNrZXJcIixcImRhdGFcIjp7XCJibGFkZWJ1cm5lclwiOjAsXCJjYXNpbm9cIjowLFwiY2xhc3NcIjotMTM2NTUzNy41OTk5OTk5OTcsXCJjb2Rpbmdjb250cmFjdFwiOjAsXCJjb3Jwb3JhdGlvblwiOjAsXCJjcmltZVwiOjAsXCJnYW5nXCI6MCxcImhhY2tpbmdcIjoyMDk1MTUyNTIuMDA3MjUwMjIsXCJoYWNrbmV0XCI6NzA4NTQ1MzYuMDI2ODM4NDQsXCJoYWNrbmV0X2V4cGVuc2VzXCI6LTE3MzE5NzQ1NC44NTIyOTcxMyxcImhvc3BpdGFsaXphdGlvblwiOjAsXCJpbmZpbHRyYXRpb25cIjowLFwic2xlZXZlc1wiOjAsXCJzdG9ja1wiOjAsXCJ0b3RhbFwiOjE0NjA2MzE5LjU2NjExMDU1MSxcIndvcmtcIjo2NDQ2NTIuMzk5OTk5OTI5NCxcInNlcnZlcnNcIjotMjUyODM0MzIuOTE1NzYzMixcIm90aGVyXCI6LTIwMDAwMCxcImF1Z21lbnRhdGlvbnNcIjotNjYzNjE2OTUuNX19LFwibW9uZXlTb3VyY2VCXCI6e1wiY3RvclwiOlwiTW9uZXlTb3VyY2VUcmFja2VyXCIsXCJkYXRhXCI6e1wiYmxhZGVidXJuZXJcIjowLFwiY2FzaW5vXCI6MCxcImNsYXNzXCI6LTEzNjU1MzcuNTk5OTk5OTk3LFwiY29kaW5nY29udHJhY3RcIjowLFwiY29ycG9yYXRpb25cIjowLFwiY3JpbWVcIjowLFwiZ2FuZ1wiOjAsXCJoYWNraW5nXCI6MjA5NTE1MjUyLjAwNzI1MDIyLFwiaGFja25ldFwiOjcwODU0NTM2LjAyNjgzODQ0LFwiaGFja25ldF9leHBlbnNlc1wiOi0xNzMxOTc0NTQuODUyMjk3MTMsXCJob3NwaXRhbGl6YXRpb25cIjowLFwiaW5maWx0cmF0aW9uXCI6MCxcInNsZWV2ZXNcIjowLFwic3RvY2tcIjowLFwidG90YWxcIjoxNDYwNjMxOS41NjYxMTA1NTEsXCJ3b3JrXCI6NjQ0NjUyLjM5OTk5OTkyOTQsXCJzZXJ2ZXJzXCI6LTI1MjgzNDMyLjkxNTc2MzIsXCJvdGhlclwiOi0yMDAwMDAsXCJhdWdtZW50YXRpb25zXCI6LTY2MzYxNjk1LjV9fSxcInNjcmlwdFByb2RTaW5jZUxhc3RBdWdcIjoyMDcyNzYxNDYsXCJleHBsb2l0c1wiOltdLFwiYWNoaWV2ZW1lbnRzXCI6W3tcIklEXCI6XCJGSVJTVF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQyODg5OTMwMDQxfSx7XCJJRFwiOlwiTlMyXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mjg5MTczMTAzOH0se1wiSURcIjpcIkJSVVRFU1NILkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5MDM4NTg5NzZ9LHtcIklEXCI6XCJIQUNLTkVUX05PREVfMTBNXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkwMzkxODk0N30se1wiSURcIjpcIkNZQkVSU0VDXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkxNTMzODY1N30se1wiSURcIjpcIkZUUENSQUNLLkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5MjA4MjUyMzd9LHtcIklEXCI6XCJXT1JLT1VUXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkyMjAyNTIzNn0se1wiSURcIjpcIlRPUlwiLFwidW5sb2NrZWRPblwiOjE2NDI5MjMwNjQyMzB9XSxcImZhY3Rpb25Xb3JrVHlwZVwiOlwiRmFjdGlvbiBIYWNraW5nIFdvcmtcIixcImNvbW1pdHRpbmdDcmltZVRocnVTaW5nRm5cIjpmYWxzZSxcInNpbmdGbkNyaW1lV29ya2VyU2NyaXB0XCI6bnVsbH19IiwiQWxsU2VydmVyc1NhdmUiOiJ7XCJob21lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImhvbWVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjAuMC4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6dHJ1ZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJqMC5tc2dcIixcInNlY3Rvci0xMi1jcmltZS5saXRcIixcImoxLm1zZ1wiLFwiY3NlYy10ZXN0Lm1zZ1wiLFwiajIubXNnXCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSG9tZSBQQ1wiLFwicHJvZ3JhbXNcIjpbXCJOVUtFLmV4ZVwiLFwiZmwxZ2h0LmV4ZVwiLFwiQXV0b0xpbmsuZXhlXCIsXCJCcnV0ZVNTSC5leGVcIixcIkZUUENyYWNrLmV4ZVwiLFwiRGVlcHNjYW5WMS5leGUtMzMuOTklLUlOQ1wiXSxcInJhbVVzZWRcIjoyLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxOTIxMjU3LDEyLDY5LDddfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo2NjcuNSxcIm9ubGluZU1vbmV5TWFkZVwiOjE5MjEyNTcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjQyMTcuMDA5OTk5OTk4MzU2LFwicGlkXCI6NzAsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hNDQxYjE3ZC1mZTc4LTRhYWEtOTEwMS1jZjJjYjY2NjFlNzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6N31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJ3aGlsZSh0cnVlKSB7XFxuXFx0Ly9oYWNrKCduMDBkbGVzJyk7XFxuXFx0Z3JvdygnbjAwZGxlcycpO1xcblxcdHdlYWtlbignbm9vZGxlcycpO1xcbn1cIixcImZpbGVuYW1lXCI6XCJuMDBkbGVzLnNjcmlwdFwiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2ODUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGxldCB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHRsZXQgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdGxldCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIkdMQVNTXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZGRjZWFlNy0wNDBmLTQ3ZGUtOTdhOS03ZGQwYzE5ZGNhNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjU3MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwMTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRcXG59XCIsXCJmaWxlbmFtZVwiOlwidGVzdC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2ODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdC8vIENvbnRpbnVvdXNseSB0cnkgdG8gcHVyY2hhc2Ugc2VydmVycyB1bnRpbCB3ZSd2ZSByZWFjaGVkIHRoZSBtYXhpbXVtXFxuXFx0Ly8gYW1vdW50IG9mIHNlcnZlcnNcXG5cXHRsZXQgcmFtID0gODtcXG5cXHRsZXQgaSA9IDA7XFxuXFx0d2hpbGUgKGkgPCBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdCgpKSB7XFxuXFx0XFx0Ly8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgYSBzZXJ2ZXJcXG5cXHRcXHRpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKSA+IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtKSkge1xcblxcdFxcdFxcdC8vIERvbid0IGJ1eSBzZXJ2ZXIgL3cgbmFtZSBpZiBhbHJlYWR5IGV4aXN0c1xcblxcdFxcdFxcdGlmIChucy5zZXJ2ZXJFeGlzdHMoXFxcInBzXFxcIisgaSkpIHsrK2k7IGNvbnRpbnVlO31cXG5cXHRcXHRcXHQvLyBJZiB3ZSBoYXZlIGVub3VnaCBtb25leSwgdGhlbjpcXG5cXHRcXHRcXHQvLyAgMS4gUHVyY2hhc2UgdGhlIHNlcnZlclxcblxcdFxcdFxcdC8vICAyLiBDb3B5IG91ciBoYWNraW5nIHNjcmlwdCBvbnRvIHRoZSBuZXdseS1wdXJjaGFzZWQgc2VydmVyXFxuXFx0XFx0XFx0Ly8gIDMuIFJ1biBvdXIgaGFja2luZyBzY3JpcHQgb24gdGhlIG5ld2x5LXB1cmNoYXNlZCBzZXJ2ZXIgd2l0aCAzIHRocmVhZHNcXG5cXHRcXHRcXHQvLyAgNC4gSW5jcmVtZW50IG91ciBpdGVyYXRvciB0byBpbmRpY2F0ZSB0aGF0IHdlJ3ZlIGJvdWdodCBhIG5ldyBzZXJ2ZXJcXG5cXHRcXHRcXHRsZXQgaG9zdG5hbWUgPSBucy5wdXJjaGFzZVNlcnZlcihcXFwicHNcXFwiICsgaSwgcmFtKTtcXG5cXHRcXHRcXHRhd2FpdCBucy5zY3AoXFxcImZhcm0uanNcXFwiLCBob3N0bmFtZSk7XFxuXFx0XFx0XFx0bnMuZXhlYyhcXFwiZmFybS5qc1xcXCIsIGhvc3RuYW1lLCAzKTtcXG5cXHRcXHRcXHQrK2k7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcblxcdH1cXG5cXHRucy5wcmludChcXFwiUHVyY2hhc2VkIGFsbCBwb3NzaWJsZSBTZXJ2ZXJzXFxcIik7XFxufVwiLFwiZmlsZW5hbWVcIjpcInNlcnZlci1mYXJtZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJzZXJ2ZXItZmFybWVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYzgzMDZhOC1kZTRlLTQxMWItYjZmNi1hZGNmZjZiOWYzMWZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY1OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo2LjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwMTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckNvc3RcIixcImNvc3RcIjowLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2VydmVyRXhpc3RzXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VTZXJ2ZXJcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM31dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0bGV0IGkgPSAwO1xcblxcdHdoaWxlIChcXFwiYXNkZlxcXCIpIHtcXG5cXHRcXHRpZiAoIW5zLnNlcnZlckV4aXN0cyhcXFwicHNcXFwiICsgaSkpIHticmVhazt9XFxuXFxuXFx0XFx0bGV0IGhvc3RuYW1lID0gXFxcInBzXFxcIiArIGk7XFxuXFx0XFx0bnMua2lsbGFsbChob3N0bmFtZSk7XFxuXFx0XFx0YXdhaXQgbnMuc2NwKFxcXCJmYXJtLmpzXFxcIiwgaG9zdG5hbWUpO1xcblxcdFxcdG5zLmV4ZWMoXFxcImZhcm0uanNcXFwiLCBob3N0bmFtZSwgMyk7XFxuXFx0XFx0KytpO1xcblxcdH1cXHRcXG59XCIsXCJmaWxlbmFtZVwiOlwic2VydmVyLXVwZGF0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJzZXJ2ZXItdXBkYXRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDA4OWI5YWMtODk2Yy00MmZhLTk0M2UtODJhYzUzODNhNjk4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE1N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjEsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzAwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNlcnZlckV4aXN0c1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY3BcIixcImNvc3RcIjowLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoXFxcIi5cXFwiKS5OUyB9IG5zICovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXG4gICAgbGV0IGFsbG93YW5jZSA9IDAuNTtcXG5cXG4gICAgd2hpbGUgKHRydWUpIHtcXG4gICAgICAgIC8vIEZpZ3VyZSBvdXQgd2hhdCB0aGUgY2hlYXBlc3QgdXBncmFkZSB3aWxsIGJlXFxuICAgICAgICB2YXIgdXBncmFkZVR5cGUgPSBcXFwibnVsbFxcXCI7XFxuICAgICAgICB2YXIgdXBncmFkZU5vZGUgPSAwO1xcbiAgICAgICAgdmFyIHVwZ3JhZGVDb3N0ID0gMTAwMDAwMDAwMDAwO1xcblxcbiAgICAgICAgaWYgKG5zLmhhY2tuZXQubnVtTm9kZXMoKSA8IG5zLmhhY2tuZXQubWF4TnVtTm9kZXMoKSkge1xcbiAgICAgICAgICAgIHVwZ3JhZGVUeXBlID0gXFxcIm5ld1xcXCI7XFxuICAgICAgICAgICAgdXBncmFkZUNvc3QgPSBucy5oYWNrbmV0LmdldFB1cmNoYXNlTm9kZUNvc3QoKTtcXG4gICAgICAgIH1cXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnMuaGFja25ldC5udW1Ob2RlcygpOyBpKyspIHtcXG4gICAgICAgICAgICBpZiAobnMuaGFja25ldC5nZXRMZXZlbFVwZ3JhZGVDb3N0KGksIDEpIDwgdXBncmFkZUNvc3Qpe1xcbiAgICAgICAgICAgICAgICB1cGdyYWRlVHlwZSA9IFxcXCJsZXZlbFxcXCI7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVOb2RlID0gaTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaWYgKG5zLmhhY2tuZXQuZ2V0UmFtVXBncmFkZUNvc3QoaSwgMSkgPCB1cGdyYWRlQ29zdCl7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVUeXBlID0gXFxcInJhbVxcXCI7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVOb2RlID0gaTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaWYgKG5zLmhhY2tuZXQuZ2V0Q29yZVVwZ3JhZGVDb3N0KGksIDEpIDwgdXBncmFkZUNvc3Qpe1xcbiAgICAgICAgICAgICAgICB1cGdyYWRlVHlwZSA9IFxcXCJjb3JlXFxcIjtcXG4gICAgICAgICAgICAgICAgdXBncmFkZU5vZGUgPSBpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIFxcbiAgICAgICAgLy8gVHJ5IGJ1eWluZyBpdD9cXG4gICAgICAgIGlmICh1cGdyYWRlVHlwZSA9PSBudWxsKSB7IFxcbiAgICAgICAgICAgIG5zLmFsZXJ0KFxcXCJNYXhlZCBvdXQgaGFja25ldD8hXFxcIilcXG4gICAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuICAgICAgICAvLyBTbGVlcCBsb25nZXIgdG8gd2FpdCBmb3IgbW9uZXlcXG4gICAgICAgIGxldCBtb25leSA9IG5zLmdldFBsYXllcigpLm1vbmV5ICogYWxsb3dhbmNlO1xcbiAgICAgICAgbnMucHJpbnQoXFxcIkkgaGF2ZSBcXFwiICsgbW9uZXkgKyBcXFwiOyBQbGFubmluZyB0byBidXkgXFxcIiArIHVwZ3JhZGVUeXBlICsgXFxcIiBmb3Igbm9kZSBcXFwiICsgdXBncmFkZU5vZGUgKyBcXFwiIGZvciBcXFwiICsgdXBncmFkZUNvc3QpO1xcbiAgICAgICAgaWYgKG1vbmV5IDwgdXBncmFkZUNvc3QpIHsgYXdhaXQgbnMuc2xlZXAoNTAwKTsgY29udGludWU7fVxcbiAgICAgICAgc3dpdGNoICh1cGdyYWRlVHlwZSkge1xcbiAgICAgICAgICAgIGNhc2UgXFxcIm5ld1xcXCI6XFxuICAgICAgICAgICAgICAgIG5zLmhhY2tuZXQucHVyY2hhc2VOb2RlKCk7XFxuICAgICAgICAgICAgICAgIGJyZWFrO1xcbiAgICAgICAgICAgIGNhc2UgXFxcImxldmVsXFxcIjpcXG4gICAgICAgICAgICAgICAgbnMuaGFja25ldC51cGdyYWRlTGV2ZWwodXBncmFkZU5vZGUsIDEpO1xcbiAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICBjYXNlIFxcXCJyYW1cXFwiOlxcbiAgICAgICAgICAgICAgICBucy5oYWNrbmV0LnVwZ3JhZGVSYW0odXBncmFkZU5vZGUsIDEpO1xcbiAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICBjYXNlIFxcXCJjb3JlXFxcIjpcXG4gICAgICAgICAgICAgICAgbnMuaGFja25ldC51cGdyYWRlQ29yZSh1cGdyYWRlTm9kZSwgMSk7XFxuICAgICAgICAgICAgICAgIGJyZWFrO1xcbiAgICAgICAgfVxcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTApO1xcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tuZXQtbG9yZC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrbmV0LWxvcmQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UwMzcyYzRhLTQ5ODktNDU5Zi1hNmUxLTExMTFmYzM0MmFiOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDU5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuMSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJuc1wiLFwibmFtZVwiOlwiaGFja25ldFwiLFwiY29zdFwiOjR9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQbGF5ZXJcIixcImNvc3RcIjowLjV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIEBwdWJsaWNcXG4gKi9cXG4gdHlwZSBGaWxlbmFtZU9yUElEID0gbnVtYmVyIHwgc3RyaW5nO1xcblxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFBsYXllciB7XFxuICAgaGFja2luZzogbnVtYmVyO1xcbiAgIGhwOiBudW1iZXI7XFxuICAgbWF4X2hwOiBudW1iZXI7XFxuICAgc3RyZW5ndGg6IG51bWJlcjtcXG4gICBkZWZlbnNlOiBudW1iZXI7XFxuICAgZGV4dGVyaXR5OiBudW1iZXI7XFxuICAgYWdpbGl0eTogbnVtYmVyO1xcbiAgIGNoYXJpc21hOiBudW1iZXI7XFxuICAgaW50ZWxsaWdlbmNlOiBudW1iZXI7XFxuICAgaGFja2luZ19jaGFuY2VfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfc3BlZWRfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfZ3Jvd19tdWx0OiBudW1iZXI7XFxuICAgaGFja2luZ19leHA6IG51bWJlcjtcXG4gICBzdHJlbmd0aF9leHA6IG51bWJlcjtcXG4gICBkZWZlbnNlX2V4cDogbnVtYmVyO1xcbiAgIGRleHRlcml0eV9leHA6IG51bWJlcjtcXG4gICBhZ2lsaXR5X2V4cDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX2V4cDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfbXVsdDogbnVtYmVyO1xcbiAgIHN0cmVuZ3RoX211bHQ6IG51bWJlcjtcXG4gICBkZWZlbnNlX211bHQ6IG51bWJlcjtcXG4gICBkZXh0ZXJpdHlfbXVsdDogbnVtYmVyO1xcbiAgIGFnaWxpdHlfbXVsdDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX211bHQ6IG51bWJlcjtcXG4gICBoYWNraW5nX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgc3RyZW5ndGhfZXhwX211bHQ6IG51bWJlcjtcXG4gICBkZWZlbnNlX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgZGV4dGVyaXR5X2V4cF9tdWx0OiBudW1iZXI7XFxuICAgYWdpbGl0eV9leHBfbXVsdDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgY29tcGFueV9yZXBfbXVsdDogbnVtYmVyO1xcbiAgIGZhY3Rpb25fcmVwX211bHQ6IG51bWJlcjtcXG4gICBudW1QZW9wbGVLaWxsZWQ6IG51bWJlcjtcXG4gICBtb25leTogbnVtYmVyO1xcbiAgIGNpdHk6IHN0cmluZztcXG4gICBsb2NhdGlvbjogc3RyaW5nO1xcbiAgIGNvbXBhbnlOYW1lOiBzdHJpbmc7XFxuICAgY3JpbWVfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGNyaW1lX3N1Y2Nlc3NfbXVsdDogbnVtYmVyO1xcbiAgIGlzV29ya2luZzogYm9vbGVhbjtcXG4gICB3b3JrVHlwZTogc3RyaW5nO1xcbiAgIGN1cnJlbnRXb3JrRmFjdGlvbk5hbWU6IHN0cmluZztcXG4gICBjdXJyZW50V29ya0ZhY3Rpb25EZXNjcmlwdGlvbjogc3RyaW5nO1xcbiAgIHdvcmtIYWNrRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrU3RyRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrRGVmRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrRGV4RXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrQWdpRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrQ2hhRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrUmVwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrTW9uZXlHYWluUmF0ZTogbnVtYmVyO1xcbiAgIHdvcmtNb25leUxvc3NSYXRlOiBudW1iZXI7XFxuICAgd29ya0hhY2tFeHBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrU3RyRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgd29ya0RlZkV4cEdhaW5lZDogbnVtYmVyO1xcbiAgIHdvcmtEZXhFeHBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrQWdpRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgd29ya0NoYUV4cEdhaW5lZDogbnVtYmVyO1xcbiAgIHdvcmtSZXBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrTW9uZXlHYWluZWQ6IG51bWJlcjtcXG4gICBjcmVhdGVQcm9ncmFtTmFtZTogc3RyaW5nO1xcbiAgIGNyZWF0ZVByb2dyYW1SZXFMdmw6IG51bWJlcjtcXG4gICBjbGFzc05hbWU6IHN0cmluZztcXG4gICBjcmltZVR5cGU6IHN0cmluZztcXG4gICB3b3JrX21vbmV5X211bHQ6IG51bWJlcjtcXG4gICBoYWNrbmV0X25vZGVfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHQ6IG51bWJlcjtcXG4gICBoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9jb3JlX2Nvc3RfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9sZXZlbF9jb3N0X211bHQ6IG51bWJlcjtcXG4gICBoYXNXc2VBY2NvdW50OiBib29sZWFuO1xcbiAgIGhhc1RpeEFwaUFjY2VzczogYm9vbGVhbjtcXG4gICBoYXM0U0RhdGE6IGJvb2xlYW47XFxuICAgaGFzNFNEYXRhVGl4QXBpOiBib29sZWFuO1xcbiAgIGJsYWRlYnVybmVyX21heF9zdGFtaW5hX211bHQ6IG51bWJlcjtcXG4gICBibGFkZWJ1cm5lcl9zdGFtaW5hX2dhaW5fbXVsdDogbnVtYmVyO1xcbiAgIGJsYWRlYnVybmVyX2FuYWx5c2lzX211bHQ6IG51bWJlcjtcXG4gICBibGFkZWJ1cm5lcl9zdWNjZXNzX2NoYW5jZV9tdWx0OiBudW1iZXI7XFxuICAgYml0Tm9kZU46IG51bWJlcjtcXG4gICB0b3RhbFBsYXl0aW1lOiBudW1iZXI7XFxuICAgcGxheXRpbWVTaW5jZUxhc3RBdWc6IG51bWJlcjtcXG4gICBwbGF5dGltZVNpbmNlTGFzdEJpdG5vZGU6IG51bWJlcjtcXG4gICBqb2JzOiBhbnk7XFxuICAgZmFjdGlvbnM6IHN0cmluZ1tdO1xcbiAgIHRvcjogYm9vbGVhbjtcXG4gICBoYXNDb3Jwb3JhdGlvbjogYm9vbGVhbjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBSdW5uaW5nU2NyaXB0IHtcXG4gICBhcmdzOiBzdHJpbmdbXTtcXG4gICBmaWxlbmFtZTogc3RyaW5nO1xcbiAgIGxvZ3M6IHN0cmluZ1tdO1xcbiAgIG9mZmxpbmVFeHBHYWluZWQ6IG51bWJlcjtcXG4gICBvZmZsaW5lTW9uZXlNYWRlOiBudW1iZXI7XFxuICAgb2ZmbGluZVJ1bm5pbmdUaW1lOiBudW1iZXI7XFxuICAgb25saW5lRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgb25saW5lTW9uZXlNYWRlOiBudW1iZXI7XFxuICAgb25saW5lUnVubmluZ1RpbWU6IG51bWJlcjtcXG4gICBwaWQ6IG51bWJlcjtcXG4gICByYW1Vc2FnZTogbnVtYmVyO1xcbiAgIHNlcnZlcjogc3RyaW5nO1xcbiAgIHRocmVhZHM6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIERhdGEgcmVwcmVzZW50aW5nIHRoZSBpbnRlcm5hbCB2YWx1ZXMgb2YgYSBjcmltZS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBDcmltZVN0YXRzIHtcXG4gICAvKiogTnVtYmVyIHJlcHJlc2VudGluZyB0aGUgZGlmZmljdWx0eSBvZiB0aGUgY3JpbWUuIFVzZWQgZm9yIHN1Y2Nlc3MgY2hhbmNlIGNhbGN1bGF0aW9ucyAqL1xcbiAgIGRpZmZpY3VsdHk6IG51bWJlcjtcXG4gICAvKiogQW1vdW50IG9mIGthcm1hIGxvc3QgZm9yIHN1Y2Nlc3NmdWxseSBjb21taXR0aW5nIHRoaXMgY3JpbWUgKi9cXG4gICBrYXJtYTogbnVtYmVyO1xcbiAgIC8qKiBIb3cgbWFueSBwZW9wbGUgZGllIGFzIGEgcmVzdWx0IG9mIHRoaXMgY3JpbWUgKi9cXG4gICBraWxsczogbnVtYmVyO1xcbiAgIC8qKiBIb3cgbXVjaCBtb25leSBpcyBnaXZlbiAqL1xcbiAgIG1vbmV5OiBudW1iZXI7XFxuICAgLyoqIE5hbWUgb2YgY3JpbWUgKi9cXG4gICBuYW1lOiBudW1iZXI7XFxuICAgLyoqIE1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBhdHRlbXB0IHRoZSBjcmltZSAqL1xcbiAgIHRpbWU6IG51bWJlcjtcXG4gICAvKiogRGVzY3JpcHRpb24gb2YgdGhlIGNyaW1lIGFjdGl2aXR5ICovXFxuICAgdHlwZTogc3RyaW5nO1xcbiAgIC8qKiBoYWNraW5nIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBoYWNraW5nX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIHN0cmVuZ3RoIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBzdHJlbmd0aF9zdWNjZXNzX3dlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBkZWZlbnNlIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBkZWZlbnNlX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGRleHRlcml0eSBsZXZlbCBpbXBhY3Qgb24gc3VjY2VzcyBjaGFuZ2Ugb2YgdGhlIGNyaW1lICovXFxuICAgZGV4dGVyaXR5X3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGFnaWxpdHkgbGV2ZWwgaW1wYWN0IG9uIHN1Y2Nlc3MgY2hhbmdlIG9mIHRoZSBjcmltZSAqL1xcbiAgIGFnaWxpdHlfc3VjY2Vzc193ZWlnaHQ6IG51bWJlcjtcXG4gICAvKiogY2hhcmlzbWEgbGV2ZWwgaW1wYWN0IG9uIHN1Y2Nlc3MgY2hhbmdlIG9mIHRoZSBjcmltZSAqL1xcbiAgIGNoYXJpc21hX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGhhY2tpbmcgZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgaGFja2luZ19leHA6IG51bWJlcjtcXG4gICAvKiogc3RyZW5ndGggZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgc3RyZW5ndGhfZXhwOiBudW1iZXI7XFxuICAgLyoqIGRlZmVuc2UgZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgZGVmZW5zZV9leHA6IG51bWJlcjtcXG4gICAvKiogZGV4dGVyaXR5IGV4cCBnYWluZWQgZnJvbSBjcmltZSAqL1xcbiAgIGRleHRlcml0eV9leHA6IG51bWJlcjtcXG4gICAvKiogYWdpbGl0eSBleHAgZ2FpbmVkIGZyb20gY3JpbWUgKi9cXG4gICBhZ2lsaXR5X2V4cDogbnVtYmVyO1xcbiAgIC8qKiBjaGFyaXNtYSBleHAgZ2FpbmVkIGZyb20gY3JpbWUgKi9cXG4gICBjaGFyaXNtYV9leHA6IG51bWJlcjtcXG4gICAvKiogaW50ZWxsaWdlbmNlIGV4cCBnYWluZWQgZnJvbSBjcmltZSAqL1xcbiAgIGludGVsbGlnZW5jZV9leHA6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIERhdGEgcmVwcmVzZW50aW5nIHRoZSBpbnRlcm5hbCB2YWx1ZXMgb2YgYW4gQXVnbWVudGF0aW9uLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEF1Z21lbnRhdGlvblN0YXRzIHtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGhhY2tpbmcgc2tpbGwgKi9cXG4gICBoYWNraW5nX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBzdHJlbmd0aCBza2lsbCAqL1xcbiAgIHN0cmVuZ3RoX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBkZWZlbnNlIHNraWxsICovXFxuICAgZGVmZW5zZV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gZGV4dGVyaXR5IHNraWxsICovXFxuICAgZGV4dGVyaXR5X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhZ2lsaXR5IHNraWxsICovXFxuICAgYWdpbGl0eV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gY2hhcmlzbWEgc2tpbGwgKi9cXG4gICBjaGFyaXNtYV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gaGFja2luZyBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIGhhY2tpbmdfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBzdHJlbmd0aCBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIHN0cmVuZ3RoX2V4cF9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gZGVmZW5zZSBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIGRlZmVuc2VfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBkZXh0ZXJpdHkgZXhwZXJpZW5jZSBnYWluIHJhdGUgKi9cXG4gICBkZXh0ZXJpdHlfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhZ2lsaXR5IGV4cGVyaWVuY2UgZ2FpbiByYXRlICovXFxuICAgYWdpbGl0eV9leHBfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNoYXJpc21hIGV4cGVyaWVuY2UgZ2FpbiByYXRlICovXFxuICAgY2hhcmlzbWFfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjaGFuY2Ugb2Ygc3VjY2Vzc2Z1bGx5IHBlcmZvcm1pbmcgYSBoYWNrICovXFxuICAgaGFja2luZ19jaGFuY2VfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGhhY2tpbmcgc3BlZWQgKi9cXG4gICBoYWNraW5nX3NwZWVkX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgdGhlIHBsYXllciBnYWlucyBmcm9tIGhhY2tpbmcgKi9cXG4gICBoYWNraW5nX21vbmV5X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgaW5qZWN0ZWQgaW50byBzZXJ2ZXJzIHVzaW5nIGdyb3cgKi9cXG4gICBoYWNraW5nX2dyb3dfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGFtb3VudCBvZiByZXB1dGF0aW9uIGdhaW5lZCB3aGVuIHdvcmtpbmcgKi9cXG4gICBjb21wYW55X3JlcF9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gYW1vdW50IG9mIHJlcHV0YXRpb24gZ2FpbmVkIHdoZW4gd29ya2luZyAqL1xcbiAgIGZhY3Rpb25fcmVwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgZ2FpbmVkIGZyb20gY3JpbWVzICovXFxuICAgY3JpbWVfbW9uZXlfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNyaW1lIHN1Y2Nlc3MgcmF0ZSAqL1xcbiAgIGNyaW1lX3N1Y2Nlc3NfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGFtb3VudCBvZiBtb25leSBnYWluZWQgZnJvbSB3b3JraW5nICovXFxuICAgd29ya19tb25leV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gYW1vdW50IG9mIG1vbmV5IHByb2R1Y2VkIGJ5IEhhY2tuZXQgTm9kZXMgKi9cXG4gICBoYWNrbmV0X25vZGVfbW9uZXlfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNvc3Qgb2YgcHVyY2hhc2luZyBhIEhhY2tuZXQgTm9kZSAqL1xcbiAgIGhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjb3N0IG9mIHJhbSBmb3IgYSBIYWNrbmV0IE5vZGUgKi9cXG4gICBoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNvc3Qgb2YgY29yZSBmb3IgYSBIYWNrbmV0IE5vZGUgKi9cXG4gICBoYWNrbmV0X25vZGVfY29yZV9jb3N0X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjb3N0IG9mIGxldmVsaW5nIHVwIGEgSGFja25ldCBOb2RlICovXFxuICAgaGFja25ldF9ub2RlX2xldmVsX2Nvc3RfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIEJsYWRlYnVybmVyIG1heCBzdGFtaW5hICovXFxuICAgYmxhZGVidXJuZXJfbWF4X3N0YW1pbmFfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIEJsYWRlYnVybmVyIHN0YW1pbmEgZ2FpbiByYXRlICovXFxuICAgYmxhZGVidXJuZXJfc3RhbWluYV9nYWluX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBlZmZlY3RpdmVuZXNzIGluIEJsYWRlYnVybmVyIEZpZWxkIEFuYWx5c2lzICovXFxuICAgYmxhZGVidXJuZXJfYW5hbHlzaXNfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIHN1Y2Nlc3MgY2hhbmNlIGluIEJsYWRlYnVybmVyIGNvbnRyYWN0cy9vcGVyYXRpb25zICovXFxuICAgYmxhZGVidXJuZXJfc3VjY2Vzc19jaGFuY2VfbXVsdD86IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9wdGlvbnMgdG8gYWZmZWN0IHRoZSBiZWhhdmlvciBvZiB7QGxpbmsgTlMuaGFjayB8IGhhY2t9LCB7QGxpbmsgTlMuZ3JvdyB8IGdyb3d9LCBhbmQge0BsaW5rIE5TLndlYWtlbiB8IHdlYWtlbn0uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQmFzaWNIR1dPcHRpb25zIHtcXG4gICAvKiogTnVtYmVyIG9mIHRocmVhZHMgdG8gdXNlIGZvciB0aGlzIGZ1bmN0aW9uLiBNdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgbnVtYmVyIG9mIHRocmVhZHMgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguICovXFxuICAgdGhyZWFkcz86IG51bWJlcjtcXG4gICAvKiogU2V0IHRvIHRydWUgdGhpcyBhY3Rpb24gd2lsbCBhZmZlY3QgdGhlIHN0b2NrIG1hcmtldC4gKi9cXG4gICBzdG9jaz86IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPcHRpb25zIHRvIGFmZmVjdCB0aGUgYmVoYXZpb3Igb2Yge0BsaW5rIENvZGluZ0NvbnRyYWN0fSBhdHRlbXB0LlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENvZGluZ0F0dGVtcHRPcHRpb25zIHtcXG4gICAvKiogSWYgdHJ1dGh5LCB0aGVuIHRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiBhIHN0cmluZyB0aGF0IHN0YXRlcyB0aGUgY29udHJhY3TigJlzIHJld2FyZCB3aGVuIGl0IGlzIHN1Y2Nlc3NmdWxseSBzb2x2ZWQuICovXFxuICAgcmV0dXJuUmV3YXJkOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogUmV0dXJuIHZhbHVlIG9mIHtAbGluayBTbGVldmUuZ2V0U2xlZXZlUHVyY2hhc2FibGVBdWdzIHwgZ2V0U2xlZXZlUHVyY2hhc2FibGVBdWdzfVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEF1Z21lbnRQYWlyIHtcXG4gICAvKiogYXVnbWVudGF0aW9uIG5hbWUgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIGF1Z21lbnRhdGlvbiBjb3N0ICovXFxuICAgY29zdDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGVudW0gUG9zaXRpb25UeXBlcyB7XFxuICAgTG9uZyA9IFxcXCJMXFxcIixcXG4gICBTaG9ydCA9IFxcXCJTXFxcIixcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBlbnVtIE9yZGVyVHlwZXMge1xcbiAgIExpbWl0QnV5ID0gXFxcIkxpbWl0IEJ1eSBPcmRlclxcXCIsXFxuICAgTGltaXRTZWxsID0gXFxcIkxpbWl0IFNlbGwgT3JkZXJcXFwiLFxcbiAgIFN0b3BCdXkgPSBcXFwiU3RvcCBCdXkgT3JkZXJcXFwiLFxcbiAgIFN0b3BTZWxsID0gXFxcIlN0b3AgU2VsbCBPcmRlclxcXCIsXFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBWYWx1ZSBpbiBtYXAgb2Yge0BsaW5rIFN0b2NrT3JkZXJ9XFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgU3RvY2tPcmRlck9iamVjdCB7XFxuICAgLyoqIE51bWJlciBvZiBzaGFyZXMgKi9cXG4gICBzaGFyZXM6IG51bWJlcjtcXG4gICAvKiogUHJpY2UgcGVyIHNoYXJlICovXFxuICAgcHJpY2U6IG51bWJlcjtcXG4gICAvKiogT3JkZXIgdHlwZSAqL1xcbiAgIHR5cGU6IE9yZGVyVHlwZXM7XFxuICAgLyoqIE9yZGVyIHBvc2l0aW9uICovXFxuICAgcG9zaXRpb246IFBvc2l0aW9uVHlwZXM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBSZXR1cm4gdmFsdWUgb2Yge0BsaW5rIFRJWC5nZXRPcmRlcnMgfCBnZXRPcmRlcnN9XFxuICAqXFxuICAqIEtleXMgYXJlIHN0b2NrIHN5bWJvbHMsIHByb3BlcnRpZXMgYXJlIGFycmF5cyBvZiB7QGxpbmsgU3RvY2tPcmRlck9iamVjdH1cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTdG9ja09yZGVyIHtcXG4gICBba2V5OiBzdHJpbmddOiBTdG9ja09yZGVyT2JqZWN0W107XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBBIHNpbmdsZSBwcm9jZXNzIG9uIGEgc2VydmVyLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFByb2Nlc3NJbmZvIHtcXG4gICAvKiogU2NyaXB0IG5hbWUuICovXFxuICAgZmlsZW5hbWU6IHN0cmluZztcXG4gICAvKiogTnVtYmVyIG9mIHRocmVhZHMgc2NyaXB0IGlzIHJ1bm5pbmcgd2l0aCAqL1xcbiAgIHRocmVhZHM6IG51bWJlcjtcXG4gICAvKiogU2NyaXB0J3MgYXJndW1lbnRzICovXFxuICAgYXJnczogc3RyaW5nW107XFxuICAgLyoqIFByb2Nlc3MgSUQgKi9cXG4gICBwaWQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEhhY2sgcmVsYXRlZCBtdWx0aXBsaWVycy5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBIYWNraW5nTXVsdGlwbGllcnMge1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIGNoYW5jZSBtdWx0aXBsaWVyLiAqL1xcbiAgIGNoYW5jZTogbnVtYmVyO1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIHNwZWVkIG11bHRpcGxpZXIuICovXFxuICAgc3BlZWQ6IG51bWJlcjtcXG4gICAvKiogUGxheWVyJ3MgaGFja2luZyBtb25leSBzdG9sZW4gbXVsdGlwbGllci4gKi9cXG4gICBtb25leTogbnVtYmVyO1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIGdyb3d0aCBtdWx0aXBsaWVyICovXFxuICAgZ3Jvd3RoOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgSGFja25ldE11bHRpcGxpZXJzIHtcXG4gICAvKiogUGxheWVyJ3MgaGFja25ldCBwcm9kdWN0aW9uIG11bHRpcGxpZXIgKi9cXG4gICBwcm9kdWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgcHVyY2hhc2UgY29zdCBtdWx0aXBsaWVyICovXFxuICAgcHVyY2hhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgcmFtIGNvc3QgbXVsdGlwbGllciAqL1xcbiAgIHJhbUNvc3Q6IG51bWJlcjtcXG4gICAvKiogUGxheWVyJ3MgaGFja25ldCBjb3JlIGNvc3QgbXVsdGlwbGllciAqL1xcbiAgIGNvcmVDb3N0OiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgbGV2ZWwgY29zdCBtdWx0aXBsaWVyICovXFxuICAgbGV2ZWxDb3N0OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IG5vZGUgcmVsYXRlZCBjb25zdGFudHNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBIYWNrbmV0Tm9kZUNvbnN0YW50cyB7XFxuICAgLyoqIEFtb3VudCBvZiBtb25leSBnYWluZWQgcGVyIGxldmVsICovXFxuICAgTW9uZXlHYWluUGVyTGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IGZvciBhIG5ldyBub2RlICovXFxuICAgQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHBlciBsZXZlbCAqL1xcbiAgIExldmVsQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3Jhc2UgUkFNICovXFxuICAgUmFtQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgQ29yZUJhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gcHVyY2hhc2UgbmV3IG5vZGUgKi9cXG4gICBQdXJjaGFzZU5leHRNdWx0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gaW5jcmVhc2Ugbm9kZSBsZXZlbCAqL1xcbiAgIFVwZ3JhZGVMZXZlbE11bHQ6IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGllciB0byBpbmNyZWFzZSBSQU0gKi9cXG4gICBVcGdyYWRlUmFtTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgVXBncmFkZUNvcmVNdWx0OiBudW1iZXI7XFxuICAgLyoqIE1heCBub2RlIGxldmVsICovXFxuICAgTWF4TGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTWF4IGFtb3VudCBvZiBSQU0gaW4gR0IgKi9cXG4gICBNYXhSYW06IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBjb3JlcyAqL1xcbiAgIE1heENvcmVzOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IHNlcnZlciByZWxhdGVkIGNvbnN0YW50c1xcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEhhY2tuZXRTZXJ2ZXJDb25zdGFudHMge1xcbiAgIC8qKiBOdW1iZXIgb2YgaGFzaGVzIGNhbGN1bGF0ZWQgcGVyIGxldmVsICovXFxuICAgSGFzaGVzUGVyTGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IGZvciBhIG5ldyBzZXJ2ZXIgKi9cXG4gICBCYXNlQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBCYXNlIGNvc3QgdG8gaW5jcmVhc2UgUkFNICovXFxuICAgUmFtQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgQ29yZUJhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIEJhc2UgY29zdCB0byB1cGdyYWRlIGNhY2hlICovXFxuICAgQ2FjaGVCYXNlQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIHB1cmNoYXNlIGEgbmV3IHNlcnZlciAqL1xcbiAgIFB1cmNoYXNlTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIHNlcnZlciBsZXZlbCAqL1xcbiAgIFVwZ3JhZGVMZXZlbE11bHQ6IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGllciB0byBpbmNyZWFzZSBSQU0gKi9cXG4gICBVcGdyYWRlUmFtTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgVXBncmFkZUNvcmVNdWx0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gdXBncmFkZSBjYWNoZSAqL1xcbiAgIFVwZ3JhZGVDYWNoZU11bHQ6IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBzZXJ2ZXJzICovXFxuICAgTWF4U2VydmVyczogbnVtYmVyO1xcbiAgIC8qKiBNYXggbGV2ZWwgZm9yIGEgc2VydmVyICovXFxuICAgTWF4TGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTWF4IGFtb3VudCBvZiBSQU0gaW4gR0IgKi9cXG4gICBNYXhSYW06IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBjb3JlcyAqL1xcbiAgIE1heENvcmVzOiBudW1iZXI7XFxuICAgLyoqIE1heCBjYWNoZSBzaXplICovXFxuICAgTWF4Q2FjaGU6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEEgc2luZ2xlIHNlcnZlci5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTZXJ2ZXIge1xcbiAgIC8qKlxcbiAgICAqIEhvdyBtYW55IENQVSBjb3JlcyB0aGlzIHNlcnZlciBoYXMuIE1heGltdW0gb2YgOC5cXG4gICAgKiBBZmZlY3RzIG1hZ25pdHVkZSBvZiBncm93IGFuZCB3ZWFrZW4uXFxuICAgICovXFxuICAgY3B1Q29yZXM6IG51bWJlcjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBGVFAgcG9ydCBpcyBvcGVuICovXFxuICAgZnRwUG9ydE9wZW46IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciBwbGF5ZXIgaGFzIGFkbWluL3Jvb3QgYWNjZXNzIHRvIHRoaXMgc2VydmVyICovXFxuICAgaGFzQWRtaW5SaWdodHM6IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBIb3N0bmFtZS4gTXVzdCBiZSB1bmlxdWUgKi9cXG4gICBob3N0bmFtZTogc3RyaW5nO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgSFRUUCBQb3J0IGlzIG9wZW4gKi9cXG4gICBodHRwUG9ydE9wZW46IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBJUCBBZGRyZXNzLiBNdXN0IGJlIHVuaXF1ZSAqL1xcbiAgIGlwOiBzdHJpbmc7XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciBwbGF5ZXIgaXMgY3VyZW50bHkgY29ubmVjdGVkIHRvIHRoaXMgc2VydmVyICovXFxuICAgaXNDb25uZWN0ZWRUbzogYm9vbGVhbjtcXG4gXFxuICAgLyoqIFJBTSAoR0IpIGF2YWlsYWJsZSBvbiB0aGlzIHNlcnZlciAqL1xcbiAgIG1heFJhbTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBOYW1lIG9mIGNvbXBhbnkvZmFjdGlvbi9ldGMuIHRoYXQgdGhpcyBzZXJ2ZXIgYmVsb25ncyB0by5cXG4gICAgKiBPcHRpb25hbCwgbm90IGFwcGxpY2FibGUgdG8gYWxsIFNlcnZlcnNcXG4gICAgKi9cXG4gICBvcmdhbml6YXRpb25OYW1lOiBzdHJpbmc7XFxuIFxcbiAgIC8qKiBSQU0gKEdCKSB1c2VkLiBpLmUuIHVuYXZhaWxhYmxlIFJBTSAqL1xcbiAgIHJhbVVzZWQ6IG51bWJlcjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIFNNVFAgUG9ydCBpcyBvcGVuICovXFxuICAgc210cFBvcnRPcGVuOiBib29sZWFuO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgU1FMIFBvcnQgaXMgb3BlbiAqL1xcbiAgIHNxbFBvcnRPcGVuOiBib29sZWFuO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIFNTSCBQb3J0IGlzIG9wZW4gKi9cXG4gICBzc2hQb3J0T3BlbjogYm9vbGVhbjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIHRoaXMgaXMgYSBwdXJjaGFzZWQgc2VydmVyICovXFxuICAgcHVyY2hhc2VkQnlQbGF5ZXI6IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciB0aGlzIHNlcnZlciBoYXMgYSBiYWNrZG9vciBpbnN0YWxsZWQgYnkgYSBwbGF5ZXIgKi9cXG4gICBiYWNrZG9vckluc3RhbGxlZDogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogSW5pdGlhbCBzZXJ2ZXIgc2VjdXJpdHkgbGV2ZWxcXG4gICAgKiAoaS5lLiBzZWN1cml0eSBsZXZlbCB3aGVuIHRoZSBzZXJ2ZXIgd2FzIGNyZWF0ZWQpXFxuICAgICovXFxuICAgYmFzZURpZmZpY3VsdHk6IG51bWJlcjtcXG4gXFxuICAgLyoqIFNlcnZlciBTZWN1cml0eSBMZXZlbCAqL1xcbiAgIGhhY2tEaWZmaWN1bHR5OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBNaW5pbXVtIHNlcnZlciBzZWN1cml0eSBsZXZlbCB0aGF0IHRoaXMgc2VydmVyIGNhbiBiZSB3ZWFrZW5lZCB0byAqL1xcbiAgIG1pbkRpZmZpY3VsdHk6IG51bWJlcjtcXG4gXFxuICAgLyoqIEhvdyBtdWNoIG1vbmV5IGN1cnJlbnRseSByZXNpZGVzIG9uIHRoZSBzZXJ2ZXIgYW5kIGNhbiBiZSBoYWNrZWQgKi9cXG4gICBtb25leUF2YWlsYWJsZTogbnVtYmVyO1xcbiBcXG4gICAvKiogTWF4aW11bSBhbW91bnQgb2YgbW9uZXkgdGhhdCB0aGlzIHNlcnZlciBjYW4gaG9sZCAqL1xcbiAgIG1vbmV5TWF4OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBOdW1iZXIgb2Ygb3BlbiBwb3J0cyByZXF1aXJlZCBpbiBvcmRlciB0byBnYWluIGFkbWluL3Jvb3QgYWNjZXNzICovXFxuICAgbnVtT3BlblBvcnRzUmVxdWlyZWQ6IG51bWJlcjtcXG4gXFxuICAgLyoqIEhvdyBtYW55IHBvcnRzIGFyZSBjdXJyZW50bHkgb3BlbmVkIG9uIHRoZSBzZXJ2ZXIgKi9cXG4gICBvcGVuUG9ydENvdW50OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBIYWNraW5nIGxldmVsIHJlcXVpcmVkIHRvIGhhY2sgdGhpcyBzZXJ2ZXIgKi9cXG4gICByZXF1aXJlZEhhY2tpbmdTa2lsbDogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBQYXJhbWV0ZXIgdGhhdCBhZmZlY3RzIGhvdyBlZmZlY3RpdmVseSB0aGlzIHNlcnZlcidzIG1vbmV5IGNhblxcbiAgICAqIGJlIGluY3JlYXNlZCB1c2luZyB0aGUgZ3JvdygpIE5ldHNjcmlwdCBmdW5jdGlvblxcbiAgICAqL1xcbiAgIHNlcnZlckdyb3d0aDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQWxsIG11bHRpcGxpZXJzIGFmZmVjdGluZyB0aGUgZGlmZmljdWx0eSBvZiB0aGUgY3VycmVudCBjaGFsbGVuZ2UuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQml0Tm9kZU11bHRpcGxpZXJzIHtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3MgYWdpbGl0eSBsZXZlbCAobm90IGV4cCkgc2NhbGVzICovXFxuICAgQWdpbGl0eUxldmVsTXVsdGlwbGllcjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBiYXNlIGNvc3QgdG8gcHVyY2hhc2UgYW4gYXVnbWVudGF0aW9uLiAqL1xcbiAgIEF1Z21lbnRhdGlvbk1vbmV5Q29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBiYXNlIHJlcCB0aGUgcGxheWVyIG11c3QgaGF2ZSB3aXRoIGEgZmFjdGlvbiB0byBwdXJjaGFzZSBhbiBhdWdtZW50YXRpb24uICovXFxuICAgQXVnbWVudGF0aW9uUmVwQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIgY2FuIGdhaW4gcmFuayB3aXRoaW4gQmxhZGVidXJuZXIuICovXFxuICAgQmxhZGVidXJuZXJSYW5rOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGNvc3Qgb2Ygc2tpbGwgbGV2ZWxzIGZyb20gQmxhZGVidXJuZXIuICovXFxuICAgQmxhZGVidXJuZXJTa2lsbENvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3MgY2hhcmlzbWEgbGV2ZWwgKG5vdCBleHApIHNjYWxlcyAqL1xcbiAgIENoYXJpc21hTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGV4cGVyaWVuY2UgZ2FpbmVkIGZvciBlYWNoIGFiaWxpdHkgd2hlbiBhIHBsYXllciBjb21wbGV0ZXMgYSBjbGFzcy4gKi9cXG4gICBDbGFzc0d5bUV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgYW1vdW50IG9mIG1vbmV5IGdhaW5lZCBmcm9tIGNvbXBsZXRpbmcgQ29kaW5nIENvbnRyYWN0cyAqL1xcbiAgIENvZGluZ0NvbnRyYWN0TW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZSBnYWluZWQgZm9yIGVhY2ggYWJpbGl0eSB3aGVuIHRoZSBwbGF5ZXIgY29tcGxldGVzIHdvcmtpbmcgdGhlaXIgam9iLiAqL1xcbiAgIENvbXBhbnlXb3JrRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IHRoZSBwbGF5ZXIgZWFybnMgd2hlbiBjb21wbGV0aW5nIHdvcmtpbmcgdGhlaXIgam9iLiAqL1xcbiAgIENvbXBhbnlXb3JrTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgdmFsdWF0aW9uIG9mIGNvcnBvcmF0aW9ucyBjcmVhdGVkIGJ5IHRoZSBwbGF5ZXIuICovXFxuICAgQ29ycG9yYXRpb25WYWx1YXRpb246IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgYmFzZSBleHBlcmllbmNlIGdhaW5lZCBmb3IgZWFjaCBhYmlsaXR5IHdoZW4gdGhlIHBsYXllciBjb21taXRzIGEgY3JpbWUuICovXFxuICAgQ3JpbWVFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGJhc2UgbW9uZXkgZ2FpbmVkIHdoZW4gdGhlIHBsYXllciBjb21taXRzIGEgY3JpbWUuICovXFxuICAgQ3JpbWVNb25leTogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtYW55IEF1Z21lbnRhdGlvbnMgeW91IG5lZWQgaW4gb3JkZXIgdG8gZ2V0IGludml0ZWQgdG8gdGhlIERhZWRhbHVzIGZhY3Rpb24gKi9cXG4gICBEYWVkYWx1c0F1Z3NSZXF1aXJlbWVudDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIncyBkZWZlbnNlIGxldmVsIChub3QgZXhwKSBzY2FsZXMgKi9cXG4gICBEZWZlbnNlTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IHF1aWNrbHkgdGhlIHBsYXllcidzIGRleHRlcml0eSBsZXZlbCAobm90IGV4cCkgc2NhbGVzICovXFxuICAgRGV4dGVyaXR5TGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggcmVwIHRoZSBwbGF5ZXIgZ2FpbnMgaW4gZWFjaCBmYWN0aW9uIHNpbXBseSBieSBiZWluZyBhIG1lbWJlci4gKi9cXG4gICBGYWN0aW9uUGFzc2l2ZVJlcEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZSBnYWluZWQgZm9yIGVhY2ggYWJpbGl0eSB3aGVuIHRoZSBwbGF5ZXIgY29tcGxldGVzIHdvcmsgZm9yIGEgRmFjdGlvbi4gKi9cXG4gICBGYWN0aW9uV29ya0V4cEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgbXVjaCByZXAgdGhlIHBsYXllciBnYWlucyB3aGVuIHBlcmZvcm1pbmcgd29yayBmb3IgYSBmYWN0aW9uLiAqL1xcbiAgIEZhY3Rpb25Xb3JrUmVwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIGl0IGNvc3RzIHRvIHVubG9jayB0aGUgc3RvY2sgbWFya2V0J3MgNFMgTWFya2V0IERhdGEgQVBJICovXFxuICAgRm91clNpZ21hTWFya2V0RGF0YUFwaUNvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgbXVjaCBpdCBjb3N0cyB0byB1bmxvY2sgdGhlIHN0b2NrIG1hcmtldCdzIDRTIE1hcmtldCBEYXRhIChOT1QgQVBJKSAqL1xcbiAgIEZvdXJTaWdtYU1hcmtldERhdGFDb3N0OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIHJlc3BlY3QgZ2FpbiBhbmQgbW9uZXkgZ2FpbiBvZiB5b3VyIGdhbmcuICovXFxuICAgR2FuZ1NvZnRjYXA6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZWQgZ2FpbmVkIHdoZW4gaGFja2luZyBhIHNlcnZlci4gKi9cXG4gICBIYWNrRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIncyBoYWNraW5nIGxldmVsIChub3QgZXhwZXJpZW5jZSkgc2NhbGVzICovXFxuICAgSGFja2luZ0xldmVsTXVsdGlwbGllcjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGlzIHByb2R1Y2VkIGJ5IEhhY2tuZXQgTm9kZXMgYW5kIHRoZSBoYXNoIHJhdGUgb2YgSGFja25ldCBTZXJ2ZXJzICh1bmxvY2tlZCBpbiBCaXROb2RlLTkpICovXFxuICAgSGFja25ldE5vZGVNb25leTogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGl0IGNvc3RzIHRvIHVwZ3JhZGUgeW91ciBob21lIGNvbXB1dGVyJ3MgUkFNICovXFxuICAgSG9tZUNvbXB1dGVyUmFtQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGlzIGdhaW5lZCB3aGVuIHRoZSBwbGF5ZXIgaW5maWx0cmF0ZXMgYSBjb21wYW55LiAqL1xcbiAgIEluZmlsdHJhdGlvbk1vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggcmVwIHRoZSBwbGF5ZXIgY2FuIGdhaW4gZnJvbSBmYWN0aW9ucyB3aGVuIHNlbGxpbmcgc3RvbGVuIGRvY3VtZW50cyBhbmQgc2VjcmV0cyAqL1xcbiAgIEluZmlsdHJhdGlvblJlcDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGNhbiBiZSBzdG9sZW4gZnJvbSBhIHNlcnZlciB3aGVuIHRoZSBwbGF5ZXIgcGVyZm9ybXMgYSBoYWNrIGFnYWluc3QgaXQgdGhyb3VnaCB0aGUgVGVybWluYWwuICovXFxuICAgTWFudWFsSGFja01vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZSBob3cgbXVjaCBpdCBjb3N0cyB0byBwdXJjaGFzZSBhIHNlcnZlciAqL1xcbiAgIFB1cmNoYXNlZFNlcnZlckNvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgcHVyY2hhc2VkIHNlcnZlcnMgeW91IGNhbiBoYXZlICovXFxuICAgUHVyY2hhc2VkU2VydmVyTGltaXQ6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWF4aW11bSBhbGxvd2VkIFJBTSBmb3IgYSBwdXJjaGFzZWQgc2VydmVyICovXFxuICAgUHVyY2hhc2VkU2VydmVyTWF4UmFtOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgY29zdCBvZiBhbnkgcHVyY2hhc2VkIHNlcnZlciBhdCBvciBhYm92ZSAxMjhHQiAqL1xcbiAgIFB1cmNoYXNlZFNlcnZlclNvZnRDYXA6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWluaW11bSBmYXZvciB0aGUgcGxheWVyIG11c3QgaGF2ZSB3aXRoIGEgZmFjdGlvbiBiZWZvcmUgdGhleSBjYW4gZG9uYXRlIHRvIGdhaW4gcmVwLiAqL1xcbiAgIFJlcFRvRG9uYXRlVG9GYWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggdGhlIG1vbmV5IG9uIGEgc2VydmVyIGNhbiBiZSByZWR1Y2VkIHdoZW4gYSBzY3JpcHQgcGVyZm9ybXMgYSBoYWNrIGFnYWluc3QgaXQuICovXFxuICAgU2NyaXB0SGFja01vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggb2YgdGhlIG1vbmV5IHN0b2xlbiBieSBhIHNjcmlwdGVkIGhhY2sgd2lsbCBiZSBhZGRlZCB0byB0aGUgcGxheWVyJ3MgbW9uZXkuICovXFxuICAgU2NyaXB0SGFja01vbmV5R2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBncm93dGggcGVyY2VudGFnZSBwZXIgY3ljbGUgYWdhaW5zdCBhIHNlcnZlci4gKi9cXG4gICBTZXJ2ZXJHcm93dGhSYXRlOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIG1heG1pbXVtIG1vbmV5IHRoYXQgYSBzZXJ2ZXIgY2FuIGdyb3cgdG8uICovXFxuICAgU2VydmVyTWF4TW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgaW5pdGlhbCBtb25leSB0aGF0IGEgc2VydmVyIHN0YXJ0cyB3aXRoLiAqL1xcbiAgIFNlcnZlclN0YXJ0aW5nTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgaW5pdGlhbCBzZWN1cml0eSBsZXZlbCAoaGFja0RpZmZpY3VsdHkpIG9mIGEgc2VydmVyLiAqL1xcbiAgIFNlcnZlclN0YXJ0aW5nU2VjdXJpdHk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgd2Vha2VuIGFtb3VudCBwZXIgaW52b2NhdGlvbiBhZ2FpbnN0IGEgc2VydmVyLiAqL1xcbiAgIFNlcnZlcldlYWtlblJhdGU6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3Mgc3RyZW5ndGggbGV2ZWwgKG5vdCBleHApIHNjYWxlcyAqL1xcbiAgIFN0cmVuZ3RoTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIHBvd2VyIG9mIHRoZSBnaWZ0ICovXFxuICAgU3RhbmVrc0dpZnRQb3dlck11bHRpcGxpZXI6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgc2l6ZSBvZiB0aGUgZ2lmdCAqL1xcbiAgIFN0YW5la3NHaWZ0RXh0cmFTaXplOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGhhY2tpbmcgc2tpbGwgcmVxdWlyZWQgdG8gYmFja2Rvb3IgdGhlIHdvcmxkIGRhZW1vbi4gKi9cXG4gICBXb3JsZERhZW1vbkRpZmZpY3VsdHk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgYWxsIHRoZSB2YWx1ZXMgcmVsYXRlZCB0byBhIGhhY2tuZXQgbm9kZS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBOb2RlU3RhdHMge1xcbiAgIC8qKiBOb2RlJ3MgbmFtZSAqL1xcbiAgIG5hbWU6IHN0cmluZztcXG4gICAvKiogTm9kZSdzIGxldmVsICovXFxuICAgbGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTm9kZSdzIFJBTSAoR0IpICovXFxuICAgcmFtOiBudW1iZXI7XFxuICAgLyoqIE5vZGUncyB1c2VkIFJBTSAoR0IpICovXFxuICAgcmFtVXNlZDogbnVtYmVyO1xcbiAgIC8qKiBOb2RlJ3MgbnVtYmVyIG9mIGNvcmVzICovXFxuICAgY29yZXM6IG51bWJlcjtcXG4gICAvKiogQ2FjaGUgbGV2ZWwuIE9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICovXFxuICAgY2FjaGU6IG51bWJlcjtcXG4gICAvKiogSGFzaCBDYXBhY2l0eSBwcm92aWRlZCBieSB0aGlzIE5vZGUuIE9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICovXFxuICAgaGFzaENhcGFjaXR5OiBudW1iZXI7XFxuICAgLyoqIE5vZGUncyBwcm9kdWN0aW9uIHBlciBzZWNvbmQgKi9cXG4gICBwcm9kdWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIE51bWJlciBvZiBzZWNvbmRzIHNpbmNlIE5vZGUgaGFzIGJlZW4gcHVyY2hhc2VkICovXFxuICAgdGltZU9ubGluZTogbnVtYmVyO1xcbiAgIC8qKiBUb3RhbCBudW1iZXIgb2YgbW9uZXkgTm9kZSBoYXMgcHJvZHVjZWQgKi9cXG4gICB0b3RhbFByb2R1Y3Rpb246IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFNob3J0IHN1bW1hcnkgb2YgdGhlIHBsYXllcnMgc2tpbGxzLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFBsYXllclNraWxscyB7XFxuICAgLyoqIEhhY2tpbmcgbGV2ZWwgKi9cXG4gICBoYWNraW5nOiBudW1iZXI7XFxuICAgLyoqIFN0cmVuZ3RoIGxldmVsICovXFxuICAgc3RyZW5ndGg6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBsZXZlbCAqL1xcbiAgIGRlZmVuc2U6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IGxldmVsICovXFxuICAgZGV4dGVyaXR5OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgbGV2ZWwgKi9cXG4gICBhZ2lsaXR5OiBudW1iZXI7XFxuICAgLyoqIENocmFpc21hIGxldmVsICovXFxuICAgY2hhcmlzbWE6IG51bWJlcjtcXG4gICAvKiogSW50ZWxsaWdlbmNlIGxldmVsICovXFxuICAgaW50ZWxsaWdlbmNlOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENoYXJhY3Rlck11bHQge1xcbiAgIC8qKiBBZ2lsaXR5IHN0YXQgKi9cXG4gICBhZ2lsaXR5OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgZXhwICovXFxuICAgYWdpbGl0eUV4cDogbnVtYmVyO1xcbiAgIC8qKiBDb21wYW55IHJlcHV0YXRpb24gKi9cXG4gICBjb21wYW55UmVwOiBudW1iZXI7XFxuICAgLyoqIE1vbmV5IGVhcm5lZCBmcm9tIGNyaW1lcyAqL1xcbiAgIGNyaW1lTW9uZXk6IG51bWJlcjtcXG4gICAvKiogQ3JpbWUgc3VjY2VzcyBjaGFuY2UgKi9cXG4gICBjcmltZVN1Y2Nlc3M6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBzdGF0ICovXFxuICAgZGVmZW5zZTogbnVtYmVyO1xcbiAgIC8qKiBEZWZlbnNlIGV4cCAqL1xcbiAgIGRlZmVuc2VFeHA6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IHN0YXQgKi9cXG4gICBkZXh0ZXJpdHk6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IGV4cCAqL1xcbiAgIGRleHRlcml0eUV4cDogbnVtYmVyO1xcbiAgIC8qKiBGYWN0aW9uIHJlcHV0YXRpb24gKi9cXG4gICBmYWN0aW9uUmVwOiBudW1iZXI7XFxuICAgLyoqIEhhY2tpbmcgc3RhdCAqL1xcbiAgIGhhY2tpbmc6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBleHAgKi9cXG4gICBoYWNraW5nRXhwOiBudW1iZXI7XFxuICAgLyoqIFN0cmVuZ3RoIHN0YXQgKi9cXG4gICBzdHJlbmd0aDogbnVtYmVyO1xcbiAgIC8qKiBTdHJlbmd0aCBleHAgKi9cXG4gICBzdHJlbmd0aEV4cDogbnVtYmVyO1xcbiAgIC8qKiBNb25leSBlYXJuZWQgZnJvbSBqb2JzICovXFxuICAgd29ya01vbmV5OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENoYXJhY3RlckluZm8ge1xcbiAgIC8qKiBDdXJyZW50IEJpdE5vZGUgbnVtYmVyICovXFxuICAgYml0bm9kZTogbnVtYmVyO1xcbiAgIC8qKiBOYW1lIG9mIGNpdHkgeW91IGFyZSBjdXJyZW50bHkgaW4gKi9cXG4gICBjaXR5OiBzdHJpbmc7XFxuICAgLyoqIEFycmF5IG9mIGZhY3Rpb25zIHlvdSBhcmUgY3VycmVudGx5IGEgbWVtYmVyIG9mICovXFxuICAgZmFjdGlvbnM6IHN0cmluZ1tdO1xcbiAgIC8qKiBDdXJyZW50IGhlYWx0aCBwb2ludHMgKi9cXG4gICBocDogbnVtYmVyO1xcbiAgIC8qKiBBcnJheSBvZiBhbGwgY29tcGFuaWVzIGF0IHdoaWNoIHlvdSBoYXZlIGpvYnMgKi9cXG4gICBjb21wYW55OiBzdHJpbmdbXTtcXG4gICAvKiogQXJyYXkgb2Ygam9iIHBvc2l0aW9ucyBmb3IgYWxsIGNvbXBhbmllcyB5b3UgYXJlIGVtcGxveWVkIGF0LiBTYW1lIG9yZGVyIGFzICdqb2JzJyAqL1xcbiAgIGpvYlRpdGxlOiBzdHJpbmdbXTtcXG4gICAvKiogTWF4aW11bSBoZWFsdGggcG9pbnRzICovXFxuICAgbWF4SHA6IG51bWJlcjtcXG4gICAvKiogQm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHlvdSBoYXZlIGEgdG9yIHJvdXRlciAqL1xcbiAgIHRvcjogYm9vbGVhbjtcXG4gICAvKiogT2JqZWN0IHdpdGggbWFueSBvZiB0aGUgcGxheWVyJ3MgbXVsdGlwbGllcnMgZnJvbSBBdWdtZW50YXRpb25zL1NvdXJjZSBGaWxlcyAqL1xcbiAgIG11bHQ6IENoYXJhY3Rlck11bHQ7XFxuICAgLyoqIFRpbWVkIHdvcmtlZCBpbiBtcyAqL1xcbiAgIHRpbWVXb3JrZWQ6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya0hhY2tFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIFN0ciBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya1N0ckV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogRGVmIGV4cGVyaWVuY2UgZWFybmVkIHNvIGZhciBmcm9tIHdvcmsgKi9cXG4gICB3b3JrRGVmRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBEZXggZXhwZXJpZW5jZSBlYXJuZWQgc28gZmFyIGZyb20gd29yayAqL1xcbiAgIHdvcmtEZXhFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEFnaSBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya0FnaUV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogQ2hhIGV4cGVyaWVuY2UgZWFybmVkIHNvIGZhciBmcm9tIHdvcmsgKi9cXG4gICB3b3JrQ2hhRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBSZXB1dGF0aW9uIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrLCBpZiBhcHBsaWNhYmxlICovXFxuICAgd29ya1JlcEdhaW46IG51bWJlcjtcXG4gICAvKiogTW9uZXkgZWFybmVkIHNvIGZhciBmcm9tIHdvcmssIGlmIGFwcGxpY2FibGUgKi9cXG4gICB3b3JrTW9uZXlHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNsZWV2ZVdvcmtHYWlucyB7XFxuICAgLyoqIEhhY2tpbmcgZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrSGFja0V4cEdhaW46IG51bWJlcjtcXG4gICAvKiogU3RyZW5ndGggZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrU3RyRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBEZWZlbnNlIGV4cCBnYWluZWQgZnJvbSB3b3JrLCAqL1xcbiAgIHdvcmtEZWZFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIERleHRlcml0eSBleHAgZ2FpbmVkIGZyb20gd29yayAqL1xcbiAgIHdvcmtEZXhFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrQWdpRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBleHAgZ2FpbmVkIGZyb20gd29yayAqL1xcbiAgIHdvcmtDaGFFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIE1vbmV5IGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrTW9uZXlHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNvdXJjZUZpbGVMdmwge1xcbiAgIC8qKiBUaGUgbnVtYmVyIG9mIHRoZSBzb3VyY2UgZmlsZSAqL1xcbiAgIG46IG51bWJlcjtcXG4gICAvKiogVGhlIGxldmVsIG9mIHRoZSBzb3VyY2UgZmlsZSAqL1xcbiAgIGx2bDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQmxhZGVidXJuZXIgY3VycmVudCBhY3Rpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQmxhZGVidXJuZXJDdXJBY3Rpb24ge1xcbiAgIC8qKiBUeXBlIG9mIEFjdGlvbiAqL1xcbiAgIHR5cGU6IHN0cmluZztcXG4gICAvKiogTmFtZSBvZiBBY3Rpb24gKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBHYW5nIGdlbmVyYWwgaW5mby5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBHYW5nR2VuSW5mbyB7XFxuICAgLyoqIE5hbWUgb2YgZmFjdGlvbiB0aGF0IHRoZSBnYW5nIGJlbG9uZ3MgdG8gKFxcXCJTbHVtIFNuYWtlc1xcXCIsIGV0Yy4pICovXFxuICAgZmFjdGlvbjogc3RyaW5nO1xcbiAgIC8qKiBJbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IGl0J3MgYSBoYWNraW5nIGdhbmcgKi9cXG4gICBpc0hhY2tpbmc6IGJvb2xlYW47XFxuICAgLyoqIE1vbmV5IGVhcm5lZCBwZXIgZ2FtZSBjeWNsZSAqL1xcbiAgIG1vbmV5R2FpblJhdGU6IG51bWJlcjtcXG4gICAvKiogR2FuZydzIHBvd2VyIGZvciB0ZXJyaXRvcnkgd2FyZmFyZSAqL1xcbiAgIHBvd2VyOiBudW1iZXI7XFxuICAgLyoqIEdhbmcncyByZXNwZWN0ICovXFxuICAgcmVzcGVjdDogbnVtYmVyO1xcbiAgIC8qKiBSZXNwZWN0IGVhcm5lZCBwZXIgZ2FtZSBjeWNsZSAqL1xcbiAgIHJlc3BlY3RHYWluUmF0ZTogbnVtYmVyO1xcbiAgIC8qKiBBbW91bnQgb2YgdGVycml0b3J5IGhlbGQgKi9cXG4gICB0ZXJyaXRvcnk6IG51bWJlcjtcXG4gICAvKiogQ2xhc2ggY2hhbmNlICovXFxuICAgdGVycml0b3J5Q2xhc2hDaGFuY2U6IG51bWJlcjtcXG4gICAvKiogR2FuZydzIHdhbnRlZCBsZXZlbCAqL1xcbiAgIHdhbnRlZExldmVsOiBudW1iZXI7XFxuICAgLyoqIFdhbnRlZCBsZXZlbCBnYWluZWQvbG9zdCBwZXIgZ2FtZSBjeWNsZSAobmVnYXRpdmUgZm9yIGxvc3NlcykgKi9cXG4gICB3YW50ZWRMZXZlbEdhaW5SYXRlOiBudW1iZXI7XFxuICAgLyoqIEluZGljYXRpbmcgaWYgdGVycml0b3J5IHdhcmZhcmUgaXMgZW5hYmxlZCAqL1xcbiAgIHRlcnJpdG9yeVdhcmZhcmVFbmdhZ2VkOiBib29sZWFuO1xcbiAgIC8qKiBOdW1iZXIgaW5kaWNhdGluZyB0aGUgY3VycmVudCB3YW50ZWQgcGVuYWx0eSAqL1xcbiAgIHdhbnRlZFBlbmFsdHk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgR2FuZ090aGVySW5mb09iamVjdCB7XFxuICAgLyoqIEdhbmcgcG93ZXIgKi9cXG4gICBwb3dlcjogbnVtYmVyO1xcbiAgIC8qKiBHYW5nIHRlcnJpdG9yeSwgaW4gZGVjaW1hbCBmb3JtICovXFxuICAgdGVycml0b3J5OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdPdGhlckluZm8ge1xcbiAgIFxcXCJTbHVtIFNuYWtlc1xcXCI6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgVGV0cmFkczogR2FuZ090aGVySW5mb09iamVjdDtcXG4gICBcXFwiVGhlIFN5bmRpY2F0ZVxcXCI6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgXFxcIlRoZSBEYXJrIEFybXlcXFwiOiBHYW5nT3RoZXJJbmZvT2JqZWN0O1xcbiAgIFxcXCJTcGVha2VycyBmb3IgdGhlIERlYWRcXFwiOiBHYW5nT3RoZXJJbmZvT2JqZWN0O1xcbiAgIE5pdGVTZWM6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgXFxcIlRoZSBCbGFjayBIYW5kXFxcIjogR2FuZ090aGVySW5mb09iamVjdDtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgZGF0YSByZXByZXNlbnRpbmcgYSBnYW5nIG1lbWJlciB0YXNrLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdUYXNrU3RhdHMge1xcbiAgIC8qKiBUYXNrIG5hbWUgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIFRhc2sgRGVzY3JpcHRpb24gKi9cXG4gICBkZXNjOiBzdHJpbmc7XFxuICAgLyoqIElzIGEgdGFzayBvZiBhIGhhY2tpbmcgZ2FuZyAqL1xcbiAgIGlzSGFja2luZzogYm9vbGVhbjtcXG4gICAvKiogSXMgYSB0YXNrIG9mIGEgY29tYmF0IGdhbmcgKi9cXG4gICBpc0NvbWJhdDogYm9vbGVhbjtcXG4gICAvKiogQmFzZSByZXNwZWN0IGVhcm5lZCAqL1xcbiAgIGJhc2VSZXNwZWN0OiBudW1iZXI7XFxuICAgLyoqIEJhc2Ugd2FudGVkIGVhcm5lZCAqL1xcbiAgIGJhc2VXYW50ZWQ6IG51bWJlcjtcXG4gICAvKiogQmFzZSBtb25leSBlYXJuZWQgKi9cXG4gICBiYXNlTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgaGFja1dlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBTdGVuZ3RoIHNraWxsIGltcGFjdCBvbiB0YXNrIHNjYWxpbmcgKi9cXG4gICBzdHJXZWlnaHQ6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgZGVmV2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIERleHRlcml0eSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgZGV4V2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgc2tpbGwgaW1wYWN0IG9uIHRhc2sgc2NhbGluZyAqL1xcbiAgIGFnaVdlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgY2hhV2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIE51bWJlciByZXByZXNlbnRpbmcgdGhlIGRpZmZpY3VsdHkgb2YgdGhlIHRhc2sgKi9cXG4gICBkaWZmaWN1bHR5OiBudW1iZXI7XFxuICAgLyoqIFRlcnJpdG9yeSBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgdGVycml0b3J5OiBHYW5nVGVycml0b3J5O1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBkYXRhIHJlcHJlc2VudGluZyBhIGdhbmcgbWVtYmVyIGVxdWlwbWVudC5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBFcXVpcG1lbnRTdGF0cyB7XFxuICAgLyoqIFN0cmVuZ3RoIG11bHRpcGxpZXIgKi9cXG4gICBzdHI/OiBudW1iZXI7XFxuICAgLyoqIERlZmVuc2UgbXVsdGlwbGllciAqL1xcbiAgIGRlZj86IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IG11bHRpcGxpZXIgKi9cXG4gICBkZXg/OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgbXVsdGlwbGllciAqL1xcbiAgIGFnaT86IG51bWJlcjtcXG4gICAvKiogQ2hhcmlzbWEgbXVsdGlwbGllciAqL1xcbiAgIGNoYT86IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBtdWx0aXBsaWVyICovXFxuICAgaGFjaz86IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgR2FuZ1RlcnJpdG9yeSB7XFxuICAgLyoqIE1vbmV5IGdhaW4gaW1wYWN0IG9uIHRhc2sgc2NhbGluZyAqL1xcbiAgIG1vbmV5OiBudW1iZXI7XFxuICAgLyoqIFJlc3BlY3QgZ2FpbiBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgcmVzcGVjdDogbnVtYmVyO1xcbiAgIC8qKiBXYW50ZWQgZ2FpbiBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgd2FudGVkOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdNZW1iZXJJbmZvIHtcXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgdGFzazogc3RyaW5nO1xcbiAgIGVhcm5lZFJlc3BlY3Q6IG51bWJlcjtcXG4gICBoYWNrOiBudW1iZXI7XFxuICAgc3RyOiBudW1iZXI7XFxuICAgZGVmOiBudW1iZXI7XFxuICAgZGV4OiBudW1iZXI7XFxuICAgYWdpOiBudW1iZXI7XFxuICAgY2hhOiBudW1iZXI7XFxuIFxcbiAgIGhhY2tfZXhwOiBudW1iZXI7XFxuICAgc3RyX2V4cDogbnVtYmVyO1xcbiAgIGRlZl9leHA6IG51bWJlcjtcXG4gICBkZXhfZXhwOiBudW1iZXI7XFxuICAgYWdpX2V4cDogbnVtYmVyO1xcbiAgIGNoYV9leHA6IG51bWJlcjtcXG4gXFxuICAgaGFja19tdWx0OiBudW1iZXI7XFxuICAgc3RyX211bHQ6IG51bWJlcjtcXG4gICBkZWZfbXVsdDogbnVtYmVyO1xcbiAgIGRleF9tdWx0OiBudW1iZXI7XFxuICAgYWdpX211bHQ6IG51bWJlcjtcXG4gICBjaGFfbXVsdDogbnVtYmVyO1xcbiBcXG4gICBoYWNrX2FzY19tdWx0OiBudW1iZXI7XFxuICAgc3RyX2FzY19tdWx0OiBudW1iZXI7XFxuICAgZGVmX2FzY19tdWx0OiBudW1iZXI7XFxuICAgZGV4X2FzY19tdWx0OiBudW1iZXI7XFxuICAgYWdpX2FzY19tdWx0OiBudW1iZXI7XFxuICAgY2hhX2FzY19tdWx0OiBudW1iZXI7XFxuIFxcbiAgIGhhY2tfYXNjX3BvaW50czogbnVtYmVyO1xcbiAgIHN0cl9hc2NfcG9pbnRzOiBudW1iZXI7XFxuICAgZGVmX2FzY19wb2ludHM6IG51bWJlcjtcXG4gICBkZXhfYXNjX3BvaW50czogbnVtYmVyO1xcbiAgIGFnaV9hc2NfcG9pbnRzOiBudW1iZXI7XFxuICAgY2hhX2FzY19wb2ludHM6IG51bWJlcjtcXG4gXFxuICAgdXBncmFkZXM6IHN0cmluZ1tdO1xcbiAgIGF1Z21lbnRhdGlvbnM6IHN0cmluZ1tdO1xcbiBcXG4gICByZXNwZWN0R2FpbjogbnVtYmVyO1xcbiAgIHdhbnRlZExldmVsR2FpbjogbnVtYmVyO1xcbiAgIG1vbmV5R2FpbjogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBHYW5nTWVtYmVyQXNjZW5zaW9uIHtcXG4gICAvKiogQW1vdW50IG9mIHJlc3BlY3QgbG9zdCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIHJlc3BlY3Q6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGhhY2s6IG51bWJlcjtcXG4gICAvKiogU3RyZW5ndGggbXVsdGlwbGllciBnYWluZWQgZnJvbSBhc2NlbmRpbmcgKi9cXG4gICBzdHI6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGRlZjogbnVtYmVyO1xcbiAgIC8qKiBEZXh0ZXJpdHkgbXVsdGlwbGllciBnYWluZWQgZnJvbSBhc2NlbmRpbmcgKi9cXG4gICBkZXg6IG51bWJlcjtcXG4gICAvKiogQWdpbGl0eSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGFnaTogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGNoYTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBhIHNsZWV2ZSBzdGF0cy5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmVTa2lsbHMge1xcbiAgIC8qKiBDdXJyZW50IHNob2NrIG9mIHRoZSBzbGVldmUgWzAtMTAwXSAqL1xcbiAgIHNob2NrOiBudW1iZXI7XFxuICAgLyoqIEN1cnJlbnQgc3luYyBvZiB0aGUgc2xlZXZlIFswLTEwMF0gKi9cXG4gICBzeW5jOiBudW1iZXI7XFxuICAgLyoqIEN1cnJlbnQgaGFja2luZyBza2lsbCBvZiB0aGUgc2xlZXZlICovXFxuICAgaGFja2luZzogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IHN0cmVuZ3RoIG9mIHRoZSBzbGVldmUgKi9cXG4gICBzdHJlbmd0aDogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IGRlZmVuc2Ugb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGRlZmVuc2U6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCBkZXh0ZXJpdHkgb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGRleHRlcml0eTogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IGFnaWxpdHkgb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGFnaWxpdHk6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCBjaGFyaXNtYSBvZiB0aGUgc2xlZXZlICovXFxuICAgY2hhcmlzbWE6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgc2xlZXZlIGluZm9ybWF0aW9uLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNsZWV2ZUluZm9ybWF0aW9uIHtcXG4gICAvKiogTG9jYXRpb24gb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGNpdHk6IHN0cmluZztcXG4gICAvKiogQ3VycmVudCBocCBvZiB0aGUgc2xlZXZlICovXFxuICAgaHA6IG51bWJlcjtcXG4gICAvKiogTWF4IGhwIG9mIHRoZSBzbGVldmUgKi9cXG4gICBtYXhIcDogbnVtYmVyO1xcbiAgIC8qKiBKb2JzIGF2YWlsYWJsZSB0byB0aGUgc2xlZXZlICovXFxuICAgam9iczogc3RyaW5nW107XFxuICAgLyoqIEpvYiB0aXRsZXMgYXZhaWxhYmxlIHRvIHRoZSBzbGVldmUgKi9cXG4gICBqb2JUaXRsZTogc3RyaW5nW107XFxuICAgLyoqIERvZXMgdGhpcyBzbGVldmUgaGF2ZSBhY2Nlc3MgdG8gdGhlIHRvciByb3V0ZXIgKi9cXG4gICB0b3I6IGJvb2xlYW47XFxuICAgLyoqIFNsZWV2ZSBtdWx0aXBsaWVycyAqL1xcbiAgIG11bHQ6IENoYXJhY3Rlck11bHQ7XFxuICAgLyoqIFRpbWUgc3BlbnQgb24gdGhlIGN1cnJlbnQgdGFzayBpbiBtaWxsaXNlY29uZHMgKi9cXG4gICB0aW1lV29ya2VkOiBudW1iZXI7XFxuICAgLyoqIEVhcm5pbmdzIHN5bmNocm9uaXplZCB0byBvdGhlciBzbGVldmVzICovXFxuICAgZWFybmluZ3NGb3JTbGVldmVzOiBTbGVldmVXb3JrR2FpbnM7XFxuICAgLyoqIEVhcm5pbmdzIHN5bmNocm9uaXplZCB0byB0aGUgcGxheWVyICovXFxuICAgZWFybmluZ3NGb3JQbGF5ZXI6IFNsZWV2ZVdvcmtHYWlucztcXG4gICAvKiogRWFybmluZ3MgZm9yIHRoaXMgc2xlZXZlICovXFxuICAgZWFybmluZ3NGb3JUYXNrOiBTbGVldmVXb3JrR2FpbnM7XFxuICAgLyoqIEZhY3Rpb24gb3IgY29tcGFueSByZXB1dGF0aW9uIGdhaW5lZCBmb3IgdGhlIGN1cnJlbnQgdGFzayAqL1xcbiAgIHdvcmtSZXBHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPYmplY3QgcmVwcmVzZW50aW5nIGEgc2xlZXZlIGN1cnJlbnQgdGFzay5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmVUYXNrIHtcXG4gICAvKiogVGFzayB0eXBlICovXFxuICAgdGFzazogc3RyaW5nO1xcbiAgIC8qKiBDcmltZSBjdXJyZW50bHkgYXR0ZW1wdGluZywgaWYgYW55ICovXFxuICAgY3JpbWU6IHN0cmluZztcXG4gICAvKiogTG9jYXRpb24gb2YgdGhlIHRhc2ssIGlmIGFueSAqL1xcbiAgIGxvY2F0aW9uOiBzdHJpbmc7XFxuICAgLyoqIFN0YXQgYmVpbmcgdHJhaW5lZCBhdCB0aGUgZ3ltLCBpZiBhbnkgKi9cXG4gICBneW1TdGF0VHlwZTogc3RyaW5nO1xcbiAgIC8qKiBGYWN0aW9uIHdvcmsgdHlwZSBiZWluZyBwZXJmb3JtZWQsIGlmIGFueSAqL1xcbiAgIGZhY3Rpb25Xb3JrVHlwZTogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBhIHBvcnQuIEEgcG9ydCBpcyBhIHNlcmlhbGl6ZWQgcXVldWUuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgTmV0c2NyaXB0UG9ydCB7XFxuICAgLyoqXFxuICAgICogV3JpdGUgZGF0YSB0byBhIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVGhlIGRhdGEgcG9wcGVkIG9mZiB0aGUgcXVldWUgaWYgaXQgd2FzIGZ1bGwuXFxuICAgICovXFxuICAgd3JpdGUodmFsdWU6IHN0cmluZyB8IG51bWJlcik6IG51bGwgfCBzdHJpbmcgfCBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEF0dGVtcHQgdG8gd3JpdGUgZGF0YSB0byB0aGUgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBkYXRhIHdhcyBhZGRlZCB0byB0aGUgcG9ydCwgZmFsc2UgaWYgdGhlIHBvcnQgd2FzIGZ1bGxcXG4gICAgKi9cXG4gICB0cnlXcml0ZSh2YWx1ZTogc3RyaW5nIHwgbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2hpZnQgYW4gZWxlbWVudCBvdXQgb2YgdGhlIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJlbW92ZSB0aGUgZmlyc3QgZWxlbWVudCBmcm9tIHRoZSBwb3J0IGFuZCByZXR1cm4gaXQuXFxuICAgICogSWYgdGhlIHBvcnQgaXMgZW1wdHksIHRoZW4gdGhlIHN0cmluZyDigJxOVUxMIFBPUlQgREFUQeKAnSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqIEByZXR1cm5zIHRoZSBkYXRhIHJlYWQuXFxuICAgICovXFxuICAgcmVhZCgpOiBzdHJpbmcgfCBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHJpZXZlIHRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhlIHBvcnQgd2l0aG91dCByZW1vdmluZyBpdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGVlayBhdCB0aGUgZGF0YSBmcm9tIGEgcG9ydC4gSXQgcmV0dXJucyB0aGVcXG4gICAgKiBmaXJzdCBlbGVtZW50IGluIHRoZSBzcGVjaWZpZWQgcG9ydCB3aXRob3V0IHJlbW92aW5nIHRoYXQgZWxlbWVudC4gSWZcXG4gICAgKiB0aGUgcG9ydCBpcyBlbXB0eSwgdGhlIHN0cmluZyDigJxOVUxMIFBPUlQgREFUQeKAnSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqIEByZXR1cm5zIHRoZSBkYXRhIHJlYWRcXG4gICAgKi9cXG4gICBwZWVrKCk6IHN0cmluZyB8IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgdGhlIHBvcnQgaXMgZnVsbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBwb3J0IGlzIGZ1bGwsIG90aGVyd2lzZSBmYWxzZVxcbiAgICAqL1xcbiAgIGZ1bGwoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgdGhlIHBvcnQgaXMgZW1wdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgcG9ydCBpcyBlbXB0eSwgb3RoZXJ3aXNlIGZhbHNlXFxuICAgICovXFxuICAgZW1wdHkoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogRW1wdGllcyBhbGwgZGF0YSBmcm9tIHRoZSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICBjbGVhcigpOiB2b2lkO1xcbiB9XFxuIFxcbiAvKipcXG4gICogU3RvY2sgbWFya2V0IEFQSVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFRJWCB7XFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiB0aGUgc3ltYm9scyBvZiB0aGUgdHJhZGFibGUgc3RvY2tzXFxuICAgICpcXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMiBHQlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHRoZSBzeW1ib2xzIG9mIHRoZSB0cmFkYWJsZSBzdG9ja3MuXFxuICAgICovXFxuICAgZ2V0U3ltYm9scygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcHJpY2Ugb2YgYSBzdG9ja1xcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqIFRoZSBzdG9ja+KAmXMgcHJpY2UgaXMgdGhlIGF2ZXJhZ2Ugb2YgaXRzIGJpZCBhbmQgYXNrIHByaWNlLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHN0b2NrLmdldFByaWNlKFxcXCJGSVNHXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMlxcbiAgICAqIG5zLnN0b2NrLmdldFByaWNlKFxcXCJGSVNHXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBUaGUgcHJpY2Ugb2YgYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRQcmljZShzeW06IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgYXNrIHByaWNlIG9mIHRoYXQgc3RvY2suXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDIgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgVGhlIGFzayBwcmljZSBvZiBhIHN0b2NrLlxcbiAgICAqL1xcbiAgIGdldEFza1ByaWNlKHN5bTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBiaWQgcHJpY2Ugb2YgdGhhdCBzdG9jay5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBUaGUgYmlkIHByaWNlIG9mIGEgc3RvY2suXFxuICAgICovXFxuICAgZ2V0QmlkUHJpY2Uoc3ltOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIHBsYXllcuKAmXMgcG9zaXRpb24gaW4gYSBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBmb3VyIGVsZW1lbnRzIHRoYXQgcmVwcmVzZW50cyB0aGUgcGxheWVy4oCZcyBwb3NpdGlvbiBpbiBhIHN0b2NrLlxcbiAgICAqXFxuICAgICogVGhlIGZpcnN0IGVsZW1lbnQgaXMgdGhlIHJldHVybmVkIGFycmF5IGlzIHRoZSBudW1iZXIgb2Ygc2hhcmVzIHRoZSBwbGF5ZXIgb3ducyBvZlxcbiAgICAqIHRoZSBzdG9jayBpbiB0aGUgTG9uZyBwb3NpdGlvbi4gVGhlIHNlY29uZCBlbGVtZW50IGluIHRoZSBhcnJheSBpcyB0aGUgYXZlcmFnZSBwcmljZVxcbiAgICAqIG9mIHRoZSBwbGF5ZXLigJlzIHNoYXJlcyBpbiB0aGUgTG9uZyBwb3NpdGlvbi5cXG4gICAgKlxcbiAgICAqIFRoZSB0aGlyZCBlbGVtZW50IGluIHRoZSBhcnJheSBpcyB0aGUgbnVtYmVyIG9mIHNoYXJlcyB0aGUgcGxheWVyIG93bnMgb2YgdGhlIHN0b2NrXFxuICAgICogaW4gdGhlIFNob3J0IHBvc2l0aW9uLiBUaGUgZm91cnRoIGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhdmVyYWdlIHByaWNlIG9mIHRoZVxcbiAgICAqIHBsYXllcuKAmXMgU2hvcnQgcG9zaXRpb24uXFxuICAgICpcXG4gICAgKiBBbGwgZWxlbWVudHMgaW4gdGhlIHJldHVybmVkIGFycmF5IGFyZSBudW1lcmljLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHZhciBwb3MgPSBzdG9jay5nZXRQb3NpdGlvbihcXFwiRUNQXFxcIik7XFxuICAgICogdmFyIHNoYXJlcyAgICAgID0gcG9zWzBdO1xcbiAgICAqIHZhciBhdmdQeCAgICAgICA9IHBvc1sxXTtcXG4gICAgKiB2YXIgc2hhcmVzU2hvcnQgPSBwb3NbMl07XFxuICAgICogdmFyIGF2Z1B4U2hvcnQgID0gcG9zWzNdO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzJcXG4gICAgKiBjb25zdCBbc2hhcmVzLCBhdmdQeCwgc2hhcmVzU2hvcnQsIGF2Z1B4U2hvcnRdID0gbnMuc3RvY2suZ2V0UG9zaXRpb24oXFxcIkVDUFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgQXJyYXkgb2YgZm91ciBlbGVtZW50cyB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgcG9zaXRpb24gaW4gYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRQb3NpdGlvbihzeW06IHN0cmluZyk6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIG51bWJlciBvZiBzaGFyZXMgb2YgYSBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogVGhpcyBpcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgdGhlIHN0b2NrIHRoYXQgY2FuIGJlIHB1cmNoYXNlZFxcbiAgICAqIGluIGJvdGggdGhlIExvbmcgYW5kIFNob3J0IHBvc2l0aW9ucyBjb21iaW5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgTWF4aW11bSBudW1iZXIgb2Ygc2hhcmVzIHRoYXQgdGhlIHN0b2NrIGhhcy5cXG4gICAgKi9cXG4gICBnZXRNYXhTaGFyZXMoc3ltOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZXMgY29zdCBvZiBidXlpbmcgc3RvY2tzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0JcXG4gICAgKiBDYWxjdWxhdGVzIGFuZCByZXR1cm5zIGhvdyBtdWNoIGl0IHdvdWxkIGNvc3QgdG8gYnV5IGEgZ2l2ZW4gbnVtYmVyIG9mIHNoYXJlcyBvZiBhIHN0b2NrLlxcbiAgICAqIFRoaXMgdGFrZXMgaW50byBhY2NvdW50IHNwcmVhZCwgbGFyZ2UgdHJhbnNhY3Rpb25zIGluZmx1ZW5jaW5nIHRoZSBwcmljZSBvZiB0aGUgc3RvY2sgYW5kIGNvbW1pc3Npb24gZmVlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gcHVyY2hhc2UuXFxuICAgICogQHBhcmFtIHBvc1R5cGUgLSBTcGVjaWZpZXMgd2hldGhlciB0aGUgb3JkZXIgaXMgYSDigJxMb25n4oCdIG9yIOKAnFNob3J04oCdIHBvc2l0aW9uLlxcbiAgICAqIEByZXR1cm5zIENvc3QgdG8gYnV5IGEgZ2l2ZW4gbnVtYmVyIG9mIHNoYXJlcyBvZiBhIHN0b2NrLlxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlQ29zdChzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHBvc1R5cGU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHByb2ZpdCBvZiBzZWxsaW5nIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogQ2FsY3VsYXRlcyBhbmQgcmV0dXJucyBob3cgbXVjaCB5b3Ugd291bGQgZ2FpbiBmcm9tIHNlbGxpbmcgYSBnaXZlbiBudW1iZXIgb2Ygc2hhcmVzIG9mIGEgc3RvY2suXFxuICAgICogVGhpcyB0YWtlcyBpbnRvIGFjY291bnQgc3ByZWFkLCBsYXJnZSB0cmFuc2FjdGlvbnMgaW5mbHVlbmNpbmcgdGhlIHByaWNlIG9mIHRoZSBzdG9jayBhbmQgY29tbWlzc2lvbiBmZWVzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyB0byBzZWxsLlxcbiAgICAqIEBwYXJhbSBwb3NUeXBlIC0gU3BlY2lmaWVzIHdoZXRoZXIgdGhlIG9yZGVyIGlzIGEg4oCcTG9uZ+KAnSBvciDigJxTaG9ydOKAnSBwb3NpdGlvbi5cXG4gICAgKiBAcmV0dXJucyBHYWluIGZyb20gc2VsbGluZyBhIGdpdmVuIG51bWJlciBvZiBzaGFyZXMgb2YgYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRTYWxlR2FpbihzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHBvc1R5cGU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQnV5IHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBwdXJjaGFzZSBzaGFyZXMgb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzLFxcbiAgICAqIHRoZW4gbm8gc2hhcmVzIHdpbGwgYmUgcHVyY2hhc2VkLiBSZW1lbWJlciB0aGF0IGV2ZXJ5IHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZVxcbiAgICAqIGNvc3RzIGEgY2VydGFpbiBjb21taXNzaW9uIGZlZS5cXG4gICAgKlxcbiAgICAqIElmIHRoaXMgZnVuY3Rpb24gc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlcyB0aGUgc2hhcmVzLCBpdCB3aWxsIHJldHVybiB0aGUgc3RvY2sgcHJpY2UgYXQgd2hpY2hcXG4gICAgKiBlYWNoIHNoYXJlIHdhcyBwdXJjaGFzZWQuIE90aGVyd2lzZSwgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gcHVyY2hhc2VkLiBNdXN0IGJlIHBvc2l0aXZlLiBXaWxsIGJlIHJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzdG9jayBwcmljZSBhdCB3aGljaCBlYWNoIHNoYXJlIHdhcyBwdXJjaGFzZWQsIG90aGVyd2lzZSAwIGlmIHRoZSBzaGFyZXMgd2VyZW4ndCBwdXJjaGFzZWQuXFxuICAgICovXFxuICAgYnV5KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2VsbCBzdG9ja3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogQXR0ZW1wdHMgdG8gc2VsbCBzaGFyZXMgb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHNoYXJlcyBpbiB0aGUgZnVuY3Rpb24gZXhjZWVkcyB0aGUgYW1vdW50IHRoYXQgdGhlIHBsYXllclxcbiAgICAqIGFjdHVhbGx5IG93bnMsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHNlbGwgYWxsIG93bmVkIHNoYXJlcy4gUmVtZW1iZXIgdGhhdCBldmVyeVxcbiAgICAqIHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZSBjb3N0cyBhIGNlcnRhaW4gY29tbWlzc2lvbiBmZWUuXFxuICAgICpcXG4gICAgKiBUaGUgbmV0IHByb2ZpdCBtYWRlIGZyb20gc2VsbGluZyBzdG9ja3Mgd2l0aCB0aGlzIGZ1bmN0aW9uIGlzIHJlZmxlY3RlZCBpbiB0aGUgc2NyaXB04oCZc1xcbiAgICAqIHN0YXRpc3RpY3MuIFRoaXMgbmV0IHByb2ZpdCBpcyBjYWxjdWxhdGVkIGFzOlxcbiAgICAqXFxuICAgICogICAgc2hhcmVzICogKHNlbGxfcHJpY2UgLSBhdmVyYWdlX3ByaWNlX29mX3B1cmNoYXNlZF9zaGFyZXMpXFxuICAgICpcXG4gICAgKiBJZiB0aGUgc2FsZSBpcyBzdWNjZXNzZnVsLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBzdG9jayBwcmljZSBhdFxcbiAgICAqIHdoaWNoIGVhY2ggc2hhcmUgd2FzIHNvbGQuIE90aGVyd2lzZSwgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gc2VsbC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgc29sZCwgb3RoZXJ3aXNlIDAgaWYgdGhlIHNoYXJlcyB3ZXJlbid0IHNvbGQuXFxuICAgICovXFxuICAgc2VsbChzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNob3J0IHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBwdXJjaGFzZSBhIHNob3J0IHBvc2l0aW9uIG9mIGEgc3RvY2sgdXNpbmcgYSBNYXJrZXQgT3JkZXIuXFxuICAgICpcXG4gICAgKiBUaGUgYWJpbGl0eSB0byBzaG9ydCBhIHN0b2NrIGlzICoqbm90KiogaW1tZWRpYXRlbHkgYXZhaWxhYmxlIHRvIHRoZSBwbGF5ZXIgYW5kXFxuICAgICogbXVzdCBiZSB1bmxvY2tlZCBsYXRlciBvbiBpbiB0aGUgZ2FtZS5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzLFxcbiAgICAqIHRoZW4gbm8gc2hhcmVzIHdpbGwgYmUgcHVyY2hhc2VkLiBSZW1lbWJlciB0aGF0IGV2ZXJ5IHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZVxcbiAgICAqIGNvc3RzIGEgY2VydGFpbiBjb21taXNzaW9uIGZlZS5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwdXJjaGFzZSBpcyBzdWNjZXNzZnVsLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBzdG9jayBwcmljZSBhdCB3aGljaCBlYWNoXFxuICAgICogc2hhcmUgd2FzIHB1cmNoYXNlZC4gT3RoZXJ3aXNlLCBpdCB3aWxsIHJldHVybiAwLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyB0byBzaG9ydC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgcHVyY2hhc2VkLCBvdGhlcndpc2UgMCBpZiB0aGUgc2hhcmVzIHdlcmVuJ3QgcHVyY2hhc2VkLlxcbiAgICAqL1xcbiAgIHNob3J0KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2VsbCBzaG9ydCBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBzZWxsIGEgc2hvcnQgcG9zaXRpb24gb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIFRoZSBhYmlsaXR5IHRvIHNob3J0IGEgc3RvY2sgaXMgKipub3QqKiBpbW1lZGlhdGVseSBhdmFpbGFibGUgdG8gdGhlIHBsYXllciBhbmRcXG4gICAgKiBtdXN0IGJlIHVubG9ja2VkIGxhdGVyIG9uIGluIHRoZSBnYW1lLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzIGV4Y2VlZHMgdGhlIGFtb3VudCB0aGF0IHRoZSBwbGF5ZXIgYWN0dWFsbHkgb3ducyxcXG4gICAgKiB0aGVuIHRoaXMgZnVuY3Rpb24gd2lsbCBzZWxsIGFsbCBvd25lZCBzaGFyZXMuIFJlbWVtYmVyIHRoYXQgZXZlcnkgdHJhbnNhY3Rpb24gb25cXG4gICAgKiB0aGUgc3RvY2sgZXhjaGFuZ2UgY29zdHMgYSBjZXJ0YWluIGNvbW1pc3Npb24gZmVlLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNhbGUgaXMgc3VjY2Vzc2Z1bCwgdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaFxcbiAgICAqIHNoYXJlIHdhcyBzb2xkLiBPdGhlcndpc2UgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gc2VsbC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgc29sZCwgb3RoZXJ3aXNlIDAgaWYgdGhlIHNoYXJlcyB3ZXJlbid0IHNvbGQuXFxuICAgICovXFxuICAgc2VsbFNob3J0KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUGxhY2Ugb3JkZXIgZm9yIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBQbGFjZXMgYW4gb3JkZXIgb24gdGhlIHN0b2NrIG1hcmtldC4gVGhpcyBmdW5jdGlvbiBvbmx5IHdvcmtzIGZvciBMaW1pdCBhbmQgU3RvcCBPcmRlcnMuXFxuICAgICpcXG4gICAgKiBUaGUgYWJpbGl0eSB0byBwbGFjZSBsaW1pdCBhbmQgc3RvcCBvcmRlcnMgaXMgKipub3QqKiBpbW1lZGlhdGVseSBhdmFpbGFibGUgdG8gdGhlIHBsYXllciBhbmRcXG4gICAgKiBtdXN0IGJlIHVubG9ja2VkIGxhdGVyIG9uIGluIHRoZSBnYW1lLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBvcmRlciBpcyBzdWNjZXNzZnVsbHkgcGxhY2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyBmb3Igb3JkZXIuIE11c3QgYmUgcG9zaXRpdmUuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIHByaWNlIC0gRXhlY3V0aW9uIHByaWNlIGZvciB0aGUgb3JkZXIuXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIG9yZGVyLlxcbiAgICAqIEBwYXJhbSBwb3MgLSBTcGVjaWZpZXMgd2hldGhlciB0aGUgb3JkZXIgaXMgYSDigJxMb25n4oCdIG9yIOKAnFNob3J04oCdIHBvc2l0aW9uLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIG9yZGVyIGlzIHN1Y2Nlc3NmdWxseSBwbGFjZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgcGxhY2VPcmRlcihzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHByaWNlOiBudW1iZXIsIHR5cGU6IHN0cmluZywgcG9zOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDYW5jZWwgb3JkZXIgZm9yIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBDYW5jZWxzIGFuIG91c3RhbmRpbmcgTGltaXQgb3IgU3RvcCBvcmRlciBvbiB0aGUgc3RvY2sgbWFya2V0LlxcbiAgICAqXFxuICAgICogVGhlIGFiaWxpdHkgdG8gdXNlIGxpbWl0IGFuZCBzdG9wIG9yZGVycyBpcyAqKm5vdCoqIGltbWVkaWF0ZWx5IGF2YWlsYWJsZSB0byB0aGUgcGxheWVyIGFuZFxcbiAgICAqIG11c3QgYmUgdW5sb2NrZWQgbGF0ZXIgb24gaW4gdGhlIGdhbWUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc3ltIC0gU3RvY2sgc3ltYm9sLlxcbiAgICAqIEBwYXJhbSBzaGFyZXMgLSBOdW1iZXIgb2Ygc2hhcmVzIGZvciBvcmRlci4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcGFyYW0gcHJpY2UgLSBFeGVjdXRpb24gcHJpY2UgZm9yIHRoZSBvcmRlci5cXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2Ygb3JkZXIuXFxuICAgICogQHBhcmFtIHBvcyAtIFNwZWNpZmllcyB3aGV0aGVyIHRoZSBvcmRlciBpcyBhIOKAnExvbmfigJ0gb3Ig4oCcU2hvcnTigJ0gcG9zaXRpb24uXFxuICAgICovXFxuICAgY2FuY2VsT3JkZXIoc3ltOiBzdHJpbmcsIHNoYXJlczogbnVtYmVyLCBwcmljZTogbnVtYmVyLCB0eXBlOiBzdHJpbmcsIHBvczogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB5b3VyIG9yZGVyIGJvb2sgZm9yIHRoZSBzdG9jayBtYXJrZXQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogVGhpcyBpcyBhbiBvYmplY3QgY29udGFpbmluZyBpbmZvcm1hdGlvbiBmb3IgYWxsIHRoZSBMaW1pdCBhbmQgU3RvcCBPcmRlcnMgeW91IGhhdmUgaW4gdGhlIHN0b2NrIG1hcmtldC5cXG4gICAgKiBGb3IgZWFjaCBzeW1ib2wgeW91IGhhdmUgYSBwb3NpdGlvbiBpbiwgdGhlIHJldHVybmVkIG9iamVjdCB3aWxsIGhhdmUgYSBrZXkgd2l0aCB0aGF0IHN5bWJvbCdzIG5hbWUuXFxuICAgICogVGhlIG9iamVjdCdzIHByb3BlcnRpZXMgYXJlIGVhY2ggYW4gYXJyYXkgb2Yge0BsaW5rIFN0b2NrT3JkZXJPYmplY3R9XFxuICAgICogVGhlIG9iamVjdCBoYXMgdGhlIGZvbGxvd2luZyBzdHJ1Y3R1cmU6XFxuICAgICpcXG4gICAgKiBgYGB0c1xcbiAgICAqIHtcXG4gICAgKiAgc3RyaW5nMTogWyAvLyBBcnJheSBvZiBvcmRlcnMgZm9yIHRoaXMgc3RvY2tcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IE9yZGVyIHF1YW50aXR5XFxuICAgICogICAgICAgICAgcHJpY2U6IE9yZGVyIHByaWNlXFxuICAgICogICAgICAgICAgdHlwZTogT3JkZXIgdHlwZVxcbiAgICAqICAgICAgICAgIHBvc2l0aW9uOiBFaXRoZXIgXFxcIkxcXFwiIG9yIFxcXCJTXFxcIiBmb3IgTG9uZyBvciBTaG9ydCBwb3NpdGlvblxcbiAgICAqICAgICAgfSxcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICAuLi5cXG4gICAgKiAgICAgIH0sXFxuICAgICogICAgICAuLi5cXG4gICAgKiAgXSxcXG4gICAgKiAgc3RyaW5nMjogWyAvLyBBcnJheSBvZiBvcmRlcnMgZm9yIHRoaXMgc3RvY2tcXG4gICAgKiAgICAgIC4uLlxcbiAgICAqICBdLFxcbiAgICAqICAuLi5cXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogVGhlIOKAnE9yZGVyIHR5cGXigJ0gcHJvcGVydHkgY2FuIGhhdmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgZm91ciB2YWx1ZXM6IFxcXCJMaW1pdCBCdXkgT3JkZXJcXFwiLCBcXFwiTGltaXQgU2VsbCBPcmRlclxcXCIsIFxcXCJTdG9wIEJ1eSBPcmRlclxcXCIsIFxcXCJTdG9wIFNlbGwgT3JkZXJcXFwiLlxcbiAgICAqIE5vdGUgdGhhdCB0aGUgb3JkZXIgYm9vayB3aWxsIG9ubHkgY29udGFpbiBpbmZvcm1hdGlvbiBmb3Igc3RvY2tzIHRoYXQgeW91IGFjdHVhbGx5IGhhdmUgb3JkZXJzIGluLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIFxcXCJJZiB5b3UgZG8gbm90IGhhdmUgb3JkZXJzIGluIE5vdmEgTWVkaWNhbCAoTlZNRCksIHRoZW4gdGhlIHJldHVybmVkIG9iamVjdCB3aWxsIG5vdCBoYXZlIGEg4oCcTlZNROKAnSBwcm9wZXJ0eS5cXFwiXFxuICAgICoge1xcbiAgICAqICBFQ1A6IFtcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IDUsXFxuICAgICogICAgICAgICAgcHJpY2U6IDEwMCwwMDBcXG4gICAgKiAgICAgICAgICB0eXBlOiBcXFwiU3RvcCBCdXkgT3JkZXJcXFwiLFxcbiAgICAqICAgICAgICAgIHBvc2l0aW9uOiBcXFwiU1xcXCIsXFxuICAgICogICAgICB9LFxcbiAgICAqICAgICAge1xcbiAgICAqICAgICAgICAgIHNoYXJlczogMjUsXFxuICAgICogICAgICAgICAgcHJpY2U6IDEyNSwwMDBcXG4gICAgKiAgICAgICAgICB0eXBlOiBcXFwiTGltaXQgU2VsbCBPcmRlclxcXCIsXFxuICAgICogICAgICAgICAgcG9zaXRpb246IFxcXCJMXFxcIixcXG4gICAgKiAgICAgIH0sXFxuICAgICogIF0sXFxuICAgICogIFNZU0M6IFtcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IDEwMCxcXG4gICAgKiAgICAgICAgICBwcmljZTogMTAsMDAwXFxuICAgICogICAgICAgICAgdHlwZTogXFxcIkxpbWl0IEJ1eSBPcmRlclxcXCIsXFxuICAgICogICAgICAgICAgcG9zaXRpb246IFxcXCJMXFxcIixcXG4gICAgKiAgICAgIH0sXFxuICAgICogIF0sXFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIGluZm9ybWF0aW9uIGZvciBhbGwgdGhlIExpbWl0IGFuZCBTdG9wIE9yZGVycyB5b3UgaGF2ZSBpbiB0aGUgc3RvY2sgbWFya2V0LlxcbiAgICAqL1xcbiAgIGdldE9yZGVycygpOiBTdG9ja09yZGVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSB2b2xhdGlsaXR5IG9mIHRoZSBzcGVjaWZpZWQgc3RvY2suXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogVm9sYXRpbGl0eSByZXByZXNlbnRzIHRoZSBtYXhpbXVtIHBlcmNlbnRhZ2UgYnkgd2hpY2ggYSBzdG9ja+KAmXMgcHJpY2UgY2FuIGNoYW5nZSBldmVyeSB0aWNrLlxcbiAgICAqIFRoZSB2b2xhdGlsaXR5IGlzIHJldHVybmVkIGFzIGEgZGVjaW1hbCB2YWx1ZSwgTk9UIGEgcGVyY2VudGFnZVxcbiAgICAqIChlLmcuIGlmIGEgc3RvY2sgaGFzIGEgdm9sYXRpbGl0eSBvZiAzJSwgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIDAuMDMsIE5PVCAzKS5cXG4gICAgKlxcbiAgICAqIEluIG9yZGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uLCB5b3UgbXVzdCBmaXJzdCBwdXJjaGFzZSBhY2Nlc3MgdG8gdGhlIEZvdXIgU2lnbWEgKDRTKSBNYXJrZXQgRGF0YSBUSVggQVBJLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBWb2xhdGlsaXR5IG9mIHRoZSBzcGVjaWZpZWQgc3RvY2suXFxuICAgICovXFxuICAgZ2V0Vm9sYXRpbGl0eShzeW06IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcHJvYmFiaWxpdHkgdGhhdCB0aGUgc3BlY2lmaWVkIHN0b2Nr4oCZcyBwcmljZSB3aWxsIGluY3JlYXNlIChhcyBvcHBvc2VkIHRvIGRlY3JlYXNlKSBkdXJpbmcgdGhlIG5leHQgdGljay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBUaGUgcHJvYmFiaWxpdHkgaXMgcmV0dXJuZWQgYXMgYSBkZWNpbWFsIHZhbHVlLCBOT1QgYSBwZXJjZW50YWdlXFxuICAgICogKGUuZy4gaWYgYSBzdG9jayBoYXMgYSA2MCUgY2hhbmNlIG9mIGluY3JlYXNpbmcsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAwLjYsIE5PVCA2MCkuXFxuICAgICpcXG4gICAgKiBJbiBvdGhlciB3b3JkcywgaWYgdGhpcyBmdW5jdGlvbiByZXR1cm5lZCAwLjMwIGZvciBhIHN0b2NrLCB0aGVuIHRoaXMgbWVhbnMgdGhhdCB0aGUgc3RvY2vigJlzIHByaWNlIGhhcyBhXFxuICAgICogMzAlIGNoYW5jZSBvZiBpbmNyZWFzaW5nIGFuZCBhIDcwJSBjaGFuY2Ugb2YgZGVjcmVhc2luZyBkdXJpbmcgdGhlIG5leHQgdGljay5cXG4gICAgKlxcbiAgICAqIEluIG9yZGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uLCB5b3UgbXVzdCBmaXJzdCBwdXJjaGFzZSBhY2Nlc3MgdG8gdGhlIEZvdXIgU2lnbWEgKDRTKSBNYXJrZXQgRGF0YSBUSVggQVBJLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBQcm9iYWJpbGl0eSB0aGF0IHRoZSBzcGVjaWZpZWQgc3RvY2vigJlzIHByaWNlIHdpbGwgaW5jcmVhc2UgKGFzIG9wcG9zZWQgdG8gZGVjcmVhc2UpIGR1cmluZyB0aGUgbmV4dCB0aWNrLlxcbiAgICAqL1xcbiAgIGdldEZvcmVjYXN0KHN5bTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSA0UyBNYXJrZXQgRGF0YSBBY2Nlc3MuXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDIuNSBHQlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQgaXQgb3IgaWYgeW91IGFscmVhZHkgaGF2ZSBhY2Nlc3MsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZTRTTWFya2V0RGF0YSgpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSA0UyBNYXJrZXQgRGF0YSBUSVggQVBJIEFjY2Vzcy5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMi41IEdCXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlZCBpdCBvciBpZiB5b3UgYWxyZWFkeSBoYXZlIGFjY2VzcywgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlNFNNYXJrZXREYXRhVGl4QXBpKCk6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBTaW5ndWxhcml0eSBBUElcXG4gICogQHJlbWFya3NcXG4gICogVGhpcyBBUEkgcmVxdWlyZXMgU291cmNlLUZpbGUgNCB0byB1c2UuIFRoZSBSQU0gY29zdCBvZiBhbGwgdGhlc2UgZnVuY3Rpb25zIGlzIG11bHRpcGxpZWQgYnkgMTYvNC8xIGJhc2VkIG9uIFNvdXJjZS1GaWxlIDQgbGV2ZWxzLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNpbmd1bGFyaXR5IHtcXG4gICAvKipcXG4gICAgKiBUYWtlIHVuaXZlcnNpdHkgY2xhc3MuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgdGFraW5nIGEgY291cnNlIGF0IGEgdW5pdmVyc2l0eS5cXG4gICAgKiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAnHdvcmtpbmfigJ0gYWN0aW9uIChzdWNoIGFzIHdvcmtpbmcgYXQgYVxcbiAgICAqIGNvbXBhbnksIGZvciBhIGZhY3Rpb24sIG9yIG9uIGEgcHJvZ3JhbSksIHRoZW4gcnVubmluZyB0aGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseVxcbiAgICAqIGNhbmNlbCB0aGF0IGFjdGlvbiBhbmQgZ2l2ZSB5b3UgeW91ciBlYXJuaW5ncy5cXG4gICAgKlxcbiAgICAqIFRoZSBjb3N0IGFuZCBleHBlcmllbmNlIGdhaW5zIGZvciBhbGwgb2YgdGhlc2UgdW5pdmVyc2l0aWVzIGFuZCBjbGFzc2VzIGFyZSB0aGUgc2FtZSBhc1xcbiAgICAqIGlmIHlvdSB3ZXJlIHRvIG1hbnVhbGx5IHZpc2l0IGFuZCB0YWtlIHRoZXNlIGNsYXNzZXMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdW5pdmVyc2l0eU5hbWUgLSBOYW1lIG9mIHVuaXZlcnNpdHkuIFlvdSBtdXN0IGJlIGluIHRoZSBjb3JyZWN0IGNpdHkgZm9yIHdoYXRldmVyIHVuaXZlcnNpdHkgeW91IHNwZWNpZnkuXFxuICAgICogQHBhcmFtIGNvdXJzZU5hbWUgLSBOYW1lIG9mIGNvdXJzZS5cXG4gICAgKiBAcGFyYW0gZm9jdXMgLSBBY3F1aXJlIHBsYXllciBmb2N1cyBvbiB0aGlzIGNsYXNzLiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gdHJ1ZS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIGFjdGlvbnMgaXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1bml2ZXJzaXR5Q291cnNlKHVuaXZlcnNpdHlOYW1lOiBzdHJpbmcsIGNvdXJzZU5hbWU6IHN0cmluZywgZm9jdXM/OiBib29sZWFuKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogV29ya291dCBhdCB0aGUgZ3ltLlxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuIFxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgd29ya2luZyBvdXQgYXQgYSBneW0gdG8gdHJhaW5cXG4gICAgKiBhIHBhcnRpY3VsYXIgc3RhdC4gSWYgeW91IGFyZSBhbHJlYWR5IGluIHRoZSBtaWRkbGUgb2Ygc29tZSDigJx3b3JraW5n4oCdIGFjdGlvblxcbiAgICAqIChzdWNoIGFzIHdvcmtpbmcgYXQgYSBjb21wYW55LCBmb3IgYSBmYWN0aW9uLCBvciBvbiBhIHByb2dyYW0pLCB0aGVuIHJ1bm5pbmdcXG4gICAgKiB0aGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBjYW5jZWwgdGhhdCBhY3Rpb24gYW5kIGdpdmUgeW91IHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGUgY29zdCBhbmQgZXhwZXJpZW5jZSBnYWlucyBmb3IgYWxsIG9mIHRoZXNlIGd5bXMgYXJlIHRoZSBzYW1lIGFzIGlmIHlvdSB3ZXJlXFxuICAgICogdG8gbWFudWFsbHkgdmlzaXQgdGhlc2UgZ3ltcyBhbmQgdHJhaW5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBneW1OYW1lIC0gTmFtZSBvZiBneW0uIFlvdSBtdXN0IGJlIGluIHRoZSBjb3JyZWN0IGNpdHkgZm9yIHdoYXRldmVyIGd5bSB5b3Ugc3BlY2lmeS5cXG4gICAgKiBAcGFyYW0gc3RhdCAtIFRoZSBzdGF0IHlvdSB3YW50IHRvIHRyYWluLlxcbiAgICAqIEBwYXJhbSBmb2N1cyAtIEFjcXVpcmUgcGxheWVyIGZvY3VzIG9uIHRoaXMgZ3ltIHdvcmtvdXQuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byB0cnVlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYWN0aW9ucyBpcyBzdWNjZXNzZnVsbHkgc3RhcnRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGd5bVdvcmtvdXQoZ3ltTmFtZTogc3RyaW5nLCBzdGF0OiBzdHJpbmcsIGZvY3VzPzogYm9vbGVhbik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRyYXZlbCB0byBhbm90aGVyIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGFsbG93cyB0aGUgcGxheWVyIHRvIHRyYXZlbCB0byBhbnkgY2l0eS4gVGhlIGNvc3QgZm9yIHVzaW5nIHRoaXNcXG4gICAgKiBmdW5jdGlvbiBpcyB0aGUgc2FtZSBhcyB0aGUgY29zdCBmb3IgdHJhdmVsaW5nIHRocm91Z2ggdGhlIFRyYXZlbCBBZ2VuY3kuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eSAtIENpdHkgdG8gdHJhdmVsIHRvLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYWN0aW9ucyBpcyBzdWNjZXNzZnVsLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJhdmVsVG9DaXR5KGNpdHk6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIHRoZSBUT1Igcm91dGVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBhbGxvd3MgeW91IHRvIGF1dG9tYXRpY2FsbHkgcHVyY2hhc2UgYSBUT1Igcm91dGVyLiBUaGUgY29zdCBmb3JcXG4gICAgKiBwdXJjaGFzaW5nIGEgVE9SIHJvdXRlciB1c2luZyB0aGlzIGZ1bmN0aW9uIGlzIHRoZSBzYW1lIGFzIGlmIHlvdSB3ZXJlIHRvXFxuICAgICogbWFudWFsbHkgcHVyY2hhc2Ugb25lLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBhY3Rpb25zIGlzIHN1Y2Nlc3NmdWwsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZVRvcigpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSBhIHByb2dyYW0gZnJvbSB0aGUgZGFyayB3ZWIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGFsbG93cyB5b3UgdG8gYXV0b21hdGljYWxseSBwdXJjaGFzZSBwcm9ncmFtcy4gWW91IE1VU1QgaGF2ZSBhXFxuICAgICogVE9SIHJvdXRlciBpbiBvcmRlciB0byB1c2UgdGhpcyBmdW5jdGlvbi4gVGhlIGNvc3Qgb2YgcHVyY2hhc2luZyBwcm9ncmFtc1xcbiAgICAqIHVzaW5nIHRoaXMgZnVuY3Rpb24gaXMgdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgcHVyY2hhc2luZyB0aGVtIHRocm91Z2ggdGhlIERhcmtcXG4gICAgKiBXZWIgdXNpbmcgdGhlIFRlcm1pbmFsIGJ1eSBjb21tYW5kLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHB1cmNoYXNlUHJvZ3JhbShcXFwiYnJ1dGVzc2guZXhlXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMlxcbiAgICAqIG5zLnB1cmNoYXNlUHJvZ3JhbShcXFwiYnJ1dGVzc2guZXhlXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHByb2dyYW1OYW1lIC0gTmFtZSBvZiBwcm9ncmFtIHRvIHB1cmNoYXNlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNwZWNpZmllZCBwcm9ncmFtIGlzIHB1cmNoYXNlZCwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZVByb2dyYW0ocHJvZ3JhbU5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHRoZSBwbGF5ZXIgaXMgYnVzeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGUgcGxheWVyIGlzIGN1cnJlbnRseSBwZXJmb3JtaW5nIGFuXFxuICAgICog4oCYYWN0aW9u4oCZLiBUaGVzZSBhY3Rpb25zIGluY2x1ZGUgd29ya2luZyBmb3IgYSBjb21wYW55L2ZhY3Rpb24sIHN0dWR5aW5nIGF0IGEgdW5pdmVyaXN0eSxcXG4gICAgKiB3b3JraW5nIG91dCBhdCBhIGd5bSwgY3JlYXRpbmcgYSBwcm9ncmFtLCBjb21taXR0aW5nIGEgY3JpbWUsIG9yIGNhcnJ5aW5nIG91dCBhIEhhY2tpbmcgTWlzc2lvbi5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBpcyBjdXJyZW50bHkgcGVyZm9ybWluZyBhbiDigJhhY3Rpb27igJksIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBpc0J1c3koKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU3RvcCB0aGUgY3VycmVudCBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gZW5kIHdoYXRldmVyIOKAmGFjdGlvbuKAmSB0aGUgcGxheWVyIGlzIGN1cnJlbnRseSBwZXJmb3JtaW5nLlxcbiAgICAqIFRoZSBwbGF5ZXIgd2lsbCByZWNlaXZlIHdoYXRldmVyIG1vbmV5L2V4cGVyaWVuY2UvZXRjLiBoZSBoYXMgZWFybmVkIGZyb20gdGhhdCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBUaGUgYWN0aW9ucyB0aGF0IGNhbiBiZSBzdG9wcGVkIHdpdGggdGhpcyBmdW5jdGlvbiBhcmU6XFxuICAgICpcXG4gICAgKiAqIFN0dWR5aW5nIGF0IGEgdW5pdmVyc2l0eVxcbiAgICAqICogV29ya2luZyBmb3IgYSBjb21wYW55L2ZhY3Rpb25cXG4gICAgKiAqIENyZWF0aW5nIGEgcHJvZ3JhbVxcbiAgICAqICogQ29tbWl0dGluZyBhIENyaW1lXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgYWN0aW9uIHdhcyBlbmRlZC5cXG4gICAgKiBJdCB3aWxsIHJldHVybiBmYWxzZSBpZiB0aGUgcGxheWVyIHdhcyBub3QgcGVyZm9ybWluZyBhbiBhY3Rpb24gd2hlbiB0aGlzIGZ1bmN0aW9uIHdhcyBjYWxsZWQuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXLigJlzIGFjdGlvbiB3YXMgZW5kZWQsIGZhbHNlIGlmIHRoZSBwbGF5ZXIgd2FzIG5vdCBwZXJmb3JtaW5nIGFuIGFjdGlvbi5cXG4gICAgKi9cXG4gICBzdG9wQWN0aW9uKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgaG9tZSBjb21wdXRlciBSQU0uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgdXBncmFkZSBhbW91bnQgb2YgUkFNIG9uIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIuIFRoZSBjb3N0IGlzXFxuICAgICogdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgdG8gZG8gaXQgbWFudWFsbHkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBSQU0gaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgcGxheWVy4oCZcyBob21lIGNvbXB1dGVyIFJBTSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdXBncmFkZUhvbWVSYW0oKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogVXBncmFkZSBob21lIGNvbXB1dGVyIGNvcmVzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHVwZ3JhZGUgYW1vdW50IG9mIGNvcmVzIG9uIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIuIFRoZSBjb3N0IGlzXFxuICAgICogdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgdG8gZG8gaXQgbWFudWFsbHkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBjb3JlcyBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgY29yZXMgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVIb21lQ29yZXMoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB1cGdyYWRpbmcgaG9tZSBSQU0uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMS41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgUkFNLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBSQU0uXFxuICAgICovXFxuICAgZ2V0VXBncmFkZUhvbWVSYW1Db3N0KCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB1cGdyYWRpbmcgaG9tZSBjb3Jlcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiB1cGdyYWRpbmcgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBjb3Jlcy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIENvc3Qgb2YgdXBncmFkaW5nIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgY29yZXMuXFxuICAgICovXFxuICAgZ2V0VXBncmFkZUhvbWVDb3Jlc0Nvc3QoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBXb3JrIGZvciBhIGNvbXBhbnkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBzZXQgeW91IHRvIHN0YXJ0IHdvcmtpbmcgYXQgdGhlIGNvbXBhbnlcXG4gICAgKiBhdCB3aGljaCB5b3UgYXJlIGVtcGxveWVkLiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAnHdvcmtpbmfigJ1cXG4gICAgKiBhY3Rpb24gKHN1Y2ggYXMgd29ya2luZyBmb3IgYSBmYWN0aW9uLCB0cmFpbmluZyBhdCBhIGd5bSwgb3IgY3JlYXRpbmcgYSBwcm9ncmFtKSxcXG4gICAgKiB0aGVuIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2FuY2VsIHRoYXQgYWN0aW9uIGFuZCBnaXZlIHlvdVxcbiAgICAqIHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllciBzdGFydHMgd29ya2luZywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCB3aGVuIHlvdSBhcmUgd29ya2luZyBmb3IgYSBjb21wYW55LCB5b3Ugd2lsbCBub3QgYWN0dWFsbHkgcmVjZWl2ZSB5b3VyIGVhcm5pbmdzIChyZXB1dGF0aW9uLCBtb25leSwgZXhwZXJpZW5jZSkgdW50aWwgeW91IEZJTklTSCB0aGUgYWN0aW9uLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgY29tcGFueSByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKGdldENvbXBhbnlSZXAoQ09NUEFOWSBIRVJFKSA8IFZBTFVFKSB7XFxuICAgICogICAgd29ya0ZvckNvbXBhbnkoKTtcXG4gICAgKiAgICBzbGVlcCg2MDAwMCk7XFxuICAgICogfVxcbiAgICAqIC8vVGhpcyB3YXksIHlvdXIgY29tcGFueSByZXB1dGF0aW9uIHdpbGwgYmUgdXBkYXRlZCBldmVyeSBtaW51dGUuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgY29tcGFueSByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKG5zLmdldENvbXBhbnlSZXAoQ09NUEFOWSBIRVJFKSA8IFZBTFVFKSB7XFxuICAgICogICAgbnMud29ya0ZvckNvbXBhbnkoKTtcXG4gICAgKiAgICBhd2FpdCBucy5zbGVlcCg2MDAwMCk7XFxuICAgICogfVxcbiAgICAqIC8vVGhpcyB3YXksIHlvdXIgY29tcGFueSByZXB1dGF0aW9uIHdpbGwgYmUgdXBkYXRlZCBldmVyeSBtaW51dGUuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiBjb21wYW55IHRvIHdvcmsgZm9yLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLiBPcHRpb25hbC4gSWYgbm90IHNwZWNpZmllZCwgdGhpcyBhcmd1bWVudCBkZWZhdWx0cyB0byB0aGUgbGFzdCBqb2IgdGhhdCB5b3Ugd29ya2VkXFxuICAgICogQHBhcmFtIGZvY3VzIC0gQWNxdWlyZSBwbGF5ZXIgZm9jdXMgb24gdGhpcyB3b3JrIG9wZXJhdGlvbi4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIHRydWUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgcGxheWVyIHN0YXJ0cyB3b3JraW5nLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHdvcmtGb3JDb21wYW55KGNvbXBhbnlOYW1lPzogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBBcHBseSBmb3IgYSBqb2IgYXQgYSBjb21wYW55LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgdHJ5IHRvIGFwcGx5IHRvIHRoZSBzcGVjaWZpZWQgY29tcGFueVxcbiAgICAqIGZvciBhIHBvc2l0aW9uIGluIHRoZSBzcGVjaWZpZWQgZmllbGQuIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgdXNlZCB0b1xcbiAgICAqIGFwcGx5IGZvciBwcm9tb3Rpb25zIGJ5IHNwZWNpZnlpbmcgdGhlIGNvbXBhbnkgYW5kIGZpZWxkIHlvdSBhcmUgYWxyZWFkeVxcbiAgICAqIGVtcGxveWVkIGF0LlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0cnVlIGlmIHlvdSBzdWNjZXNzZnVsbHkgZ2V0IGEgam9iL3Byb21vdGlvbixcXG4gICAgKiBhbmQgZmFsc2Ugb3RoZXJ3aXNlLiBOb3RlIHRoYXQgaWYgeW91IGFyZSB0cnlpbmcgdG8gdXNlIHRoaXMgZnVuY3Rpb24gdG9cXG4gICAgKiBhcHBseSBmb3IgYSBwcm9tb3Rpb24gYW5kIHlvdSBkb27igJl0IGdldCBvbmUsIGl0IHdpbGwgcmV0dXJuIGZhbHNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiBjb21wYW55IHRvIGFwcGx5IHRvLlxcbiAgICAqIEBwYXJhbSBmaWVsZCAtIEZpZWxkIHRvIHdoaWNoIHlvdSB3YW50IHRvIGFwcGx5LlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBzdWNjZXNzZnVsbHkgZ2V0IGEgam9iL3Byb21vdGlvbiwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBhcHBseVRvQ29tcGFueShjb21wYW55TmFtZTogc3RyaW5nLCBmaWVsZDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNvbXBhbnkgcmVwdXRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4gdGhlIGFtb3VudCBvZiByZXB1dGF0aW9uIHlvdSBoYXZlIGF0IHRoZSBzcGVjaWZpZWQgY29tcGFueS5cXG4gICAgKiBJZiB0aGUgY29tcGFueSBwYXNzZWQgaW4gYXMgYW4gYXJndW1lbnQgaXMgaW52YWxpZCwgLTEgd2lsbCBiZSByZXR1cm5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIHJlcHV0YXRpb24geW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqL1xcbiAgIGdldENvbXBhbnlSZXAoY29tcGFueU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNvbXBhbnkgZmF2b3IuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBhbW91bnQgb2YgZmF2b3IgeW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqIElmIHRoZSBjb21wYW55IHBhc3NlZCBpbiBhcyBhbiBhcmd1bWVudCBpcyBpbnZhbGlkLCAtMSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiB0aGUgY29tcGFueS5cXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgZmF2b3IgeW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqL1xcbiAgIGdldENvbXBhbnlGYXZvcihjb21wYW55TmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29tcGFueSBmYXZvciBnYWluLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNzUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgYW1vdW50IG9mIGZhdm9yIHlvdSB3aWxsIGdhaW4gZm9yIHRoZSBzcGVjaWZpZWRcXG4gICAgKiBjb21wYW55IHdoZW4geW91IHJlc2V0IGJ5IGluc3RhbGxpbmcgQXVnbWVudGF0aW9ucy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGZhdm9yIHlvdSBnYWluIGF0IHRoZSBzcGVjaWZpZWQgY29tcGFueSB3aGVuIHlvdSByZXNldCBieSBpbnN0YWxsaW5nIEF1Z21lbnRhdGlvbnMuXFxuICAgICovXFxuICAgZ2V0Q29tcGFueUZhdm9yR2Fpbihjb21wYW55TmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBjdXJyZW50IGZhY3Rpb24gaW52aXRhdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIG5hbWUgb2YgYWxsIEZhY3Rpb25zIHlvdSBjdXJyZW50bHkgaGF2ZSBvdXN0YW5kaW5nIGludml0YXRpb25zIGZyb20uXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIHRoZSBuYW1lIG9mIGFsbCBGYWN0aW9ucyB5b3UgY3VycmVudGx5IGhhdmUgb3VzdGFuZGluZyBpbnZpdGF0aW9ucyBmcm9tLlxcbiAgICAqL1xcbiAgIGNoZWNrRmFjdGlvbkludml0YXRpb25zKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBKb2luIGEgZmFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAzIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGFjY2VwdCBhbiBpbnZpdGF0aW9uIGZyb20gYSBmYWN0aW9uIGFuZCBqb2luIGl0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gam9pbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHBsYXllciBqb2luZWQgdGhlIGZhY3Rpb24sIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgam9pbkZhY3Rpb24oZmFjdGlvbjogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogV29yayBmb3IgYSBmYWN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgc2V0IHlvdSB0byBzdGFydCB3b3JraW5nIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24uXFxuICAgICogT2J2aW91c2x5LCB5b3UgbXVzdCBiZSBhIG1lbWJlciBvZiB0aGUgZmFjdGlvbiBvciBlbHNlIHRoaXMgZnVuY3Rpb24gd2lsbCBmYWlsLiBJZlxcbiAgICAqIHlvdSBhcmUgYWxyZWFkeSBpbiB0aGUgbWlkZGxlIG9mIHNvbWUg4oCcd29ya2luZ+KAnSBhY3Rpb24gKHN1Y2ggYXMgd29ya2luZyBmb3IgYSBjb21wYW55LFxcbiAgICAqIHRyYWluaW5nIGF0IGEgZ3ltLCBvciBjcmVhdGluZyBhIHByb2dyYW0pLCB0aGVuIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHlcXG4gICAgKiBjYW5jZWwgdGhhdCBhY3Rpb24gYW5kIGdpdmUgeW91IHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBzdGFydCB3b3JraW5nIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24sIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBOb3RlIHRoYXQgd2hlbiB5b3UgYXJlIHdvcmtpbmcgZm9yIGEgZmFjdGlvbiwgeW91IHdpbGwgbm90IGFjdHVhbGx5IHJlY2VpdmUgeW91ciBlYXJuaW5ncyAocmVwdXRhdGlvbiwgZXhwZXJpZW5jZSkgdW50aWwgeW91IEZJTklTSCB0aGUgYWN0aW9uLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgZmFjdGlvbiByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKGdldEZhY3Rpb25SZXAoRkFDVElPTiBOQU1FKSA8IFZBTFVFKSB7XFxuICAgICogICAgd29ya0ZvckZhY3Rpb24oRkFDTkFNRSwgV09SS1RZUEUpO1xcbiAgICAqICAgIHNsZWVwKDYwMDAwKTtcXG4gICAgKiB9XFxuICAgICogLy9UaGlzIHdheSwgeW91ciBmYWN0aW9uIHJlcHV0YXRpb24gd2lsbCBiZSB1cGRhdGVkIGV2ZXJ5IG1pbnV0ZS5cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vSWYgeW91IG9ubHkgd2FudCB0byB3b3JrIHVudGlsIHlvdSBnZXQgMTAwLDAwMCBmYWN0aW9uIHJlcHV0YXRpb24uIE9uZSBzbWFsbCBoYWNrIHRvIGdldCBhcm91bmQgdGhpcyBpcyB0byBjb250aW51b3VzbHkgcmVzdGFydCB0aGUgYWN0aW9uIHRvIHJlY2VpdmUgeW91ciBlYXJuaW5nczpcXG4gICAgKiB3aGlsZSAobnMuZ2V0RmFjdGlvblJlcChGQUNUSU9OIE5BTUUpIDwgVkFMVUUpIHtcXG4gICAgKiAgICBucy53b3JrRm9yRmFjdGlvbihGQUNOQU1FLCBXT1JLVFlQRSk7XFxuICAgICogICAgYXdhaXQgbnMuc2xlZXAoNjAwMDApO1xcbiAgICAqIH1cXG4gICAgKiAvL1RoaXMgd2F5LCB5b3VyIGZhY3Rpb24gcmVwdXRhdGlvbiB3aWxsIGJlIHVwZGF0ZWQgZXZlcnkgbWludXRlLlxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uIHRvIHdvcmsgZm9yLlxcbiAgICAqIEBwYXJhbSB3b3JrVHlwZSAtIFR5cGUgb2Ygd29yayB0byBwZXJmb3JtIGZvciB0aGUgZmFjdGlvbi5cXG4gICAgKiBAcGFyYW0gZm9jdXMgLSBBY3F1aXJlIHBsYXllciBmb2N1cyBvbiB0aGlzIHdvcmsgb3BlcmF0aW9uLiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gdHJ1ZS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgc3RhcnRzIHdvcmtpbmcsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgd29ya0ZvckZhY3Rpb24oZmFjdGlvbjogc3RyaW5nLCB3b3JrVHlwZTogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgZmFjdGlvbiByZXB1dGF0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBhbW91bnQgb2YgcmVwdXRhdGlvbiB5b3UgaGF2ZSBmb3IgdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gd29yayBmb3IuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIHJlcHV0YXRpb24geW91IGhhdmUgZm9yIHRoZSBzcGVjaWZpZWQgZmFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRGYWN0aW9uUmVwKGZhY3Rpb246IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGZhY3Rpb24gZmF2b3IuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIGFtb3VudCBvZiBmYXZvciB5b3UgaGF2ZSBmb3IgdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24uXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGZhdm9yIHlvdSBoYXZlIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0RmFjdGlvbkZhdm9yKGZhY3Rpb246IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGZhY3Rpb24gZmF2b3IgZ2Fpbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjc1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgYW1vdW50IG9mIGZhdm9yIHlvdSB3aWxsIGdhaW4gZm9yIHRoZSBzcGVjaWZpZWRcXG4gICAgKiBmYWN0aW9uIHdoZW4geW91IHJlc2V0IGJ5IGluc3RhbGxpbmcgQXVnbWVudGF0aW9ucy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFtb3VudCBvZiBmYXZvciB5b3Ugd2lsbCBnYWluIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24gd2hlbiB5b3UgcmVzZXQgYnkgaW5zdGFsbGluZyBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEZhY3Rpb25GYXZvckdhaW4oZmFjdGlvbjogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBEb25hdGUgdG8gYSBmYWN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gZG9uYXRlIG1vbmV5IHRvIHRoZSBzcGVjaWZpZWQgZmFjdGlvbiBpbiBleGNoYW5nZSBmb3IgcmVwdXRhdGlvbi5cXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBkb25hdGUgdGhlIG1vbmV5LCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gZG9uYXRlIHRvLlxcbiAgICAqIEBwYXJhbSBhbW91bnQgLSBBbW91bnQgb2YgbW9uZXkgdG8gZG9uYXRlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIG1vbmV5IHdhcyBkb25hdGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGRvbmF0ZVRvRmFjdGlvbihmYWN0aW9uOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgcHJvZ3JhbS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgd29ya2luZyBvbiBjcmVhdGluZyB0aGVcXG4gICAgKiBzcGVjaWZpZWQgcHJvZ3JhbS4gSWYgeW91IGFyZSBhbHJlYWR5IGluIHRoZSBtaWRkbGUgb2Ygc29tZSDigJx3b3JraW5n4oCdIGFjdGlvblxcbiAgICAqIChzdWNoIGFzIHdvcmtpbmcgZm9yIGEgY29tcGFueSwgdHJhaW5pbmcgYXQgYSBneW0sIG9yIHRha2luZyBhIGNvdXJzZSksIHRoZW5cXG4gICAgKiBydW5uaW5nIHRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGNhbmNlbCB0aGF0IGFjdGlvbiBhbmQgZ2l2ZSB5b3UgeW91clxcbiAgICAqIGVhcm5pbmdzLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBzdGFydCB3b3JraW5nIG9uIHRoZSBzcGVjaWZpZWQgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCBjcmVhdGluZyBhIHByb2dyYW0gdXNpbmcgdGhpcyBmdW5jdGlvbiBoYXMgdGhlIHNhbWUgaGFja2luZyBsZXZlbCByZXF1aXJlbWVudHMgYXMgaXQgbm9ybWFsbHkgd291bGQuIFRoZXNlIGxldmVsIHJlcXVpcmVtZW50cyBhcmU6XFxuICAgICogKiBCcnV0ZVNTSC5leGU6IDUwXFxuICAgICogKiBGVFBDcmFjay5leGU6IDEwMFxcbiAgICAqICogcmVsYXlTTVRQLmV4ZTogMjUwXFxuICAgICogKiBIVFRQV29ybS5leGU6IDUwMFxcbiAgICAqICogU1FMSW5qZWN0LmV4ZTogNzUwXFxuICAgICogKiBEZWVwc2NhblYxLmV4ZTogNzVcXG4gICAgKiAqIERlZXBzY2FuVjIuZXhlOiA0MDBcXG4gICAgKiAqIFNlcnZlclByb2ZpbGVyLmV4ZTogNzVcXG4gICAgKiAqIEF1dG9MaW5rLmV4ZTogMjVcXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogY3JlYXRlUHJvZ3JhbSjigJxyZWxheXNtdHAuZXhl4oCdKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmNyZWF0ZVByb2dyYW0o4oCccmVsYXlzbXRwLmV4ZeKAnSk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHByb2dyYW0gLSBOYW1lIG9mIHByb2dyYW0gdG8gY3JlYXRlLlxcbiAgICAqIEBwYXJhbSBmb2N1cyAtIEFjcXVpcmUgcGxheWVyIGZvY3VzIG9uIHRoaXMgcHJvZ3JhbSBjcmVhdGlvbi4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIHRydWUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IHN0YXJ0IHdvcmtpbmcgb24gdGhlIHNwZWNpZmllZCBwcm9ncmFtLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNyZWF0ZVByb2dyYW0ocHJvZ3JhbTogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDb21taXQgYSBjcmltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBhdXRvbWF0aWNhbGx5IGF0dGVtcHQgdG8gY29tbWl0IGNyaW1lcy5cXG4gICAgKiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAmHdvcmtpbmfigJkgYWN0aW9uIChzdWNoXFxuICAgICogYXMgd29ya2luZyBmb3IgYSBjb21wYW55IG9yIHRyYWluaW5nIGF0IGEgZ3ltKSwgdGhlbiBydW5uaW5nIHRoaXNcXG4gICAgKiBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2FuY2VsIHRoYXQgYWN0aW9uIGFuZCBnaXZlIHlvdSB5b3VyXFxuICAgICogZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gYXR0ZW1wdCB0aGVcXG4gICAgKiBzcGVjaWZpZWQgY3JpbWUgKGUuZyBJdCB0YWtlcyA2MCBzZWNvbmRzIHRvIGF0dGVtcHQgdGhlIOKAmFJvYiBTdG9yZeKAmSBjcmltZSxcXG4gICAgKiBzbyBydW5uaW5nIGBjb21taXRDcmltZSgncm9iIHN0b3JlJylgIHdpbGwgcmV0dXJuIDYwLDAwMCkuXFxuICAgICpcXG4gICAgKiBXYXJuaW5nOiBJIGRvIG5vdCByZWNvbW1lbmQgdXNpbmcgdGhlIHRpbWUgcmV0dXJuZWQgZnJvbSB0aGlzIGZ1bmN0aW9uIHRvIHRyeVxcbiAgICAqIGFuZCBzY2hlZHVsZSB5b3VyIGNyaW1lIGF0dGVtcHRzLiBJbnN0ZWFkLCBJIHdvdWxkIHVzZSB0aGUgaXNCdXN5IFNpbmd1bGFyaXR5XFxuICAgICogZnVuY3Rpb24gdG8gY2hlY2sgd2hldGhlciB5b3UgaGF2ZSBmaW5pc2hlZCBhdHRlbXB0aW5nIGEgY3JpbWUuIFRoaXMgaXMgYmVjYXVzZVxcbiAgICAqIGFsdGhvdWdoIHRoZSBnYW1lIHNldHMgYSBjZXJ0YWluIGNyaW1lIHRvIGJlIFggYW1vdW50IG9mIHNlY29uZHMsIHRoZXJlIGlzIG5vXFxuICAgICogZ3VhcmFudGVlIHRoYXQgeW91ciBicm93c2VyIHdpbGwgZm9sbG93IHRoYXQgdGltZSBsaW1pdC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUgdG8gYXR0ZW1wdC5cXG4gICAgKiBAcmV0dXJucyBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBhdHRlbXB0IHRoZSBzcGVjaWZpZWQgY3JpbWUuXFxuICAgICovXFxuICAgY29tbWl0Q3JpbWUoY3JpbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNoYW5jZSB0byBzdWNjZXNzZnVsbHkgY29tbWl0IGEgY3JpbWUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgeW91ciBjaGFuY2Ugb2Ygc3VjY2VzcyBhdCBjb21taXRpbmcgdGhlIHNwZWNpZmllZCBjcmltZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUuXFxuICAgICogQHJldHVybnMgQ2hhbmNlIG9mIHN1Y2Nlc3MgYXQgY29tbWl0aW5nIHRoZSBzcGVjaWZpZWQgY3JpbWUuXFxuICAgICovXFxuICAgZ2V0Q3JpbWVDaGFuY2UoY3JpbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIHJlbGF0ZWQgdG8gYSBjcmltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHN0YXRzIG9mIHRoZSBjcmltZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUuIE5vdCBjYXNlLXNlbnNpdGl2ZVxcbiAgICAqIEByZXR1cm5zIFRoZSBzdGF0cyBvZiB0aGUgY3JpbWUuXFxuICAgICovXFxuICAgZ2V0Q3JpbWVTdGF0cyhjcmltZTogc3RyaW5nKTogQ3JpbWVTdGF0cztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGEgbGlzdCBvZiBvd25lZCBhdWdtZW50YXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgbmFtZXMgKGFzIHN0cmluZ3MpIG9mIGFsbCBBdWdtZW50YXRpb25zIHlvdSBoYXZlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHB1cmNoYXNlZCAtIFNwZWNpZmllcyB3aGV0aGVyIHRoZSByZXR1cm5lZCBhcnJheSBzaG91bGQgaW5jbHVkZSBBdWdtZW50YXRpb25zIHlvdSBoYXZlIHB1cmNoYXNlZCBidXQgbm90IHlldCBpbnN0YWxsZWQuIEJ5IGRlZmF1bHQsIHRoaXMgYXJndW1lbnQgaXMgZmFsc2Ugd2hpY2ggbWVhbnMgdGhhdCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgTk9UIGhhdmUgdGhlIHB1cmNoYXNlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIChhcyBzdHJpbmdzKSBvZiBhbGwgQXVnbWVudGF0aW9ucyB5b3UgaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRPd25lZEF1Z21lbnRhdGlvbnMocHVyY2hhc2VkPzogYm9vbGVhbik6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYSBsaXN0IG9mIGF1Z21lbnRhdGlvbiBhdmFpbGFibGUgZnJvbSBhIGZhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIChhcyBzdHJpbmdzKSBvZiBhbGwgQXVnbWVudGF0aW9uc1xcbiAgICAqIHRoYXQgYXJlIGF2YWlsYWJsZSBmcm9tIHRoZSBzcGVjaWZpZWQgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvbihmYWN0aW9uOiBzdHJpbmcpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmUtcmVxdWlzaXRlIG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhbiBhcnJheSB3aXRoIHRoZSBuYW1lcyBvZiB0aGUgcHJlcmVxdWlzaXRlIEF1Z21lbnRhdGlvbihzKSBmb3IgdGhlIHNwZWNpZmllZCBBdWdtZW50YXRpb24uXFxuICAgICogSWYgdGhlcmUgYXJlIG5vIHByZXJlcXVpc2l0ZXMsIGEgYmxhbmsgYXJyYXkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gYXVnTmFtZSAtIE5hbWUgb2YgQXVnbWVudGF0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdGhlIG5hbWVzIG9mIHRoZSBwcmVyZXF1aXNpdGUgQXVnbWVudGF0aW9uKHMpIGZvciB0aGUgc3BlY2lmaWVkIEF1Z21lbnRhdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25QcmVyZXEoYXVnTmFtZTogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgcHJpY2UgYW5kIHJlcHV0YXRpb24gb2YgYW4gYXVnbWVudGF0aW9uLlxcbiAgICAqIEBkZXByZWNhdGVkIHVzZSBnZXRBdWdtZW50YXRpb25QcmljZSBnZXRBdWdtZW50YXRpb25SZXBDb3N0XFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgd2l0aCB0d28gZWxlbWVudHMgdGhhdCBnaXZlcyB0aGUgY29zdCBmb3JcXG4gICAgKiB0aGUgc3BlY2lmaWVkIEF1Z21lbnRhdGlvbi4gVGhlIGZpcnN0IGVsZW1lbnQgaW4gdGhlIHJldHVybmVkIGFycmF5IGlzIHRoZVxcbiAgICAqIHJlcHV0YXRpb24gcmVxdWlyZW1lbnQgb2YgdGhlIEF1Z21lbnRhdGlvbiwgYW5kIHRoZSBzZWNvbmQgZWxlbWVudCBpcyB0aGVcXG4gICAgKiBtb25leSBjb3N0LlxcbiAgICAqXFxuICAgICogSWYgYW4gaW52YWxpZCBBdWdtZW50YXRpb24gbmFtZSBpcyBwYXNzZWQgaW4gZm9yIHRoZSBhdWdOYW1lIGFyZ3VtZW50LCB0aGlzXFxuICAgICogZnVuY3Rpb24gd2lsbCByZXR1cm4gdGhlIGFycmF5IFstMSwgLTFdLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGF1Z05hbWUgLSBOYW1lIG9mIEF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIGZpcnN0IGVsZW1lbnQgYXMgYSByZXB1dGF0aW9uIHJlcXVpcmVtZW50IGFuZCBzZWNvbmQgZWxlbWVudCBhcyB0aGUgbW9uZXkgY29zdC5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25Db3N0KGF1Z05hbWU6IHN0cmluZyk6IFtudW1iZXIsIG51bWJlcl07XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBwcmljZSBvZiBhbiBhdWdtZW50YXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBhdWdOYW1lIC0gTmFtZSBvZiBBdWdtZW50YXRpb24uXFxuICAgICogQHJldHVybnMgUHJpY2Ugb2YgdGhlIGF1Z21lbnRhdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25QcmljZShhdWdOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCByZXB1dGF0aW9uIHJlcXVpcmVtZW50IG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogQHBhcmFtIGF1Z05hbWUgLSBOYW1lIG9mIEF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBSZXB1dGF0aW9uIHJlcXVpcmVtZW50IG9mIHRoZSBhdWdtZW50YXRpb24uXFxuICAgICovXFxuICAgZ2V0QXVnbWVudGF0aW9uUmVwUmVxKGF1Z05hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUHVyY2hhc2UgYW4gYXVnbWVudGF0aW9uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgdHJ5IHRvIHB1cmNoYXNlIHRoZSBzcGVjaWZpZWQgQXVnbWVudGF0aW9uIHRocm91Z2ggdGhlIGdpdmVuIEZhY3Rpb24uXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIEF1Z21lbnRhdGlvbiBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gcHVyY2hhc2UgQXVnbWVudGF0aW9uIGZyb20uXFxuICAgICogQHBhcmFtIGF1Z21lbnRhdGlvbiAtIE5hbWUgb2YgQXVnbWVudGF0aW9uIHRvIHB1cmNoYXNlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIEF1Z21lbnRhdGlvbiBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlQXVnbWVudGF0aW9uKGZhY3Rpb246IHN0cmluZywgYXVnbWVudGF0aW9uOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHN0YXRzIG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhdWdtZW50YXRpb24gc3RhdHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgQXVnbWVudGF0aW9uLiBDQVNFLVNFTlNJVElWRS5cXG4gICAgKiBAcmV0dXJucyBBdWdtZW50YXRpb24gc3RhdHMuXFxuICAgICovXFxuICAgZ2V0QXVnbWVudGF0aW9uU3RhdHMobmFtZTogc3RyaW5nKTogQXVnbWVudGF0aW9uU3RhdHM7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEluc3RhbGwgeW91ciBwdXJjaGFzZWQgYXVnbWVudGF0aW9ucy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGluc3RhbGwgeW91ciBBdWdtZW50YXRpb25zLCByZXNldHRpbmcgdGhlIGdhbWUgYXMgdXN1YWwuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2JTY3JpcHQgLSBUaGlzIGlzIGEgc2NyaXB0IHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJ1biBhZnRlciBBdWdtZW50YXRpb25zIGFyZSBpbnN0YWxsZWQgKGFmdGVyIHRoZSByZXNldCkuIFRoaXMgc2NyaXB0IHdpbGwgYmUgcnVuIHdpdGggbm8gYXJndW1lbnRzIGFuZCAxIHRocmVhZC4gSXQgbXVzdCBiZSBsb2NhdGVkIG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKi9cXG4gICBpbnN0YWxsQXVnbWVudGF0aW9ucyhjYlNjcmlwdD86IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIFBsYXllcuKAmXMgc3RhdHMuXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlIGdldFBsYXllclxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiByZXMgPSBnZXRTdGF0cygpO1xcbiAgICAqIHByaW50KCdNeSBjaGFyaXNtYSBsZXZlbCBpczogJyArIHJlcy5jaGFyaXNtYSk7XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgT2JqZWN0IHdpdGggdGhlIFBsYXllcuKAmXMgc3RhdHMuXFxuICAgICovXFxuICAgZ2V0U3RhdHMoKTogUGxheWVyU2tpbGxzO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIGFuIG9iamVjdCB3aXRoIHZhcmlvdXMgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBjaGFyYWN0ZXIuXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlIGdldFBsYXllclxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCB3aXRoIHZhcmlvdXMgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBjaGFyYWN0ZXIuXFxuICAgICovXFxuICAgZ2V0Q2hhcmFjdGVySW5mb3JtYXRpb24oKTogQ2hhcmFjdGVySW5mbztcXG4gXFxuICAgLyoqXFxuICAgICogSG9zcGl0YWxpemUgdGhlIHBsYXllci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjI1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRoZSBjb3N0IG9mIHRoZSBob3NwaXRhbGl6YXRpb24uXFxuICAgICovXFxuICAgaG9zcGl0YWxpemUoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBTb2Z0IHJlc2V0IHRoZSBnYW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHBlcmZvcm0gYSByZXNldCBldmVuIGlmIHlvdSBkb27igJl0IGhhdmUgYW55IGF1Z21lbnRhdGlvbiBpbnN0YWxsZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2JTY3JpcHQgLSBUaGlzIGlzIGEgc2NyaXB0IHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJ1biBhZnRlciBBdWdtZW50YXRpb25zIGFyZSBpbnN0YWxsZWQgKGFmdGVyIHRoZSByZXNldCkuIFRoaXMgc2NyaXB0IHdpbGwgYmUgcnVuIHdpdGggbm8gYXJndW1lbnRzIGFuZCAxIHRocmVhZC4gSXQgbXVzdCBiZSBsb2NhdGVkIG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKi9cXG4gICBzb2Z0UmVzZXQoY2JTY3JpcHQ6IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdvIHRvIGEgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBNb3ZlIHRoZSBwbGF5ZXIgdG8gYSBzcGVjaWZpYyBsb2NhdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBsb2NhdGlvbk5hbWUgLSBOYW1lIG9mIHRoZSBsb2NhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgd2FzIG1vdmVkIHRoZXJlLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgZ29Ub0xvY2F0aW9uKGxvY2F0aW9uTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE5hbWUgb2YgdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldEN1cnJlbnRTZXJ2ZXIoKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBDb25uZWN0IHRvIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUnVuIHRoZSBjb25uZWN0IEhPU1ROQU1FIGNvbW1hbmQgaW4gdGhlIHRlcm1pbmFsLiBDYW4gb25seSBjb25uZWN0IHRvIG5laWdoYm9ycy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGNvbm5lY3QgY29tbWFuZCB3YXMgc3VjY2Vzc2Z1bCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNvbm5lY3QoaG9zdG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1biB0aGUgaGFjayBjb21tYW5kIGluIHRoZSB0ZXJtaW5hbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFtb3VudCBvZiBtb25leSBzdG9sZW4gYnkgbWFudWFsIGhhY2tpbmcuXFxuICAgICovXFxuICAgbWFudWFsSGFjaygpOiBQcm9taXNlPG51bWJlcj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1biB0aGUgYmFja2Rvb3IgY29tbWFuZCBpbiB0aGUgdGVybWluYWwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBQcm9taXNlIHdhaXRpbmcgZm9yIHRoZSBpbnN0YWxsYXRpb24gdG8gZmluaXNoLlxcbiAgICAqL1xcbiAgIGluc3RhbGxCYWNrZG9vcigpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB0aGUgcGxheWVyIGlzIGZvY3VzZWQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBpcyBmb2N1c2VkLlxcbiAgICAqL1xcbiAgIGlzRm9jdXNlZCgpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBTZXQgdGhlIHBsYXllcnMgZm9jdXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBmb2N1cyB3YXMgY2hhbmdlZC5cXG4gICAgKi9cXG4gICBzZXRGb2N1cyhmb2N1czogYm9vbGVhbik6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IEFQSVxcbiAgKiBAcmVtYXJrc1xcbiAgKiBOb3QgYWxsIHRoZXNlIGZ1bmN0aW9ucyBhcmUgaW1tZWRpYXRlbHkgYXZhaWxhYmxlLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEhhY2tuZXQge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMgeW91IG93bi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgSGFja25ldCBOb2RlcyB5b3Ugb3duLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMuXFxuICAgICovXFxuICAgbnVtTm9kZXMoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG1heGltdW0gbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgbWF4aW11bSBudW1iZXIgb2YgaGFja25ldCBub2Rlcy5cXG4gICAgKi9cXG4gICBtYXhOdW1Ob2RlcygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgbmV3IGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBQdXJjaGFzZXMgYSBuZXcgSGFja25ldCBOb2RlLiBSZXR1cm5zIGEgbnVtYmVyIHdpdGggdGhlIGluZGV4IG9mIHRoZVxcbiAgICAqIEhhY2tuZXQgTm9kZS4gVGhpcyBpbmRleCBpcyBlcXVpdmFsZW50IHRvIHRoZSBudW1iZXIgYXQgdGhlIGVuZCBvZlxcbiAgICAqIHRoZSBIYWNrbmV0IE5vZGXigJlzIG5hbWUgKGUuZyBUaGUgSGFja25ldCBOb2RlIG5hbWVkIGBoYWNrbmV0LW5vZGUtNGBcXG4gICAgKiB3aWxsIGhhdmUgYW4gaW5kZXggb2YgNCkuXFxuICAgICpcXG4gICAgKiBJZiB0aGUgcGxheWVyIGNhbm5vdCBhZmZvcmQgdG8gcHVyY2hhc2UgYSBuZXcgSGFja25ldCBOb2RlIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIC0xLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVGhlIGluZGV4IG9mIHRoZSBIYWNrbmV0IE5vZGUgb3IgaWYgdGhlIHBsYXllciBjYW5ub3QgYWZmb3JkIHRvIHB1cmNoYXNlIGEgbmV3IEhhY2tuZXQgTm9kZSB0aGUgZnVuY3Rpb24gd2lsbCByZXR1cm4gLTEuXFxuICAgICovXFxuICAgcHVyY2hhc2VOb2RlKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB0aGUgbmV4dCBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiBwdXJjaGFzaW5nIGEgbmV3IEhhY2tuZXQgTm9kZS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIENvc3Qgb2YgcHVyY2hhc2luZyBhIG5ldyBIYWNrbmV0IE5vZGUuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VOb2RlQ29zdCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgc3RhdHMgb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyBhIHZhcmlldHkgb2Ygc3RhdHMgYWJvdXQgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUuXFxuICAgICpcXG4gICAgKiBOb3RlIHRoYXQgZm9yIEhhY2tuZXQgTm9kZXMsIHByb2R1Y3Rpb24gcmVmZXJzIHRvIHRoZSBhbW91bnQgb2YgbW9uZXkgdGhlIG5vZGUgZ2VuZXJhdGVzLlxcbiAgICAqIEZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIEhhY2tuZXQgTm9kZXMpLCBwcm9kdWN0aW9uIHJlZmVycyB0byB0aGVcXG4gICAgKiBhbW91bnQgb2YgaGFzaGVzIHRoZSBub2RlIGdlbmVyYXRlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlXFxuICAgICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgYSB2YXJpZXR5IG9mIHN0YXRzIGFib3V0IHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlLlxcbiAgICAqL1xcbiAgIGdldE5vZGVTdGF0cyhpbmRleDogbnVtYmVyKTogTm9kZVN0YXRzO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHRoZSBsZXZlbCBvZiBhIGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUcmllcyB0byB1cGdyYWRlIHRoZSBsZXZlbCBvZiB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSBieSBuLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIGxldmVsIGlzIHN1Y2Nlc3NmdWxseSB1cGdyYWRlZCBieSBuXFxuICAgICogb3IgaWYgaXQgaXMgdXBncmFkZWQgYnkgc29tZSBwb3NpdGl2ZSBhbW91bnQgYW5kIHRoZSBOb2RlIHJlYWNoZXMgaXRzIG1heCBsZXZlbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGluZGV4IC0gSW5kZXgvSWRlbnRpZmllciBvZiBIYWNrbmV0IE5vZGUuXFxuICAgICogQHBhcmFtIG4gLSBOdW1iZXIgb2YgbGV2ZWxzIHRvIHB1cmNoYXNlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIGxldmVsIGlzIHN1Y2Nlc3NmdWxseSB1cGdyYWRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVMZXZlbChpbmRleDogbnVtYmVyLCBuOiBudW1iZXIpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHRoZSBSQU0gb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVHJpZXMgdG8gdXBncmFkZSB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZeKAmXMgUkFNIG4gdGltZXMuXFxuICAgICogTm90ZSB0aGF0IGVhY2ggdXBncmFkZSBkb3VibGVzIHRoZSBOb2Rl4oCZcyBSQU0uXFxuICAgICogU28gdGhpcyBpcyBlcXVpdmFsZW50IHRvIG11bHRpcGx5aW5nIHRoZSBOb2Rl4oCZcyBSQU0gYnkgMiBuLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIFJBTSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQgbiB0aW1lc1xcbiAgICAqIG9yIGlmIGl0IGlzIHVwZ3JhZGVkIHNvbWUgcG9zaXRpdmUgbnVtYmVyIG9mIHRpbWVzIGFuZCB0aGUgTm9kZSByZWFjaGVzIGl0IG1heCBSQU0uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIG9mIHRpbWVzIHRvIHVwZ3JhZGUgUkFNLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIHJhbSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1cGdyYWRlUmFtKGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgdGhlIGNvcmUgb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVHJpZXMgdG8gcHVyY2hhc2UgbiBjb3JlcyBmb3IgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgaXQgc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlcyBuIGNvcmVzIGZvciB0aGUgSGFja25ldCBOb2RlXFxuICAgICogb3IgaWYgaXQgcHVyY2hhc2VzIHNvbWUgcG9zaXRpdmUgYW1vdW50IGFuZCB0aGUgTm9kZSByZWFjaGVzIGl0cyBtYXggbnVtYmVyIG9mIGNvcmVzLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiBjb3JlcyB0byBwdXJjaGFzZS4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgSGFja25ldCBOb2Rl4oCZcyBjb3JlcyBhcmUgc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVDb3JlKGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgdGhlIGNhY2hlIG9mIGEgaGFja25ldCBub2RlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFRyaWVzIHRvIHVwZ3JhZGUgdGhlIHNwZWNpZmllZCBIYWNrbmV0IFNlcnZlcuKAmXMgY2FjaGUgbiB0aW1lcy5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiBpdCBzdWNjZXNzZnVsbHkgdXBncmFkZXMgdGhlIFNlcnZlcuKAmXMgY2FjaGUgbiB0aW1lcyxcXG4gICAgKiBvciBpZiBpdCBwdXJjaGFzZXMgc29tZSBwb3NpdGl2ZSBhbW91bnQgYW5kIHRoZSBTZXJ2ZXIgcmVhY2hlcyBpdHMgbWF4IGNhY2hlIGxldmVsLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiBjYWNoZSBsZXZlbHMgdG8gcHVyY2hhc2UuIE11c3QgYmUgcG9zaXRpdmUuIFJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIEhhY2tuZXQgTm9kZeKAmXMgY29yZXMgYXJlIHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1cGdyYWRlQ2FjaGUoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgbGV2ZWxzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGJ5IG4gbGV2ZWxzLlxcbiAgICAqXFxuICAgICogSWYgYW4gaW52YWxpZCB2YWx1ZSBmb3IgbiBpcyBwcm92aWRlZCwgdGhlbiB0aGlzIGZ1bmN0aW9uIHJldHVybnMgMC5cXG4gICAgKiBJZiB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSBpcyBhbHJlYWR5IGF0IG1heCBsZXZlbCwgdGhlbiBJbmZpbml0eSBpcyByZXR1cm5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIG9mIGxldmVscyB0byB1cGdyYWRlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBDb3N0IG9mIHVwZ3JhZGluZyB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZS5cXG4gICAgKi9cXG4gICBnZXRMZXZlbFVwZ3JhZGVDb3N0KGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgUkFNLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBSQU0gb2YgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgbiB0aW1lcy5cXG4gICAgKlxcbiAgICAqIElmIGFuIGludmFsaWQgdmFsdWUgZm9yIG4gaXMgcHJvdmlkZWQsIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIDAuXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgaXMgYWxyZWFkeSBhdCBtYXggbGV2ZWwsIHRoZW4gSW5maW5pdHkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiB0aW1lcyB0byB1cGdyYWRlIFJBTS4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUncyByYW0uXFxuICAgICovXFxuICAgZ2V0UmFtVXBncmFkZUNvc3QoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgbm9kZSBjb3Jlcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyB0aGUgbnVtYmVyIG9mIGNvcmVzIG9mIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGJ5IG4uXFxuICAgICpcXG4gICAgKiBJZiBhbiBpbnZhbGlkIHZhbHVlIGZvciBuIGlzIHByb3ZpZGVkLCB0aGVuIHRoaXMgZnVuY3Rpb24gcmV0dXJucyAwLlxcbiAgICAqIElmIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGlzIGFscmVhZHkgYXQgbWF4IGxldmVsLCB0aGVuIEluZmluaXR5IGlzIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGluZGV4IC0gSW5kZXgvSWRlbnRpZmllciBvZiBIYWNrbmV0IE5vZGUuXFxuICAgICogQHBhcmFtIG4gLSBOdW1iZXIgb2YgdGltZXMgdG8gdXBncmFkZSBjb3Jlcy4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUncyBudW1iZXIgb2YgY29yZXMuXFxuICAgICovXFxuICAgZ2V0Q29yZVVwZ3JhZGVDb3N0KGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgY2FjaGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiB1cGdyYWRpbmcgdGhlIGNhY2hlIGxldmVsIG9mIHRoZSBzcGVjaWZpZWQgSGFja25ldCBTZXJ2ZXIgYnkgbi5cXG4gICAgKlxcbiAgICAqIElmIGFuIGludmFsaWQgdmFsdWUgZm9yIG4gaXMgcHJvdmlkZWQsIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIDAuXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgaXMgYWxyZWFkeSBhdCBtYXggbGV2ZWwsIHRoZW4gSW5maW5pdHkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiB0aW1lcyB0byB1cGdyYWRlIGNhY2hlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBDb3N0IG9mIHVwZ3JhZGluZyB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSdzIGNhY2hlLlxcbiAgICAqL1xcbiAgIGdldENhY2hlVXBncmFkZUNvc3QoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHRvdGFsIG51bWJlciBvZiBoYXNoZXMgc3RvcmVkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBoYXNoZXMgeW91IGhhdmUuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgaGFzaGVzIHlvdSBoYXZlLlxcbiAgICAqL1xcbiAgIG51bUhhc2hlcygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbWF4aW11bSBudW1iZXIgb2YgaGFzaGVzIHlvdSBjYW4gc3RvcmUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGhhc2hlcyB5b3UgY2FuIHN0b3JlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIGhhc2hlcyB5b3UgY2FuIHN0b3JlLlxcbiAgICAqL1xcbiAgIGhhc2hDYXBhY2l0eSgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY29zdCBvZiBhIGhhc2ggdXBncmFkZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICh0aGUgdXBncmFkZWQgdmVyc2lvbiBvZiBhIEhhY2tuZXQgTm9kZSkuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgaGFzaGVzIHJlcXVpcmVkIGZvciB0aGUgc3BlY2lmaWVkIHVwZ3JhZGUuIFRoZSBuYW1lIG9mIHRoZSB1cGdyYWRlIG11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciB1cGdyYWRlTmFtZSA9IFxcXCJTZWxsIGZvciBDb3Jwb3JhdGlvbiBGdW5kc1xcXCI7XFxuICAgICogaWYgKGhhY2tuZXQubnVtSGFzaGVzKCkgPiBoYWNrbmV0Lmhhc2hDb3N0KHVwZ3JhZGVOYW1lKSkge1xcbiAgICAqICAgIGhhY2tuZXQuc3BlbmRIYXNoZXModXBnTmFtZSk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogY29uc3QgdXBncmFkZU5hbWUgPSBcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiO1xcbiAgICAqIGlmIChucy5oYWNrbmV0Lm51bUhhc2hlcygpID4gbnMuaGFja25ldC5oYXNoQ29zdCh1cGdyYWRlTmFtZSkpIHtcXG4gICAgKiAgICBucy5oYWNrbmV0LnNwZW5kSGFzaGVzKHVwZ05hbWUpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gdXBnTmFtZSAtIE5hbWUgb2YgdGhlIHVwZ3JhZGUgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiBoYXNoZXMgcmVxdWlyZWQgZm9yIHRoZSBzcGVjaWZpZWQgdXBncmFkZS5cXG4gICAgKi9cXG4gICBoYXNoQ29zdCh1cGdOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgaGFzaCB1cGdyYWRlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFNwZW5kIHRoZSBoYXNoZXMgZ2VuZXJhdGVkIGJ5IHlvdXIgSGFja25ldCBTZXJ2ZXJzIG9uIGFuIHVwZ3JhZGUuXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gdmFsdWUgLSB0cnVlIGlmIHRoZSB1cGdyYWRlIGlzIHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBUaGUgbmFtZSBvZiB0aGUgdXBncmFkZSBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIFRoZSBgdXBnVGFyZ2V0YCBhcmd1bWVudCBpcyB1c2VkIGZvciB1cGdyYWRlcyBzdWNoIGFzIGBSZWR1Y2UgTWluaW11bSBTZWN1cml0eWAsIHdoaWNoIGFwcGxpZXMgdG8gYSBzcGVjaWZpYyBzZXJ2ZXIuXFxuICAgICogSW4gdGhpcyBjYXNlLCB0aGUgYHVwZ1RhcmdldGAgYXJndW1lbnQgbXVzdCBiZSB0aGUgaG9zdG5hbWUgb2YgdGhlIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaGFja25ldC5zcGVuZEhhc2hlcyhcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiKTtcXG4gICAgKiBoYWNrbmV0LnNwZW5kSGFzaGVzKFxcXCJJbmNyZWFzZSBNYXhpbXVtIE1vbmV5XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogTlMyOlxcbiAgICAqIG5zLmhhY2tuZXQuc3BlbmRIYXNoZXMoXFxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXFxcIik7XFxuICAgICogbnMuaGFja25ldC5zcGVuZEhhc2hlcyhcXFwiSW5jcmVhc2UgTWF4aW11bSBNb25leVxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHVwZ05hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gdXBnVGFyZ2V0IC0gT2JqZWN0IHRvIHdoaWNoIHVwZ3JhZGUgYXBwbGllcy4gUmVxdWlyZWQgZm9yIGNlcnRhaW4gdXBncmFkZXMuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgdXBncmFkZSBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLi5cXG4gICAgKi9cXG4gICBzcGVuZEhhc2hlcyh1cGdOYW1lOiBzdHJpbmcsIHVwZ1RhcmdldD86IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbGlzdCBvZiBoYXNoIHVwZ3JhZGVzXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbGlzdCBvZiBhbGwgYXZhaWxhYmxlIGhhc2ggdXBncmFkZXMgdGhhdCBjYW4gYmUgdXNlZCBpbiB0aGUgc3BlbmRIYXNoZXMgZnVuY3Rpb24uXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB2YXIgdXBncmFkZXMgPSBoYWNrbmV0LmdldEhhc2hVcGdyYWRlcygpOyAvLyBbXFxcIlNlbGwgZm9yIE1vbmV5XFxcIixcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiLC4uLl1cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IHVwZ3JhZGVzID0gbnMuaGFja25ldC5nZXRIYXNoVXBncmFkZXMoKTsgLy8gW1xcXCJTZWxsIGZvciBNb25leVxcXCIsXFxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXFxcIiwuLi5dXFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgQW4gYXJyYXkgY29udGFpbmluZyB0aGUgYXZhaWxhYmxlIHVwZ3JhZGVzXFxuICAgICovXFxuICAgZ2V0SGFzaFVwZ3JhZGVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGxldmVsIG9mIGEgaGFzaCB1cGdyYWRlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIExldmVsIG9mIHRoZSB1cGdyYWRlLlxcbiAgICAqL1xcbiAgIGdldEhhc2hVcGdyYWRlTGV2ZWwodXBnTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG11bHRpcGxlciB0byBzdHVkeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICh0aGUgdXBncmFkZWQgdmVyc2lvbiBvZiBhIEhhY2tuZXQgTm9kZSkuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBNdWx0aXBsaWVyLlxcbiAgICAqL1xcbiAgIGdldFN0dWR5TXVsdCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbXVsdGlwbGVyIHRvIHRyYWluaW5nLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE11bHRpcGxpZXIuXFxuICAgICovXFxuICAgZ2V0VHJhaW5pbmdNdWx0KCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEJsYWRlYnVybmVyIEFQSVxcbiAgKiBAcmVtYXJrc1xcbiAgKiBZb3UgaGF2ZSB0byBiZSBlbXBsb3llZCBpbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24gYW5kIGJlIGluIEJpdE5vZGUtN1xcbiAgKiBvciBoYXZlIFNvdXJjZS1GaWxlIDcgaW4gb3JkZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEJsYWRlYnVybmVyIHtcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBjb250cmFjdHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIEJsYWRlYnVybmVyIGNvbnRyYWN0cy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIEJsYWRlYnVybmVyIGNvbnRyYWN0cy5cXG4gICAgKi9cXG4gICBnZXRDb250cmFjdE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBvcGVyYXRpb25zLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBvcGVyYXRpb25zLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQXJyYXkgb2Ygc3RyaW5ncyBjb250YWluaW5nIHRoZSBuYW1lcyBvZiBhbGwgQmxhZGVidXJuZXIgb3BlcmF0aW9ucy5cXG4gICAgKi9cXG4gICBnZXRPcGVyYXRpb25OYW1lcygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogTGlzdCBhbGwgYmxhY2sgb3BzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBCbGFjayBPcHMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBCbGFjayBPcHMuXFxuICAgICovXFxuICAgZ2V0QmxhY2tPcE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBnZW5lcmFsIGFjdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIGdlbmVyYWwgQmxhZGVidXJuZXIgYWN0aW9ucy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIGdlbmVyYWwgQmxhZGVidXJuZXIgYWN0aW9ucy5cXG4gICAgKi9cXG4gICBnZXRHZW5lcmFsQWN0aW9uTmFtZXMoKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgYWxsIHNraWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gYXJyYXkgb2Ygc3RyaW5ncyBjb250YWluaW5nIHRoZSBuYW1lcyBvZiBhbGwgZ2VuZXJhbCBCbGFkZWJ1cm5lciBza2lsbHMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBnZW5lcmFsIEJsYWRlYnVybmVyIHNraWxscy5cXG4gICAgKi9cXG4gICBnZXRTa2lsbE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBTdGFydCBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gc3RhcnQgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBhY3Rpb24gd2FzIHN0YXJ0ZWQgc3VjY2Vzc2Z1bGx5LCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgYWN0aW9uIHdhcyBzdGFydGVkIHN1Y2Nlc3NmdWxseSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzdGFydEFjdGlvbih0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0b3AgY3VycmVudCBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogU3RvcHMgdGhlIGN1cnJlbnQgQmxhZGVidXJuZXIgYWN0aW9uLlxcbiAgICAqXFxuICAgICovXFxuICAgc3RvcEJsYWRlYnVybmVyQWN0aW9uKCk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjdXJyZW50IGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgY3VycmVudCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICogSWYgdGhlIHBsYXllciBpcyBub3QgcGVyZm9ybWluZyBhbiBhY3Rpb24sIHRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiBhbiBvYmplY3Qgd2l0aCB0aGUg4oCYdHlwZeKAmSBwcm9wZXJ0eSBzZXQgdG8g4oCcSWRsZeKAnS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgY3VycmVudCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0Q3VycmVudEFjdGlvbigpOiBCbGFkZWJ1cm5lckN1ckFjdGlvbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSB0aW1lIHRvIGNvbXBsZXRlIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBpdCB0YWtlcyB0byBjb21wbGV0ZSB0aGUgc3BlY2lmaWVkIGFjdGlvblxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gY29tcGxldGUgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uVGltZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGVzdGltYXRlIHN1Y2Nlc3MgY2hhbmNlIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBlc3RpbWF0ZWQgc3VjY2VzcyBjaGFuY2UgZm9yIHRoZSBzcGVjaWZpZWQgYWN0aW9uLlxcbiAgICAqIFRoaXMgY2hhbmNlIGlzIHJldHVybmVkIGFzIGEgZGVjaW1hbCB2YWx1ZSwgTk9UIGEgcGVyY2VudGFnZVxcbiAgICAqIChlLmcuIGlmIHlvdSBoYXZlIGFuIGVzdGltYXRlZCBzdWNjZXNzIGNoYW5jZSBvZiA4MCUsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAwLjgwLCBOT1QgODApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIEVzdGltYXRlZCBzdWNjZXNzIGNoYW5jZSBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uRXN0aW1hdGVkU3VjY2Vzc0NoYW5jZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IFtudW1iZXIsIG51bWJlcl07XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgcmVwdXRhdGlvbiBnYWluIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhdmVyYWdlIEJsYWRlYnVybmVyIHJlcHV0YXRpb24gZ2FpbiBmb3Igc3VjY2Vzc2Z1bGx5XFxuICAgICogY29tcGxldGluZyB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKiBOb3RlIHRoYXQgdGhpcyB2YWx1ZSBpcyBhbiDigJhhdmVyYWdl4oCZIGFuZCB0aGUgcmVhbCByZXB1dGF0aW9uIGdhaW4gbWF5IHZhcnkgc2xpZ2h0bHkgZnJvbSB0aGlzIHZhbHVlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEBwYXJhbSBsZXZlbCAtIE9wdGlvbmFsIGFjdGlvbiBsZXZlbCBhdCB3aGljaCB0byBjYWxjdWxhdGUgdGhlIGdhaW5cXG4gICAgKiBAcmV0dXJucyBBdmVyYWdlIEJsYWRlYnVybmVyIHJlcHV0YXRpb24gZ2FpbiBmb3Igc3VjY2Vzc2Z1bGx5IGNvbXBsZXRpbmcgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uUmVwR2Fpbih0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgbGV2ZWw6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGFjdGlvbiBjb3VudCByZW1haW5pbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgcmVtYWluaW5nIGNvdW50IG9mIHRoZSBzcGVjaWZpZWQgYWN0aW9uLlxcbiAgICAqXFxuICAgICogTm90ZSB0aGF0IHRoaXMgaXMgbWVhbnQgdG8gYmUgdXNlZCBmb3IgQ29udHJhY3RzIGFuZCBPcGVyYXRpb25zLlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4g4oCYSW5maW5pdHnigJkgZm9yIGFjdGlvbnMgc3VjaCBhcyBUcmFpbmluZyBhbmQgRmllbGQgQW5hbHlzaXMuXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAxIGZvciBCbGFja09wcyBub3QgeWV0IGNvbXBsZXRlZCByZWdhcmRsZXNzIG9mIHdldGhlclxcbiAgICAqIHRoZSBwbGF5ZXIgaGFzIHRoZSByZXF1aXJlZCByYW5rIHRvIGF0dGVtcHQgdGhlIG1pc3Npb24gb3Igbm90LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFJlbWFpbmluZyBjb3VudCBvZiB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBY3Rpb25Db3VudFJlbWFpbmluZyh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBtYXhpbXVtIGxldmVsIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIGxldmVsIGZvciB0aGlzIGFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIE1heGltdW0gbGV2ZWwgb2YgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uTWF4TGV2ZWwodHlwZTogc3RyaW5nLCBuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCBsZXZlbCBvZiBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY3VycmVudCBsZXZlbCBvZiB0aGlzIGFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIEN1cnJlbnQgbGV2ZWwgb2YgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uQ3VycmVudExldmVsKHR5cGU6IHN0cmluZywgbmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgd2V0aGVyIGFuIGFjdGlvbiBpcyBzZXQgdG8gYXV0b2xldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiBpcyBjdXJyZW50bHkgc2V0IHRvIGF1dG9sZXZlbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2UgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGFjdGlvbiBpcyBzZXQgdG8gYXV0b2xldmVsLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGdldEFjdGlvbkF1dG9sZXZlbCh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhbiBhY3Rpb24gYXV0b2xldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEVuYWJsZS9kaXNhYmxlIGF1dG9sZXZlbGluZyBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2YgYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBhY3Rpb24uIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHBhcmFtIGF1dG9MZXZlbCAtIFdoZXRoZXIgb3Igbm90IHRvIGF1dG9sZXZlbCB0aGlzIGFjdGlvblxcbiAgICAqL1xcbiAgIHNldEFjdGlvbkF1dG9sZXZlbCh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgYXV0b0xldmVsOiBib29sZWFuKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IHRoZSBsZXZlbCBvZiBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogU2V0IHRoZSBsZXZlbCBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2YgYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBhY3Rpb24uIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHBhcmFtIGxldmVsIC0gTGV2ZWwgdG8gc2V0IHRoaXMgYWN0aW9uIHRvLlxcbiAgICAqL1xcbiAgIHNldEFjdGlvbkxldmVsKHR5cGU6IHN0cmluZywgbmFtZTogc3RyaW5nLCBsZXZlbDogbnVtYmVyKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHBsYXllciBibGFkZWJ1cm5lciByYW5rLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHBsYXllcuKAmXMgQmxhZGVidXJuZXIgUmFuay5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFBsYXllcuKAmXMgQmxhZGVidXJuZXIgUmFuay5cXG4gICAgKi9cXG4gICBnZXRSYW5rKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWNrIG9wIHJlcXVpcmVkIHJhbmsuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgcmFuayByZXF1aXJlZCB0byBjb21wbGV0ZSB0aGlzIEJsYWNrT3AuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIC0xIGlmIGFuIGludmFsaWQgYWN0aW9uIGlzIHNwZWNpZmllZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBCbGFja09wLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFJhbmsgcmVxdWlyZWQgdG8gY29tcGxldGUgdGhpcyBCbGFja09wLlxcbiAgICAqL1xcbiAgIGdldEJsYWNrT3BSYW5rKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWRlYnVybmVyIHNraWxsIHBvaW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgQmxhZGVidXJuZXIgc2tpbGwgcG9pbnRzIHlvdSBoYXZlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIEJsYWRlYnVybmVyIHNraWxsIHBvaW50cyB5b3UgaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRTa2lsbFBvaW50cygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBza2lsbCBsZXZlbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgeW91ciBsZXZlbCBpbiB0aGUgc3BlY2lmaWVkIHNraWxsLlxcbiAgICAqXFxuICAgICogVGhlIGZ1bmN0aW9uIHJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBza2lsbCBuYW1lIGlzIHBhc3NlZCBpbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBza2lsbE5hbWUgLSBOYW1lIG9mIHNraWxsLiBDYXNlLXNlbnNpdGl2ZSBhbmQgbXVzdCBiZSBhbiBleGFjdCBtYXRjaFxcbiAgICAqIEByZXR1cm5zIExldmVsIGluIHRoZSBzcGVjaWZpZWQgc2tpbGwuXFxuICAgICovXFxuICAgZ2V0U2tpbGxMZXZlbChuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjb3N0IHRvIHVwZ3JhZGUgc2tpbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBudW1iZXIgb2Ygc2tpbGwgcG9pbnRzIG5lZWRlZCB0byB1cGdyYWRlIHRoZSBzcGVjaWZpZWQgc2tpbGwuXFxuICAgICpcXG4gICAgKiBUaGUgZnVuY3Rpb24gcmV0dXJucyAtMSBpZiBhbiBpbnZhbGlkIHNraWxsIG5hbWUgaXMgcGFzc2VkIGluLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNraWxsTmFtZSAtIE5hbWUgb2Ygc2tpbGwuIENhc2Utc2Vuc2l0aXZlIGFuZCBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIHNraWxsIHBvaW50cyBuZWVkZWQgdG8gdXBncmFkZSB0aGUgc3BlY2lmaWVkIHNraWxsLlxcbiAgICAqL1xcbiAgIGdldFNraWxsVXBncmFkZUNvc3QobmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHNraWxsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEF0dGVtcHRzIHRvIHVwZ3JhZGUgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBza2lsbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc2tpbGwgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNraWxsTmFtZSAtIE5hbWUgb2Ygc2tpbGwgdG8gYmUgdXBncmFkZWQuIENhc2Utc2Vuc2l0aXZlIGFuZCBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgc2tpbGwgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVTa2lsbChuYW1lOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGVhbSBzaXplLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBCbGFkZWJ1cm5lciB0ZWFtIG1lbWJlcnMgeW91IGhhdmUgYXNzaWduZWQgdG8gdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBTZXR0aW5nIGEgdGVhbSBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIE9wZXJhdGlvbnMgYW5kIEJsYWNrT3BzLiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIDAgZm9yIG90aGVyIGFjdGlvbiB0eXBlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSB0eXBlIC0gVHlwZSBvZiBhY3Rpb24uXFxuICAgICogQHBhcmFtIG5hbWUgLSBOYW1lIG9mIGFjdGlvbi4gTXVzdCBiZSBhbiBleGFjdCBtYXRjaC5cXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgQmxhZGVidXJuZXIgdGVhbSBtZW1iZXJzIHRoYXQgd2VyZSBhc3NpZ25lZCB0byB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRUZWFtU2l6ZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IHRlYW0gc2l6ZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBTZXQgdGhlIHRlYW0gc2l6ZSBmb3IgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSB0ZWFtIHNpemUgdGhhdCB3YXMgc2V0LCBvciAtMSBpZiB0aGUgZnVuY3Rpb24gZmFpbGVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEBwYXJhbSBzaXplIC0gTnVtYmVyIG9mIHRlYW0gbWVtYmVycyB0byBzZXQuIFdpbGwgYmUgY29udmVydGVkIHVzaW5nIE1hdGgucm91bmQoKS5cXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgQmxhZGVidXJuZXIgdGVhbSBtZW1iZXJzIHlvdSBhc3NpZ25lZCB0byB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBzZXRUZWFtU2l6ZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgc2l6ZTogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgZXN0aW1hdGVkIHBvcHVsYXRpb24gaW4gY2l0eS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBlc3RpbWF0ZWQgbnVtYmVyIG9mIFN5bnRob2lkcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgRXN0aW1hdGVkIG51bWJlciBvZiBTeW50aG9pZHMgaW4gdGhlIHNwZWNpZmllZCBjaXR5LlxcbiAgICAqL1xcbiAgIGdldENpdHlFc3RpbWF0ZWRQb3B1bGF0aW9uKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IG51bWJlciBvZiBjb21tdW5pdGllcyBpbiBhIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgZXN0aW1hdGVkIG51bWJlciBvZiBTeW50aG9pZCBjb21tdW5pdGllcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIFN5bnRob2lkcyBjb21tdW5pdGllcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHkuXFxuICAgICovXFxuICAgZ2V0Q2l0eUNvbW11bml0aWVzKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNoYW9zIG9mIGEgY2l0eS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjaGFvcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgQ2hhb3MgaW4gdGhlIHNwZWNpZmllZCBjaXR5LlxcbiAgICAqL1xcbiAgIGdldENpdHlDaGFvcyhuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjdXJyZW50IGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY2l0eSB0aGF0IHRoZSBwbGF5ZXIgaXMgY3VycmVudGx5IGluIChmb3IgQmxhZGVidXJuZXIpLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQ2l0eSB0aGF0IHRoZSBwbGF5ZXIgaXMgY3VycmVudGx5IGluIChmb3IgQmxhZGVidXJuZXIpLlxcbiAgICAqL1xcbiAgIGdldENpdHkoKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBUcmF2ZWwgdG8gYW5vdGhlciBjaXR5IGluIGJsYWRlYnVybmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBzd2l0Y2ggdG8gdGhlIHNwZWNpZmllZCBjaXR5IChmb3IgQmxhZGVidXJuZXIgb25seSkuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgc3VjY2Vzc2Z1bCwgYW5kIGZhbHNlIG90aGVyd2lzZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiBjaXR5LiBDYXNlLXNlbnNpdGl2ZVxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgc3VjY2Vzc2Z1bCwgYW5kIGZhbHNlIG90aGVyd2lzZVxcbiAgICAqL1xcbiAgIHN3aXRjaENpdHkobmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWRlYnVybmVyIHN0YW1pbmEuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqIFJldHVybnMgYW4gYXJyYXkgd2l0aCB0d28gZWxlbWVudHM6XFxuICAgICogKiBbQ3VycmVudCBzdGFtaW5hLCBNYXggc3RhbWluYV1cXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGZ1bmN0aW9uIGdldFN0YW1pbmFQZXJjZW50YWdlKCkge1xcbiAgICAqICAgIHZhciByZXMgPSBibGFkZWJ1cm5lci5nZXRTdGFtaW5hKCk7XFxuICAgICogICAgcmV0dXJuIHJlc1swXSAvIHJlc1sxXTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBmdW5jdGlvbiBnZXRTdGFtaW5hUGVyY2VudGFnZSgpIHtcXG4gICAgKiAgICBjb25zdCBbY3VycmVudCwgbWF4XSA9IG5zLmJsYWRlYnVybmVyLmdldFN0YW1pbmEoKTtcXG4gICAgKiAgICByZXR1cm4gY3VycmVudCAvIG1heDtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgQXJyYXkgY29udGFpbmluZyBjdXJyZW50IHN0YW1pbmEgYW5kIG1heCBzdGFtaW5hLlxcbiAgICAqL1xcbiAgIGdldFN0YW1pbmEoKTogW251bWJlciwgbnVtYmVyXTtcXG4gXFxuICAgLyoqXFxuICAgICogSm9pbiB0aGUgYmxhZGVidXJuZXIgZmFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICogQXR0ZW1wdHMgdG8gam9pbiB0aGUgQmxhZGVidXJuZXIgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGpvaW4gdGhlIEJsYWRlYnVybmVyIGZhY3Rpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlci5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGpvaW4gdGhlIEJsYWRlYnVybmVyIGZhY3Rpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlciwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGpvaW5CbGFkZWJ1cm5lckZhY3Rpb24oKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogSm9pbiB0aGUgYmxhZGVidXJuZXIgZGl2aXNpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gam9pbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBqb2luIHRoZSBCbGFkZWJ1cm5lciBkaXZpc2lvbiwgb3IgaWYgeW91IGFyZSBhbHJlYWR5IGEgbWVtYmVyLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHlvdSBzdWNjZXNzZnVsbHkgam9pbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlciwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGpvaW5CbGFkZWJ1cm5lckRpdmlzaW9uKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBibGFkZWJ1cm5lciBib251cyB0aW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBhY2N1bXVsYXRlZCDigJxib251cyB0aW1l4oCdIChzZWNvbmRzKSBmb3IgdGhlIEJsYWRlYnVybmVyIG1lY2hhbmljLlxcbiAgICAqXFxuICAgICog4oCcQm9udXMgdGltZeKAnSBpcyBhY2N1bXVsYXRlZCB3aGVuIHRoZSBnYW1lIGlzIG9mZmxpbmUgb3IgaWYgdGhlIGdhbWUgaXMgaW5hY3RpdmUgaW4gdGhlIGJyb3dzZXIuXFxuICAgICpcXG4gICAgKiDigJxCb251cyB0aW1l4oCdIG1ha2VzIHRoZSBnYW1lIHByb2dyZXNzIGZhc3RlciwgdXAgdG8gNXggdGhlIG5vcm1hbCBzcGVlZC5cXG4gICAgKiBGb3IgZXhhbXBsZSwgaWYgYW4gYWN0aW9uIHRha2VzIDMwIHNlY29uZHMgdG8gY29tcGxldGUgYnV0IHlvdeKAmXZlIGFjY3VtdWxhdGVkIG92ZXJcXG4gICAgKiAzMCBzZWNvbmRzIGluIGJvbnVzIHRpbWUsIHRoZW4gdGhlIGFjdGlvbiB3aWxsIG9ubHkgdGFrZSA2IHNlY29uZHMgaW4gcmVhbCBsaWZlIHRvIGNvbXBsZXRlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGFjY3VtdWxhdGVkIOKAnGJvbnVzIHRpbWXigJ0gKG1pbGxpc2Vjb25kcykgZm9yIHRoZSBCbGFkZWJ1cm5lciBtZWNoYW5pYy5cXG4gICAgKi9cXG4gICBnZXRCb251c1RpbWUoKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29kaW5nIENvbnRyYWN0IEFQSVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENvZGluZ0NvbnRyYWN0IHtcXG4gICAvKipcXG4gICAgKiBBdHRlbXBzIGEgY29kaW5nIGNvbnRyYWN0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEwIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0cyB0byBzb2x2ZSB0aGUgQ29kaW5nIENvbnRyYWN0IHdpdGggdGhlIHByb3ZpZGVkIHNvbHV0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGFuc3dlciAtIFNvbHV0aW9uIGZvciB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGZuIC0gRmlsZW5hbWUgb2YgdGhlIGNvbnRyYWN0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0aGUgc2VydmVyIGNvbnRhaW5pbmcgdGhlIGNvbnRyYWN0LiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gY3VycmVudCBzZXJ2ZXIgaWYgbm90IHByb3ZpZGVkLlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc29sdXRpb24gd2FzIGNvcnJlY3QsIGZhbHNlIG90aGVyd2lzZS4gSWYgdGhlIHJldHVyblJld2FyZCBvcHRpb24gaXMgY29uZmlndXJlZCwgdGhlbiB0aGUgZnVuY3Rpb24gd2lsbCBpbnN0ZWFkIHJldHVybiBhIHN0cmluZy4gSWYgdGhlIGNvbnRyYWN0IGlzIHN1Y2Nlc3NmdWxseSBzb2x2ZWQsIHRoZSBzdHJpbmcgd2lsbCBjb250YWluIGEgZGVzY3JpcHRpb24gb2YgdGhlIGNvbnRyYWN04oCZcyByZXdhcmQuIE90aGVyd2lzZSwgaXQgd2lsbCBiZSBhbiBlbXB0eSBzdHJpbmcuXFxuICAgICovXFxuICAgYXR0ZW1wdChhbnN3ZXI6IHN0cmluZ1tdIHwgbnVtYmVyLCBmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nLCBvcHRzPzogQ29kaW5nQXR0ZW1wdE9wdGlvbnMpOiBib29sZWFuIHwgc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHR5cGUgb2YgYSBjb2RpbmcgY29udHJhY3QuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIG5hbWUgZGVzY3JpYmluZyB0aGUgdHlwZSBvZiBwcm9ibGVtIHBvc2VkIGJ5IHRoZSBDb2RpbmcgQ29udHJhY3QuXFxuICAgICogKGUuZy4gRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvciwgVG90YWwgV2F5cyB0byBTdW0sIGV0Yy4pXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZm4gLSBGaWxlbmFtZSBvZiB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRoZSBzZXJ2ZXIgY29udGFpbmluZyB0aGUgY29udHJhY3QuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlciBpZiBub3QgcHJvdmlkZWQuXFxuICAgICogQHJldHVybnMgTmFtZSBkZXNjcmliaW5nIHRoZSB0eXBlIG9mIHByb2JsZW0gcG9zZWQgYnkgdGhlIENvZGluZyBDb250cmFjdC5cXG4gICAgKi9cXG4gICBnZXRDb250cmFjdFR5cGUoZmlsZW5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBkZXNjcmlwdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIGZ1bGwgdGV4dCBkZXNjcmlwdGlvbiBmb3IgdGhlIHByb2JsZW0gcG9zZWQgYnkgdGhlIENvZGluZyBDb250cmFjdC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIEZpbGVuYW1lIG9mIHRoZSBjb250cmFjdC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciBjb250YWluaW5nIHRoZSBjb250cmFjdC4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIGN1cnJlbnQgc2VydmVyIGlmIG5vdCBwcm92aWRlZC5cXG4gICAgKiBAcmV0dXJucyBDb250cmFjdOKAmXMgdGV4dCBkZXNjcmlwdGlvbi5cXG4gICAgKi9cXG4gICBnZXREZXNjcmlwdGlvbihmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGlucHV0IGRhdGEuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgc3BlY2lmaWMgQ29kaW5nIENvbnRyYWN0LlxcbiAgICAqIE5vdGUgdGhhdCB0aGlzIGlzIG5vdCB0aGUgc2FtZSBhcyB0aGUgY29udHJhY3TigJlzIGRlc2NyaXB0aW9uLlxcbiAgICAqIFRoaXMgaXMganVzdCB0aGUgZGF0YSB0aGF0IHRoZSBjb250cmFjdCB3YW50cyB5b3UgdG8gYWN0IG9uIGluIG9yZGVyIHRvIHNvbHZlXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZmlsZW5hbWUgLSBGaWxlbmFtZSBvZiB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRoZSBzZXJ2ZXIgY29udGFpbmluZyB0aGUgY29udHJhY3QuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlciBpZiBub3QgcHJvdmlkZWQuXFxuICAgICogQHJldHVybnMgVGhlIHNwZWNpZmllZCBjb250cmFjdOKAmXMgZGF0YSwgZGF0YSB0eXBlIGRlcGVuZHMgb24gY29udHJhY3QgdHlwZS47XFxuICAgICovXFxuICAgZ2V0RGF0YShmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nKTogYW55O1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG51bWJlciBvZiBhdHRlbXB0IHJlbWFpbmluZy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG51bWJlciBvZiB0cmllcyByZW1haW5pbmcgb24gdGhlIGNvbnRyYWN0IGJlZm9yZSBpdCBzZWxmLWRlc3RydWN0cy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIEZpbGVuYW1lIG9mIHRoZSBjb250cmFjdC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciBjb250YWluaW5nIHRoZSBjb250cmFjdC4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIGN1cnJlbnQgc2VydmVyIGlmIG5vdCBwcm92aWRlZC5cXG4gICAgKiBAcmV0dXJucyBIb3cgbWFueSBhdHRlbXB0cyBhcmUgcmVtYWluaW5nIGZvciB0aGUgY29udHJhY3Q7XFxuICAgICovXFxuICAgZ2V0TnVtVHJpZXNSZW1haW5pbmcoZmlsZW5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdhbmcgQVBJXFxuICAqIEByZW1hcmtzXFxuICAqIElmIHlvdSBhcmUgbm90IGluIEJpdE5vZGUtMiwgdGhlbiB5b3UgbXVzdCBoYXZlIFNvdXJjZS1GaWxlIDIgaW4gb3JkZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmcge1xcbiAgIC8qKlxcbiAgICAqIENyZWF0ZSBhIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMUdCXFxuICAgICpcXG4gICAgKiBDcmVhdGUgYSBnYW5nIHdpdGggdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGdhbmcgd2FzIGNyZWF0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBjcmVhdGVHYW5nKGZhY3Rpb246IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdSdyZSBpbiBhIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMUdCXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3UncmUgaW4gYSBnYW5nLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgaW5HYW5nKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgYWxsIGdhbmcgbWVtYmVycy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG5hbWVzIG9mIGFsbCBHYW5nIG1lbWJlcnNcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE5hbWVzIG9mIGFsbCBHYW5nIG1lbWJlcnMuXFxuICAgICovXFxuICAgZ2V0TWVtYmVyTmFtZXMoKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGdhbmcuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBnZW5lcmFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBnYW5nLlxcbiAgICAqL1xcbiAgIGdldEdhbmdJbmZvcm1hdGlvbigpOiBHYW5nR2VuSW5mbztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBvdGhlciBnYW5ncy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGVycml0b3J5IGFuZCBwb3dlciBpbmZvcm1hdGlvbiBhYm91dCBhbGwgZ2FuZ3MuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0ZXJyaXRvcnkgYW5kIHBvd2VyIGluZm9ybWF0aW9uIGFib3V0IGFsbCBnYW5ncy5cXG4gICAgKi9cXG4gICBnZXRPdGhlckdhbmdJbmZvcm1hdGlvbigpOiBHYW5nT3RoZXJJbmZvO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgaW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBnYW5nIG1lbWJlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgc3RhdCBhbmQgZXF1aXBtZW50LXJlbGF0ZWQgaW5mb3JtYXRpb24gYWJvdXQgYSBHYW5nIE1lbWJlclxcbiAgICAqXFxuICAgICogQHBhcmFtIG5hbWUgLSBOYW1lIG9mIG1lbWJlci5cXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBzdGF0IGFuZCBlcXVpcG1lbnQtcmVsYXRlZCBpbmZvcm1hdGlvbiBhYm91dCBhIEdhbmcgTWVtYmVyLlxcbiAgICAqL1xcbiAgIGdldE1lbWJlckluZm9ybWF0aW9uKG5hbWU6IHN0cmluZyk6IEdhbmdNZW1iZXJJbmZvO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB5b3UgY2FuIHJlY3J1aXQgYSBuZXcgZ2FuZyBtZW1iZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBhIG1lbWJlciBjYW4gY3VycmVudGx5IGJlIHJlY3J1aXRlZFxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBhIG1lbWJlciBjYW4gY3VycmVudGx5IGJlIHJlY3J1aXRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNhblJlY3J1aXRNZW1iZXIoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmVjcnVpdCBhIG5ldyBnYW5nIG1lbWJlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0IHRvIHJlY3J1aXQgYSBuZXcgZ2FuZyBtZW1iZXIuXFxuICAgICpcXG4gICAgKiBQb3NzaWJsZSByZWFzb25zIGZvciBmYWlsdXJlOlxcbiAgICAqICogQ2Fubm90IGN1cnJlbnRseSByZWNydWl0IGEgbmV3IG1lbWJlclxcbiAgICAqICogVGhlcmUgYWxyZWFkeSBleGlzdHMgYSBtZW1iZXIgd2l0aCB0aGUgc3BlY2lmaWVkIG5hbWVcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBtZW1iZXIgdG8gcmVjcnVpdC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBtZW1iZXIgd2FzIHN1Y2Nlc3NmdWxseSByZWNydWl0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICByZWNydWl0TWVtYmVyKG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgbWVtYmVyIHRhc2sgbmFtZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBuYW1lIG9mIGFsbCB2YWxpZCB0YXNrcyB0aGF0IEdhbmcgbWVtYmVycyBjYW4gYmUgYXNzaWduZWQgdG8uXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBbGwgdmFsaWQgdGFza3MgdGhhdCBHYW5nIG1lbWJlcnMgY2FuIGJlIGFzc2lnbmVkIHRvLlxcbiAgICAqL1xcbiAgIGdldFRhc2tOYW1lcygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGdhbmcgbWVtYmVyIHRvIHRhc2suXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gYXNzaWduIHRoZSBzcGVjaWZpZWQgR2FuZyBNZW1iZXIgdG8gdGhlIHNwZWNpZmllZCB0YXNrLlxcbiAgICAqIElmIGFuIGludmFsaWQgdGFzayBpcyBzcGVjaWZpZWQsIHRoZSBHYW5nIG1lbWJlciB3aWxsIGJlIHNldCB0byBpZGxlICjigJxVbmFzc2lnbmVk4oCdKS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBtZW1iZXJOYW1lIC0gTmFtZSBvZiBHYW5nIG1lbWJlciB0byBhc3NpZ24uXFxuICAgICogQHBhcmFtIHRhc2tOYW1lIC0gVGFzayB0byBhc3NpZ24uXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgR2FuZyBNZW1iZXIgd2FzIHN1Y2Nlc3NmdWxseSBhc3NpZ25lZCB0byB0aGUgdGFzaywgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldE1lbWJlclRhc2sobWVtYmVyTmFtZTogc3RyaW5nLCB0YXNrTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIG9mIGEgdGFzay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHN0YXRzIG9mIGEgZ2FuZyB0YXNrIHN0YXRzLiBUaGlzIGlzIHR5cGljYWxseSB1c2VkIHRvIGV2YWx1YXRlIHdoaWNoIGFjdGlvbiBzaG91bGQgYmUgZXhlY3V0ZWQgbmV4dC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gIE5hbWUgb2YgdGhlIHRhc2suXFxuICAgICogQHJldHVybnMgRGV0YWlsZWQgc3RhdHMgb2YgYSB0YXNrLlxcbiAgICAqL1xcbiAgIGdldFRhc2tTdGF0cyhuYW1lOiBzdHJpbmcpOiBHYW5nVGFza1N0YXRzO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGVxdWlwbWVudCBuYW1lcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG5hbWUgb2YgYWxsIHBvc3NpYmxlIGVxdWlwbWVudC91cGdyYWRlcyB5b3UgY2FuIHB1cmNoYXNlIGZvciB5b3VyIEdhbmcgTWVtYmVycy5cXG4gICAgKiBUaGlzIGluY2x1ZGVzIEF1Z21lbnRhdGlvbnMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBOYW1lcyBvZiBhbGwgRXF1aXBtZW50cy9BdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEVxdWlwbWVudE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29zdCBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBhbW91bnQgb2YgbW9uZXkgaXQgdGFrZXMgdG8gcHVyY2hhc2UgYSBwaWVjZSBvZiBFcXVpcG1lbnQgb3IgYW4gQXVnbWVudGF0aW9uLlxcbiAgICAqIElmIGFuIGludmFsaWQgRXF1aXBtZW50L0F1Z21lbnRhdGlvbiBpcyBzcGVjaWZpZWQsIHRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4gSW5maW5pdHkuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZXF1aXBOYW1lIC0gTmFtZSBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJldHVybnMgQ29zdCB0byBwdXJjaGFzZSB0aGUgc3BlY2lmaWVkIEVxdWlwbWVudC9BdWdtZW50YXRpb24gKG51bWJlcikuIEluZmluaXR5IGZvciBpbnZhbGlkIGFyZ3VtZW50c1xcbiAgICAqL1xcbiAgIGdldEVxdWlwbWVudENvc3QoZXF1aXBOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0eXBlIG9mIGFuIGVxdWlwbWVudC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHNwZWNpZmllZCBlcXVpcG1lbnQgdHlwZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBlcXVpcE5hbWUgLSBOYW1lIG9mIGVxdWlwbWVudC5cXG4gICAgKiBAcmV0dXJucyBUeXBlIG9mIHRoZSBlcXVpcG1lbnQuXFxuICAgICovXFxuICAgZ2V0RXF1aXBtZW50VHlwZShlcXVpcE5hbWU6IHN0cmluZyk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIG9mIGFuIGVxdWlwbWVudC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHNwZWNpZmllZCBlcXVpcG1lbnQgc3RhdHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZXF1aXBOYW1lIC0gTmFtZSBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJldHVybnMgQSBkaWN0aW9uYXJ5IGNvbnRhaW5pbmcgdGhlIHN0YXRzIG9mIHRoZSBlcXVpcG1lbnQuXFxuICAgICovXFxuICAgZ2V0RXF1aXBtZW50U3RhdHMoZXF1aXBOYW1lOiBzdHJpbmcpOiBFcXVpcG1lbnRTdGF0cztcXG4gXFxuICAgLyoqXFxuICAgICogUHVyY2hhc2UgYW4gZXF1aXBtZW50IGZvciBhIGdhbmcgbWVtYmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEF0dGVtcHQgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBFcXVpcG1lbnQvQXVnbWVudGF0aW9uIGZvciB0aGUgc3BlY2lmaWVkIEdhbmcgbWVtYmVyLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG1lbWJlck5hbWUgLSBOYW1lIG9mIEdhbmcgbWVtYmVyIHRvIHB1cmNoYXNlIHRoZSBlcXVpcG1lbnQgZm9yLlxcbiAgICAqIEBwYXJhbSBlcXVpcE5hbWUgLSBOYW1lIG9mIEVxdWlwbWVudC9BdWdtZW50YXRpb24gdG8gcHVyY2hhc2UuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgZXF1aXBtZW50IHdhcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLiBGYWxzZSBvdGhlcndpc2VcXG4gICAgKi9cXG4gICBwdXJjaGFzZUVxdWlwbWVudChtZW1iZXJOYW1lOiBzdHJpbmcsIGVxdWlwTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQXNjZW5kIGEgZ2FuZyBtZW1iZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXNjZW5kIHRoZSBzcGVjaWZpZWQgR2FuZyBNZW1iZXIuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWVtYmVyTmFtZSAtIE5hbWUgb2YgbWVtYmVyIHRvIGFzY2VuZC5cXG4gICAgKiBAcmV0dXJucyBPYmplY3Qgd2l0aCBpbmZvIGFib3V0IHRoZSBhc2NlbnNpb24gcmVzdWx0cy4gdW5kZWZpbmVkIGlmIGFzY2Vuc2lvbiBkaWQgbm90IG9jY3VyLlxcbiAgICAqL1xcbiAgIGFzY2VuZE1lbWJlcihtZW1iZXJOYW1lOiBzdHJpbmcpOiBHYW5nTWVtYmVyQXNjZW5zaW9uIHwgdW5kZWZpbmVkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHJlc3VsdCBvZiBhbiBhc2NlbnNpb24gd2l0aG91dCBhc2NlbmRpbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSByZXN1bHQgb2YgYW4gYXNjZW5zaW9uIHdpdGhvdXQgYXNjZW5kaW5nLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG1lbWJlck5hbWUgLSBOYW1lIG9mIG1lbWJlci5cXG4gICAgKiBAcmV0dXJucyBPYmplY3Qgd2l0aCBpbmZvIGFib3V0IHRoZSBhc2NlbnNpb24gcmVzdWx0cy4gdW5kZWZpbmVkIGlmIGFzY2Vuc2lvbiBpcyBpbXBvc3NpYmxlLlxcbiAgICAqL1xcbiAgIGdldEFzY2Vuc2lvblJlc3VsdChtZW1iZXJOYW1lOiBzdHJpbmcpOiBHYW5nTWVtYmVyQXNjZW5zaW9uIHwgdW5kZWZpbmVkO1xcbiBcXG4gICAvKipcXG4gICAgKiBFbmFibGUvRGlzYWJsZSB0ZXJyaXRvcnkgd2FyZmFyZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBTZXQgd2hldGhlciBvciBub3QgdGhlIGdhbmcgc2hvdWxkIGVuZ2FnZSBpbiB0ZXJyaXRvcnkgd2FyZmFyZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGVuZ2FnZSAtIFdoZXRoZXIgb3Igbm90IHRvIGVuZ2FnZSBpbiB0ZXJyaXRvcnkgd2FyZmFyZS5cXG4gICAgKi9cXG4gICBzZXRUZXJyaXRvcnlXYXJmYXJlKGVuZ2FnZTogYm9vbGVhbik6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjaGFuY2UgdG8gd2luIGNsYXNoIHdpdGggb3RoZXIgZ2FuZy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjaGFuY2UgeW91IGhhdmUgdG8gd2luIGEgY2xhc2ggd2l0aCB0aGUgc3BlY2lmaWVkIGdhbmcuIFRoZSBjaGFuY2UgaXMgcmV0dXJuZWQgaW4gZGVjaW1hbCBmb3JtLCBub3QgcGVyY2VudGFnZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGdhbmdOYW1lIC0gVGFyZ2V0IGdhbmdcXG4gICAgKiBAcmV0dXJucyBDaGFuY2UgeW91IGhhdmUgdG8gd2luIGEgY2xhc2ggd2l0aCB0aGUgc3BlY2lmaWVkIGdhbmcuXFxuICAgICovXFxuICAgZ2V0Q2hhbmNlVG9XaW5DbGFzaChnYW5nTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYm9udXMgdGltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgYWNjdW11bGF0ZWQg4oCcYm9udXMgdGltZeKAnSAoc2Vjb25kcykgZm9yIHRoZSBHYW5nIG1lY2hhbmljLlxcbiAgICAqXFxuICAgICog4oCcQm9udXMgdGltZeKAnSBpcyBhY2N1bXVsYXRlZCB3aGVuIHRoZSBnYW1lIGlzIG9mZmxpbmUgb3IgaWYgdGhlIGdhbWUgaXMgaW5hY3RpdmUgaW4gdGhlIGJyb3dzZXIuXFxuICAgICpcXG4gICAgKiDigJxCb251cyB0aW1l4oCdIG1ha2VzIHRoZSBnYW1lIHByb2dyZXNzIGZhc3RlciwgdXAgdG8gMTB4IHRoZSBub3JtYWwgc3BlZWQuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBCb251cyB0aW1lIGZvciB0aGUgR2FuZyBtZWNoYW5pYyBpbiBtaWxsaXNlY29uZHMuXFxuICAgICovXFxuICAgZ2V0Qm9udXNUaW1lKCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFNsZWV2ZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogSWYgeW91IGFyZSBub3QgaW4gQml0Tm9kZS0xMCwgdGhlbiB5b3UgbXVzdCBoYXZlIFNvdXJjZS1GaWxlIDEwIGluIG9yZGVyIHRvIHVzZSB0aGlzIEFQSS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmUge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIHNsZWV2ZXMgeW91IG93bi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gdGhlIG51bWJlciBvZiBkdXBsaWNhdGUgc2xlZXZlcyB0aGUgcGxheWVyIGhhcy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIG51bWJlciBvZiBkdXBsaWNhdGUgc2xlZXZlcyB0aGUgcGxheWVyIGhhcy5cXG4gICAgKi9cXG4gICBnZXROdW1TbGVldmVzKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBzdGF0cyBvZiBhIHNsZWV2ZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBzdHJ1Y3R1cmUgY29udGFpbmluZyB0aGUgc3RhdHMgb2YgdGhlIHNsZWV2ZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIGdldCBzdGF0cyBvZi5cXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0aGUgc3RhdHMgb2YgdGhlIHNsZWV2ZS5cXG4gICAgKi9cXG4gICBnZXRTbGVldmVTdGF0cyhzbGVldmVOdW1iZXI6IG51bWJlcik6IFNsZWV2ZVNraWxscztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIHN0cnVjdCBjb250YWluaW5nIHRvbnMgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBzbGVldmVcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHJldHJpZXZlIGluZm9ybWF0aW9uLlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIHRvbnMgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBzbGVldmUuXFxuICAgICovXFxuICAgZ2V0SW5mb3JtYXRpb24oc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBTbGVldmVJbmZvcm1hdGlvbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRhc2sgb2YgYSBzbGVldmUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIHRoZSBjdXJyZW50IHRhc2sgdGhhdCB0aGUgc2xlZXZlIGlzIHBlcmZvcm1pbmcuIHR5cGUgaXMgc2V0IHRvIOKAnElkbGXigJ0gaWYgdGhlIHNsZWV2ZSBpc27igJl0IGRvaW5nIGFueXRoaW5nLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gcmV0cmlldmUgdGFzayBmcm9tLlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIGluZm9ybWF0aW9uIHRoZSBjdXJyZW50IHRhc2sgdGhhdCB0aGUgc2xlZXZlIGlzIHBlcmZvcm1pbmcuXFxuICAgICovXFxuICAgZ2V0VGFzayhzbGVldmVOdW1iZXI6IG51bWJlcik6IFNsZWV2ZVRhc2s7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byBzaG9jayByZWNvdmVyeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhpcyBhY3Rpb24gd2FzIHNldCBzdWNjZXNzZnVsbHkuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byBzdGFydCByZWNvdmVyeS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2V0VG9TaG9ja1JlY292ZXJ5KHNsZWV2ZU51bWJlcjogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHN5bmNocm9uaXplLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHN0YXJ0IHN5bmNocm9uaXppbmcuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvU3luY2hyb25pemUoc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBTZXQgYSBzbGVldmUgdG8gY29tbWl0IGNyaW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseS5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2UgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gc3RhcnQgY29tbWl0aW5nIGNyaW1lLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgY3JpbWUuIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvQ29tbWl0Q3JpbWUoc2xlZXZlTnVtYmVyOiBudW1iZXIsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byB3b3JrIGZvciBhIGZhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG9yIHRoaXMgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHdvcmsgZm9yIHRoZSBmYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uTmFtZSAtIE5hbWUgb2YgdGhlIGZhY3Rpb24gdG8gd29yayBmb3IuXFxuICAgICogQHBhcmFtIGZhY3Rpb25Xb3JrVHlwZSAtIE5hbWUgb2YgdGhlIGFjdGlvbiB0byBwZXJmb3JtIGZvciB0aGlzIGZhY3Rpb24uXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2xlZXZlIHN0YXJ0ZWQgd29ya2luZyBvbiB0aGlzIGZhY3Rpb24sIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzZXRUb0ZhY3Rpb25Xb3JrKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBmYWN0aW9uTmFtZTogc3RyaW5nLCBmYWN0aW9uV29ya1R5cGU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byB3b3JrIGZvciBhIGNvbXBhbnkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG9yIHRoaXMgY29tcGFueS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHdvcmsgZm9yIHRoZSBjb21wYW55LlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkgdG8gd29yayBmb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2xlZXZlIHN0YXJ0ZWQgd29ya2luZyBvbiB0aGlzIGNvbXBhbnksIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzZXRUb0NvbXBhbnlXb3JrKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBjb21wYW55TmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHRha2UgYSBjbGFzcyBhdCBhIHVuaXZlcnNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gc3RhcnQgdGFraW5nIGNsYXNzLlxcbiAgICAqIEBwYXJhbSB1bml2ZXJzaXR5IC0gTmFtZSBvZiB0aGUgdW5pdmVyc2l0eSB0byBhdHRlbmQuXFxuICAgICogQHBhcmFtIGNsYXNzTmFtZSAtIE5hbWUgb2YgdGhlIGNsYXNzIHRvIGZvbGxvdy5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2V0VG9Vbml2ZXJzaXR5Q291cnNlKHNsZWV2ZU51bWJlcjogbnVtYmVyLCB1bml2ZXJzaXR5OiBzdHJpbmcsIGNsYXNzTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHdvcmtvdXQgYXQgdGhlIGd5bS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIHNsZWV2ZSBzdGFydGVkIHdvcmtpbmcgb3V0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gd29ya291dCBhdCB0aGUgZ3ltLlxcbiAgICAqIEBwYXJhbSBneW1OYW1lIC0gTmFtZSBvZiB0aGUgZ3ltLlxcbiAgICAqIEBwYXJhbSBzdGF0IC0gTmFtZSBvZiB0aGUgc3RhdCB0byB0cmFpbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG91dCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvR3ltV29ya291dChzbGVldmVOdW1iZXI6IG51bWJlciwgZ3ltTmFtZTogc3RyaW5nLCBzdGF0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBNYWtlIGEgc2xlZXZlIHRyYXZlbCB0byBhbm90aGVyIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgcmVhY2hlZCBkZXN0aW5hdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHRyYXZlbC5cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBkZXN0aW5hdGlvbiBjaXR5LlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNsZWV2ZSByZWFjaGVkIGRlc3RpbmF0aW9uLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJhdmVsKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBjaXR5TmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGF1Z21lbnRhdGlvbnMgaW5zdGFsbGVkIG9uIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGxpc3Qgb2YgYXVnbWVudGF0aW9uIG5hbWVzIHRoYXQgdGhpcyBzbGVldmUgaGFzIGluc3RhbGxlZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHJldHJpZXZlIGF1Z21lbnRhdGlvbnMgZnJvbS5cXG4gICAgKiBAcmV0dXJucyBMaXN0IG9mIGF1Z21lbnRhdGlvbiBuYW1lcyB0aGF0IHRoaXMgc2xlZXZlIGhhcyBpbnN0YWxsZWQuXFxuICAgICovXFxuICAgZ2V0U2xlZXZlQXVnbWVudGF0aW9ucyhzbGVldmVOdW1iZXI6IG51bWJlcik6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IHB1cmNoYXNhYmxlIGF1Z3MgZm9yIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGxpc3Qgb2YgYXVnbWVudGF0aW9ucyB0aGF0IHRoZSBwbGF5ZXIgY2FuIGJ1eSBmb3IgdGhpcyBzbGVldmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byByZXRyaWV2ZSBwdXJjaGFzYWJsZSBhdWdtZW50YXRpb25zIGZyb20uXFxuICAgICogQHJldHVybnMgTGlzdCBvZiBhdWdtZW50YXRpb25zIHRoYXQgdGhlIHBsYXllciBjYW4gYnV5IGZvciB0aGlzIHNsZWV2ZS5cXG4gICAgKi9cXG4gICBnZXRTbGVldmVQdXJjaGFzYWJsZUF1Z3Moc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBBdWdtZW50UGFpcltdO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSBhbiBhdWcgZm9yIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiB0cnVlIGlmIHRoZSBhdWcgd2FzIHB1cmNoYXNlZCBhbmQgaW5zdGFsbGVkIG9uIHRoZSBzbGVldmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byBidXkgYW4gYXVnIGZvci5cXG4gICAgKiBAcGFyYW0gYXVnTmFtZSAtIE5hbWUgb2YgdGhlIGF1ZyB0byBidXkuIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgYXVnIHdhcyBwdXJjaGFzZWQgYW5kIGluc3RhbGxlZCBvbiB0aGUgc2xlZXZlLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgcHVyY2hhc2VTbGVldmVBdWcoc2xlZXZlTnVtYmVyOiBudW1iZXIsIGF1Z05hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBTa2lsbHMgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFNraWxsc0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgc2tpbGwgbGV2ZWwuXFxuICAgICogQHBhcmFtIGV4cCAtIGV4cGVyaWVuY2UgZm9yIHRoYXQgc2tpbGxcXG4gICAgKiBAcGFyYW0gc2tpbGxNdWx0IC0gTXVsdGlwbGllciBmb3IgdGhhdCBza2lsbCwgZGVmYXVsdHMgdG8gMS5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBza2lsbCBsZXZlbC5cXG4gICAgKi9cXG4gICBjYWxjdWxhdGVTa2lsbChleHA6IG51bWJlciwgc2tpbGxNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBleHAgZm9yIHNraWxsIGxldmVsLlxcbiAgICAqIEBwYXJhbSBza2lsbCAtIHRhcmdldCBza2lsbCBsZXZlbFxcbiAgICAqIEBwYXJhbSBza2lsbE11bHQgLSBNdWx0aXBsaWVyIGZvciB0aGF0IHNraWxsLCBkZWZhdWx0cyB0byAxLlxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGV4cCByZXF1aXJlZC5cXG4gICAgKi9cXG4gICBjYWxjdWxhdGVFeHAoc2tpbGw6IG51bWJlciwgc2tpbGxNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSGFja2luZyBmb3JtdWxhc1xcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgSGFja2luZ0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgaGFjayBjaGFuY2UuXFxuICAgICogQHBhcmFtIHNlcnZlciAtIFNlcnZlciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFNlcnZlciB8IGdldFNlcnZlcn1cXG4gICAgKiBAcGFyYW0gcGxheWVyIC0gUGxheWVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0UGxheWVyIHwgZ2V0UGxheWVyfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhY2sgY2hhbmNlLlxcbiAgICAqL1xcbiAgIGhhY2tDaGFuY2Uoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYWNrIGV4cCBmb3Igb25lIHRocmVhZC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIE11bHRpcGx5IGJ5IHRocmVhZCB0byBnZXQgdG90YWwgZXhwXFxuICAgICogQHBhcmFtIHNlcnZlciAtIFNlcnZlciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFNlcnZlciB8IGdldFNlcnZlcn1cXG4gICAgKiBAcGFyYW0gcGxheWVyIC0gUGxheWVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0UGxheWVyIHwgZ2V0UGxheWVyfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhY2sgZXhwLlxcbiAgICAqL1xcbiAgIGhhY2tFeHAoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYWNrIHBlcmNlbnQgZm9yIG9uZSB0aHJlYWQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBNdWx0aXBseSBieSB0aHJlYWQgdG8gZ2V0IHRvdGFsIHBlcmNlbnQgaGFja2VkLlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHBsYXllciAtIFBsYXllciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFBsYXllciB8IGdldFBsYXllcn1cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBoYWNrIHBlcmNlbnQuXFxuICAgICovXFxuICAgaGFja1BlcmNlbnQoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgcGVyY2VudCBhIHNlcnZlciB3b3VsZCBncm93LlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHRocmVhZHMgLSBBbW91bnQgb2YgdGhyZWFkLlxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHBhcmFtIGNvcmVzIC0gTnVtYmVyIG9mIGNvcmVzIG9uIHRoZSBjb21wdXRlciB0aGF0IHdpbGwgZXhlY3V0ZSBncm93LlxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGdyb3cgcGVyY2VudC5cXG4gICAgKi9cXG4gICBncm93UGVyY2VudChzZXJ2ZXI6IFNlcnZlciwgdGhyZWFkczogbnVtYmVyLCBwbGF5ZXI6IFBsYXllciwgY29yZXM/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGhhY2sgdGltZS5cXG4gICAgKiBAcGFyYW0gc2VydmVyIC0gU2VydmVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0U2VydmVyIHwgZ2V0U2VydmVyfVxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgaGFjayB0aW1lLlxcbiAgICAqL1xcbiAgIGhhY2tUaW1lKHNlcnZlcjogU2VydmVyLCBwbGF5ZXI6IFBsYXllcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgZ3JvdyB0aW1lLlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHBsYXllciAtIFBsYXllciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFBsYXllciB8IGdldFBsYXllcn1cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBncm93IHRpbWUuXFxuICAgICovXFxuICAgZ3Jvd1RpbWUoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB3ZWFrZW4gdGltZS5cXG4gICAgKiBAcGFyYW0gc2VydmVyIC0gU2VydmVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0U2VydmVyIHwgZ2V0U2VydmVyfVxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgd2Vha2VuIHRpbWUuXFxuICAgICovXFxuICAgd2Vha2VuVGltZShzZXJ2ZXI6IFNlcnZlciwgcGxheWVyOiBQbGF5ZXIpOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IE5vZGUgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIEhhY2tuZXROb2Rlc0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgbW9uZXkgZ2FpbiByYXRlLlxcbiAgICAqIEBwYXJhbSBsZXZlbCAtIGxldmVsIG9mIHRoZSBub2RlLlxcbiAgICAqIEBwYXJhbSByYW0gLSByYW0gb2YgdGhlIG5vZGUuXFxuICAgICogQHBhcmFtIGNvcmVzIC0gY29yZXMgb2YgdGhlIG5vZGUuXFxuICAgICogQHBhcmFtIG11bHQgLSBwbGF5ZXIgcHJvZHVjdGlvbiBtdWx0IChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgbW9uZXkgZ2FpbiByYXRlLlxcbiAgICAqL1xcbiAgIG1vbmV5R2FpblJhdGUobGV2ZWw6IG51bWJlciwgcmFtOiBudW1iZXIsIGNvcmVzOiBudW1iZXIsIG11bHQ/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgbm9kZSBsZXZlbC5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdMZXZlbCAtIHN0YXJ0aW5nIGxldmVsXFxuICAgICogQHBhcmFtIGV4dHJhTGV2ZWxzIC0gYW1vdW50IG9mIGxldmVsIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgbGV2ZWxVcGdyYWRlQ29zdChzdGFydGluZ0xldmVsOiBudW1iZXIsIGV4dHJhTGV2ZWxzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBub2RlIHJhbS5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdSYW0gLSBzdGFydGluZyByYW1cXG4gICAgKiBAcGFyYW0gZXh0cmFMZXZlbHMgLSBhbW91bnQgb2YgbGV2ZWwgb2YgcmFtIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgcmFtVXBncmFkZUNvc3Qoc3RhcnRpbmdSYW06IG51bWJlciwgZXh0cmFMZXZlbHM/OiBudW1iZXIsIGNvc3RNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgY29yZXMuXFxuICAgICogQHBhcmFtIHN0YXJ0aW5nQ29yZSAtIHN0YXJ0aW5nIGNvcmVzXFxuICAgICogQHBhcmFtIGV4dHJhQ29yZXMgLSBhbW91bnQgb2YgY29yZXMgdG8gcHVyY2hhc2UgKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHBhcmFtIGNvc3RNdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICBjb3JlVXBncmFkZUNvc3Qoc3RhcnRpbmdDb3JlOiBudW1iZXIsIGV4dHJhQ29yZXM/OiBudW1iZXIsIGNvc3RNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgY29zdCBvZiBhIGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIG51bWJlciBvZiB0aGUgaGFja25ldCBub2RlXFxuICAgICogQHBhcmFtIG11bHQgLSBwbGF5ZXIgY29zdCByZWR1Y3Rpb24gKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICBoYWNrbmV0Tm9kZUNvc3QobjogbnVtYmVyLCBtdWx0OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQWxsIGNvbnN0YW50cyB1c2VkIGJ5IHRoZSBnYW1lLlxcbiAgICAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIGFsbCBoYWNrbmV0IG5vZGUgY29uc3RhbnRzIHVzZWQgYnkgdGhlIGdhbWUuXFxuICAgICovXFxuICAgY29uc3RhbnRzKCk6IEhhY2tuZXROb2RlQ29uc3RhbnRzO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSGFja25ldCBTZXJ2ZXIgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIEhhY2tuZXRTZXJ2ZXJzRm9ybXVsYXMge1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYXNoIGdhaW4gcmF0ZS5cXG4gICAgKiBAcGFyYW0gbGV2ZWwgLSBsZXZlbCBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSByYW1Vc2VkIC0gcmFtVXNlZCBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBtYXhSYW0gLSBtYXhSYW0gb2YgdGhlIHNlcnZlci5cXG4gICAgKiBAcGFyYW0gY29yZXMgLSBjb3JlcyBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBtdWx0IC0gcGxheWVyIHByb2R1Y3Rpb24gbXVsdCAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhc2ggZ2FpbiByYXRlLlxcbiAgICAqL1xcbiAgIGhhc2hHYWluUmF0ZShsZXZlbDogbnVtYmVyLCByYW1Vc2VkOiBudW1iZXIsIG1heFJhbTogbnVtYmVyLCBjb3JlczogbnVtYmVyLCBtdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IHNlcnZlciBsZXZlbC5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdMZXZlbCAtIHN0YXJ0aW5nIGxldmVsXFxuICAgICogQHBhcmFtIGV4dHJhTGV2ZWxzIC0gYW1vdW50IG9mIGxldmVsIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgbGV2ZWxVcGdyYWRlQ29zdChzdGFydGluZ0xldmVsOiBudW1iZXIsIGV4dHJhTGV2ZWxzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBzZXJ2ZXIgcmFtLlxcbiAgICAqIEBwYXJhbSBzdGFydGluZ1JhbSAtIHN0YXJ0aW5nIHJhbVxcbiAgICAqIEBwYXJhbSBleHRyYUxldmVscyAtIGFtb3VudCBvZiBsZXZlbCBvZiByYW0gdG8gcHVyY2hhc2UgKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHBhcmFtIGNvc3RNdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICByYW1VcGdyYWRlQ29zdChzdGFydGluZ1JhbTogbnVtYmVyLCBleHRyYUxldmVscz86IG51bWJlciwgY29zdE11bHQ/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgc2VydmVyIGNvcmVzLlxcbiAgICAqIEBwYXJhbSBzdGFydGluZ0NvcmUgLSBzdGFydGluZyBjb3Jlc1xcbiAgICAqIEBwYXJhbSBleHRyYUNvcmVzIC0gYW1vdW50IG9mIGNvcmVzIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgY29yZVVwZ3JhZGVDb3N0KHN0YXJ0aW5nQ29yZTogbnVtYmVyLCBleHRyYUNvcmVzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBzZXJ2ZXIgY2FjaGUuXFxuICAgICogQHBhcmFtIHN0YXJ0aW5nQ2FjaGUgLSBzdGFydGluZyBjYWNoZSBsZXZlbFxcbiAgICAqIEBwYXJhbSBleHRyYUNhY2hlIC0gYW1vdW50IG9mIGxldmVscyBvZiBjYWNoZSB0byBwdXJjaGFzZSAoZGVmYXVsdHMgdG8gMSlcXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBjb3N0LlxcbiAgICAqL1xcbiAgIGNhY2hlVXBncmFkZUNvc3Qoc3RhcnRpbmdDYWNoZTogbnVtYmVyLCBleHRyYUNhY2hlPzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYXNoIGNvc3Qgb2YgYW4gdXBncmFkZS5cXG4gICAgKiBAcGFyYW0gdXBnTmFtZSAtIG5hbWUgb2YgdGhlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gbGV2ZWwgLSBsZXZlbCBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhc2ggY29zdC5cXG4gICAgKi9cXG4gICBoYXNoVXBncmFkZUNvc3QodXBnTmFtZTogbnVtYmVyLCBsZXZlbDogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgY29zdCBvZiBhIGhhY2tuZXQgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBuIC0gbnVtYmVyIG9mIHRoZSBoYWNrbmV0IHNlcnZlclxcbiAgICAqIEBwYXJhbSBtdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgaGFja25ldFNlcnZlckNvc3QobjogbnVtYmVyLCBtdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEFsbCBjb25zdGFudHMgdXNlZCBieSB0aGUgZ2FtZS5cXG4gICAgKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCBhbGwgaGFja25ldCBzZXJ2ZXIgY29uc3RhbnRzIHVzZWQgYnkgdGhlIGdhbWUuXFxuICAgICovXFxuICAgY29uc3RhbnRzKCk6IEhhY2tuZXRTZXJ2ZXJDb25zdGFudHM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBHYW5nIGZvcm11bGFzXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBHYW5nRm9ybXVsYXMge1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgd2FudGVkIHBlbmFsdHkuXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgd2FudGVkIHBlbmFsdHkuXFxuICAgICovXFxuICAgd2FudGVkUGVuYWx0eShnYW5nOiBHYW5nR2VuSW5mbyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgcmVzcGVjdCBnYWluIHBlciB0aWNrLlxcbiAgICAqIEBwYXJhbSBnYW5nIC0gR2FuZyBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0R2FuZ0luZm9ybWF0aW9uIHwgZ2V0R2FuZ0luZm9ybWF0aW9ufVxcbiAgICAqIEBwYXJhbSBtZW1iZXIgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRNZW1iZXJJbmZvcm1hdGlvbiB8IGdldE1lbWJlckluZm9ybWF0aW9ufVxcbiAgICAqIEBwYXJhbSB0YXNrIC0gR2FuZyBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0VGFza1N0YXRzIHwgZ2V0VGFza1N0YXRzfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIHJlc3BlY3QgZ2Fpbi5cXG4gICAgKi9cXG4gICByZXNwZWN0R2FpbihnYW5nOiBHYW5nR2VuSW5mbywgbWVtYmVyOiBHYW5nTWVtYmVySW5mbywgdGFzazogR2FuZ1Rhc2tTdGF0cyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgd2FudGVkIGdhaW4gcGVyIHRpY2suXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHBhcmFtIG1lbWJlciAtIE1lbWJlciBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0TWVtYmVySW5mb3JtYXRpb24gfCBnZXRNZW1iZXJJbmZvcm1hdGlvbn1cXG4gICAgKiBAcGFyYW0gdGFzayAtIFRhc2sgaW5mbyBmcm9tIHtAbGluayBHYW5nLmdldFRhc2tTdGF0cyB8IGdldFRhc2tTdGF0c31cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCB3YW50ZWQgZ2Fpbi5cXG4gICAgKi9cXG4gICB3YW50ZWRMZXZlbEdhaW4oZ2FuZzogR2FuZ0dlbkluZm8sIG1lbWJlcjogR2FuZ01lbWJlckluZm8sIHRhc2s6IEdhbmdUYXNrU3RhdHMpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIG1vbmV5IGdhaW4gcGVyIHRpY2suXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHBhcmFtIG1lbWJlciAtIE1lbWJlciBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0TWVtYmVySW5mb3JtYXRpb24gfCBnZXRNZW1iZXJJbmZvcm1hdGlvbn1cXG4gICAgKiBAcGFyYW0gdGFzayAtIFRhc2sgaW5mbyBmcm9tIHtAbGluayBHYW5nLmdldFRhc2tTdGF0cyB8IGdldFRhc2tTdGF0c31cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBtb25leSBnYWluLlxcbiAgICAqL1xcbiAgIG1vbmV5R2FpbihnYW5nOiBHYW5nR2VuSW5mbywgbWVtYmVyOiBHYW5nTWVtYmVySW5mbywgdGFzazogR2FuZ1Rhc2tTdGF0cyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGFzY2Vuc2lvbiBwb2ludCBnYWluLlxcbiAgICAqIEBwYXJhbSBleHAgLSBFeHBlcmllbmNlIHBvaW50IGJlZm9yZSBhc2NlbnNpb24uXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgYXNjZW5zaW9uIHBvaW50IGdhaW4uXFxuICAgICovXFxuICAgYXNjZW5zaW9uUG9pbnRzR2FpbihleHA6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGFzY2Vuc2lvbiBtdWx0LlxcbiAgICAqIEBwYXJhbSBwb2ludHMgLSBBbW91bnQgb2YgYXNjZW5zaW9uIHBvaW50cy5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBhc2NlbnNpb24gbXVsdC5cXG4gICAgKi9cXG4gICBhc2NlbnNpb25NdWx0aXBsaWVyKHBvaW50czogbnVtYmVyKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogRm9ybXVsYXMgQVBJXFxuICAqIEByZW1hcmtzXFxuICAqIFlvdSBuZWVkIEZvcm11bGFzLmV4ZSBvbiB5b3VyIGhvbWUgY29tcHV0ZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEZvcm11bGFzIHtcXG4gICAvKiogU2tpbGxzIGZvcm11bGFzICovXFxuICAgc2tpbGxzOiBTa2lsbHNGb3JtdWxhcztcXG4gICAvKiogSGFja2luZyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tpbmc6IEhhY2tpbmdGb3JtdWxhcztcXG4gICAvKiogSGFja25ldCBOb2RlcyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tuZXROb2RlczogSGFja25ldE5vZGVzRm9ybXVsYXM7XFxuICAgLyoqIEhhY2tuZXQgU2VydmVycyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tuZXRTZXJ2ZXJzOiBIYWNrbmV0U2VydmVyc0Zvcm11bGFzO1xcbiAgIC8qKiBHYW5nIGZvcm11bGFzICovXFxuICAgZ2FuZzogR2FuZ0Zvcm11bGFzO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBGcmFnbWVudCB7XFxuICAgaWQ6IG51bWJlcjtcXG4gICBzaGFwZTogYm9vbGVhbltdW107XFxuICAgdHlwZTogbnVtYmVyO1xcbiAgIHBvd2VyOiBudW1iZXI7XFxuICAgbGltaXQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQWN0aXZlRnJhZ21lbnQge1xcbiAgIGlkOiBudW1iZXI7XFxuICAgYXZnQ2hhcmdlOiBudW1iZXI7XFxuICAgbnVtQ2hhcmdlOiBudW1iZXI7XFxuICAgcm90YXRpb246IG51bWJlcjtcXG4gICB4OiBudW1iZXI7XFxuICAgeTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogU3RhbmVrJ3MgR2lmdCBBUEkuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBTdGFuZWsge1xcbiAgIC8qKlxcbiAgICAqIFN0YW5laydzIEdpZnQgd2lkdGguXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICogQHJldHVybnMgVGhlIHdpZHRoIG9mIHRoZSBnaWZ0LlxcbiAgICAqL1xcbiAgIHdpZHRoKCk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBTdGFuZWsncyBHaWZ0IGhlaWdodC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKiBAcmV0dXJucyBUaGUgaGVpZ2h0IG9mIHRoZSBnaWZ0LlxcbiAgICAqL1xcbiAgIGhlaWdodCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoYXJnZSBhIGZyYWdtZW50LCBpbmNyZWFzaW5nIGl0cyBwb3dlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKiBAcGFyYW0gcm9vdFggLSByb290WCBSb290IFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIHJvb3RZIFJvb3QgWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IGxhc3RzIHVudGlsIHRoZSBjaGFyZ2UgYWN0aW9uIGlzIG92ZXIuXFxuICAgICovXFxuICAgY2hhcmdlKHJvb3RYOiBudW1iZXIsIHJvb3RZOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IHBvc3NpYmxlIGZyYWdtZW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBMaXN0IG9mIHBvc3NpYmxlIGZyYWdtZW50cy5cXG4gICAgKi9cXG4gICBmcmFnbWVudERlZmluaXRpb25zKCk6IEZyYWdtZW50W107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3Qgb2YgZnJhZ21lbnRzIGluIFN0YW5laydzIEdpZnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTGlzdCBvZiBhY3RpdmUgZnJhZ21lbnRzIHBsYWNlZCBvbiBTdGFuZWsncyBHaWZ0LlxcbiAgICAqL1xcbiAgIGFjdGl2ZUZyYWdtZW50cygpOiBBY3RpdmVGcmFnbWVudFtdO1xcbiBcXG4gICAvKipcXG4gICAgKiBDbGVhciB0aGUgYm9hcmQgb2YgYWxsIGZyYWdtZW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgY2xlYXIoKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgZnJhZ21lbnQgY2FuIGJlIHBsYWNlZCBhdCBzcGVjaWZpZWQgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gcm9vdFggLSByb290WCBSb290IFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIHJvb3RZIFJvb3QgWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHBhcmFtIHJvdGF0aW9uIC0gcm90YXRpb24gQSBudW1iZXIgZnJvbSAwIHRvIDMsIHRoZSBtb3VudCBvZiA5MCBkZWdyZWUgdHVybiB0byB0YWtlLlxcbiAgICAqIEBwYXJhbSBmcmFnbWVudElkIC0gZnJhZ21lbnRJZCBJRCBvZiB0aGUgZnJhZ21lbnQgdG8gcGxhY2UuXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgZnJhZ21lbnQgY2FuIGJlIHBsYWNlZCBhdCB0aGF0IHBvc2l0aW9uLiBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgY2FuUGxhY2Uocm9vdFg6IG51bWJlciwgcm9vdFk6IG51bWJlciwgcm90YXRpb246IG51bWJlciwgZnJhZ21lbnRJZDogbnVtYmVyKTogYm9vbGVhbjtcXG4gICAvKipcXG4gICAgKiBQbGFjZSBmcmFnbWVudCBvbiBTdGFuZWsncyBHaWZ0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSByb290WCAtIFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIFkgYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb3RhdGlvbiAtIEEgbnVtYmVyIGZyb20gMCB0byAzLCB0aGUgbW91bnQgb2YgOTAgZGVncmVlIHR1cm4gdG8gdGFrZS5cXG4gICAgKiBAcGFyYW0gZnJhZ21lbnRJZCAtIElEIG9mIHRoZSBmcmFnbWVudCB0byBwbGFjZS5cXG4gICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBmcmFnbWVudCBjYW4gYmUgcGxhY2VkIGF0IHRoYXQgcG9zaXRpb24uIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwbGFjZShyb290WDogbnVtYmVyLCByb290WTogbnVtYmVyLCByb3RhdGlvbjogbnVtYmVyLCBmcmFnbWVudElkOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEdldCBwbGFjZWQgZnJhZ21lbnQgYXQgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIHJvb3RYIC0gWCBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHBhcmFtIHJvb3RZIC0gWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHJldHVybnMgVGhlIGZyYWdtZW50IGF0IFtyb290WCwgcm9vdFldLCBpZiBhbnkuXFxuICAgICovXFxuICAgZ2V0KHJvb3RYOiBudW1iZXIsIHJvb3RZOiBudW1iZXIpOiBBY3RpdmVGcmFnbWVudCB8IHVuZGVmaW5lZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmVtb3ZlIGZyYWdtZW50IGF0IGxvY2F0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSByb290WCAtIFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIFkgYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEByZXR1cm5zIFRoZSBmcmFnbWVudCBhdCBbcm9vdFgsIHJvb3RZXSwgaWYgYW55LlxcbiAgICAqL1xcbiAgIHJlbW92ZShyb290WDogbnVtYmVyLCByb290WTogbnVtYmVyKTogYm9vbGVhbjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFVzZXIgSW50ZXJmYWNlIEFQSS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFVzZXJJbnRlcmZhY2Uge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCB0aGVtZVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSB0aGVtZSdzIGNvbG9yc1xcbiAgICAqL1xcbiAgIGdldFRoZW1lKCk6IFVzZXJJbnRlcmZhY2VUaGVtZTtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0cyB0aGUgY3VycmVudCB0aGVtZVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIFVzYWdlIGV4YW1wbGUgKE5TMilcXG4gICAgKiBgYGB0c1xcbiAgICAqIGNvbnN0IHRoZW1lID0gbnMudWkuZ2V0VGhlbWUoKTtcXG4gICAgKiB0aGVtZS5wcmltYXJ5ID0gJyNmZjU1MDAnO1xcbiAgICAqIG5zLnVpLnNldFRoZW1lKHRoZW1lKTtcXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBzZXRUaGVtZShuZXdUaGVtZTogVXNlckludGVyZmFjZVRoZW1lKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmVzZXRzIHRoZSBwbGF5ZXIncyB0aGVtZSB0byB0aGUgZGVmYXVsdCB2YWx1ZXNcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVzZXRUaGVtZSgpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGN1cnJlbnQgc3R5bGVzXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHBsYXllcidzIHN0eWxlc1xcbiAgICAqL1xcbiAgIGdldFN0eWxlcygpOiBJU3R5bGVTZXR0aW5ncztcXG4gXFxuICAgLyoqXFxuICAgICogU2V0cyB0aGUgY3VycmVudCBzdHlsZXNcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBVc2FnZSBleGFtcGxlIChOUzIpXFxuICAgICogYGBgdHNcXG4gICAgKiBjb25zdCBzdHlsZXMgPSBucy51aS5nZXRTdHlsZXMoKTtcXG4gICAgKiBzdHlsZXMuZm9udEZhbWlseSA9ICdDb21pYyBTYW5zIE1zJztcXG4gICAgKiBucy51aS5zZXRTdHlsZXMoc3R5bGVzKTtcXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBzZXRTdHlsZXMobmV3U3R5bGVzOiBJU3R5bGVTZXR0aW5ncyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJlc2V0cyB0aGUgcGxheWVyJ3Mgc3R5bGVzIHRvIHRoZSBkZWZhdWx0IHZhbHVlc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICByZXNldFN0eWxlcygpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjdXJyZW50IGdhbWUgaW5mb3JtYXRpb24gKHZlcnNpb24sIGNvbW1pdCwgLi4uKVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICBnZXRHYW1lSW5mbygpOiBHYW1lSW5mbztcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvbGxlY3Rpb24gb2YgYWxsIGZ1bmN0aW9ucyBwYXNzZWQgdG8gc2NyaXB0c1xcbiAgKiBAcHVibGljXFxuICAqIEByZW1hcmtzXFxuICAqIDxiPkJhc2ljIG5zMSB1c2FnZSBleGFtcGxlOjwvYj5cXG4gICogYGBgdHNcXG4gICogIC8vIEJhc2ljIG5zIGZ1bmN0aW9ucyBjYW4gYmUgdXNlZCBkaXJlY3RseVxcbiAgKiAgZ2V0SG9zdG5hbWUoKTtcXG4gICogIC8vIFNvbWUgcmVsYXRlZCBmdW5jdGlvbnMgYXJlIGdhdGhlcmVkIHdpdGhpbiBhIGNvbW1vbiBuYW1lc3BhY2VcXG4gICogIHN0b2NrLmdldFByaWNlKCk7XFxuICAqIGBgYFxcbiAgKiB7QGxpbmsgaHR0cHM6Ly9iaXRidXJuZXIucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L25ldHNjcmlwdC9uZXRzY3JpcHQxLmh0bWx8IG5zMSBpbi1nYW1lIGRvY3N9XFxuICAqIDxocj5cXG4gICogPGI+QmFzaWMgbnMyIHVzYWdlIGV4YW1wbGU6PC9iPlxcbiAgKiBgYGB0c1xcbiAgKiBleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgKiAgLy8gQmFzaWMgbnMgZnVuY3Rpb25zIGNhbiBiZSBhY2Nlc3NlZCBvbiB0aGUgbnMgb2JqZWN0XFxuICAqICBucy5nZXRIb3N0bmFtZSgpO1xcbiAgKiAgLy8gU29tZSByZWxhdGVkIGZ1bmN0aW9ucyBhcmUgZ2F0aGVyZWQgdW5kZXIgYSBzdWItcHJvcGVydHkgb2YgdGhlIG5zIG9iamVjdFxcbiAgKiAgbnMuc3RvY2suZ2V0UHJpY2UoKTtcXG4gICogIC8vIFNvbWUgZnVuY3Rpb25zIG5lZWQgdG8gYmUgYXdhaXQgZWRcXG4gICogIGF3YWl0IG5zLmhhY2soJ24wMGRsZXMnKTtcXG4gICogfVxcbiAgKiBgYGBcXG4gICoge0BsaW5rIGh0dHBzOi8vYml0YnVybmVyLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9uZXRzY3JpcHQvbmV0c2NyaXB0anMuaHRtbHwgbnMyIGluLWdhbWUgZG9jc31cXG4gICogPGhyPlxcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBOUyBleHRlbmRzIFNpbmd1bGFyaXR5IHtcXG4gICAvKipcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGhhY2tuZXQgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiA0IEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgaGFja25ldDogSGFja25ldDtcXG4gICAvKipcXG4gICAgKlxcbiAgICAqIE5hbWVzcGFjZSBmb3IgYmxhZGVidXJuZXIgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgYmxhZGVidXJuZXI6IEJsYWRlYnVybmVyO1xcbiAgIC8qKlxcbiAgICAqXFxuICAgICogTmFtZXNwYWNlIGZvciBjb2Rpbmdjb250cmFjdCBmdW5jdGlvbnMuXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICByZWFkb25seSBjb2Rpbmdjb250cmFjdDogQ29kaW5nQ29udHJhY3Q7XFxuICAgLyoqXFxuICAgICpcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGdhbmcgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgZ2FuZzogR2FuZztcXG4gICAvKipcXG4gICAgKlxcbiAgICAqIE5hbWVzcGFjZSBmb3Igc2xlZXZlIGZ1bmN0aW9ucy5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHNsZWV2ZTogU2xlZXZlO1xcbiAgIC8qKlxcbiAgICAqXFxuICAgICogTmFtZXNwYWNlIGZvciBzdG9jayBmdW5jdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHN0b2NrOiBUSVg7XFxuICAgLyoqXFxuICAgICpcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGZvcm11bGFzIGZ1bmN0aW9ucy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgZm9ybXVsYXM6IEZvcm11bGFzO1xcbiAgIC8qKlxcbiAgICAqIE5hbWVzcGFjZSBmb3Igc3RhbmVrIGZ1bmN0aW9ucy5cXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHN0YW5lazogU3RhbmVrO1xcbiAgIC8qKlxcbiAgICAqIE5hbWVzcGFjZSBmb3IgY29ycG9yYXRpb24gZnVuY3Rpb25zLlxcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgY29ycG9yYXRpb246IENvcnBvcmF0aW9uO1xcbiBcXG4gICAvKipcXG4gICAgKiBOYW1lc3BhY2UgZm9yIHVzZXIgaW50ZXJmYWNlIGZ1bmN0aW9ucy5cXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHVpOiBVc2VySW50ZXJmYWNlO1xcbiBcXG4gICAvKipcXG4gICAgKiBBcmd1bWVudHMgcGFzc2VkIGludG8gdGhlIHNjcmlwdC5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEFyZ3VtZW50cyBwYXNzZWQgaW50byBhIHNjcmlwdCBjYW4gYmUgYWNjZXNzZWQgdXNpbmcgYSBub3JtYWxcXG4gICAgKiBhcnJheSB1c2luZyB0aGUgW10gb3BlcmF0b3IgKGFyZ3NbMF0sIGFyZ3NbMV0sIGV0Y+KApikuXFxuICAgICpcXG4gICAgKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGdldCB0aGUgbnVtYmVyIG9mIGFyZ3VtZW50cyB0aGF0IHdhcyBwYXNzZWQgaW50byBhIHNjcmlwdCB1c2luZzogJ2FyZ3MubGVuZ3RoJ1xcbiAgICAqIFdBUk5JTkc6IERvIG5vdCB0cnkgdG8gbW9kaWZ5IHRoZSBhcmdzIGFycmF5LiBUaGlzIHdpbGwgYnJlYWsgdGhlIGdhbWUuXFxuICAgICovXFxuICAgcmVhZG9ubHkgYXJnczogKHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4pW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0ZWFsIGEgc2VydmVycyBtb25leS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIEZ1bmN0aW9uIHRoYXQgaXMgdXNlZCB0byB0cnkgYW5kIGhhY2sgc2VydmVycyB0byBzdGVhbCBtb25leSBhbmQgZ2FpbiBoYWNraW5nIGV4cGVyaWVuY2UuXFxuICAgICogVGhlIHJ1bnRpbWUgZm9yIHRoaXMgY29tbWFuZCBkZXBlbmRzIG9uIHlvdXIgaGFja2luZyBsZXZlbCBhbmQgdGhlIHRhcmdldCBzZXJ2ZXLigJlzXFxuICAgICogc2VjdXJpdHkgbGV2ZWwgd2hlbiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZC4gSW4gb3JkZXIgdG8gaGFjayBhIHNlcnZlciB5b3UgbXVzdCBmaXJzdCBnYWluIHJvb3QgYWNjZXNzIHRvIHRoYXQgc2VydmVyXFxuICAgICogYW5kIGFsc28gaGF2ZSB0aGUgcmVxdWlyZWQgaGFja2luZyBsZXZlbC5cXG4gICAgKlxcbiAgICAqIEEgc2NyaXB0IGNhbiBoYWNrIGEgc2VydmVyIGZyb20gYW55d2hlcmUuIEl0IGRvZXMgbm90IG5lZWQgdG8gYmUgcnVubmluZyBvbiB0aGUgc2FtZVxcbiAgICAqIHNlcnZlciB0byBoYWNrIHRoYXQgc2VydmVyLiBGb3IgZXhhbXBsZSwgeW91IGNhbiBjcmVhdGUgYSBzY3JpcHQgdGhhdCBoYWNrcyB0aGUgYGZvb2Ruc3R1ZmZgXFxuICAgICogc2VydmVyIGFuZCBydW4gdGhhdCBzY3JpcHQgb24gYW55IHNlcnZlciBpbiB0aGUgZ2FtZS5cXG4gICAgKlxcbiAgICAqIEEgc3VjY2Vzc2Z1bCBgaGFjaygpYCBvbiBhIHNlcnZlciB3aWxsIHJhaXNlIHRoYXQgc2VydmVy4oCZcyBzZWN1cml0eSBsZXZlbCBieSAwLjAwMi5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogdmFyIGVhcm5lZE1vbmV5ID0gaGFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGVhcm5lZE1vbmV5ID0gZWFybmVkTW9uZXkgKyBoYWNrKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gaGFja1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbGV0IGVhcm5lZE1vbmV5ID0gYXdhaXQgbnMuaGFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGVhcm5lZE1vbmV5ICs9IGF3YWl0IG5zLmhhY2soXFxcImZvb2Ruc3R1ZmZcXFwiLCB7IHRocmVhZHM6IDUgfSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBoYWNrXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBoYWNrLlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiBtb25leSBzdG9sZW4gaWYgdGhlIGhhY2sgaXMgc3VjY2Vzc2Z1bCwgYW5kIHplcm8gb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGhhY2soaG9zdDogc3RyaW5nLCBvcHRzPzogQmFzaWNIR1dPcHRpb25zKTogUHJvbWlzZTxudW1iZXI+O1xcbiBcXG4gICAvKipcXG4gICAgKiBTcG9vZiBtb25leSBpbiBhIHNlcnZlcnMgYmFuayBhY2NvdW50LCBpbmNyZWFzaW5nIHRoZSBhbW91bnQgYXZhaWxhYmxlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIFVzZSB5b3VyIGhhY2tpbmcgc2tpbGxzIHRvIGluY3JlYXNlIHRoZSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIFRoZSBydW50aW1lIGZvciB0aGlzIGNvbW1hbmQgZGVwZW5kcyBvbiB5b3VyIGhhY2tpbmcgbGV2ZWwgYW5kIHRoZSB0YXJnZXQgc2VydmVy4oCZc1xcbiAgICAqIHNlY3VyaXR5IGxldmVsLiBXaGVuIGBncm93YCBjb21wbGV0ZXMsIHRoZSBtb25leSBhdmFpbGFibGUgb24gYSB0YXJnZXQgc2VydmVyIHdpbGxcXG4gICAgKiBiZSBpbmNyZWFzZWQgYnkgYSBjZXJ0YWluLCBmaXhlZCBwZXJjZW50YWdlLiBUaGlzIHBlcmNlbnRhZ2UgaXMgZGV0ZXJtaW5lZCBieSB0aGVcXG4gICAgKiB0YXJnZXQgc2VydmVy4oCZcyBncm93dGggcmF0ZSAod2hpY2ggdmFyaWVzIGJldHdlZW4gc2VydmVycykgYW5kIHNlY3VyaXR5IGxldmVsLiBHZW5lcmFsbHksXFxuICAgICogaGlnaGVyLWxldmVsIHNlcnZlcnMgaGF2ZSBoaWdoZXIgZ3Jvd3RoIHJhdGVzLiBUaGUgZ2V0U2VydmVyR3Jvd3RoKCkgZnVuY3Rpb24gY2FuIGJlIHVzZWRcXG4gICAgKiB0byBvYnRhaW4gYSBzZXJ2ZXLigJlzIGdyb3d0aCByYXRlLlxcbiAgICAqXFxuICAgICogTGlrZSBoYWNrLCBgZ3Jvd2AgY2FuIGJlIGNhbGxlZCBvbiBhbnkgc2VydmVyLCByZWdhcmRsZXNzIG9mIHdoZXJlIHRoZSBzY3JpcHQgaXMgcnVubmluZy5cXG4gICAgKiBUaGUgZ3JvdygpIGNvbW1hbmQgcmVxdWlyZXMgcm9vdCBhY2Nlc3MgdG8gdGhlIHRhcmdldCBzZXJ2ZXIsIGJ1dCB0aGVyZSBpcyBubyByZXF1aXJlZCBoYWNraW5nXFxuICAgICogbGV2ZWwgdG8gcnVuIHRoZSBjb21tYW5kLiBJdCBhbHNvIHJhaXNlcyB0aGUgc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIgYnkgMC4wMDQuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBhdmFpbGFibGVNb25leSA9IGdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudE1vbmV5ID0gY3VycmVudE1vbmV5ICogKDEgKyBncm93KFxcXCJmb29kbnN0dWZmXFxcIikpO1xcbiAgICAqIGN1cnJlbnRNb25leSA9IGN1cnJlbnRNb25leSAqICgxICsgZ3JvdyhcXFwiZm9vZG5zdHVmZlxcXCIsIHsgdGhyZWFkczogNSB9KSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBncm93XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBsZXQgYXZhaWxhYmxlTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGN1cnJlbnRNb25leSAqPSAoMSArIGF3YWl0IG5zLmdyb3coXFxcImZvb2Ruc3R1ZmZcXFwiKSk7XFxuICAgICogY3VycmVudE1vbmV5ICo9ICgxICsgYXdhaXQgbnMuZ3JvdyhcXFwiZm9vZG5zdHVmZlxcXCIsIHsgdGhyZWFkczogNSB9KSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBncm93XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBncm93LlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVGhlIG51bWJlciBieSB3aGljaCB0aGUgbW9uZXkgb24gdGhlIHNlcnZlciB3YXMgbXVsdGlwbGllZCBmb3IgdGhlIGdyb3d0aC5cXG4gICAgKi9cXG4gICBncm93KGhvc3Q6IHN0cmluZywgb3B0cz86IEJhc2ljSEdXT3B0aW9ucyk6IFByb21pc2U8bnVtYmVyPjtcXG4gXFxuICAgLyoqXFxuICAgICogUmVkdWNlIGEgc2VydmVyIHNlY3VyaXR5IGxldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIFVzZSB5b3VyIGhhY2tpbmcgc2tpbGxzIHRvIGF0dGFjayBhIHNlcnZlcuKAmXMgc2VjdXJpdHksIGxvd2VyaW5nIHRoZSBzZXJ2ZXLigJlzIHNlY3VyaXR5IGxldmVsLlxcbiAgICAqIFRoZSBydW50aW1lIGZvciB0aGlzIGNvbW1hbmQgZGVwZW5kcyBvbiB5b3VyIGhhY2tpbmcgbGV2ZWwgYW5kIHRoZSB0YXJnZXQgc2VydmVy4oCZcyBzZWN1cml0eVxcbiAgICAqIGxldmVsIHdoZW4gdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQuIFRoaXMgZnVuY3Rpb24gbG93ZXJzIHRoZSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlciBieSAwLjA1LlxcbiAgICAqXFxuICAgICogTGlrZSBoYWNrIGFuZCBncm93LCBgd2Vha2VuYCBjYW4gYmUgY2FsbGVkIG9uIGFueSBzZXJ2ZXIsIHJlZ2FyZGxlc3Mgb2ZcXG4gICAgKiB3aGVyZSB0aGUgc2NyaXB0IGlzIHJ1bm5pbmcuIFRoaXMgY29tbWFuZCByZXF1aXJlcyByb290IGFjY2VzcyB0byB0aGUgdGFyZ2V0IHNlcnZlciwgYnV0XFxuICAgICogdGhlcmUgaXMgbm8gcmVxdWlyZWQgaGFja2luZyBsZXZlbCB0byBydW4gdGhlIGNvbW1hbmQuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBjdXJyZW50U2VjdXJpdHkgPSBnZXRTZXJ2ZXJTZWN1cml0eUxldmVsKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudFNlY3VyaXR5ID0gY3VycmVudFNlY3VyaXR5IC0gd2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudFNlY3VyaXR5ID0gY3VycmVudFNlY3VyaXR5IC0gd2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gd2Vha2VuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBsZXQgY3VycmVudFNlY3VyaXR5ID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGN1cnJlbnRTZWN1cml0eSAtPSBhd2FpdCBucy53ZWFrZW4oXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBjdXJyZW50U2VjdXJpdHkgLT0gYXdhaXQgbnMud2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gd2Vha2VuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byB3ZWFrZW4uXFxuICAgICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXJhbWV0ZXJzIGZvciBjb25maWd1cmluZyBmdW5jdGlvbiBiZWhhdmlvci5cXG4gICAgKiBAcmV0dXJucyBUaGUgYW1vdW50IGJ5IHdoaWNoIHRoZSB0YXJnZXQgc2VydmVy4oCZcyBzZWN1cml0eSBsZXZlbCB3YXMgZGVjcmVhc2VkLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gMC4wNSBtdWx0aXBsaWVkIGJ5IHRoZSBudW1iZXIgb2Ygc2NyaXB0IHRocmVhZHMuXFxuICAgICovXFxuICAgd2Vha2VuKGhvc3Q6IHN0cmluZywgb3B0cz86IEJhc2ljSEdXT3B0aW9ucyk6IFByb21pc2U8bnVtYmVyPjtcXG4gXFxuICAgLyoqXFxuICAgICogUHJlZGljdCB0aGUgZWZmZWN0IG9mIHdlYWtlbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBzZWN1cml0eSBkZWNyZWFzZSB0aGF0IHdvdWxkIG9jY3VyIGlmIGEgd2Vha2VuIHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEBwYXJhbSBjb3JlcyAtIE9wdGlvbmFsLiBUaGUgbnVtYmVyIG9mIGNvcmVzIG9mIHRoZSBzZXJ2ZXIgdGhhdCB3b3VsZCBydW4gd2Vha2VuLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBkZWNyZWFzZS5cXG4gICAgKi9cXG4gICB3ZWFrZW5BbmFseXplKHRocmVhZHM6IG51bWJlciwgY29yZXM/OiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFByZWRpY3QgdGhlIGVmZmVjdCBvZiBoYWNrLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgbnVtYmVyIG9mIHNjcmlwdCB0aHJlYWRzIHlvdSBuZWVkIHdoZW4gcnVubmluZyB0aGUgaGFjayBjb21tYW5kXFxuICAgICogdG8gc3RlYWwgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgbW9uZXkgZnJvbSB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBJZiBoYWNrQW1vdW50IGlzIGxlc3MgdGhhbiB6ZXJvIG9yIGdyZWF0ZXIgdGhhbiB0aGUgYW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc2VydmVyLFxcbiAgICAqIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIC0xLlxcbiAgICAqXFxuICAgICogV2FybmluZzogVGhlIHZhbHVlIHJldHVybmVkIGJ5IHRoaXMgZnVuY3Rpb24gaXNu4oCZdCBuZWNlc3NhcmlseSBhIHdob2xlIG51bWJlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBsZXTigJlzIHNheSB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgaGFzICQxMG0gYW5kIHlvdSBydW46XFxuICAgICogaGFja0FuYWx5emVUaHJlYWRzKFxcXCJmb29kbnN0dWZmXFxcIiwgMWU2KTtcXG4gICAgKiAvL0lmIHRoaXMgZnVuY3Rpb24gcmV0dXJucyA1MCwgdGhpcyBtZWFucyB0aGF0IGlmIHlvdXIgbmV4dCBoYWNrIGNhbGwgaXMgcnVuIG9uIGEgc2NyaXB0IHdpdGggNTAgdGhyZWFkcywgaXQgd2lsbCBzdGVhbCAkMW0gZnJvbSB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBhbmFseXplLlxcbiAgICAqIEBwYXJhbSBoYWNrQW1vdW50IC0gQW1vdW50IG9mIG1vbmV5IHlvdSB3YW50IHRvIGhhY2sgZnJvbSB0aGUgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgdGhyZWFkcyBuZWVkZWQgdG8gaGFjayB0aGUgc2VydmVyIGZvciBoYWNrQW1vdW50IG1vbmV5LlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplVGhyZWFkcyhob3N0OiBzdHJpbmcsIGhhY2tBbW91bnQ6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwYXJ0IG9mIG1vbmV5IHN0b2xlbiB3aXRoIGEgc2luZ2xlIHRocmVhZC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBwYXJ0IG9mIHRoZSBzcGVjaWZpZWQgc2VydmVy4oCZcyBtb25leSB5b3Ugd2lsbCBzdGVhbCB3aXRoIGEgc2luZ2xlIHRocmVhZCBoYWNrLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBhc3N1bWUgdGhlIGZvbGxvd2luZyByZXR1cm5zIDAuMDE6XFxuICAgICogdmFyIGhhY2tBbW91bnQgPSBoYWNrQW5hbHl6ZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIC8vVGhpcyBtZWFucyB0aGF0IGlmIGhhY2sgdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHVzaW5nIGEgc2luZ2xlIHRocmVhZCwgdGhlbiB5b3Ugd2lsbCBzdGVhbCAxJSwgb3IgMC4wMSBvZiBpdHMgdG90YWwgbW9uZXkuIElmIHlvdSBoYWNrIHVzaW5nIE4gdGhyZWFkcywgdGhlbiB5b3Ugd2lsbCBzdGVhbCBOKjAuMDEgdGltZXMgaXRzIHRvdGFsIG1vbmV5LlxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy9Gb3IgZXhhbXBsZSwgYXNzdW1lIHRoZSBmb2xsb3dpbmcgcmV0dXJucyAwLjAxOlxcbiAgICAqIGNvbnN0IGhhY2tBbW91bnQgPSBucy5oYWNrQW5hbHl6ZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIC8vVGhpcyBtZWFucyB0aGF0IGlmIGhhY2sgdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHVzaW5nIGEgc2luZ2xlIHRocmVhZCwgdGhlbiB5b3Ugd2lsbCBzdGVhbCAxJSwgb3IgMC4wMSBvZiBpdHMgdG90YWwgbW9uZXkuIElmIHlvdSBoYWNrIHVzaW5nIE4gdGhyZWFkcywgdGhlbiB5b3Ugd2lsbCBzdGVhbCBOKjAuMDEgdGltZXMgaXRzIHRvdGFsIG1vbmV5LlxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgVGhlIHBhcnQgb2YgbW9uZXkgeW91IHdpbGwgc3RlYWwgZnJvbSB0aGUgdGFyZ2V0IHNlcnZlciB3aXRoIGEgc2luZ2xlIHRocmVhZCBoYWNrLlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBzZWN1cml0eSBpbmNyZWFzZSBmb3IgYSBudW1iZXIgb2YgdGhyZWFkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGluY3JlYXNlIHRoYXQgd291bGQgb2NjdXIgaWYgYSBoYWNrIHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBpbmNyZWFzZS5cXG4gICAgKi9cXG4gICBoYWNrQW5hbHl6ZVNlY3VyaXR5KHRocmVhZHM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjaGFuY2Ugb2Ygc3VjY2Vzc2Z1bGx5IGhhY2tpbmcgYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY2hhbmNlIHlvdSBoYXZlIG9mIHN1Y2Nlc3NmdWxseSBoYWNraW5nIHRoZSBzcGVjaWZpZWQgc2VydmVyLlxcbiAgICAqXFxuICAgICogVGhpcyByZXR1cm5lZCB2YWx1ZSBpcyBpbiBkZWNpbWFsIGZvcm0sIG5vdCBwZXJjZW50YWdlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2hhbmNlIHlvdSBoYXZlIG9mIHN1Y2Nlc3NmdWxseSBoYWNraW5nIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplQ2hhbmNlKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgZ3JvdyB0aHJlYWQgbmVlZGVkIHRvIGdyb3cgYSBzZXJ2ZXIgYnkgYSBjZXJ0YWluIG11bHRpcGxpZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBudW1iZXIgb2Yg4oCcZ3Jvd3Roc+KAnSBuZWVkZWQgaW4gb3JkZXIgdG8gaW5jcmVhc2VcXG4gICAgKiB0aGUgYW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlciBieSB0aGUgc3BlY2lmaWVkIGFtb3VudC5cXG4gICAgKiBUaGUgc3BlY2lmaWVkIGFtb3VudCBpcyBtdWx0aXBsaWNhdGl2ZSBhbmQgaXMgaW4gZGVjaW1hbCBmb3JtLCBub3QgcGVyY2VudGFnZS5cXG4gICAgKlxcbiAgICAqIFdhcm5pbmc6IFRoZSB2YWx1ZSByZXR1cm5lZCBieSB0aGlzIGZ1bmN0aW9uIGlzbuKAmXQgbmVjZXNzYXJpbHkgYSB3aG9sZSBudW1iZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vRm9yIGV4YW1wbGUsIGlmIHlvdSB3YW50IHRvIGRldGVybWluZSBob3cgbWFueSBncm93IGNhbGxzIHlvdSBuZWVkIHRvIGRvdWJsZSB0aGUgYW1vdW50IG9mIG1vbmV5IG9uIGZvb2Ruc3R1ZmYsIHlvdSB3b3VsZCB1c2U6XFxuICAgICogdmFyIGdyb3dUaW1lcyA9IGdyb3d0aEFuYWx5emUoXFxcImZvb2Ruc3R1ZmZcXFwiLCAyKTtcXG4gICAgKiAvL0lmIHRoaXMgcmV0dXJucyAxMDAsIHRoZW4gdGhpcyBtZWFucyB5b3UgbmVlZCB0byBjYWxsIGdyb3cgMTAwIHRpbWVzIGluIG9yZGVyIHRvIGRvdWJsZSB0aGUgbW9uZXkgKG9yIG9uY2Ugd2l0aCAxMDAgdGhyZWFkcykuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBpZiB5b3Ugd2FudCB0byBkZXRlcm1pbmUgaG93IG1hbnkgZ3JvdyBjYWxscyB5b3UgbmVlZCB0byBkb3VibGUgdGhlIGFtb3VudCBvZiBtb25leSBvbiBmb29kbnN0dWZmLCB5b3Ugd291bGQgdXNlOlxcbiAgICAqIGNvbnN0IGdyb3dUaW1lcyA9IG5zLmdyb3d0aEFuYWx5emUoXFxcImZvb2Ruc3R1ZmZcXFwiLCAyKTtcXG4gICAgKiAvL0lmIHRoaXMgcmV0dXJucyAxMDAsIHRoZW4gdGhpcyBtZWFucyB5b3UgbmVlZCB0byBjYWxsIGdyb3cgMTAwIHRpbWVzIGluIG9yZGVyIHRvIGRvdWJsZSB0aGUgbW9uZXkgKG9yIG9uY2Ugd2l0aCAxMDAgdGhyZWFkcykuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gZ3Jvd3RoQW1vdW50IC0gTXVsdGlwbGljYXRpdmUgZmFjdG9yIGJ5IHdoaWNoIHRoZSBzZXJ2ZXIgaXMgZ3Jvd24uIERlY2ltYWwgZm9ybS4uXFxuICAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiBncm93IGNhbGxzIG5lZWRlZCB0byBncm93IHRoZSBzcGVjaWZpZWQgc2VydmVyIGJ5IHRoZSBzcGVjaWZpZWQgYW1vdW50XFxuICAgICovXFxuICAgZ3Jvd3RoQW5hbHl6ZShob3N0OiBzdHJpbmcsIGdyb3d0aEFtb3VudDogbnVtYmVyLCBjb3Jlcz86IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBzZWN1cml0eSBpbmNyZWFzZSBmb3IgYSBudW1iZXIgb2YgdGhyZWFkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGluY3JlYXNlIHRoYXQgd291bGQgb2NjdXIgaWYgYSBncm93IHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBpbmNyZWFzZS5cXG4gICAgKi9cXG4gICBncm93dGhBbmFseXplU2VjdXJpdHkodGhyZWFkczogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBTdXNwZW5kcyB0aGUgc2NyaXB0IGZvciBuIG1pbGxpc2Vjb25kcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWlsbGlzIC0gTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBzbGVlcC5cXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vIFRoaXMgd2lsbCBjb3VudCBmcm9tIDEgdG8gMTAgaW4geW91ciB0ZXJtaW5hbCwgd2l0aCBvbmUgbnVtYmVyIGV2ZXJ5IDUgc2Vjb25kc1xcbiAgICAqIGZvciAodmFyIGk9MDsgaTwxMDsgaSsrKSB7XFxuICAgICogICB0cHJpbnQoaSArIDEpO1xcbiAgICAqICAgc2xlZXAoNTAwMCk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy8gVGhpcyB3aWxsIGNvdW50IGZyb20gMSB0byAxMCBpbiB5b3VyIHRlcm1pbmFsLCB3aXRoIG9uZSBudW1iZXIgZXZlcnkgNSBzZWNvbmRzXFxuICAgICogZm9yICh2YXIgaT0wOyBpPDEwOyBpKyspIHtcXG4gICAgKiAgIG5zLnRwcmludChpICsgMSk7XFxuICAgICogICBhd2FpdCBucy5zbGVlcCg1MDAwKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnNcXG4gICAgKi9cXG4gICBzbGVlcChtaWxsaXM6IG51bWJlcik6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN1c3BlbmRzIHRoZSBzY3JpcHQgZm9yIG4gbWlsbGlzZWNvbmRzLiBEb2Vzbid0IGJsb2NrIHdpdGggY29uY3VycmVudCBjYWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWlsbGlzIC0gTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBzbGVlcC5cXG4gICAgKiBAcmV0dXJuc1xcbiAgICAqL1xcbiAgIGFzbGVlcChtaWxsaXM6IG51bWJlcik6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFByaW50cyBvbmUgb3IgbW92ZSB2YWx1ZXMgb3IgdmFyaWFibGVzIHRvIHRoZSBzY3JpcHTigJlzIGxvZ3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIGFyZ3MgLSBWYWx1ZShzKSB0byBiZSBwcmludGVkLlxcbiAgICAqL1xcbiAgIHByaW50KC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUHJpbnRzIG9uZSBvciBtb3JlIHZhbHVlcyBvciB2YXJpYWJsZXMgdG8gdGhlIFRlcm1pbmFsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gVmFsdWUocykgdG8gYmUgcHJpbnRlZC5cXG4gICAgKi9cXG4gICB0cHJpbnQoLi4uYXJnczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBQcmludHMgYSByYXcgdmFsdWUgb3IgYSB2YXJpYWJsZSB0byB0aGUgVGVybWluYWwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZvcm1hdCAtIGZvcm1hdCBvZiB0aGUgbWVzc2FnZVxcbiAgICAqIEBwYXJhbSBtc2cgLSBWYWx1ZSB0byBiZSBwcmludGVkLlxcbiAgICAqL1xcbiAgIHRwcmludGYoZm9ybWF0OiBzdHJpbmcsIC4uLnZhbHVlczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBDbGVhcnMgdGhlIHNjcmlwdOKAmXMgbG9ncy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgY2xlYXJMb2coKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRGlzYWJsZXMgbG9nZ2luZyBmb3IgdGhlIGdpdmVuIGZ1bmN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIExvZ2dpbmcgY2FuIGJlIGRpc2FibGVkIGZvciBhbGwgZnVuY3Rpb25zIGJ5IHBhc3NpbmcgYEFMTGAgYXMgdGhlIGFyZ3VtZW50LlxcbiAgICAqXFxuICAgICogTm90ZSB0aGF0IHRoaXMgZG9lcyBub3QgY29tcGxldGVseSByZW1vdmUgYWxsIGxvZ2dpbmcgZnVuY3Rpb25hbGl0eS5cXG4gICAgKiBUaGlzIG9ubHkgc3RvcHMgYSBmdW5jdGlvbiBmcm9tIGxvZ2dpbmcgd2hlbiB0aGUgZnVuY3Rpb24gaXMgc3VjY2Vzc2Z1bC5cXG4gICAgKiBJZiB0aGUgZnVuY3Rpb24gZmFpbHMsIGl0IHdpbGwgc3RpbGwgbG9nIHRoZSByZWFzb24gZm9yIGZhaWx1cmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZm4gLSBOYW1lIG9mIGZ1bmN0aW9uIGZvciB3aGljaCB0byBkaXNhYmxlIGxvZ2dpbmcuXFxuICAgICovXFxuICAgZGlzYWJsZUxvZyhmbjogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRW5hYmxlIGxvZ2dpbmcgZm9yIGEgY2VydGFpbiBmdW5jdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZS1lbmFibGVzIGxvZ2dpbmcgZm9yIHRoZSBnaXZlbiBmdW5jdGlvbi4gSWYgYEFMTGAgaXMgcGFzc2VkIGludG8gdGhpc1xcbiAgICAqIGZ1bmN0aW9uIGFzIGFuIGFyZ3VtZW50LCB0aGVuIGl0IHdpbGwgcmV2ZXJ0IHRoZSBlZmZlY3RzIG9mIGRpc2FibGVMb2coYEFMTGApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZuIC0gTmFtZSBvZiBmdW5jdGlvbiBmb3Igd2hpY2ggdG8gZW5hYmxlIGxvZ2dpbmcuXFxuICAgICovXFxuICAgZW5hYmxlTG9nKGZuOiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVja3MgdGhlIHN0YXR1cyBvZiB0aGUgbG9nZ2luZyBmb3IgdGhlIGdpdmVuIGZ1bmN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIE5hbWUgb2YgZnVuY3Rpb24gdG8gY2hlY2suXFxuICAgICogQHJldHVybnMgUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCBsb2dnaW5nIGlzIGVuYWJsZWQgZm9yIHRoYXQgZnVuY3Rpb24gKG9yIGBBTExgKVxcbiAgICAqL1xcbiAgIGlzTG9nRW5hYmxlZChmbjogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGFsbCB0aGUgbG9ncyBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgc2NyaXB04oCZcyBsb2dzLiBUaGUgbG9ncyBhcmUgcmV0dXJuZWQgYXMgYW4gYXJyYXksIHdoZXJlIGVhY2ggbGluZSBpcyBhbiBlbGVtZW50IGluIHRoZSBhcnJheS5cXG4gICAgKiBUaGUgbW9zdCByZWNlbnRseSBsb2dnZWQgbGluZSBpcyBhdCB0aGUgZW5kIG9mIHRoZSBhcnJheS5cXG4gICAgKiBOb3RlIHRoYXQgdGhlcmUgaXMgYSBtYXhpbXVtIG51bWJlciBvZiBsaW5lcyB0aGF0IGEgc2NyaXB0IHN0b3JlcyBpbiBpdHMgbG9ncy4gVGhpcyBpcyBjb25maWd1cmFibGUgaW4gdGhlIGdhbWXigJlzIG9wdGlvbnMuXFxuICAgICogSWYgdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cywgaXQgd2lsbCByZXR1cm4gdGhlIGN1cnJlbnQgc2NyaXB04oCZcyBsb2dzLlxcbiAgICAqXFxuICAgICogT3RoZXJ3aXNlLCB0aGUgZm4sIGhvc3RuYW1lL2lwLCBhbmQgYXJnc+KApiBhcmd1bWVudHMgY2FuIGJlIHVzZWQgdG8gZ2V0IHRoZSBsb2dzIGZyb20gYW5vdGhlciBzY3JpcHQuXFxuICAgICogUmVtZW1iZXIgdGhhdCBzY3JpcHRzIGFyZSB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggdGhlaXIgbmFtZXMgYW5kIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9HZXQgbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiBnZXRTY3JpcHRMb2dzKFxcXCJmb28uc2NyaXB0XFxcIik7XFxuICAgICpcXG4gICAgKiAvL09wZW4gbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiBnZXRTY3JpcHRMb2dzKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggdGhlIGFyZ3VtZW50cyBbMSwgXFxcInRlc3RcXFwiXVxcbiAgICAqIGdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0dldCBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLmdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLmdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9PcGVuIGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCB0aGUgYXJndW1lbnRzIFsxLCBcXFwidGVzdFxcXCJdXFxuICAgICogbnMuZ2V0U2NyaXB0TG9ncyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIiwgMSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZm4gLSBPcHRpb25hbC4gRmlsZW5hbWUgb2Ygc2NyaXB0IHRvIGdldCBsb2dzIGZyb20uXFxuICAgICogQHBhcmFtIGhvc3QgLSBPcHRpb25hbC4gSG9zdG5hbWUgb2YgdGhlIHNlcnZlciB0aGF0IHRoZSBzY3JpcHQgaXMgb24uXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gaWRlbnRpZnkgd2hpY2ggc2NyaXB0cyB0byBnZXQgbG9ncyBmb3IuXFxuICAgICogQHJldHVybnMgUmV0dXJucyBhbiBzdHJpbmcgYXJyYXksIHdoZXJlIGVhY2ggbGluZSBpcyBhbiBlbGVtZW50IGluIHRoZSBhcnJheS4gVGhlIG1vc3QgcmVjZW50bHkgbG9nZ2VkIGxpbmUgaXMgYXQgdGhlIGVuZCBvZiB0aGUgYXJyYXkuXFxuICAgICovXFxuICAgZ2V0U2NyaXB0TG9ncyhmbj86IHN0cmluZywgaG9zdD86IHN0cmluZywgLi4uYXJnczogYW55W10pOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogT3BlbiB0aGUgdGFpbCB3aW5kb3cgb2YgYSBzY3JpcHQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogT3BlbnMgYSBzY3JpcHTigJlzIGxvZ3MuIFRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHRoZSB0YWlsIFRlcm1pbmFsIGNvbW1hbmQuXFxuICAgICpcXG4gICAgKiBJZiB0aGUgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggbm8gYXJndW1lbnRzLCBpdCB3aWxsIG9wZW4gdGhlIGN1cnJlbnQgc2NyaXB04oCZcyBsb2dzLlxcbiAgICAqXFxuICAgICogT3RoZXJ3aXNlLCB0aGUgZm4sIGhvc3RuYW1lL2lwLCBhbmQgYXJnc+KApiBhcmd1bWVudHMgY2FuIGJlIHVzZWQgdG8gZ2V0IHRoZSBsb2dzIGZyb20gYW5vdGhlciBzY3JpcHQuXFxuICAgICogUmVtZW1iZXIgdGhhdCBzY3JpcHRzIGFyZSB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggdGhlaXIgbmFtZXMgYW5kIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9PcGVuIGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBjdXJyZW50IHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCBubyBhcmdzXFxuICAgICogdGFpbChcXFwiZm9vLnNjcmlwdFxcXCIpO1xcbiAgICAqXFxuICAgICogLy9HZXQgbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiB0YWlsKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vR2V0IGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCB0aGUgYXJndW1lbnRzIFsxLCBcXFwidGVzdFxcXCJdXFxuICAgICogdGFpbChcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIiwgMSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLnRhaWwoXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vR2V0IGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCBubyBhcmdzXFxuICAgICogbnMudGFpbChcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL0dldCBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggdGhlIGFyZ3VtZW50cyBbMSwgXFxcInRlc3RcXFwiXVxcbiAgICAqIG5zLnRhaWwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGZuIC0gT3B0aW9uYWwuIEZpbGVuYW1lIG9yIFBJRCBvZiB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC4gSWYgb21pdHRlZCwgdGhlIGN1cnJlbnQgc2NyaXB0IGlzIHRhaWxlZC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIE9wdGlvbmFsLiBIb3N0bmFtZSBvZiB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC4gRGVmYXVsdHMgdG8gdGhlIHNlcnZlciB0aGlzIHNjcmlwdCBpcyBydW5uaW5nIG9uLiBJZiBhcmdzIGFyZSBzcGVjaWZpZWQsIHRoaXMgaXMgbm90IG9wdGlvbmFsLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIGZvciB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC5cXG4gICAgKi9cXG4gICB0YWlsKGZuPzogRmlsZW5hbWVPclBJRCwgaG9zdD86IHN0cmluZywgLi4uYXJnczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGxpc3Qgb2Ygc2VydmVycyBjb25uZWN0ZWQgdG8gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4yIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIGhvc3RuYW1lcyBvZiBhbGwgc2VydmVycyB0aGF0IGFyZSBvbmVcXG4gICAgKiBub2RlIHdheSBmcm9tIHRoZSBzcGVjaWZpZWQgdGFyZ2V0IHNlcnZlci4gVGhlIGhvc3RuYW1lcyBpbiB0aGUgcmV0dXJuZWRcXG4gICAgKiBhcnJheSBhcmUgc3RyaW5ncy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gT3B0aW9uYWwsIEhvc3RuYW1lIG9mIHRoZSBzZXJ2ZXIgdG8gc2NhbiwgZGVmYXVsdCB0byBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIGFuIHN0cmluZyBvZiBob3N0bmFtZXMuXFxuICAgICovXFxuICAgc2Nhbihob3N0Pzogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1bnMgTlVLRS5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVubmluZyBOVUtFLmV4ZSBvbiBhIHRhcmdldCBzZXJ2ZXIgZ2l2ZXMgeW91IHJvb3QgYWNjZXNzIHdoaWNoIG1lYW5zIHlvdSBjYW4gZXhlY3V0ZXMgc2NyaXB0cyBvbiBzYWlkIHNlcnZlci4gTlVLRS5leGUgbXVzdCBleGlzdCBvbiB5b3VyIGhvbWUgY29tcHV0ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIG51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLm51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3RuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIG51a2UoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUnVucyBCcnV0ZVNTSC5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgQnJ1dGVTU0guZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIEJydXRlU1NILmV4ZSBtdXN0IGV4aXN0IG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogYnJ1dGVzc2goXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmJydXRlc3NoKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBicnV0ZXNzaChob3N0OiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBSdW5zIEZUUENyYWNrLmV4ZSBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSdW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSBvbiB0aGUgdGFyZ2V0IHNlcnZlci4gRlRQQ3JhY2suZXhlIG11c3QgZXhpc3Qgb24geW91ciBob21lIGNvbXB1dGVyLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiBmdHBjcmFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbnMuZnRwY3JhY2soXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3RuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGZ0cGNyYWNrKGhvc3Q6IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1bnMgcmVsYXlTTVRQLmV4ZSBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSdW5zIHRoZSByZWxheVNNVFAuZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIHJlbGF5U01UUC5leGUgbXVzdCBleGlzdCBvbiB5b3VyIGhvbWUgY29tcHV0ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHJlbGF5c210cChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbnMucmVsYXlzbXRwKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICByZWxheXNtdHAoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUnVucyBIVFRQV29ybS5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgSFRUUFdvcm0uZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIEhUVFBXb3JtLmV4ZSBtdXN0IGV4aXN0IG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaHR0cHdvcm0oXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmh0dHB3b3JtKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBodHRwd29ybShob3N0OiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBSdW5zIFNRTEluamVjdC5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgU1FMSW5qZWN0LmV4ZSBwcm9ncmFtIG9uIHRoZSB0YXJnZXQgc2VydmVyLiBTUUxJbmplY3QuZXhlIG11c3QgZXhpc3Qgb24geW91ciBob21lIGNvbXB1dGVyLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiBzcWxpbmplY3QoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLnNxbGluamVjdChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBzcWxpbmplY3QoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogU3RhcnQgYW5vdGhlciBzY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJ1biBhIHNjcmlwdCBhcyBhIHNlcGFyYXRlIHByb2Nlc3MuIFRoaXMgZnVuY3Rpb24gY2FuIG9ubHkgYmUgdXNlZCB0byBydW4gc2NyaXB0cyBsb2NhdGVkIG9uIHRoZVxcbiAgICAqIGN1cnJlbnQgc2VydmVyICh0aGUgc2VydmVyIHJ1bm5pbmcgdGhlIHNjcmlwdCB0aGF0IGNhbGxzIHRoaXMgZnVuY3Rpb24pLiBSZXF1aXJlcyBhIHNpZ25pZmljYW50XFxuICAgICogYW1vdW50IG9mIFJBTSB0byBydW4gdGhpcyBjb21tYW5kLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNjcmlwdCB3YXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQsIHRoZW4gdGhpcyBmdW5jdGlvbnMgcmV0dXJucyB0aGUgUElEIG9mIHRoYXQgc2NyaXB0LlxcbiAgICAqIE90aGVyd2lzZSwgaXQgcmV0dXJucyAwLlxcbiAgICAqXFxuICAgICogUElEIHN0YW5kcyBmb3IgUHJvY2VzcyBJRC4gVGhlIFBJRCBpcyBhIHVuaXF1ZSBpZGVudGlmaWVyIGZvciBlYWNoIHNjcmlwdC5cXG4gICAgKiBUaGUgUElEIHdpbGwgYWx3YXlzIGJlIGEgcG9zaXRpdmUgaW50ZWdlci5cXG4gICAgKlxcbiAgICAqIFJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aXRoIGEgbnVtVGhyZWFkcyBhcmd1bWVudCBvZiAwIHdpbGwgcmV0dXJuIDAgd2l0aG91dCBydW5uaW5nIHRoZSBzY3JpcHQuXFxuICAgICogSG93ZXZlciwgcnVubmluZyB0aGlzIGZ1bmN0aW9uIHdpdGggYSBuZWdhdGl2ZSBudW1UaHJlYWRzIGFyZ3VtZW50IHdpbGwgY2F1c2UgYSBydW50aW1lIGVycm9yLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBydW4gY29tbWFuZCBpcyB0byBjYWxsIGl0IHdpdGgganVzdCB0aGUgc2NyaXB0IG5hbWUuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCB3aXRoIG5vIGFyZ3VtZW50czpcXG4gICAgKiBydW4oXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgcnVuIOKAmGZvby5zY3JpcHTigJkgYnV0IHdpdGggNSB0aHJlYWRzIGluc3RlYWQgb2Ygc2luZ2xlLXRocmVhZGVkOlxcbiAgICAqIHJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDUpO1xcbiAgICAqXFxuICAgICogLy9UaGlzIG5leHQgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCwgYW5kIHdpbGwgcGFzcyB0aGUgc3RyaW5nIOKAmGZvb2Ruc3R1ZmbigJkgaW50byB0aGUgc2NyaXB0IGFzIGFuIGFyZ3VtZW50OlxcbiAgICAqIHJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDEsICdmb29kbnN0dWZmJyk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBydW4gY29tbWFuZCBpcyB0byBjYWxsIGl0IHdpdGgganVzdCB0aGUgc2NyaXB0IG5hbWUuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCB3aXRoIG5vIGFyZ3VtZW50czpcXG4gICAgKiBucy5ydW4oXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgcnVuIOKAmGZvby5zY3JpcHTigJkgYnV0IHdpdGggNSB0aHJlYWRzIGluc3RlYWQgb2Ygc2luZ2xlLXRocmVhZGVkOlxcbiAgICAqIG5zLnJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDUpO1xcbiAgICAqXFxuICAgICogLy9UaGlzIG5leHQgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCwgYW5kIHdpbGwgcGFzcyB0aGUgc3RyaW5nIOKAmGZvb2Ruc3R1ZmbigJkgaW50byB0aGUgc2NyaXB0IGFzIGFuIGFyZ3VtZW50OlxcbiAgICAqIG5zLnJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDEsICdmb29kbnN0dWZmJyk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBydW4uXFxuICAgICogQHBhcmFtIG51bVRocmVhZHMgLSBPcHRpb25hbCB0aHJlYWQgY291bnQgZm9yIG5ldyBzY3JpcHQuIFNldCB0byAxIGJ5IGRlZmF1bHQuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBZGRpdGlvbmFsIGFyZ3VtZW50cyB0byBwYXNzIGludG8gdGhlIG5ldyBzY3JpcHQgdGhhdCBpcyBiZWluZyBydW4uIE5vdGUgdGhhdCBpZiBhbnkgYXJndW1lbnRzIGFyZSBiZWluZyBwYXNzZWQgaW50byB0aGUgbmV3IHNjcmlwdCwgdGhlbiB0aGUgc2Vjb25kIGFyZ3VtZW50IG51bVRocmVhZHMgbXVzdCBiZSBmaWxsZWQgaW4gd2l0aCBhIHZhbHVlLlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgdGhlIFBJRCBvZiBhIHN1Y2Nlc3NmdWxseSBzdGFydGVkIHNjcmlwdCwgYW5kIDAgb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHJ1bihzY3JpcHQ6IHN0cmluZywgbnVtVGhyZWFkcz86IG51bWJlciwgLi4uYXJnczogQXJyYXk8c3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbj4pOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0YXJ0IGFub3RoZXIgc2NyaXB0IG9uIGFueSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMS4zIEdCXFxuICAgICpcXG4gICAgKiBSdW4gYSBzY3JpcHQgYXMgYSBzZXBhcmF0ZSBwcm9jZXNzIG9uIGEgc3BlY2lmaWVkIHNlcnZlci4gVGhpcyBpcyBzaW1pbGFyIHRvIHRoZSBydW4gZnVuY3Rpb25cXG4gICAgKiBleGNlcHQgdGhhdCBpdCBjYW4gYmUgdXNlZCB0byBydW4gYSBzY3JpcHQgb24gYW55IHNlcnZlciwgaW5zdGVhZCBvZiBqdXN0IHRoZSBjdXJyZW50IHNlcnZlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBzY3JpcHQgd2FzIHN1Y2Nlc3NmdWxseSBzdGFydGVkLCB0aGVuIHRoaXMgZnVuY3Rpb25zIHJldHVybnMgdGhlIFBJRCBvZiB0aGF0IHNjcmlwdC5cXG4gICAgKiBPdGhlcndpc2UsIGl0IHJldHVybnMgMC5cXG4gICAgKlxcbiAgICAqIFBJRCBzdGFuZHMgZm9yIFByb2Nlc3MgSUQuIFRoZSBQSUQgaXMgYSB1bmlxdWUgaWRlbnRpZmllciBmb3IgZWFjaCBzY3JpcHQuXFxuICAgICogVGhlIFBJRCB3aWxsIGFsd2F5cyBiZSBhIHBvc2l0aXZlIGludGVnZXIuXFxuICAgICpcXG4gICAgKiBSdW5uaW5nIHRoaXMgZnVuY3Rpb24gd2l0aCBhIG51bVRocmVhZHMgYXJndW1lbnQgb2YgMCB3aWxsIHJldHVybiAwIHdpdGhvdXQgcnVubmluZyB0aGUgc2NyaXB0LlxcbiAgICAqIEhvd2V2ZXIsIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aXRoIGEgbmVnYXRpdmUgbnVtVGhyZWFkcyBhcmd1bWVudCB3aWxsIGNhdXNlIGEgcnVudGltZSBlcnJvci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9UaGUgc2ltcGxlc3Qgd2F5IHRvIHVzZSB0aGUgZXhlYyBjb21tYW5kIGlzIHRvIGNhbGwgaXQgd2l0aCBqdXN0IHRoZSBzY3JpcHQgbmFtZSBhbmQgdGhlIHRhcmdldCBzZXJ2ZXIuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHRyeSB0byBydW4gZ2VuZXJpYy1oYWNrLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXI6XFxuICAgICogZXhlYyhcXFwiZ2VuZXJpYy1oYWNrLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHRyeSB0byBydW4gdGhlIHNjcmlwdCBnZW5lcmljLWhhY2suc2NyaXB0IG9uIHRoZSBqb2VzZ3VucyBzZXJ2ZXIgd2l0aCAxMCB0aHJlYWRzOlxcbiAgICAqIGV4ZWMoXFxcImdlbmVyaWMtaGFjay5zY3JpcHRcXFwiLCBcXFwiam9lc2d1bnNcXFwiLCAxMCk7XFxuICAgICpcXG4gICAgKiAvL1RoaXMgbGFzdCBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biB0aGUgc2NyaXB0IGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHdpdGggNSB0aHJlYWRzLiBJdCB3aWxsIGFsc28gcGFzcyB0aGUgbnVtYmVyIDEgYW5kIHRoZSBzdHJpbmcg4oCcdGVzdOKAnSBpbiBhcyBhcmd1bWVudHMgdG8gdGhlIHNjcmlwdDpcXG4gICAgKiBleGVjKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiLCA1LCAxLCBcXFwidGVzdFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBleGVjIGNvbW1hbmQgaXMgdG8gY2FsbCBpdCB3aXRoIGp1c3QgdGhlIHNjcmlwdCBuYW1lIGFuZCB0aGUgdGFyZ2V0IHNlcnZlci4gVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biBnZW5lcmljLWhhY2suc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlcjpcXG4gICAgKiBucy5leGVjKFxcXCJnZW5lcmljLWhhY2suc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biB0aGUgc2NyaXB0IGdlbmVyaWMtaGFjay5zY3JpcHQgb24gdGhlIGpvZXNndW5zIHNlcnZlciB3aXRoIDEwIHRocmVhZHM6XFxuICAgICogbnMuZXhlYyhcXFwiZ2VuZXJpYy1oYWNrLnNjcmlwdFxcXCIsIFxcXCJqb2VzZ3Vuc1xcXCIsIDEwKTtcXG4gICAgKlxcbiAgICAqIC8vVGhpcyBsYXN0IGV4YW1wbGUgd2lsbCB0cnkgdG8gcnVuIHRoZSBzY3JpcHQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgd2l0aCA1IHRocmVhZHMuIEl0IHdpbGwgYWxzbyBwYXNzIHRoZSBudW1iZXIgMSBhbmQgdGhlIHN0cmluZyDigJx0ZXN04oCdIGluIGFzIGFyZ3VtZW50cyB0byB0aGUgc2NyaXB0OlxcbiAgICAqIG5zLmV4ZWMoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDUsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBleGVjdXRlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIGB0YXJnZXQgc2VydmVyYCBvbiB3aGljaCB0byBleGVjdXRlIHRoZSBzY3JpcHQuXFxuICAgICogQHBhcmFtIG51bVRocmVhZHMgLSBPcHRpb25hbCB0aHJlYWQgY291bnQgZm9yIG5ldyBzY3JpcHQuIFNldCB0byAxIGJ5IGRlZmF1bHQuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBZGRpdGlvbmFsIGFyZ3VtZW50cyB0byBwYXNzIGludG8gdGhlIG5ldyBzY3JpcHQgdGhhdCBpcyBiZWluZyBydW4uIE5vdGUgdGhhdCBpZiBhbnkgYXJndW1lbnRzIGFyZSBiZWluZyBwYXNzZWQgaW50byB0aGUgbmV3IHNjcmlwdCwgdGhlbiB0aGUgdGhpcmQgYXJndW1lbnQgbnVtVGhyZWFkcyBtdXN0IGJlIGZpbGxlZCBpbiB3aXRoIGEgdmFsdWUuXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgUElEIG9mIGEgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQgc2NyaXB0LCBhbmQgMCBvdGhlcndpc2UuXFxuICAgICovXFxuICAgZXhlYyhzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCBudW1UaHJlYWRzPzogbnVtYmVyLCAuLi5hcmdzOiBBcnJheTxzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuPik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogVGVybWluYXRlIGN1cnJlbnQgc2NyaXB0IGFuZCBzdGFydCBhbm90aGVyIGluIDEwcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBUZXJtaW5hdGVzIHRoZSBjdXJyZW50IHNjcmlwdCwgYW5kIHRoZW4gYWZ0ZXIgYSBkZWxheSBvZiBhYm91dCAxMCBzZWNvbmRzIGl0IHdpbGwgZXhlY3V0ZSB0aGVcXG4gICAgKiBuZXdseS1zcGVjaWZpZWQgc2NyaXB0LiBUaGUgcHVycG9zZSBvZiB0aGlzIGZ1bmN0aW9uIGlzIHRvIGV4ZWN1dGUgYSBuZXcgc2NyaXB0IHdpdGhvdXQgYmVpbmdcXG4gICAgKiBjb25zdHJhaW5lZCBieSB0aGUgUkFNIHVzYWdlIG9mIHRoZSBjdXJyZW50IG9uZS4gVGhpcyBmdW5jdGlvbiBjYW4gb25seSBiZSB1c2VkIHRvIHJ1biBzY3JpcHRzXFxuICAgICogb24gdGhlIGxvY2FsIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpbW1lZGlhdGVseSB0ZXJtaW5hdGVzIHRoZSBzY3JpcHQsIGl0IGRvZXMgbm90IGhhdmUgYSByZXR1cm4gdmFsdWUuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgZXhlY3V0ZSB0aGUgc2NyaXB0IOKAmGZvby5zY3JpcHTigJkgd2l0aCAxMCB0aHJlYWRzIGFuZCB0aGUgYXJndW1lbnRzIOKAmGZvb2Ruc3R1ZmbigJkgYW5kIDkwOlxcbiAgICAqIHNwYXduKCdmb28uc2NyaXB0JywgMTAsICdmb29kbnN0dWZmJywgOTApO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy9UaGUgZm9sbG93aW5nIGV4YW1wbGUgd2lsbCBleGVjdXRlIHRoZSBzY3JpcHQg4oCYZm9vLnNjcmlwdOKAmSB3aXRoIDEwIHRocmVhZHMgYW5kIHRoZSBhcmd1bWVudHMg4oCYZm9vZG5zdHVmZuKAmSBhbmQgOTA6XFxuICAgICogbnMuc3Bhd24oJ2Zvby5zY3JpcHQnLCAxMCwgJ2Zvb2Ruc3R1ZmYnLCA5MCk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBleGVjdXRlLlxcbiAgICAqIEBwYXJhbSBudW1UaHJlYWRzIC0gTnVtYmVyIG9mIHRocmVhZHMgdG8gc3Bhd24gbmV3IHNjcmlwdCB3aXRoLiBXaWxsIGJlIHJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQWRkaXRpb25hbCBhcmd1bWVudHMgdG8gcGFzcyBpbnRvIHRoZSBuZXcgc2NyaXB0IHRoYXQgaXMgYmVpbmcgcnVuLlxcbiAgICAqL1xcbiAgIHNwYXduKHNjcmlwdDogc3RyaW5nLCBudW1UaHJlYWRzPzogbnVtYmVyLCAuLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRlcm1pbmF0ZSBhbm90aGVyIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0JcXG4gICAgKlxcbiAgICAqIEtpbGxzIHRoZSBzY3JpcHQgb24gdGhlIHRhcmdldCBzZXJ2ZXIgc3BlY2lmaWVkIGJ5IHRoZSBzY3JpcHTigJlzIG5hbWUgYW5kIGFyZ3VtZW50cy5cXG4gICAgKiBSZW1lbWJlciB0aGF0IHNjcmlwdHMgYXJlIHVuaXF1ZWx5IGlkZW50aWZpZWQgYnkgYm90aCB0aGVpciBuYW1lIGFuZCBhcmd1bWVudHMuXFxuICAgICogRm9yIGV4YW1wbGUsIGlmIGBmb28uc2NyaXB0YCBpcyBydW4gd2l0aCB0aGUgYXJndW1lbnQgMSwgdGhlbiB0aGlzIGlzIG5vdCB0aGUgc2FtZSBhc1xcbiAgICAqIGBmb28uc2NyaXB0YCBydW4gd2l0aCB0aGUgYXJndW1lbnQgMiwgZXZlbiB0aG91Z2ggdGhleSBoYXZlIHRoZSBzYW1lIGNvZGUuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIGtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZm9sbG93aW5nIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIGtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBnZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyB3aWxsIHRyeSB0byBraWxsIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJhbiB3aXRoIHRoZSBhcmd1bWVudHMgMSBhbmQg4oCcZm9vZG5zdHVmZuKAnTpcXG4gICAgKiBraWxsKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSwgMSwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIG5zLmtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZm9sbG93aW5nIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIG5zLmtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBnZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyB3aWxsIHRyeSB0byBraWxsIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJhbiB3aXRoIHRoZSBhcmd1bWVudHMgMSBhbmQg4oCcZm9vZG5zdHVmZuKAnTpcXG4gICAgKiBucy5raWxsKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSwgMSwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb3IgcGlkIG9mIHRoZSBzY3JpcHQgdG8ga2lsbFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBraWxsIHRoZSBzY3JpcHQuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gaWRlbnRpZnkgd2hpY2ggc2NyaXB0IHRvIGtpbGwuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2NyaXB0IGlzIHN1Y2Nlc3NmdWxseSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAga2lsbChzY3JpcHQ6IG51bWJlcik6IGJvb2xlYW47XFxuICAga2lsbChzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRlcm1pbmF0ZSBhbGwgc2NyaXB0cyBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0JcXG4gICAgKlxcbiAgICAqIEtpbGxzIGFsbCBydW5uaW5nIHNjcmlwdHMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0cnVlXFxuICAgICogaWYgYW55IHNjcmlwdHMgd2VyZSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuIEluIG90aGVyIHdvcmRzLCBpdCB3aWxsIHJldHVyblxcbiAgICAqIHRydWUgaWYgdGhlcmUgYXJlIGFueSBzY3JpcHRzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogSWYgbm8gaG9zdCBpcyBkZWZpbmVkLCBpdCB3aWxsIGtpbGwgYWxsIHNjcmlwdHMsIHdoZXJlIHRoZSBzY3JpcHQgaXMgcnVubmluZy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSVAgb3IgaG9zdG5hbWUgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBraWxsIGFsbCBzY3JpcHRzLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYW55IHNjcmlwdHMgd2VyZSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAga2lsbGFsbChob3N0Pzogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogVGVybWluYXRlcyB0aGUgY3VycmVudCBzY3JpcHQgaW1tZWRpYXRlbHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIGV4aXQoKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ29weSBmaWxlIGJldHdlZW4gc2VydmVycy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjYgR0JcXG4gICAgKlxcbiAgICAqIENvcGllcyBhIHNjcmlwdCBvciBsaXRlcmF0dXJlICgubGl0KSBmaWxlKHMpIHRvIGFub3RoZXIgc2VydmVyLiBUaGUgZmlsZXMgYXJndW1lbnQgY2FuIGJlIGVpdGhlciBhIHN0cmluZ1xcbiAgICAqIHNwZWNpZnlpbmcgYSBzaW5nbGUgZmlsZSB0byBjb3B5LCBvciBhbiBhcnJheSBvZiBzdHJpbmdzIHNwZWNpZnlpbmcgbXVsdGlwbGUgZmlsZXMgdG8gY29weS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9Db3BpZXMgZm9vLmxpdCBmcm9tIHRoZSBoZWxpb3Mgc2VydmVyIHRvIHRoZSBob21lIGNvbXB1dGVyOlxcbiAgICAqIHNjcChcXFwiZm9vLmxpdFxcXCIsIFxcXCJoZWxpb3NcXFwiLCBcXFwiaG9tZVxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UcmllcyB0byBjb3B5IHRocmVlIGZpbGVzIGZyb20gcm90aG1hbi11bmkgdG8gaG9tZSBjb21wdXRlcjpcXG4gICAgKiBmaWxlcyA9IFtcXFwiZm9vMS5saXRcXFwiLCBcXFwiZm9vMi5zY3JpcHRcXFwiLCBcXFwiZm9vMy5zY3JpcHRcXFwiXTtcXG4gICAgKiBzY3AoZmlsZXMsIFxcXCJyb3RobWFuLXVuaVxcXCIsIFxcXCJob21lXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0NvcGllcyBmb28ubGl0IGZyb20gdGhlIGhlbGlvcyBzZXJ2ZXIgdG8gdGhlIGhvbWUgY29tcHV0ZXI6XFxuICAgICogYXdhaXQgbnMuc2NwKFxcXCJmb28ubGl0XFxcIiwgXFxcImhlbGlvc1xcXCIsIFxcXCJob21lXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RyaWVzIHRvIGNvcHkgdGhyZWUgZmlsZXMgZnJvbSByb3RobWFuLXVuaSB0byBob21lIGNvbXB1dGVyOlxcbiAgICAqIGZpbGVzID0gW1xcXCJmb28xLmxpdFxcXCIsIFxcXCJmb28yLnNjcmlwdFxcXCIsIFxcXCJmb28zLnNjcmlwdFxcXCJdO1xcbiAgICAqIGF3YWl0IG5zLnNjcChmaWxlcywgXFxcInJvdGhtYW4tdW5pXFxcIiwgXFxcImhvbWVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy9uczIsIGNvcGllcyBmaWxlcyBmcm9tIGhvbWUgdG8gYSB0YXJnZXQgc2VydmVyXFxuICAgICogY29uc3Qgc2VydmVyID0gbnMuYXJnc1swXTtcXG4gICAgKiBjb25zdCBmaWxlcyA9IFtcXFwiaGFjay5qc1xcXCIsXFxcIndlYWtlbi5qc1xcXCIsXFxcImdyb3cuanNcXFwiXTtcXG4gICAgKiBhd2FpdCBucy5zY3AoZmlsZXMsIFxcXCJob21lXFxcIiwgc2VydmVyKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZmlsZXMgLSBGaWxlbmFtZSBvciBhbiBhcnJheSBvZiBmaWxlbmFtZXMgb2Ygc2NyaXB0L2xpdGVyYXR1cmUgZmlsZXMgdG8gY29weS5cXG4gICAgKiBAcGFyYW0gc291cmNlIC0gSG9zdCBvZiB0aGUgc291cmNlIHNlcnZlciwgd2hpY2ggaXMgdGhlIHNlcnZlciBmcm9tIHdoaWNoIHRoZSBmaWxlIHdpbGwgYmUgY29waWVkLiBUaGlzIGFyZ3VtZW50IGlzIG9wdGlvbmFsIGFuZCBpZiBpdOKAmXMgb21pdHRlZCB0aGUgc291cmNlIHdpbGwgYmUgdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIEhvc3Qgb2YgdGhlIGRlc3RpbmF0aW9uIHNlcnZlciwgd2hpY2ggaXMgdGhlIHNlcnZlciB0byB3aGljaCB0aGUgZmlsZSB3aWxsIGJlIGNvcGllZC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBzY3JpcHQvbGl0ZXJhdHVyZSBmaWxlIGlzIHN1Y2Nlc3NmdWxseSBjb3BpZWQgb3ZlciBhbmQgZmFsc2Ugb3RoZXJ3aXNlLiBJZiB0aGUgZmlsZXMgYXJndW1lbnQgaXMgYW4gYXJyYXkgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgYXQgbGVhc3Qgb25lIG9mIHRoZSBmaWxlcyBpbiB0aGUgYXJyYXkgaXMgc3VjY2Vzc2Z1bGx5IGNvcGllZC5cXG4gICAgKi9cXG4gICBzY3AoZmlsZXM6IHN0cmluZyB8IHN0cmluZ1tdLCBkZXN0aW5hdGlvbjogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcXG4gICBzY3AoZmlsZXM6IHN0cmluZyB8IHN0cmluZ1tdLCBzb3VyY2U6IHN0cmluZywgZGVzdGluYXRpb246IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgZmlsZXMgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4yIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIGZpbGVuYW1lcyBvZiBhbGwgZmlsZXMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXJcXG4gICAgKiAoYXMgc3RyaW5ncykuIFRoZSByZXR1cm5lZCBhcnJheSBpcyBzb3J0ZWQgaW4gYWxwaGFiZXRpYyBvcmRlci5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gZ3JlcCAtIEEgc3Vic3RyaW5nIHRvIHNlYXJjaCBmb3IgaW4gdGhlIGZpbGVuYW1lLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdGhlIGZpbGVuYW1lcyBvZiBhbGwgZmlsZXMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuXFxuICAgICovXFxuICAgbHMoaG9zdDogc3RyaW5nLCBncmVwPzogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgcnVubmluZyBzY3JpcHRzIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMiBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSB3aXRoIGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgYWxsIHNjcmlwdHMgcnVubmluZyBvbiB0aGUgc3BlY2lmaWVkIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGNvbnN0IHNjcmlwdHMgPSBwcyhcXFwiaG9tZVxcXCIpO1xcbiAgICAqIGZvciAobGV0IGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7ICsraSkge1xcbiAgICAqICAgICB0cHJpbnQoc2NyaXB0c1tpXS5maWxlbmFtZSArICcgJyArIHNjcmlwdHNbaV0udGhyZWFkcyk7XFxuICAgICogICAgIHRwcmludChzY3JpcHRzW2ldLmFyZ3MpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IHBzID0gbnMucHMoXFxcImhvbWVcXFwiKTtcXG4gICAgKiBmb3IgKHNjcmlwdCBvZiBwcykge1xcbiAgICAqICAgICBucy50cHJpbnQoYCR7c2NyaXB0LmZpbGVuYW1lfSAke3BzW2ldLnRocmVhZHN9YCk7XFxuICAgICogICAgIG5zLnRwcmludChzY3JpcHQuYXJncyk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBhZGRyZXNzIG9mIHRoZSB0YXJnZXQgc2VydmVyLiBJZiBub3Qgc3BlY2lmaWVkLCBpdCB3aWxsIGJlIHRoZSBjdXJyZW50IHNlcnZlcuKAmXMgSVAgYnkgZGVmYXVsdC5cXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgYWxsIHNjcmlwdHMgcnVubmluZyBvbiB0aGUgc3BlY2lmaWVkIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgcHMoaG9zdD86IHN0cmluZyk6IFByb2Nlc3NJbmZvW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdXIgaGF2ZSByb290IGFjY2VzcyBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBwbGF5ZXIgaGFzIHJvb3QgYWNjZXNzIHRvIHRoZSBzcGVjaWZpZWQgdGFyZ2V0IHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaWYgKGhhc1Jvb3RBY2Nlc3MoXFxcImZvb2Ruc3R1ZmZcXFwiKSA9PSBmYWxzZSkge1xcbiAgICAqICAgIG51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBpZiAobnMuaGFzUm9vdEFjY2VzcyhcXFwiZm9vZG5zdHVmZlxcXCIpID09IGZhbHNlKSB7XFxuICAgICogICAgbnMubnVrZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHRhcmdldCBzZXJ2ZXJcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHBsYXllciBoYXMgcm9vdCBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCB0YXJnZXQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGhhc1Jvb3RBY2Nlc3MoaG9zdDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIHN0cmluZyB3aXRoIHRoZSBob3N0bmFtZSBvZiB0aGUgc2VydmVyIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIG9uLlxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqIEByZXR1cm5zIEhvc3RuYW1lIG9mIHRoZSBzZXJ2ZXIgdGhhdCB0aGUgc2NyaXB0IGlzIG9uLlxcbiAgICAqL1xcbiAgIGdldEhvc3RuYW1lKCk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcGxheWVy4oCZcyBjdXJyZW50IGhhY2tpbmcgbGV2ZWwuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHJldHVybnMgUGxheWVy4oCZcyBjdXJyZW50IGhhY2tpbmcgbGV2ZWxcXG4gICAgKi9cXG4gICBnZXRIYWNraW5nTGV2ZWwoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIFBsYXllcuKAmXMgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqIFRoZXNlIG11bHRpcGxpZXJzIGFyZSByZXR1cm5lZCBpbiBmcmFjdGlvbmFsIGZvcm1zLCBub3QgcGVyY2VudGFnZXNcXG4gICAgKiAoZS5nLiAxLjUgaW5zdGVhZCBvZiAxNTAlKS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy8gRXhhbXBsZSBvZiBob3cgdGhpcyBjYW4gYmUgdXNlZDpcXG4gICAgKiB2YXIgbXVsdHMgPSBnZXRIYWNraW5nTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChtdWx0cy5jaGFuY2UpO1xcbiAgICAqIHByaW50KG11bHRzLmdyb3d0aCk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIGNvbnN0IHtjaGFuY2UsIGdyb3d0aH0gPSBucy5nZXRIYWNraW5nTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChjaGFuY2UpO1xcbiAgICAqIHByaW50KGdyb3d0aCk7XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgdGhlIFBsYXllcuKAmXMgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqL1xcbiAgIGdldEhhY2tpbmdNdWx0aXBsaWVycygpOiBIYWNraW5nTXVsdGlwbGllcnM7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgUGxheWVy4oCZcyBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICogVGhlc2UgbXVsdGlwbGllcnMgYXJlIHJldHVybmVkIGluIGZyYWN0aW9uYWwgZm9ybXMsIG5vdCBwZXJjZW50YWdlc1xcbiAgICAqIChlLmcuIDEuNSBpbnN0ZWFkIG9mIDE1MCUpLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIHZhciBtdWx0cyA9IGdldEhhY2tuZXRNdWx0aXBsaWVycygpO1xcbiAgICAqIHByaW50KG11bHRzLnByb2R1Y3Rpb24pO1xcbiAgICAqIHByaW50KG11bHRzLnB1cmNoYXNlQ29zdCk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIGNvbnN0IHtwcm9kdWN0aW9uLCBwdXJjaGFzZUNvc3R9ID0gbnMuZ2V0SGFja25ldE11bHRpcGxpZXJzKCk7XFxuICAgICogcHJpbnQocHJvZHVjdGlvbik7XFxuICAgICogcHJpbnQocHVyY2hhc2VDb3N0KTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0aGUgUGxheWVy4oCZcyBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICovXFxuICAgZ2V0SGFja25ldE11bHRpcGxpZXJzKCk6IEhhY2tuZXRNdWx0aXBsaWVycztcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIHNlcnZlciBvYmplY3QgZm9yIHRoZSBnaXZlbiBzZXJ2ZXIuIERlZmF1bHRzIHRvIHRoZSBydW5uaW5nIHNjcmlwdCdzIHNlcnZlciBpZiBob3N0IGlzIG5vdCBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBPcHRpb25hbC4gSG9zdG5hbWUgZm9yIHRoZSByZXF1ZXN0ZWQgc2VydmVyIG9iamVjdC5cXG4gICAgKiBAcmV0dXJucyBUaGUgcmVxdWVzdGVkIHNlcnZlciBvYmplY3QuXFxuICAgICovXFxuICAgZ2V0U2VydmVyKGhvc3Q/OiBzdHJpbmcpOiBTZXJ2ZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBtb25leSBhdmFpbGFibGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIFJ1bm5pbmcgdGhpcyBmdW5jdGlvbiBvbiB0aGUgaG9tZSBjb21wdXRlciB3aWxsIHJldHVybiB0aGUgcGxheWVy4oCZcyBtb25leS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiaG9tZVxcXCIpOyAvL1JldHVybnMgcGxheWVyJ3MgbW9uZXlcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKTsgLy8gUmV0dXJucyBwbGF5ZXIncyBtb25leVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFNlcnZlck1vbmV5QXZhaWxhYmxlKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IG1heGltdW0gbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbWF4aW11bSBhbW91bnQgb2YgbW9uZXkgdGhhdCBjYW4gYmUgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgTWF4aW11bSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIHRoZSBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyTWF4TW9uZXkoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYSBzZXJ2ZXIgZ3Jvd3RoIHBhcmFtZXRlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlcnZlcuKAmXMgaW50cmluc2ljIOKAnGdyb3d0aCBwYXJhbWV0ZXLigJ0uIFRoaXMgZ3Jvd3RoXFxuICAgICogcGFyYW1ldGVyIGlzIGEgbnVtYmVyIHR5cGljYWxseSBiZXR3ZWVuIDAgYW5kIDEwMCB0aGF0IHJlcHJlc2VudHNcXG4gICAgKiBob3cgcXVpY2tseSB0aGUgc2VydmVy4oCZcyBtb25leSBncm93cy4gVGhpcyBwYXJhbWV0ZXIgYWZmZWN0cyB0aGVcXG4gICAgKiBwZXJjZW50YWdlIGJ5IHdoaWNoIHRoZSBzZXJ2ZXLigJlzIG1vbmV5IGlzIGluY3JlYXNlZCB3aGVuIHVzaW5nIHRoZVxcbiAgICAqIGdyb3cgZnVuY3Rpb24uIEEgaGlnaGVyIGdyb3d0aCBwYXJhbWV0ZXIgd2lsbCByZXN1bHQgaW4gYVxcbiAgICAqIGhpZ2hlciBwZXJjZW50YWdlIGluY3JlYXNlIGZyb20gZ3Jvdy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFBhcmFtZXRlciB0aGF0IGFmZmVjdHMgdGhlIHBlcmNlbnRhZ2UgYnkgd2hpY2ggdGhlIHNlcnZlcuKAmXMgbW9uZXkgaXMgaW5jcmVhc2VkIHdoZW4gdXNpbmcgdGhlIGdyb3cgZnVuY3Rpb24uXFxuICAgICovXFxuICAgZ2V0U2VydmVyR3Jvd3RoKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHNlcnZlciBzZWN1cml0eSBsZXZlbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLiBBIHNlcnZlcuKAmXMgc2VjdXJpdHlcXG4gICAgKiBsZXZlbCBpcyBkZW5vdGVkIGJ5IGEgbnVtYmVyLCB0eXBpY2FsbHkgYmV0d2VlbiAxIGFuZCAxMDBcXG4gICAgKiAoYnV0IGl0IGNhbiBnbyBhYm92ZSAxMDApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgU2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChob3N0OiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIG1pbmltdW0gc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMC4xIEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgTWluaW11bSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlbGVzc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIFJldHVybnMgdGhlIGJhc2Ugc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuIFRoaXMgaXMgdGhlIHNlY3VyaXR5XFxuICAgICogbGV2ZWwgdGhhdCB0aGUgc2VydmVyIHN0YXJ0cyBvdXQgd2l0aC4gVGhpcyBpcyBkaWZmZXJlbnQgdGhhblxcbiAgICAqIGdldFNlcnZlclNlY3VyaXR5TGV2ZWwgYmVjYXVzZSBnZXRTZXJ2ZXJTZWN1cml0eUxldmVsIHJldHVybnNcXG4gICAgKiB0aGUgY3VycmVudCBzZWN1cml0eSBsZXZlbCBvZiBhIHNlcnZlciwgd2hpY2ggY2FuIGNvbnN0YW50bHkgY2hhbmdlIGR1ZSB0b1xcbiAgICAqIGhhY2ssIGdyb3csIGFuZCB3ZWFrZW4sIGNhbGxzIG9uIHRoYXQgc2VydmVyLlxcbiAgICAqIFRoZSBiYXNlIHNlY3VyaXR5IGxldmVsIHdpbGwgc3RheSB0aGUgc2FtZSB1bnRpbCB5b3UgcmVzZXQgYnlcXG4gICAgKiBpbnN0YWxsaW5nIGFuIEF1Z21lbnRhdGlvbihzKS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIEJhc2Ugc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyQmFzZVNlY3VyaXR5TGV2ZWwoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBAZGVwcmVjYXRlZCB1c2UgZ2V0U2VydmVyTWF4UmFtIC8gZ2V0U2VydmVyVXNlZFJhbVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSB3aXRoIHR3byBlbGVtZW50cyB0aGF0IGdpdmVzIGluZm9ybWF0aW9uIGFib3V0IGEgc2VydmVy4oCZcyBtZW1vcnkgKFJBTSkuXFxuICAgICogVGhlIGZpcnN0IGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhbW91bnQgb2YgUkFNIHRoYXQgdGhlIHNlcnZlciBoYXMgdG90YWwgKGluIEdCKS5cXG4gICAgKiBUaGUgc2Vjb25kIGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhbW91bnQgb2YgUkFNIHRoYXQgaXMgY3VycmVudGx5IGJlaW5nIHVzZWQgb25cXG4gICAgKiB0aGUgc2VydmVyIChpbiBHQikuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBzZXJ2ZXJSYW0gPSBnZXRTZXJ2ZXJSYW0oXFxcImhlbGlvc1xcXCIpO1xcbiAgICAqIHZhciB0b3RhbFJhbSA9IHNlcnZlclJhbVswXTtcXG4gICAgKiB2YXIgcmFtVXNlZCA9IHNlcnZlclJhbVsxXTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IFt0b3RhbFJhbSwgcmFtVXNlZF0gPSBucy5nZXRTZXJ2ZXJSYW0oXFxcImhlbGlvc1xcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdG90YWwgYW5kIHVzZWQgbWVtb3J5IG9uIHRoZSBzcGVjaWZpZWQgc2VydmVyLCBpbiBHQi5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJSYW0oaG9zdDogc3RyaW5nKTogW251bWJlciwgbnVtYmVyXTtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBtYXggUkFNIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgbWF4IHJhbSAoR0IpXFxuICAgICovXFxuICAgZ2V0U2VydmVyTWF4UmFtKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHVzZWQgUkFNIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgdXNlZCByYW0gKEdCKVxcbiAgICAqL1xcbiAgIGdldFNlcnZlclVzZWRSYW0oaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSByZXF1aXJlZCBoYWNraW5nIGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRoZSByZXF1aXJlZCBoYWNraW5nIGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFNlcnZlclJlcXVpcmVkSGFja2luZ0xldmVsKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIG9wZW4gcG9ydHMgcmVxdWlyZWQgdG8gc3VjY2Vzc2Z1bGx5IHJ1biBOVUtFLmV4ZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgbnVtYmVyIG9mIG9wZW4gcG9ydHMgcmVxdWlyZWQgdG8gc3VjY2Vzc2Z1bGx5IHJ1biBOVUtFLmV4ZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlci5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gZGVub3Rpbmcgd2hldGhlciBvciBub3QgdGhlIHNwZWNpZmllZCBzZXJ2ZXIgZXhpc3RzLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgc3BlY2lmaWVkIHNlcnZlciBleGlzdHMsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2VydmVyRXhpc3RzKGhvc3Q6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIGEgZmlsZSBleGlzdHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBmaWxlIGV4aXN0cyBvbiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBUaGUgZmlsZW5hbWUgZm9yIHNjcmlwdHMgaXMgY2FzZS1zZW5zaXRpdmUsIGJ1dCBmb3Igb3RoZXIgdHlwZXMgb2YgZmlsZXMgaXQgaXMgbm90LlxcbiAgICAqIEZvciBleGFtcGxlLCBmaWxlRXhpc3RzKOKAnGJydXRlc3NoLmV4ZeKAnSkgd2lsbCB3b3JrIGZpbmUsIGV2ZW4gdGhvdWdoIHRoZSBhY3R1YWwgcHJvZ3JhbVxcbiAgICAqIGlzIG5hbWVkICdCcnV0ZVNTSC5leGUnLlxcbiAgICAqXFxuICAgICogSWYgdGhlIGhvc3RuYW1lL2lwIGFyZ3VtZW50IGlzIG9taXR0ZWQsIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgc2VhcmNoIHRocm91Z2ggdGhlIGN1cnJlbnRcXG4gICAgKiBzZXJ2ZXIgKHRoZSBzZXJ2ZXIgcnVubmluZyB0aGUgc2NyaXB0IHRoYXQgY2FsbHMgdGhpcyBmdW5jdGlvbikgZm9yIHRoZSBmaWxlLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IGV4aXN0cyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICogZmlsZUV4aXN0cyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIGN1cnJlbnQgc2VydmVyIGNvbnRhaW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBmaWxlRXhpc3RzKFxcXCJmdHBjcmFjay5leGVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy8gVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGUgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgZXhpc3RzIG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBucy5maWxlRXhpc3RzKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vIFRoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIGN1cnJlbnQgc2VydmVyIGNvbnRhaW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBucy5maWxlRXhpc3RzKFxcXCJmdHBjcmFjay5leGVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZmlsZW5hbWUgLSBGaWxlbmFtZSBvZiBmaWxlIHRvIGNoZWNrLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLiBUaGlzIGlzIG9wdGlvbmFsLiBJZiBpdCBpcyBub3Qgc3BlY2lmaWVkIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgdXNlIHRoZSBjdXJyZW50IHNlcnZlciBhcyB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHNwZWNpZmllZCBmaWxlIGV4aXN0cywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBmaWxlRXhpc3RzKGZpbGVuYW1lOiBzdHJpbmcsIGhvc3Q/OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiBhIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgc2NyaXB0IGlzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogSWYgeW91IHVzZSBhIFBJRCBpbnN0ZWFkIG9mIGEgZmlsZW5hbWUsIHRoZSBob3N0bmFtZSBhbmQgYXJncyBwYXJhbWV0ZXJzIGFyZSB1bm5lY2Vzc2FyeS5cXG4gICAgKiBSZW1lbWJlciB0aGF0IGEgc2NyaXB0IGlzIHVuaXF1ZWx5IGlkZW50aWZpZWQgYnkgYm90aCBpdHMgbmFtZSBhbmQgaXRzIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgd2l0aCBubyBhcmd1bWVudHMgcnVubmluZyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogaXNSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHdpdGggbm8gYXJndW1lbnRzIHJ1bm5pbmcgb24gdGhlIGN1cnJlbnQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIGlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIGdldEhvc3RuYW1lKCkpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgcnVubmluZyB3aXRoIHRoZSBhcmd1bWVudHMgMSwgNSwgYW5kIOKAnHRlc3TigJ0gKGluIHRoYXQgb3JkZXIpIG9uIHRoZSBqb2VzZ3VucyBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogaXNSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImpvZXNndW5zXFxcIiwgMSwgNSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHdpdGggbm8gYXJndW1lbnRzIHJ1bm5pbmcgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLmlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCB3aXRoIG5vIGFyZ3VtZW50cyBydW5uaW5nIG9uIHRoZSBjdXJyZW50IHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZTpcXG4gICAgKiBucy5pc1J1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBucy5nZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHJ1bm5pbmcgd2l0aCB0aGUgYXJndW1lbnRzIDEsIDUsIGFuZCDigJx0ZXN04oCdIChpbiB0aGF0IG9yZGVyKSBvbiB0aGUgam9lc2d1bnMgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLmlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJqb2VzZ3Vuc1xcXCIsIDEsIDUsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9yIFBJRCBvZiBzY3JpcHQgdG8gY2hlY2suIFRoaXMgaXMgY2FzZS1zZW5zaXRpdmUuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gc3BlY2lmeS9pZGVudGlmeSB3aGljaCBzY3JpcHRzIHRvIHNlYXJjaCBmb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBzcGVjaWZpZWQgc2NyaXB0IGlzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgaXNSdW5uaW5nKHNjcmlwdDogRmlsZW5hbWVPclBJRCwgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBnZW5lcmFsIGluZm8gYWJvdXQgYSBydW5uaW5nIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjMgR0JcXG4gICAgKlxcbiAgICAqIFJ1bm5pbmcgd2l0aCBubyBhcmdzIHJldHVybnMgY3VyZW50IHNjcmlwdC5cXG4gICAgKiBJZiB5b3UgdXNlIGEgUElEIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIsIHRoZSBob3N0bmFtZSBhbmQgYXJncyBwYXJhbWV0ZXJzIGFyZSB1bm5lY2Vzc2FyeS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmaWxlbmFtZSAtIE9wdGlvbmFsLiBGaWxlbmFtZSBvciBQSUQgb2YgdGhlIHNjcmlwdC5cXG4gICAgKiBAcGFyYW0gaG9zdG5hbWUgLSBPcHRpb25hbC4gTmFtZSBvZiBob3N0IHNlcnZlciB0aGUgc2NyaXB0IGlzIHJ1bm5pbmcgb24uXFxuICAgICogQHBhcmFtIGFyZ3MgIC0gQXJndW1lbnRzIHRvIGlkZW50aWZ5IHRoZSBzY3JpcHRcXG4gICAgKiBAcmV0dXJucyBpbmZvIGFib3V0IGEgcnVubmluZyBzY3JpcHRcXG4gICAgKi9cXG4gICBnZXRSdW5uaW5nU2NyaXB0KGZpbGVuYW1lPzogRmlsZW5hbWVPclBJRCwgaG9zdG5hbWU/OiBzdHJpbmcsIC4uLmFyZ3M6IChzdHJpbmcgfCBudW1iZXIpW10pOiBSdW5uaW5nU2NyaXB0O1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29zdCBvZiBwdXJjaGFzaW5nIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMjUgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3QgdG8gcHVyY2hhc2UgYSBzZXJ2ZXIgd2l0aCB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiByYW0uXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGZvciAoaSA9IDE7IGkgPD0gMjA7IGkrKykge1xcbiAgICAqICAgICB0cHJpbnQoaSArIFxcXCIgLS0gXFxcIiArIGdldFB1cmNoYXNlZFNlcnZlckNvc3QoTWF0aC5wb3coMiwgaSkpKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBmb3IgKGkgPSAxOyBpIDw9IDIwOyBpKyspIHtcXG4gICAgKiAgICAgbnMudHByaW50KGkgKyBcXFwiIC0tIFxcXCIgKyBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KE1hdGgucG93KDIsIGkpKSk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSByYW0gLSBBbW91bnQgb2YgUkFNIG9mIGEgcG90ZW50aWFsIHB1cmNoYXNlZCBzZXJ2ZXIsIGluIEdCLiBNdXN0IGJlIGEgcG93ZXIgb2YgMiAoMiwgNCwgOCwgMTYsIGV0Yy4pLiBNYXhpbXVtIHZhbHVlIG9mIDEwNDg1NzYgKDJeMjApLlxcbiAgICAqIEByZXR1cm5zIFRoZSBjb3N0IHRvIHB1cmNoYXNlIGEgc2VydmVyIHdpdGggdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgcmFtLlxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtOiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogMi4yNSBHQlxcbiAgICAqXFxuICAgICogUHVyY2hhc2VkIGEgc2VydmVyIHdpdGggdGhlIHNwZWNpZmllZCBob3N0bmFtZSBhbmQgYW1vdW50IG9mIFJBTS5cXG4gICAgKlxcbiAgICAqIFRoZSBob3N0bmFtZSBhcmd1bWVudCBjYW4gYmUgYW55IGRhdGEgdHlwZSwgYnV0IGl0IHdpbGwgYmUgY29udmVydGVkIHRvIGEgc3RyaW5nXFxuICAgICogYW5kIGhhdmUgd2hpdGVzcGFjZSByZW1vdmVkLiBBbnl0aGluZyB0aGF0IHJlc29sdmVzIHRvIGFuIGVtcHR5IHN0cmluZyB3aWxsIGNhdXNlXFxuICAgICogdGhlIGZ1bmN0aW9uIHRvIGZhaWwuIElmIHRoZXJlIGlzIGFscmVhZHkgYSBzZXJ2ZXIgd2l0aCB0aGUgc3BlY2lmaWVkIGhvc3RuYW1lLFxcbiAgICAqIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBhcHBlbmQgYSBudW1iZXIgYXQgdGhlIGVuZCBvZiB0aGUgaG9zdG5hbWVcXG4gICAgKiBhcmd1bWVudCB2YWx1ZSB1bnRpbCBpdCBmaW5kcyBhIHVuaXF1ZSBob3N0bmFtZS4gRm9yIGV4YW1wbGUsIGlmIHRoZSBzY3JpcHQgY2FsbHNcXG4gICAgKiBgcHVyY2hhc2VTZXJ2ZXIo4oCcZm9v4oCdLCA0KWAgYnV0IGEgc2VydmVyIG5hbWVkIOKAnGZvb+KAnSBhbHJlYWR5IGV4aXN0cywgdGhlIGl0IHdpbGxcXG4gICAgKiBhdXRvbWF0aWNhbGx5IGNoYW5nZSB0aGUgaG9zdG5hbWUgdG8gYGZvby0wYC4gSWYgdGhlcmUgaXMgYWxyZWFkeSBhIHNlcnZlciB3aXRoIHRoZVxcbiAgICAqIGhvc3RuYW1lIGBmb28tMGAsIHRoZW4gaXQgd2lsbCBjaGFuZ2UgdGhlIGhvc3RuYW1lIHRvIGBmb28tMWAsIGFuZCBzbyBvbi5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCB0aGVyZSBpcyBhIG1heGltdW0gbGltaXQgdG8gdGhlIGFtb3VudCBvZiBzZXJ2ZXJzIHlvdSBjYW4gcHVyY2hhc2UuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBob3N0bmFtZSBvZiB0aGUgbmV3bHkgcHVyY2hhc2VkIHNlcnZlciBhcyBhIHN0cmluZy4gSWYgdGhlIGZ1bmN0aW9uXFxuICAgICogZmFpbHMgdG8gcHVyY2hhc2UgYSBzZXJ2ZXIsIHRoZW4gaXQgd2lsbCByZXR1cm4gYW4gZW1wdHkgc3RyaW5nLiBUaGUgZnVuY3Rpb24gd2lsbFxcbiAgICAqIGZhaWwgaWYgdGhlIGFyZ3VtZW50cyBwYXNzZWQgaW4gYXJlIGludmFsaWQsIGlmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2hcXG4gICAgKiBtb25leSB0byBwdXJjaGFzZSB0aGUgc3BlY2lmaWVkIHNlcnZlciwgb3IgaWYgdGhlIHBsYXllciBoYXMgZXhjZWVkZWQgdGhlIG1heGltdW1cXG4gICAgKiBhbW91bnQgb2Ygc2VydmVycy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogdmFyIHJhbSA9IDY0O1xcbiAgICAqIHZhciBwcmVmaXggPSBcXFwicHNlcnYtXFxcIjtcXG4gICAgKiBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XFxuICAgICogICAgcHVyY2hhc2VTZXJ2ZXIocHJlZml4ICsgaSwgcmFtKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBjb25zdCByYW0gPSA2NDtcXG4gICAgKiBjb25zdCBwcmVmaXggPSBcXFwicHNlcnYtXFxcIjtcXG4gICAgKiBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XFxuICAgICogICAgbnMucHVyY2hhc2VTZXJ2ZXIocHJlZml4ICsgaSwgcmFtKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3RuYW1lIC0gSG9zdCBvZiB0aGUgcHVyY2hhc2VkIHNlcnZlci5cXG4gICAgKiBAcGFyYW0gcmFtIC0gQW1vdW50IG9mIFJBTSBvZiB0aGUgcHVyY2hhc2VkIHNlcnZlciwgaW4gR0IuIE11c3QgYmUgYSBwb3dlciBvZiAyICgyLCA0LCA4LCAxNiwgZXRjLikuIE1heGltdW0gdmFsdWUgb2YgMTA0ODU3NiAoMl4yMCkuXFxuICAgICogQHJldHVybnMgVGhlIGhvc3RuYW1lIG9mIHRoZSBuZXdseSBwdXJjaGFzZWQgc2VydmVyLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlU2VydmVyKGhvc3RuYW1lOiBzdHJpbmcsIHJhbTogbnVtYmVyKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBEZWxldGUgYSBwdXJjaGFzZWQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogMi4yNSBHQlxcbiAgICAqXFxuICAgICogRGVsZXRlcyBvbmUgb2YgeW91ciBwdXJjaGFzZWQgc2VydmVycywgd2hpY2ggaXMgc3BlY2lmaWVkIGJ5IGl0cyBob3N0bmFtZS5cXG4gICAgKlxcbiAgICAqIFRoZSBob3N0bmFtZSBhcmd1bWVudCBjYW4gYmUgYW55IGRhdGEgdHlwZSwgYnV0IGl0IHdpbGwgYmUgY29udmVydGVkIHRvIGEgc3RyaW5nLlxcbiAgICAqIFdoaXRlc3BhY2UgaXMgYXV0b21hdGljYWxseSByZW1vdmVkIGZyb20gdGhlIHN0cmluZy4gVGhpcyBmdW5jdGlvbiB3aWxsIG5vdCBkZWxldGUgYVxcbiAgICAqIHNlcnZlciB0aGF0IHN0aWxsIGhhcyBzY3JpcHRzIHJ1bm5pbmcgb24gaXQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciB0byBkZWxldGUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBzdWNjZXNzZnVsLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGRlbGV0ZVNlcnZlcihob3N0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIGhvc3RuYW1lcyBvZiBhbGwgb2YgdGhlIHNlcnZlcnMgeW91IGhhdmUgcHVyY2hhc2VkLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgMi4yNSBHQlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgYW4gYXJyYXkgd2l0aCB0aGUgaG9zdG5hbWVzIG9mIGFsbCBvZiB0aGUgc2VydmVycyB5b3UgaGF2ZSBwdXJjaGFzZWQuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VkU2VydmVycygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgbWF4aW11bSBudW1iZXIgb2Ygc2VydmVycyB5b3UgY2FuIHB1cmNoYXNlLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIHRoZSBtYXhpbXVtIG51bWJlciBvZiBzZXJ2ZXJzIHlvdSBjYW4gcHVyY2hhc2UuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VkU2VydmVyTGltaXQoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIFJBTSB0aGF0IGEgcHVyY2hhc2VkIHNlcnZlciBjYW4gaGF2ZS5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgbWF4aW11bSBSQU0gKGluIEdCKSB0aGF0IGEgcHVyY2hhc2VkIHNlcnZlciBjYW4gaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRQdXJjaGFzZWRTZXJ2ZXJNYXhSYW0oKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBXcml0ZSBkYXRhIHRvIGEgZmlsZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIHdyaXRlIGRhdGEgdG8gYSB0ZXh0IGZpbGUgKC50eHQpLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHdyaXRlIGRhdGEgdG8gdGhhdCB0ZXh0IGZpbGUuIElmIHRoZSBzcGVjaWZpZWQgdGV4dCBmaWxlIGRvZXMgbm90IGV4aXN0LFxcbiAgICAqIHRoZW4gaXQgd2lsbCBiZSBjcmVhdGVkLiBUaGUgdGhpcmQgYXJndW1lbnQgbW9kZSwgZGVmaW5lcyBob3cgdGhlIGRhdGEgd2lsbCBiZSB3cml0dGVuIHRvXFxuICAgICogdGhlIHRleHQgZmlsZS4gSWYgKm1vZGUgaXMgc2V0IHRvIOKAnHfigJ0sIHRoZW4gdGhlIGRhdGEgaXMgd3JpdHRlbiBpbiDigJx3cml0ZeKAnSBtb2RlIHdoaWNoIG1lYW5zXFxuICAgICogdGhhdCBpdCB3aWxsIG92ZXJ3cml0ZSBhbGwgZXhpc3RpbmcgZGF0YSBvbiB0aGUgdGV4dCBmaWxlLiBJZiBtb2RlIGlzIHNldCB0byBhbnkgb3RoZXIgdmFsdWVcXG4gICAgKiB0aGVuIHRoZSBkYXRhIHdpbGwgYmUgd3JpdHRlbiBpbiDigJxhcHBlbmTigJ0gbW9kZSB3aGljaCBtZWFucyB0aGF0IHRoZSBkYXRhIHdpbGwgYmUgYWRkZWQgYXQgdGhlXFxuICAgICogZW5kIG9mIHRoZSB0ZXh0IGZpbGUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaGFuZGxlIC0gRmlsZW5hbWUgb2YgdGhlIHRleHQgZmlsZSB0aGF0IHdpbGwgYmUgd3JpdHRlbiB0by5cXG4gICAgKiBAcGFyYW0gZGF0YSAtIERhdGEgdG8gd3JpdGUuXFxuICAgICogQHBhcmFtIG1vZGUgLSBEZWZpbmVzIHRoZSB3cml0ZSBtb2RlLiBPbmx5IHZhbGlkIHdoZW4gd3JpdGluZyB0byB0ZXh0IGZpbGVzLlxcbiAgICAqL1xcbiAgIHdyaXRlKGhhbmRsZTogc3RyaW5nLCBkYXRhPzogc3RyaW5nW10gfCBudW1iZXIgfCBzdHJpbmcsIG1vZGU/OiBcXFwid1xcXCIgfCBcXFwiYVxcXCIpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBBdHRlbXB0IHRvIHdyaXRlIHRvIGEgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0cyB0byB3cml0ZSBkYXRhIHRvIHRoZSBzcGVjaWZpZWQgTmV0c2NyaXB0IFBvcnQuXFxuICAgICogSWYgdGhlIHBvcnQgaXMgZnVsbCwgdGhlIGRhdGEgd2lsbCBub3QgYmUgd3JpdHRlbi5cXG4gICAgKiBPdGhlcndpc2UsIHRoZSBkYXRhIHdpbGwgYmUgd3JpdHRlbiBub3JtYWxseS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBwb3J0IC0gUG9ydCBvciB0ZXh0IGZpbGUgdGhhdCB3aWxsIGJlIHdyaXR0ZW4gdG8uXFxuICAgICogQHBhcmFtIGRhdGEgLSBEYXRhIHRvIHdyaXRlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGRhdGEgaXMgc3VjY2Vzc2Z1bGx5IHdyaXR0ZW4gdG8gdGhlIHBvcnQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJ5V3JpdGVQb3J0KHBvcnQ6IG51bWJlciwgZGF0YTogc3RyaW5nW10gfCBudW1iZXIpOiBQcm9taXNlPGJvb2xlYW4+O1xcbiBcXG4gICAvKipcXG4gICAgKiBSZWFkIGNvbnRlbnQgb2YgYSBmaWxlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byByZWFkIGRhdGEgZnJvbSBhIHRleHQgZmlsZSAoLnR4dCkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBkYXRhIGluIHRoZSBzcGVjaWZpZWQgdGV4dFxcbiAgICAqIGZpbGUuIElmIHRoZSB0ZXh0IGZpbGUgZG9lcyBub3QgZXhpc3QsIGFuIGVtcHR5IHN0cmluZyB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhhbmRsZSAtIEZpbGVuYW1lIHRvIHJlYWQgZnJvbS5cXG4gICAgKiBAcmV0dXJucyBEYXRhIGluIHRoZSBzcGVjaWZpZWQgdGV4dCBmaWxlLlxcbiAgICAqL1xcbiAgIHJlYWQoaGFuZGxlOiBzdHJpbmcpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBhIGNvcHkgb2YgdGhlIGRhdGEgZnJvbSBhIHBvcnQgd2l0aG91dCBwb3BwaW5nIGl0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBwZWVrIGF0IHRoZSBkYXRhIGZyb20gYSBwb3J0LiBJdCByZXR1cm5zIHRoZVxcbiAgICAqIGZpcnN0IGVsZW1lbnQgaW4gdGhlIHNwZWNpZmllZCBwb3J0IHdpdGhvdXQgcmVtb3ZpbmcgdGhhdCBlbGVtZW50LiBJZlxcbiAgICAqIHRoZSBwb3J0IGlzIGVtcHR5LCB0aGUgc3RyaW5nIOKAnE5VTEwgUE9SVCBEQVRB4oCdIHdpbGwgYmUgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gcG9ydCAtIFBvcnQgdG8gcGVlay4gTXVzdCBiZSBhbiBpbnRlZ2VyIGJldHdlZW4gMSBhbmQgMjAuXFxuICAgICogQHJldHVybnMgRGF0YSBpbiB0aGUgc3BlY2lmaWVkIHBvcnQuXFxuICAgICovXFxuICAgcGVlayhwb3J0OiBudW1iZXIpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENsZWFyIGRhdGEgZnJvbSBhIGZpbGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogRGVsZXRlIGFsbCBkYXRhIGZyb20gdGhhdCB0ZXh0IGZpbGUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaGFuZGxlIC0gVGV4dCBmaWxlIHRvIGNsZWFyLlxcbiAgICAqL1xcbiAgIGNsZWFyKGhhbmRsZTogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ2xlYXIgZGF0YSBmcm9tIGEgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBEZWxldGEgYWxsIGRhdGEgZnJvbSB0aGUgdW5kZXJseWluZyBxdWV1ZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBoYW5kbGUgLSBQb3J0IHRvIGNsZWFyLlxcbiAgICAqL1xcbiAgIGNsZWFyUG9ydChoYW5kbGU6IG51bWJlcik6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFdyaXRlIGRhdGEgdG8gYSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFdyaXRlIGRhdGEgdG8gdGhhdCBuZXRzY3JpcHQgcG9ydC5cXG4gICAgKiBAcmV0dXJucyBUaGUgZGF0YSBwb3BwZWQgb2ZmIHRoZSBxdWV1ZSBpZiBpdCB3YXMgZnVsbC5cXG4gICAgKi9cXG4gICB3cml0ZVBvcnQocG9ydDogbnVtYmVyLCBkYXRhOiBzdHJpbmcgfCBudW1iZXIpOiBQcm9taXNlPGFueT47XFxuICAgLyoqXFxuICAgICogUmVhZCBkYXRhIGZyb20gYSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJlYWQgZGF0YSBmcm9tIHRoYXQgcG9ydC4gQSBwb3J0IGlzIGEgc2VyaWFsaXplZCBxdWV1ZS5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmVtb3ZlIHRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhhdCBxdWV1ZSBhbmQgcmV0dXJuIGl0LlxcbiAgICAqIElmIHRoZSBxdWV1ZSBpcyBlbXB0eSwgdGhlbiB0aGUgc3RyaW5nIOKAnE5VTEwgUE9SVCBEQVRB4oCdIHdpbGwgYmUgcmV0dXJuZWQuXFxuICAgICogQHJldHVybnMgdGhlIGRhdGEgcmVhZC5cXG4gICAgKi9cXG4gICByZWFkUG9ydChwb3J0OiBudW1iZXIpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBhbGwgZGF0YSBvbiBhIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogR2V0IGEgaGFuZGxlIHRvIGEgTmV0c2NyaXB0IFBvcnQuXFxuICAgICpcXG4gICAgKiBXQVJOSU5HOiBQb3J0IEhhbmRsZXMgb25seSB3b3JrIGluIE5ldHNjcmlwdEpTIChOZXRzY3JpcHQgMi4wKS4gVGhleSB3aWxsIG5vdCB3b3JrIGluIE5ldHNjcmlwdCAxLjAuXFxuICAgICpcXG4gICAgKiBAc2VlIGh0dHBzOi8vYml0YnVybmVyLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9uZXRzY3JpcHQvbmV0c2NyaXB0bWlzYy5odG1sI25ldHNjcmlwdC1wb3J0c1xcbiAgICAqIEBwYXJhbSBwb3J0IC0gUG9ydCBudW1iZXIuIE11c3QgYmUgYW4gaW50ZWdlciBiZXR3ZWVuIDEgYW5kIDIwLlxcbiAgICAqL1xcbiAgIGdldFBvcnRIYW5kbGUocG9ydDogbnVtYmVyKTogTmV0c2NyaXB0UG9ydDtcXG4gXFxuICAgLyoqXFxuICAgICogRGVsZXRlIGEgZmlsZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZW1vdmVzIHRoZSBzcGVjaWZpZWQgZmlsZSBmcm9tIHRoZSBjdXJyZW50IHNlcnZlci4gVGhpcyBmdW5jdGlvbiB3b3JrcyBmb3IgZXZlcnkgZmlsZVxcbiAgICAqIHR5cGUgZXhjZXB0IG1lc3NhZ2UgKC5tc2cpIGZpbGVzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG5hbWUgLSBGaWxlbmFtZSBvZiBmaWxlIHRvIHJlbW92ZS4gTXVzdCBpbmNsdWRlIHRoZSBleHRlbnNpb24uXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IEFkZHJlc3Mgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBkZWxldGUgdGhlIGZpbGUuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIGl0IHN1Y2Nlc3NmdWxseSBkZWxldGVzIHRoZSBmaWxlLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHJtKG5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIGFueSBzY3JpcHQgd2l0aCBhIGZpbGVuYW1lIGlzIHJ1bm5pbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIGFueSBpbnN0YW5jZSBvZiB0aGUgc3BlY2lmaWVkIHNjcmlwdCBpcyBydW5uaW5nXFxuICAgICogb24gdGhlIHRhcmdldCBzZXJ2ZXIsIHJlZ2FyZGxlc3Mgb2YgaXRzIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIFRoaXMgaXMgZGlmZmVyZW50IHRoYW4gdGhlIGlzUnVubmluZyBmdW5jdGlvbiBiZWNhdXNlIGl0IGRvZXMgbm90IHRyeSB0b1xcbiAgICAqIGlkZW50aWZ5IGEgc3BlY2lmaWMgaW5zdGFuY2Ugb2YgYSBydW5uaW5nIHNjcmlwdCBieSBpdHMgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYW55IHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHJ1bm5pbmcgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIHNjcmlwdFJ1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGFueSBzY3JpcHQgbmFtZWQg4oCcZm9vLnNjcmlwdOKAnSBydW5uaW5nIG9uIHRoZSBjdXJyZW50IHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZTpcXG4gICAgKiBzY3JpcHRSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSk7XFxuICAgICogYGBgXFxuICAgICogKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhbnkgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgcnVubmluZyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogbnMuc2NyaXB0UnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYW55IHNjcmlwdCBuYW1lZCDigJxmb28uc2NyaXB04oCdIHJ1bm5pbmcgb24gdGhlIGN1cnJlbnQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLnNjcmlwdFJ1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBucy5nZXRIb3N0bmFtZSgpKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0IHRvIGNoZWNrLiBUaGlzIGlzIGNhc2Utc2Vuc2l0aXZlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNwZWNpZmllZCBzY3JpcHQgaXMgcnVubmluZywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzY3JpcHRSdW5uaW5nKHNjcmlwdDogc3RyaW5nLCBob3N0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBLaWxsIGFsbCBzY3JpcHRzIHdpdGggYSBmaWxlbmFtZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBLaWxscyBhbGwgc2NyaXB0cyB3aXRoIHRoZSBzcGVjaWZpZWQgZmlsZW5hbWUgb24gdGhlIHRhcmdldCBzZXJ2ZXIgc3BlY2lmaWVkIGJ5IGhvc3RuYW1lLFxcbiAgICAqIHJlZ2FyZGxlc3Mgb2YgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBraWxsLiBUaGlzIGlzIGNhc2Utc2Vuc2l0aXZlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgb25lIG9yIG1vcmUgc2NyaXB0cyB3ZXJlIHN1Y2Nlc3NmdWxseSBraWxsZWQsIGFuZCBmYWxzZSBpZiBub25lIHdlcmUuXFxuICAgICovXFxuICAgc2NyaXB0S2lsbChzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgY3VycmVudCBzY3JpcHQgbmFtZS5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICogQHJldHVybnMgQ3VycmVudCBzY3JpcHQgbmFtZS5cXG4gICAgKi9cXG4gICBnZXRTY3JpcHROYW1lKCk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSByYW0gY29zdCBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBSQU0gcmVxdWlyZWQgdG8gcnVuIHRoZSBzcGVjaWZpZWQgc2NyaXB0IG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIFJldHVybnMgMCBpZiB0aGUgc2NyaXB0IGRvZXMgbm90IGV4aXN0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdC4gVGhpcyBpcyBjYXNlLXNlbnNpdGl2ZS5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlciB0aGUgc2NyaXB0IGlzIGxvY2F0ZWQgb24uIFRoaXMgaXMgb3B0aW9uYWwsIElmIGl0IGlzIG5vdCBzcGVjaWZpZWQgdGhlbiB0aGUgZnVuY3Rpb24gd2lsbCBzZSB0aGUgY3VycmVudCBzZXJ2ZXIgYXMgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIFJBTSAoaW4gR0IpIHJlcXVpcmVkIHRvIHJ1biB0aGUgc3BlY2lmaWVkIHNjcmlwdCBvbiB0aGUgdGFyZ2V0IHNlcnZlciwgYW5kIDAgaWYgdGhlIHNjcmlwdCBkb2VzIG5vdCBleGlzdC5cXG4gICAgKi9cXG4gICBnZXRTY3JpcHRSYW0oc2NyaXB0OiBzdHJpbmcsIGhvc3Q/OiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgZXhlY3V0aW9uIHRpbWUgb2YgYSBoYWNrKCkgY2FsbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpXaGVuIGBoYWNrYCBjb21wbGV0ZXMgYW4gYW1vdW50IG9mIG1vbmV5IGlzIHN0b2xlbiBkZXBlbmRpbmcgb24gdGhlIHBsYXllcidzIHNraWxscy5cXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgdGltZSBpbiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gZXhlY3V0ZSB0aGUgaGFjayBOZXRzY3JpcHQgZnVuY3Rpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogVGhlIGZ1bmN0aW9uIHRha2VzIGluIGFuIG9wdGlvbmFsIGhhY2tMdmwgcGFyYW1ldGVyIHRoYXQgY2FuIGJlIHNwZWNpZmllZCB0byBzZWUgd2hhdCB0aGUgaGFjayB0aW1lIHdvdWxkIGJlIGF0IGRpZmZlcmVudCBoYWNraW5nIGxldmVscy5cXG4gICAgKiBUaGUgcmVxdWlyZWQgdGltZSBpcyBpbmNyZWFzZWQgYnkgdGhlIHNlY3VyaXR5IGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyIGFuZCBkZWNyZWFzZWQgYnkgdGhlIHBsYXllcidzIGhhY2tpbmcgbGV2ZWwuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIHRoZSBhbW91bnQgb2YgdGltZSBpbiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gZXhlY3V0ZSB0aGUgaGFjayBOZXRzY3JpcHQgZnVuY3Rpb24uIFJldHVybnMgSW5maW5pdHkgaWYgY2FsbGVkIG9uIGEgSGFja25ldCBTZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0SGFja1RpbWUoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGV4ZWN1dGlvbiB0aW1lIG9mIGEgZ3JvdygpIGNhbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIGdyb3cgTmV0c2NyaXB0IGZ1bmN0aW9uIG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIFRoZSBmdW5jdGlvbiB0YWtlcyBpbiBhbiBvcHRpb25hbCBoYWNrTHZsIHBhcmFtZXRlciB0aGF0IGNhbiBiZSBzcGVjaWZpZWQgdG8gc2VlIHdoYXQgdGhlIGdyb3cgdGltZSB3b3VsZCBiZSBhdCBkaWZmZXJlbnQgaGFja2luZyBsZXZlbHMuXFxuICAgICogVGhlIHJlcXVpcmVkIHRpbWUgaXMgaW5jcmVhc2VkIGJ5IHRoZSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlciBhbmQgZGVjcmVhc2VkIGJ5IHRoZSBwbGF5ZXIncyBoYWNraW5nIGxldmVsLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIGdyb3cgTmV0c2NyaXB0IGZ1bmN0aW9uLiBSZXR1cm5zIEluZmluaXR5IGlmIGNhbGxlZCBvbiBhIEhhY2tuZXQgU2VydmVyLlxcbiAgICAqL1xcbiAgIGdldEdyb3dUaW1lKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBleGVjdXRpb24gdGltZSBvZiBhIHdlYWtlbigpIGNhbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIHdlYWtlbiBOZXRzY3JpcHQgZnVuY3Rpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogVGhlIGZ1bmN0aW9uIHRha2VzIGluIGFuIG9wdGlvbmFsIGhhY2tMdmwgcGFyYW1ldGVyIHRoYXQgY2FuIGJlIHNwZWNpZmllZCB0byBzZWUgd2hhdCB0aGUgd2Vha2VuIHRpbWUgd291bGQgYmUgYXQgZGlmZmVyZW50IGhhY2tpbmcgbGV2ZWxzLlxcbiAgICAqIFRoZSByZXF1aXJlZCB0aW1lIGlzIGluY3JlYXNlZCBieSB0aGUgc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIgYW5kIGRlY3JlYXNlZCBieSB0aGUgcGxheWVyJ3MgaGFja2luZyBsZXZlbC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgdGhlIGFtb3VudCBvZiB0aW1lIGluIG1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBleGVjdXRlIHRoZSB3ZWFrZW4gTmV0c2NyaXB0IGZ1bmN0aW9uLiBSZXR1cm5zIEluZmluaXR5IGlmIGNhbGxlZCBvbiBhIEhhY2tuZXQgU2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFdlYWtlblRpbWUoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGluY29tZSBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBpbmNvbWUgdGhlIHNwZWNpZmllZCBzY3JpcHQgZ2VuZXJhdGVzIHdoaWxlIG9ubGluZVxcbiAgICAqICh3aGVuIHRoZSBnYW1lIGlzIG9wZW4sIGRvZXMgbm90IGFwcGx5IGZvciBvZmZsaW5lIGluY29tZSkuIFJlbWVtYmVyIHRoYXRcXG4gICAgKiBhIHNjcmlwdCBpcyB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggaXRzIG5hbWUgYW5kIGl0cyBhcmd1bWVudHMuIFNvIGZvclxcbiAgICAqIGV4YW1wbGUgaWYgeW91IHJhbiBhIHNjcmlwdCB3aXRoIHRoZSBhcmd1bWVudHMg4oCcZm9vZG5zdHVmZuKAnSBhbmQg4oCcNeKAnSB0aGVuXFxuICAgICogaW4gb3JkZXIgdG8gdXNlIHRoaXMgZnVuY3Rpb24gdG8gZ2V0IHRoYXQgc2NyaXB04oCZcyBpbmNvbWUgeW91IG11c3Qgc3BlY2lmeVxcbiAgICAqIHRob3NlIHNhbWUgYXJndW1lbnRzIGluIHRoZSBzYW1lIG9yZGVyIGluIHRoaXMgZnVuY3Rpb24gY2FsbC5cXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgY2FsbGVkIHdpdGggbm8gYXJndW1lbnRzLlxcbiAgICAqIElmIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cywgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGFuIGFycmF5IG9mIHR3byB2YWx1ZXMuXFxuICAgICogVGhlIGZpcnN0IHZhbHVlIGlzIHRoZSB0b3RhbCBpbmNvbWUgKGRvbGxhciAvIHNlY29uZCkgb2YgYWxsIG9mIHlvdXIgYWN0aXZlIHNjcmlwdHNcXG4gICAgKiAoc2NyaXB0cyB0aGF0IGFyZSBjdXJyZW50bHkgcnVubmluZyBvbiBhbnkgc2VydmVyKS5cXG4gICAgKiBUaGUgc2Vjb25kIHZhbHVlIGlzIHRoZSB0b3RhbCBpbmNvbWUgKGRvbGxhciAvIHNlY29uZCkgdGhhdCB5b3XigJl2ZSBlYXJuZWQgZnJvbSBzY3JpcHRzXFxuICAgICogc2luY2UgeW91IGxhc3QgaW5zdGFsbGVkIEF1Z21lbnRhdGlvbnMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gU2VydmVyIG9uIHdoaWNoIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGluY29tZSB0aGUgc3BlY2lmaWVkIHNjcmlwdCBnZW5lcmF0ZXMgd2hpbGUgb25saW5lLlxcbiAgICAqL1xcbiAgIGdldFNjcmlwdEluY29tZSgpOiBbbnVtYmVyLCBudW1iZXJdO1xcbiAgIGdldFNjcmlwdEluY29tZShzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBleHAgZ2FpbiBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBoYWNraW5nIGV4cGVyaWVuY2UgdGhlIHNwZWNpZmllZCBzY3JpcHQgZ2VuZXJhdGVzIHdoaWxlIG9ubGluZVxcbiAgICAqICh3aGVuIHRoZSBnYW1lIGlzIG9wZW4sIGRvZXMgbm90IGFwcGx5IGZvciBvZmZsaW5lIGV4cGVyaWVuY2UgZ2FpbnMpLiBSZW1lbWJlciB0aGF0IGFcXG4gICAgKiBzY3JpcHQgaXMgdW5pcXVlbHkgaWRlbnRpZmllZCBieSBib3RoIGl0cyBuYW1lIGFuZCBpdHMgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBjYW4gYWxzbyByZXR1cm4gdGhlIHRvdGFsIGV4cGVyaWVuY2UgZ2FpbiByYXRlIG9mIGFsbCBvZiB5b3VyIGFjdGl2ZVxcbiAgICAqIHNjcmlwdHMgYnkgcnVubmluZyB0aGUgZnVuY3Rpb24gd2l0aCBubyBhcmd1bWVudHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gU2VydmVyIG9uIHdoaWNoIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGhhY2tpbmcgZXhwZXJpZW5jZSB0aGUgc3BlY2lmaWVkIHNjcmlwdCBnZW5lcmF0ZXMgd2hpbGUgb25saW5lLlxcbiAgICAqL1xcbiAgIGdldFNjcmlwdEV4cEdhaW4oKTogbnVtYmVyO1xcbiAgIGdldFNjcmlwdEV4cEdhaW4oc2NyaXB0OiBzdHJpbmcsIGhvc3Q6IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiB0aW1lIGluIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgcGFzc2VkIHNpbmNlIHlvdSBsYXN0IGluc3RhbGxlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKiBAcmV0dXJucyBUaW1lIGluIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgcGFzc2VkIHNpbmNlIHlvdSBsYXN0IGluc3RhbGxlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldFRpbWVTaW5jZUxhc3RBdWcoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBGb3JtYXQgYSBzdHJpbmcuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4ZWkvc3ByaW50Zi5qc1xcbiAgICAqIEBwYXJhbSBmb3JtYXQgLSBTdHJpbmcgdG8gZm9ybWF0LlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gRm9ybWF0aW5nIGFyZ3VtZW50cy5cXG4gICAgKiBAcmV0dXJucyBGb3JtYXRlZCB0ZXh0LlxcbiAgICAqL1xcbiAgIHNwcmludGYoZm9ybWF0OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBGb3JtYXQgYSBzdHJpbmcgd2l0aCBhbiBhcnJheSBvZiBhcmd1bWVudHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogc2VlOiBodHRwczovL2dpdGh1Yi5jb20vYWxleGVpL3NwcmludGYuanNcXG4gICAgKiBAcGFyYW0gZm9ybWF0IC0gU3RyaW5nIHRvIGZvcm1hdC5cXG4gICAgKiBAcGFyYW0gYXJncyAtIEZvcm1hdGluZyBhcmd1bWVudHMuXFxuICAgICogQHJldHVybnMgRm9ybWF0ZWQgdGV4dC5cXG4gICAgKi9cXG4gICB2c3ByaW50Zihmb3JtYXQ6IHN0cmluZywgYXJnczogYW55W10pOiBzdHJpbmc7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEZvcm1hdCBhIG51bWJlclxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIENvbnZlcnRzIGEgbnVtYmVyIGludG8gYSBzdHJpbmcgd2l0aCB0aGUgc3BlY2lmaWVkIGZvcm1hdHRlci5cXG4gICAgKiBUaGlzIHVzZXMgdGhlIG51bWVyYWxqcyBsaWJyYXJ5LCBzbyB0aGUgZm9ybWF0dGVycyBtdXN0IGJlIGNvbXBhdGlibGUgd2l0aCB0aGF0LlxcbiAgICAqIFRoaXMgaXMgdGhlIHNhbWUgZnVuY3Rpb24gdGhhdCB0aGUgZ2FtZSBpdHNlbGYgdXNlcyB0byBkaXNwbGF5IG51bWJlcnMuXFxuICAgICpcXG4gICAgKiBzZWU6IGh0dHA6Ly9udW1lcmFsanMuY29tL1xcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIHRvIGZvcm1hdC5cXG4gICAgKiBAcGFyYW0gZm9ybWF0IC0gRm9ybWF0dGVyLlxcbiAgICAqIEByZXR1cm5zIEZvcm1hdGVkIG51bWJlci5cXG4gICAgKi9cXG4gICBuRm9ybWF0KG46IG51bWJlciwgZm9ybWF0OiBzdHJpbmcpOiBzdHJpbmc7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEZvcm1hdCB0aW1lIHRvIHJlYWRhYmxlIHN0cmluZ1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBtaWxsaXNlY29uZHMgLSBOdW1iZXIgb2YgbWlsbGlzZWNvbmQgdG8gZm9ybWF0LlxcbiAgICAqIEBwYXJhbSBtaWxsaVByZWNpc2lvbiAtIEZvcm1hdCB0aW1lIHdpdGggc3Vic2Vjb25kIHByZWNpc2lvbiwgZGVmYXVsdHMgdG8gZmFsc2UuXFxuICAgICogQHJldHVybnMgVGhlIGZvcm1hdHRlZCB0aW1lLlxcbiAgICAqL1xcbiAgIHRGb3JtYXQobWlsbGlzZWNvbmRzOiBudW1iZXIsIG1pbGxpUHJlY2lzaW9uPzogYm9vbGVhbik6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogUHJvbXB0IHRoZSBwbGF5ZXIgd2l0aCBhIFllcy9ObyBtb2RhbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBQcm9tcHRzIHRoZSBwbGF5ZXIgd2l0aCBhIGRpYWxvZyBib3ggd2l0aCB0d28gb3B0aW9uczog4oCcWWVz4oCdIGFuZCDigJxOb+KAnS5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllciBjbGljayDigJxZZXPigJ0gYW5kIGZhbHNlIGlmXFxuICAgICogdGhlIHBsYXllciBjbGlja3Mg4oCcTm/igJ0uIFRoZSBzY3JpcHTigJlzIGV4ZWN1dGlvbiBpcyBoYWx0ZWQgdW50aWwgdGhlIHBsYXllclxcbiAgICAqIHNlbGVjdHMgb25lIG9mIHRoZSBvcHRpb25zLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR4dCAtIFRleHQgdG8gYXBwZWFyIGluIHRoZSBwcm9tcHQgZGlhbG9nIGJveC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgY2xpY2sg4oCcWWVz4oCdIGFuZCBmYWxzZSBpZiB0aGUgcGxheWVyIGNsaWNrcyDigJxOb+KAnS5cXG4gICAgKi9cXG4gICBwcm9tcHQodHh0OiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+O1xcbiBcXG4gICAvKipcXG4gICAgKiBPcGVuIHVwIGEgbWVzc2FnZSBib3guXFxuICAgICogQHBhcmFtIG1zZyAtIE1lc3NhZ2UgdG8gYWxlcnQuXFxuICAgICovXFxuICAgYWxlcnQobXNnOiBhbnkpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBRdWV1ZSBhIHRvYXN0IChib3R0b20tcmlnaHQgbm90aWZpY2F0aW9uKS5cXG4gICAgKiBAcGFyYW0gbXNnIC0gTWVzc2FnZSBpbiB0aGUgdG9hc3QuXFxuICAgICogQHBhcmFtIHZhcmlhbnQgLSBUeXBlIG9mIHRvYXN0LCBtdXN0IGJlIG9uZSBvZiBzdWNjZXNzLCBpbmZvLCB3YXJuaW5nLCBlcnJvci4gRGVmYXVsdHMgdG8gc3VjY2Vzcy5cXG4gICAgKiBAcGFyYW0gZHVyYXRpb24gLSBEdXJhdGlvbiBvZiB0b2FzdCBpbiBtcy4gQ2FuIGFsc28gYmUgYG51bGxgIHRvIGNyZWF0ZSBhIHBlcnNpc3RlbnQgdG9hc3QuIERlZmF1bHRzIHRvIDIwMDBcXG4gICAgKi9cXG4gICB0b2FzdChtc2c6IGFueSwgdmFyaWFudD86IHN0cmluZywgZHVyYXRpb24/OiBudW1iZXIgfCBudWxsKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRG93bmxvYWQgYSBmaWxlIGZyb20gdGhlIGludGVybmV0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHJpZXZlcyBkYXRhIGZyb20gYSBVUkwgYW5kIGRvd25sb2FkcyBpdCB0byBhIGZpbGUgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuXFxuICAgICogVGhlIGRhdGEgY2FuIG9ubHkgYmUgZG93bmxvYWRlZCB0byBhIHNjcmlwdCAoLnNjcmlwdCwgLm5zLCAuanMpIG9yIGEgdGV4dCBmaWxlICgudHh0KS5cXG4gICAgKiBJZiB0aGUgZmlsZSBhbHJlYWR5IGV4aXN0cywgaXQgd2lsbCBiZSBvdmVyd3JpdHRlbiBieSB0aGlzIGNvbW1hbmQuXFxuICAgICogTm90ZSB0aGF0IGl0IHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIGRvd25sb2FkIGRhdGEgZnJvbSBtYW55IHdlYnNpdGVzIGJlY2F1c2UgdGhleVxcbiAgICAqIGRvIG5vdCBhbGxvdyBjcm9zcy1vcmlnaW4gcmVzb3VyY2Ugc2hhcmluZyAoQ09SUykuXFxuICAgICpcXG4gICAgKiBJTVBPUlRBTlQ6IFRoaXMgaXMgYW4gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIFByb21pc2UuXFxuICAgICogVGhlIFByb21pc2XigJlzIHJlc29sdmVkIHZhbHVlIHdpbGwgYmUgYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIGRhdGEgd2FzXFxuICAgICogc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCBmcm9tIHRoZSBVUkwuIEJlY2F1c2UgdGhlIGZ1bmN0aW9uIGlzIGFzeW5jIGFuZCByZXR1cm5zIGEgUHJvbWlzZSxcXG4gICAgKiBpdCBpcyByZWNvbW1lbmRlZCB5b3UgdXNlIHdnZXQgaW4gTmV0c2NyaXB0SlMgKE5ldHNjcmlwdCAyLjApLlxcbiAgICAqXFxuICAgICogSW4gTmV0c2NyaXB0SlMsIHlvdSBtdXN0IHByZWZhY2UgYW55IGNhbGwgdG8gd2dldCB3aXRoIHRoZSBhd2FpdCBrZXl3b3JkIChsaWtlIHlvdSB3b3VsZCBoYWNrIG9yIHNsZWVwKS5cXG4gICAgKiB3Z2V0IHdpbGwgc3RpbGwgd29yayBpbiBOZXRzY3JpcHQgMS4wLCBidXQgdGhlIGZ1bmN0aW9ucyBleGVjdXRpb24gd2lsbCBub3QgYmUgc3luY2hyb25vdXNcXG4gICAgKiAoaS5lLiBpdCBtYXkgbm90IGV4ZWN1dGUgd2hlbiB5b3UgZXhwZWN0L3dhbnQgaXQgdG8pLlxcbiAgICAqIEZ1cnRoZXJtb3JlLCBzaW5jZSBQcm9taXNlcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBFUzUsXFxuICAgICogeW91IHdpbGwgbm90IGJlIGFibGUgdG8gcHJvY2VzcyB0aGUgcmV0dXJuZWQgdmFsdWUgb2Ygd2dldCBpbiBOZXRzY3JpcHQgMS4wLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB3Z2V0KFxcXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGFuaWVseXhpZS9iaXRidXJuZXIvbWFzdGVyL1JFQURNRS5tZFxcXCIsIFxcXCJnYW1lX3JlYWRtZS50eHRcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGF3YWl0IG5zLndnZXQoXFxcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYW5pZWx5eGllL2JpdGJ1cm5lci9tYXN0ZXIvUkVBRE1FLm1kXFxcIiwgXFxcImdhbWVfcmVhZG1lLnR4dFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSB1cmwgLSBVUkwgdG8gcHVsbCBkYXRhIGZyb20uXFxuICAgICogQHBhcmFtIHRhcmdldCAtIEZpbGVuYW1lIHRvIHdyaXRlIGRhdGEgdG8uIE11c3QgYmUgc2NyaXB0IG9yIHRleHQgZmlsZS5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIE9wdGlvbmFsIGhvc3RuYW1lL2lwIG9mIHNlcnZlciBmb3IgdGFyZ2V0IGZpbGUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgZGF0YSB3YXMgc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCBmcm9tIHRoZSBVUkwsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB3Z2V0KHVybDogc3RyaW5nLCB0YXJnZXQ6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBGYWN0aW9uIGZhdm9yIHJlcXVpcmVkIHRvIGJlIGFibGUgdG8gZG9uYXRlIHRvIGEgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgRmFjdGlvbiBmYXZvciByZXF1aXJlZCB0byBiZSBhYmxlIHRvIGRvbmF0ZSB0byBhIGZhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0RmF2b3JUb0RvbmF0ZSgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCBCaXRub2RlIG11bHRpcGxpZXJzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGN1cnJlbnQgQml0Tm9kZSBtdWx0aXBsaWVycy5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJlcXVpcmVzIHlvdSB0byBiZSBpbiBCaXRub2RlIDUgb3IgaGF2ZSBTb3VyY2UtRmlsZSA1IGluIG9yZGVyIHRvIHJ1bi5cXG4gICAgKiBUaGUgbXVsdGlwbGllcnMgYXJlIHJldHVybmVkIGluIGRlY2ltYWwgZm9ybXMgKGUuZy4gMS41IGluc3RlYWQgb2YgMTUwJSkuXFxuICAgICogVGhlIG11bHRpcGxpZXJzIHJlcHJlc2VudCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBjdXJyZW50IEJpdE5vZGUgYW5kXFxuICAgICogdGhlIG9yaWdpbmFsIEJpdE5vZGUgKEJpdE5vZGUtMSkuXFxuICAgICpcXG4gICAgKiBGb3IgZXhhbXBsZSwgaWYgdGhlIENyaW1lTW9uZXkgbXVsdGlwbGllciBoYXMgYSB2YWx1ZSBvZiAwLjEsIHRoZW4gdGhhdCBtZWFuc1xcbiAgICAqIHRoYXQgY29tbWl0dGluZyBjcmltZXMgaW4gdGhlIGN1cnJlbnQgQml0Tm9kZSB3aWxsIG9ubHkgZ2l2ZSAxMCUgb2YgdGhlIG1vbmV5XFxuICAgICogeW91IHdvdWxkIGhhdmUgcmVjZWl2ZWQgaW4gQml0Tm9kZS0xLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB2YXIgbXVsdHMgPSBnZXRCaXROb2RlTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChtdWx0cy5TZXJ2ZXJNYXhNb25leSk7XFxuICAgICogcHJpbnQobXVsdHMuSGFja0V4cEdhaW4pO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogY29uc3Qge1NlcnZlck1heE1vbmV5LCBIYWNrRXhwR2Fpbn0gPSBucy5nZXRCaXROb2RlTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChTZXJ2ZXJNYXhNb25leSk7XFxuICAgICogcHJpbnQoSGFja0V4cEdhaW4pO1xcbiAgICAqIGBgYFxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIHRoZSBjdXJyZW50IEJpdE5vZGUgbXVsdGlwbGllcnMuXFxuICAgICovXFxuICAgZ2V0Qml0Tm9kZU11bHRpcGxpZXJzKCk6IEJpdE5vZGVNdWx0aXBsaWVycztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGEgbGlzdCBvZiBhY3F1aXJlZCBTb3VyY2UtRmlsZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzb3VyY2UgZmlsZXNcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgYW4gb2JqZWN0IHdpdGggbnVtYmVyIGFuZCBsZXZlbCBvZiB0aGUgc291cmNlIGZpbGUuXFxuICAgICovXFxuICAgZ2V0T3duZWRTb3VyY2VGaWxlcygpOiBTb3VyY2VGaWxlTHZsW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGxheWVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvbiBvbiB0aGUgY3VycmVudCBwbGF5ZXIuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBQbGF5ZXIgaW5mb1xcbiAgICAqL1xcbiAgIGdldFBsYXllcigpOiBQbGF5ZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEFkZCBjYWxsYmFjayBmdW5jdGlvbiB3aGVuIHRoZSBzY3JpcHQgZGllc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIE5TMiBleGNsdXNpdmVcXG4gICAgKlxcbiAgICAqIEFkZCBjYWxsYmFjayB0byBiZSBleGVjdXRlZCB3aGVuIHRoZSBzY3JpcHQgZGllcy5cXG4gICAgKi9cXG4gICBhdEV4aXQoZjogKCkgPT4gdm9pZCk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIE1vdmUgYSBmaWxlIG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIE5TMiBleGNsdXNpdmVcXG4gICAgKlxcbiAgICAqIE1vdmUgdGhlIHNvdXJjZSBmaWxlIHRvIHRoZSBzcGVjaWZpZWQgZGVzdGluYXRpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBUaGlzIGNvbW1hbmQgb25seSB3b3JrcyBmb3Igc2NyaXB0cyBhbmQgdGV4dCBmaWxlcyAoLnR4dCkuIEl0IGNhbm5vdCwgaG93ZXZlciwgIGJlIHVzZWRcXG4gICAgKiB0byBjb252ZXJ0IGZyb20gc2NyaXB0IHRvIHRleHQgZmlsZSwgb3IgdmljZSB2ZXJzYS5cXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgdXNlZCB0byByZW5hbWUgZmlsZXMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gc291cmNlIC0gRmlsZW5hbWUgb2YgdGhlIHNvdXJjZSBmaWxlLlxcbiAgICAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIEZpbGVuYW1lIG9mIHRoZSBkZXN0aW5hdGlvbiBmaWxlLlxcbiAgICAqL1xcbiAgIG12KGhvc3Q6IHN0cmluZywgc291cmNlOiBzdHJpbmcsIGRlc3RpbmF0aW9uOiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBQYXJzZSBjb21tYW5kIGxpbmUgZmxhZ3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQWxsb3dzIHVuaXggbGlrZSBmbGFnIHBhcnNpbmcuXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIGV4YW1wbGUuc2NyaXB0XFxuICAgICogdmFyIGRhdGEgPSBmbGFncyhbXFxuICAgICogICAgIFsnZGVsYXknLCAwXSwgLy8gYSBkZWZhdWx0IG51bWJlciBtZWFucyB0aGlzIGZsYWcgaXMgYSBudW1iZXJcXG4gICAgKiAgICAgWydzZXJ2ZXInLCAnZm9vZG5zdHVmZiddLCAvLyAgYSBkZWZhdWx0IHN0cmluZyBtZWFucyB0aGlzIGZsYWcgaXMgYSBzdHJpbmdcXG4gICAgKiAgICAgWydleGNsdWRlJywgW11dLCAvLyBhIGRlZmF1bHQgYXJyYXkgbWVhbnMgdGhpcyBmbGFnIGlzIGEgZGVmYXVsdCBhcnJheSBvZiBzdHJpbmdcXG4gICAgKiAgICAgWydoZWxwJywgZmFsc2VdLCAvLyBhIGRlZmF1bHQgYm9vbGVhbiBtZWFucyB0aGlzIGZsYWcgaXMgYSBib29sZWFuXFxuICAgICogXSk7XFxuICAgICogdHByaW50KGRhdGEpO1xcbiAgICAqXFxuICAgICogLy8gZXhhbXBsZS5uc1xcbiAgICAqIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgICogICBjb25zdCBkYXRhID0gbnMuZmxhZ3MoW1xcbiAgICAqICAgICBbJ2RlbGF5JywgMF0sIC8vIGEgZGVmYXVsdCBudW1iZXIgbWVhbnMgdGhpcyBmbGFnIGlzIGEgbnVtYmVyXFxuICAgICogICAgIFsnc2VydmVyJywgJ2Zvb2Ruc3R1ZmYnXSwgLy8gIGEgZGVmYXVsdCBzdHJpbmcgbWVhbnMgdGhpcyBmbGFnIGlzIGEgc3RyaW5nXFxuICAgICogICAgIFsnZXhjbHVkZScsIFtdXSwgLy8gYSBkZWZhdWx0IGFycmF5IG1lYW5zIHRoaXMgZmxhZyBpcyBhIGRlZmF1bHQgYXJyYXkgb2Ygc3RyaW5nXFxuICAgICogICAgIFsnaGVscCcsIGZhbHNlXSwgLy8gYSBkZWZhdWx0IGJvb2xlYW4gbWVhbnMgdGhpcyBmbGFnIGlzIGEgYm9vbGVhblxcbiAgICAqICAgXSk7XFxuICAgICogICBucy50cHJpbnQoZGF0YSk7XFxuICAgICogfVxcbiAgICAqXFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHRcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJkZWxheVxcXCI6MCxcXFwic2VydmVyXFxcIjpcXFwiZm9vZG5zdHVmZlxcXCIsXFxcImV4Y2x1ZGVcXFwiOltdLFxcXCJoZWxwXFxcIjpmYWxzZX1cXG4gICAgKiAvLyBbaG9tZSB+L10+IHJ1biBleGFtcGxlLnNjcmlwdCAtLWRlbGF5IDMwMDBcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJzZXJ2ZXJcXFwiOlxcXCJmb29kbnN0dWZmXFxcIixcXFwiZXhjbHVkZVxcXCI6W10sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMH1cXG4gICAgKiAvLyBbaG9tZSB+L10+IHJ1biBleGFtcGxlLnNjcmlwdCAtLWRlbGF5IDMwMDAgLS1zZXJ2ZXIgaGFyYWtpcmktc3VzaGlcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJleGNsdWRlXFxcIjpbXSxcXFwiaGVscFxcXCI6ZmFsc2UsXFxcImRlbGF5XFxcIjozMDAwLFxcXCJzZXJ2ZXJcXFwiOlxcXCJoYXJha2lyaS1zdXNoaVxcXCJ9XFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHQgLS1kZWxheSAzMDAwIC0tc2VydmVyIGhhcmFraXJpLXN1c2hpIGhlbGxvIHdvcmxkXFxuICAgICogLy8ge1xcXCJfXFxcIjpbXFxcImhlbGxvXFxcIixcXFwid29ybGRcXFwiXSxcXFwiZXhjbHVkZVxcXCI6W10sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMCxcXFwic2VydmVyXFxcIjpcXFwiaGFyYWtpcmktc3VzaGlcXFwifVxcbiAgICAqIC8vIFtob21lIH4vXT4gcnVuIGV4YW1wbGUuc2NyaXB0IC0tZGVsYXkgMzAwMCAtLXNlcnZlciBoYXJha2lyaS1zdXNoaSBoZWxsbyB3b3JsZCAtLWV4Y2x1ZGUgYSAtLWV4Y2x1ZGUgYlxcbiAgICAqIC8vIHtcXFwiX1xcXCI6W1xcXCJoZWxsb1xcXCIsXFxcIndvcmxkXFxcIl0sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMCxcXFwic2VydmVyXFxcIjpcXFwiaGFyYWtpcmktc3VzaGlcXFwiLFxcXCJleGNsdWRlXFxcIjpbXFxcImFcXFwiLFxcXCJiXFxcIl19XFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHQgLS1oZWxwXFxuICAgICogLy8ge1xcXCJfXFxcIjpbXSxcXFwiZGVsYXlcXFwiOjAsXFxcInNlcnZlclxcXCI6XFxcImZvb2Ruc3R1ZmZcXFwiLFxcXCJleGNsdWRlXFxcIjpbXSxcXFwiaGVscFxcXCI6dHJ1ZX1cXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBmbGFncyhzY2hlbWE6IFtzdHJpbmcsIHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmdbXV1bXSk6IGFueTtcXG4gXFxuICAgLyoqXFxuICAgICogU2hhcmUgeW91ciBjb21wdXRlciB3aXRoIHlvdXIgZmFjdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi40IEdCXFxuICAgICpcXG4gICAgKiBJbmNyZWFzZXMgeW91ciByZXAgZ2FpbiBvZiBoYWNraW5nIGNvbnRyYWN0cyB3aGlsZSBzaGFyZSBpcyBjYWxsZWQuXFxuICAgICogU2NhbGVzIHdpdGggdGhyZWFkIGNvdW50LlxcbiAgICAqL1xcbiAgIHNoYXJlKCk6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB5b3VyIHNoYXJlIHBvd2VyLiBCYXNlZCBvbiBhbGwgdGhlIGFjdGl2ZSBzaGFyZSBjYWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjIgR0JcXG4gICAgKi9cXG4gICBnZXRTaGFyZVBvd2VyKCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvcnBvcmF0aW9uIE9mZmljZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogUmVxdWlyZXMgdGhlIE9mZmljZSBBUEkgdXBncmFkZSBmcm9tIHlvdXIgY29ycG9yYXRpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgT2ZmaWNlQVBJIHtcXG4gICAvKipcXG4gICAgKiBBc3NpZ24gYW4gZW1wbG95ZWUgdG8gYSBqb2IuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBlbXBsb3llZU5hbWUgLSBuYW1lIG9mIHRoZSBlbXBsb3llZVxcbiAgICAqIEBwYXJhbSBqb2IgLSBOYW1lIG9mIHRoZSBqb2IuXFxuICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgaXMgZnVsZmlsbGVkIHdoZW4gdGhlIGFzc2lnbm1lbnQgaXMgY29tcGxldGUuXFxuICAgICovXFxuICAgYXNzaWduSm9iKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBlbXBsb3llZU5hbWU6IHN0cmluZywgam9iOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xcbiAgIC8qKlxcbiAgICAqIEhpcmUgYW4gZW1wbG95ZWUuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIFRoZSBuZXdseSBoaXJlZCBlbXBsb3llZSwgaWYgYW55XFxuICAgICovXFxuICAgaGlyZUVtcGxveWVlKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nKTogRW1wbG95ZWUgfCB1bmRlZmluZWQ7XFxuICAgLyoqXFxuICAgICogVXBncmFkZSBvZmZpY2Ugc2l6ZS5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHNpemUgLSBBbW91bnQgb2YgcG9zaXRpb25zIHRvIG9wZW5cXG4gICAgKi9cXG4gICB1cGdyYWRlT2ZmaWNlU2l6ZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgc2l6ZTogbnVtYmVyKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBUaHJvdyBhIHBhcnR5IGZvciB5b3VyIGVtcGxveWVlc1xcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gY29zdFBlckVtcGxveWVlIC0gQW1vdW50IHRvIHNwZW5kIHBlciBlbXBsb3llZS5cXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgaGFwcGluZXNzIGluY3JlYXNlZC5cXG4gICAgKi9cXG4gICB0aHJvd1BhcnR5KGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBjb3N0UGVyRW1wbG95ZWU6IG51bWJlcik6IFByb21pc2U8bnVtYmVyPjtcXG4gICAvKipcXG4gICAgKiBCdXkgY29mZmVlIGZvciB5b3VyIGVtcGxveWVlc1xcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2hlbiB0aGUgY29mZmVlIGlzIHNlcnZlZC5cXG4gICAgKi9cXG4gICBidXlDb2ZmZWUoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xcbiAgIC8qKlxcbiAgICAqIEhpcmUgQWRWZXJ0LlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqL1xcbiAgIGhpcmVBZFZlcnQoZGl2aXNpb25OYW1lOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgcmVzZWFyY2hcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcmVzZWFyY2hOYW1lIC0gTmFtZSBvZiB0aGUgcmVzZWFyY2hcXG4gICAgKi9cXG4gICByZXNlYXJjaChkaXZpc2lvbk5hbWU6IHN0cmluZywgcmVzZWFyY2hOYW1lOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIEdldCBkYXRhIGFib3V0IGFuIG9mZmljZVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcmV0dXJucyBPZmZpY2UgZGF0YVxcbiAgICAqL1xcbiAgIGdldE9mZmljZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IE9mZmljZTtcXG4gICAvKipcXG4gICAgKiBHZXQgZGF0YSBhYm91dCBhbiBlbXBsb3llZVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gZW1wbG95ZWVOYW1lIC0gTmFtZSBvZiB0aGUgZW1wbG95ZWVcXG4gICAgKiBAcmV0dXJucyBFbXBsb3llZSBkYXRhXFxuICAgICovXFxuICAgZ2V0RW1wbG95ZWUoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIGVtcGxveWVlTmFtZTogc3RyaW5nKTogRW1wbG95ZWU7XFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjb3N0IHRvIEhpcmUgQWRWZXJ0XFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHJldHVybnMgQ29zdFxcbiAgICAqL1xcbiAgIGdldEhpcmVBZFZlcnRDb3N0KGRpdmlzaW9uTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIHRpbWVzIHlvdSBoYXZlIEhpcmVkIEFkVmVydFxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiB0aW1lcyB5b3UgaGF2ZSBIaXJlZCBBZFZlcnRcXG4gICAgKi9cXG4gICBnZXRIaXJlQWRWZXJ0Q291bnQoYWRpdmlzaW9uTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY29zdCB0byB1bmxvY2sgcmVzZWFyY2hcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldFJlc2VhcmNoQ29zdChkaXZpc2lvbk5hbWU6IHN0cmluZywgcmVzZWFyY2hOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0cyBpZiB5b3UgaGF2ZSB1bmxvY2tlZCBhIHJlc2VhcmNoXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIHRydWUgaXMgdW5sb2NrZWQsIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGhhc1Jlc2VhcmNoZWQoZGl2aXNpb25OYW1lOiBzdHJpbmcsIHJlc2VhcmNoTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gICAvKipcXG4gICAgKiBTZXQgdGhlIGF1dG8gam9iIGFzc2lnbm1lbnQgZm9yIGEgam9iXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBqb2IgLSBOYW1lIG9mIHRoZSBqb2JcXG4gICAgKiBAcGFyYW0gYW1vdW50IC0gTnVtYmVyIG9mIGVtcGxveWVlcyB0byBhc3NpZ24gdG8gdGhhdCBqb2JcXG4gICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2hlbiB0aGUgYXNzaWdubWVudCBpcyBjb21wbGV0ZS5cXG4gICAgKi9cXG4gICBzZXRBdXRvSm9iQXNzaWdubWVudChkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgam9iOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyKTogUHJvbWlzZTxib29sZWFuPjtcXG4gICAvKipcXG4gICAgKiBDb3N0IHRvIFVwZ3JhZGUgb2ZmaWNlIHNpemUuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBzaXplIC0gQW1vdW50IG9mIHBvc2l0aW9ucyB0byBvcGVuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIG9mZmljZVxcbiAgICAqL1xcbiAgIGdldE9mZmljZVNpemVVcGdyYWRlQ29zdChkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgYXNpemU6IG51bWJlcik6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvcnBvcmF0aW9uIFdhcmVob3VzZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogUmVxdWlyZXMgdGhlIFdhcmVob3VzZSBBUEkgdXBncmFkZSBmcm9tIHlvdXIgY29ycG9yYXRpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgV2FyZWhvdXNlQVBJIHtcXG4gICAvKipcXG4gICAgKiBTZXQgbWF0ZXJpYWwgc2VsbCBkYXRhLlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gYW10IC0gQW1vdW50IHRvIHNlbGwsIGNhbiBiZSBcXFwiTUFYXFxcIlxcbiAgICAqIEBwYXJhbSBwcmljZSAtIFByaWNlIHRvIHNlbGwsIGNhbiBiZSBcXFwiTVBcXFwiXFxuICAgICovXFxuICAgc2VsbE1hdGVyaWFsKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBtYXRlcmlhbE5hbWU6IHN0cmluZywgYW10OiBzdHJpbmcsIHByaWNlOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBwcm9kdWN0IHNlbGwgZGF0YS5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBhbXQgLSBBbW91bnQgdG8gc2VsbCwgY2FuIGJlIFxcXCJNQVhcXFwiXFxuICAgICogQHBhcmFtIHByaWNlIC0gUHJpY2UgdG8gc2VsbCwgY2FuIGJlIFxcXCJNUFxcXCJcXG4gICAgKiBAcGFyYW0gYWxsIC0gU2VsbCBpbiBhbGwgY2l0eVxcbiAgICAqL1xcbiAgIHNlbGxQcm9kdWN0KFxcbiAgICAgZGl2aXNpb25OYW1lOiBzdHJpbmcsXFxuICAgICBjaXR5TmFtZTogc3RyaW5nLFxcbiAgICAgcHJvZHVjdE5hbWU6IHN0cmluZyxcXG4gICAgIGFtdDogc3RyaW5nLFxcbiAgICAgcHJpY2U6IHN0cmluZyxcXG4gICAgIGFsbDogYm9vbGVhbixcXG4gICApOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIERpc2NvbnRpbnVlIGEgcHJvZHVjdC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICovXFxuICAgZGlzY29udGludWVQcm9kdWN0KGRpdmlzaW9uTmFtZTogc3RyaW5nLCBwcm9kdWN0TmFtZTogc3RyaW5nKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBTZXQgc21hcnQgc3VwcGx5XFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBlbmFibGVkIC0gc21hcnQgc3VwcGx5IGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRTbWFydFN1cHBseShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgZW5hYmxlZDogYm9vbGVhbik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogU2V0IG1hdGVyaWFsIGJ1eSBkYXRhXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBtYXRlcmlhbE5hbWUgLSBOYW1lIG9mIHRoZSBtYXRlcmlhbFxcbiAgICAqIEBwYXJhbSBhbXQgLSBBbW91bnQgb2YgbWF0ZXJpYWwgdG8gYnV5XFxuICAgICovXFxuICAgYnV5TWF0ZXJpYWwoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIG1hdGVyaWFsTmFtZTogc3RyaW5nLCBhbXQ6IG51bWJlcik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogR2V0IHdhcmVob3VzZSBkYXRhXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIHdhcmVob3VzZSBkYXRhXFxuICAgICovXFxuICAgZ2V0V2FyZWhvdXNlKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nKTogV2FyZWhvdXNlO1xcbiAgIC8qKlxcbiAgICAqIEdldCBwcm9kdWN0IGRhdGFcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICogQHJldHVybnMgcHJvZHVjdCBkYXRhXFxuICAgICovXFxuICAgZ2V0UHJvZHVjdChkaXZpc2lvbk5hbWU6IHN0cmluZywgcHJvZHVjdE5hbWU6IHN0cmluZyk6IFByb2R1Y3Q7XFxuICAgLyoqXFxuICAgICogR2V0IG1hdGVyaWFsIGRhdGFcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcmV0dXJucyBtYXRlcmlhbCBkYXRhXFxuICAgICovXFxuICAgZ2V0TWF0ZXJpYWwoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIG1hdGVyaWFsTmFtZTogc3RyaW5nKTogTWF0ZXJpYWw7XFxuICAgLyoqXFxuICAgICogU2V0IG1hcmtldCBUQSAxIGZvciBhIG1hdGVyaWFsLlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gb24gLSBtYXJrZXQgdGEgZW5hYmxlZFxcbiAgICAqL1xcbiAgIHNldE1hdGVyaWFsTWFya2V0VEExKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBtYXRlcmlhbE5hbWU6IHN0cmluZywgb246IGJvb2xlYW4pOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBtYXJrZXQgVEEgMiBmb3IgYSBtYXRlcmlhbC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIG1hdGVyaWFsTmFtZSAtIE5hbWUgb2YgdGhlIG1hdGVyaWFsXFxuICAgICogQHBhcmFtIG9uIC0gbWFya2V0IHRhIGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRNYXRlcmlhbE1hcmtldFRBMihkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgbWF0ZXJpYWxOYW1lOiBzdHJpbmcsIG9uOiBib29sZWFuKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBTZXQgbWFya2V0IFRBIDEgZm9yIGEgcHJvZHVjdC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICogQHBhcmFtIG9uIC0gbWFya2V0IHRhIGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRQcm9kdWN0TWFya2V0VEExKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBwcm9kdWN0TmFtZTogc3RyaW5nLCBvbjogYm9vbGVhbik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogU2V0IG1hcmtldCBUQSAyIGZvciBhIHByb2R1Y3QuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBvbiAtIG1hcmtldCB0YSBlbmFibGVkXFxuICAgICovXFxuICAgc2V0UHJvZHVjdE1hcmtldFRBMihkaXZpc2lvbk5hbWU6IHN0cmluZywgcHJvZHVjdE5hbWU6IHN0cmluZywgb246IGJvb2xlYW4pOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBtYXRlcmlhbCBleHBvcnQgZGF0YVxcbiAgICAqIEBwYXJhbSBzb3VyY2VEaXZpc2lvbiAtIFNvdXJjZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBzb3VyY2VDaXR5IC0gU291cmNlIGNpdHlcXG4gICAgKiBAcGFyYW0gdGFyZ2V0RGl2aXNpb24gLSBUYXJnZXQgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gdGFyZ2V0Q2l0eSAtIFRhcmdldCBjaXR5XFxuICAgICogQHBhcmFtIG1hdGVyaWFsTmFtZSAtIE5hbWUgb2YgdGhlIG1hdGVyaWFsXFxuICAgICogQHBhcmFtIGFtdCAtIEFtb3VudCBvZiBtYXRlcmlhbCB0byBleHBvcnQuXFxuICAgICovXFxuICAgZXhwb3J0TWF0ZXJpYWwoXFxuICAgICBzb3VyY2VEaXZpc2lvbjogc3RyaW5nLFxcbiAgICAgc291cmNlQ2l0eTogc3RyaW5nLFxcbiAgICAgdGFyZ2V0RGl2aXNpb246IHN0cmluZyxcXG4gICAgIHRhcmdldENpdHk6IHN0cmluZyxcXG4gICAgIG1hdGVyaWFsTmFtZTogc3RyaW5nLFxcbiAgICAgYW10OiBudW1iZXIsXFxuICAgKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBDYW5jZWwgbWF0ZXJpYWwgZXhwb3J0XFxuICAgICogQHBhcmFtIHNvdXJjZURpdmlzaW9uIC0gU291cmNlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIHNvdXJjZUNpdHkgLSBTb3VyY2UgY2l0eVxcbiAgICAqIEBwYXJhbSB0YXJnZXREaXZpc2lvbiAtIFRhcmdldCBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSB0YXJnZXRDaXR5IC0gVGFyZ2V0IGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gYW10IC0gQW1vdW50IG9mIG1hdGVyaWFsIHRvIGV4cG9ydC5cXG4gICAgKi9cXG4gICBjYW5jZWxFeHBvcnRNYXRlcmlhbChcXG4gICAgIHNvdXJjZURpdmlzaW9uOiBzdHJpbmcsXFxuICAgICBzb3VyY2VDaXR5OiBzdHJpbmcsXFxuICAgICB0YXJnZXREaXZpc2lvbjogc3RyaW5nLFxcbiAgICAgdGFyZ2V0Q2l0eTogc3RyaW5nLFxcbiAgICAgbWF0ZXJpYWxOYW1lOiBzdHJpbmcsXFxuICAgICBhbXQ6IG51bWJlcixcXG4gICApOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIHdhcmVob3VzZSBmb3IgYSBuZXcgY2l0eVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKi9cXG4gICBwdXJjaGFzZVdhcmVob3VzZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogVXBncmFkZSB3YXJlaG91c2VcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICovXFxuICAgdXBncmFkZVdhcmVob3VzZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgbmV3IHByb2R1Y3RcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBkZXNpZ25JbnZlc3QgLSBBbW91bnQgdG8gaW52ZXN0IGZvciB0aGUgZGVzaWduIG9mIHRoZSBwcm9kdWN0LlxcbiAgICAqIEBwYXJhbSBtYXJrZXRpbmdJbnZlc3QgLSBBbW91bnQgdG8gaW52ZXN0IGZvciB0aGUgbWFya2V0aW5nIG9mIHRoZSBwcm9kdWN0LlxcbiAgICAqL1xcbiAgIG1ha2VQcm9kdWN0KFxcbiAgICAgZGl2aXNpb25OYW1lOiBzdHJpbmcsXFxuICAgICBjaXR5TmFtZTogc3RyaW5nLFxcbiAgICAgcHJvZHVjdE5hbWU6IHN0cmluZyxcXG4gICAgIGRlc2lnbkludmVzdDogbnVtYmVyLFxcbiAgICAgbWFya2V0aW5nSW52ZXN0OiBudW1iZXIsXFxuICAgKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIHB1cmNoYXNlIGEgd2FyZWhvdXNlXFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlV2FyZWhvdXNlQ29zdCgpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0cyB0aGUgY29zdCB0byB1cGdyYWRlIGEgd2FyZWhvdXNlIHRvIHRoZSBuZXh0IGxldmVsXFxuICAgICogQHJldHVybnMgY29zdCB0byB1cGdyYWRlXFxuICAgICovXFxuICAgZ2V0VXBncmFkZVdhcmVob3VzZUNvc3QoYWRpdmlzaW9uTmFtZTogYW55LCBhY2l0eU5hbWU6IGFueSk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB5b3UgaGF2ZSBhIHdhcmVob3VzZSBpbiBjaXR5XFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB3YXJlaG91c2UgaXMgcHJlc2VudCwgZmFsc2UgaWYgbm90XFxuICAgICovXFxuICAgaGFzV2FyZWhvdXNlKGFkaXZpc2lvbk5hbWU6IGFueSwgYWNpdHlOYW1lOiBhbnkpOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gQVBJXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQ29ycG9yYXRpb24gZXh0ZW5kcyBXYXJlaG91c2VBUEksIE9mZmljZUFQSSB7XFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgQ29ycG9yYXRpb25cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gc2VsZkZ1bmQgLSBJZiB5b3Ugc2hvdWxkIHNlbGYgZnVuZCwgZGVmYXVsdHMgdG8gdHJ1ZSwgZmFsc2Ugd2lsbCBvbmx5IHdvcmsgb24gQml0bm9kZSAzXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiBjcmVhdGVkIGFuZCBmYWxzZSBpZiBub3RcXG4gICAgKi9cXG4gICBjcmVhdGVDb3Jwb3JhdGlvbihjb3Jwb3JhdGlvbk5hbWU6IHN0cmluZywgc2VsZkZ1bmQ6IGJvb2xlYW4pOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdSBoYXZlIGEgb25lIHRpbWUgdW5sb2NrYWJsZSB1cGdyYWRlXFxuICAgICogQHBhcmFtIHVwZ3JhZGVOYW1lIC0gTmFtZSBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgdW5sb2NrZWQgYW5kIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGhhc1VubG9ja1VwZ3JhZGUodXBncmFkZU5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuICAgLyoqXFxuICAgICogR2V0cyB0aGUgY29zdCB0byB1bmxvY2sgYSBvbmUgdGltZSB1bmxvY2thYmxlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICogQHJldHVybnMgY29zdCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVubG9ja1VwZ3JhZGVDb3N0KHVwZ3JhZGVOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBsZXZlbCBvZiBhIGxldmVsYWJsZSB1cGdyYWRlXFxuICAgICogQHBhcmFtIHVwZ3JhZGVOYW1lIC0gTmFtZSBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIHRoZSBsZXZlbCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVwZ3JhZGVMZXZlbCh1cGdyYWRlTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldHMgdGhlIGNvc3QgdG8gdW5sb2NrIHRoZSBuZXh0IGxldmVsIG9mIGEgbGV2ZWxhYmxlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICogQHJldHVybnMgY29zdCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVwZ3JhZGVMZXZlbENvc3QodXBncmFkZU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIGV4cGFuZCBpbnRvIGEgbmV3IGluZHVzdHJ5XFxuICAgICogQHBhcmFtIGluZHVzdHJ5TmFtZSAtIE5hbWUgb2YgdGhlIGluZHVzdHJ5XFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldEV4cGFuZEluZHVzdHJ5Q29zdChpbmR1c3RyeU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIGV4cGFuZCBpbnRvIGEgbmV3IGNpdHlcXG4gICAgKiBAcmV0dXJucyBjb3N0XFxuICAgICovXFxuICAgZ2V0RXhwYW5kQ2l0eUNvc3QoKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCBhbiBvZmZlciBmb3IgaW52ZXN0bWVudCBiYXNlZCBvbiB5b3UgY29tcGFuaWVzIGN1cnJlbnQgdmFsdWF0aW9uXFxuICAgICogQHJldHVybnMgQW4gb2ZmZXIgb2YgaW52ZXN0bWVudFxcbiAgICAqL1xcbiAgIGdldEludmVzdG1lbnRPZmZlcigpOiBJbnZlc3RtZW50T2ZmZXI7XFxuICAgLyoqXFxuICAgICogQWNjZXB0IGludmVzdG1lbnQgYmFzZWQgb24geW91IGNvbXBhbmllcyBjdXJyZW50IHZhbHVhdGlvblxcbiAgICAqIEByZW1hcmtzXFxuICAgICogSXMgYmFzZWQgb24gY3VycmVudCB2YWx1YXRpb24gYW5kIHdpbGwgbm90IGhvbmVyIGEgc3BlY2lmaWMgT2ZmZXJcXG4gICAgKiBAcmV0dXJucyBBbiBvZmZlciBvZiBpbnZlc3RtZW50XFxuICAgICovXFxuICAgYWNjZXB0SW52ZXN0bWVudE9mZmVyKCk6IGJvb2xlYW47XFxuICAgLyoqXFxuICAgICogR28gcHVibGljXFxuICAgICogQHBhcmFtIG51bVNoYXJlcyAtIG51bWJlciBvZiBzaGFyZXMgeW91IHdvdWxkIGxpa2UgdG8gaXNzdWUgZm9yIHlvdXIgSVBPXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGdvIHB1YmxpYywgZmFsc2UgaWYgbm90XFxuICAgICovXFxuICAgZ29QdWJsaWMobnVtU2hhcmVzOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEJyaWJlIGEgZmFjdGlvblxcbiAgICAqIEBwYXJhbSBmYWN0aW9uTmFtZSAtIEZhY3Rpb24gbmFtZVxcbiAgICAqIEBwYXJhbSBhbW91bnRDYXNoIC0gQW1vdW50IG9mIG1vbmV5IHRvIGJyaWJlXFxuICAgICogQHBhcmFtIGFtb3VudFNoYXJlcyAtIEFtb3VudCBvZiBzaGFyZXMgdG8gYnJpYmVcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHN1Y2Nlc3NmdWwsIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGJyaWJlKGZhY3Rpb25OYW1lOiBzdHJpbmcsIGFtb3VudENhc2g6IG51bWJlciwgYW1vdW50U2hhcmVzOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEdldCBjb3Jwb3JhdGlvbiBkYXRhXFxuICAgICogQHJldHVybnMgQ29ycG9yYXRpb24gZGF0YVxcbiAgICAqL1xcbiAgIGdldENvcnBvcmF0aW9uKCk6IENvcnBvcmF0aW9uSW5mbztcXG4gICAvKipcXG4gICAgKiBHZXQgZGl2aXNpb24gZGF0YVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEByZXR1cm5zIERpdmlzaW9uIGRhdGFcXG4gICAgKi9cXG4gICBnZXREaXZpc2lvbihkaXZpc2lvbk5hbWU6IHN0cmluZyk6IERpdmlzaW9uO1xcbiAgIC8qKlxcbiAgICAqIEV4cGFuZCB0byBhIG5ldyBpbmR1c3RyeVxcbiAgICAqIEBwYXJhbSBpbmR1c3RyeVR5cGUgLSBOYW1lIG9mIHRoZSBpbmR1c3RyeVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqL1xcbiAgIGV4cGFuZEluZHVzdHJ5KGluZHVzdHJ5VHlwZTogc3RyaW5nLCBkaXZpc2lvbk5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogRXhwYW5kIHRvIGEgbmV3IGNpdHlcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICovXFxuICAgZXhwYW5kQ2l0eShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogVW5sb2NrIGFuIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICovXFxuICAgdW5sb2NrVXBncmFkZSh1cGdyYWRlTmFtZTogc3RyaW5nKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBMZXZlbCBhbiB1cGdyYWRlLlxcbiAgICAqIEBwYXJhbSB1cGdyYWRlTmFtZSAtIE5hbWUgb2YgdGhlIHVwZ3JhZGVcXG4gICAgKi9cXG4gICBsZXZlbFVwZ3JhZGUodXBncmFkZU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogSXNzdWUgZGl2aWRlbmRzXFxuICAgICogQHBhcmFtIHBlcmNlbnQgLSBQZXJjZW50IG9mIHByb2ZpdCB0byBpc3N1ZSBhcyBkaXZpZGVuZHMuXFxuICAgICovXFxuICAgaXNzdWVEaXZpZGVuZHMocGVyY2VudDogbnVtYmVyKTogdm9pZDtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdlbmVyYWwgaW5mbyBhYm91dCBhIGNvcnBvcmF0aW9uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBDb3Jwb3JhdGlvbkluZm8ge1xcbiAgIC8qKiBOYW1lIG9mIHRoZSBjb3Jwb3JhdGlvbiAqL1xcbiAgIG5hbWU6IHN0cmluZztcXG4gICAvKiogRnVuZHMgYXZhaWxhYmxlICovXFxuICAgZnVuZHM6IG51bWJlcjtcXG4gICAvKiogUmV2ZW51ZSBwZXIgc2Vjb25kIHRoaXMgY3ljbGUgKi9cXG4gICByZXZlbnVlOiBudW1iZXI7XFxuICAgLyoqIEV4cGVuc2VzIHBlciBzZWNvbmQgdGhpcyBjeWNsZSAqL1xcbiAgIGV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIEluZGljYXRpbmcgaWYgdGhlIGNvbXBhbnkgaXMgcHVibGljICovXFxuICAgcHVibGljOiBib29sZWFuO1xcbiAgIC8qKiBUb3RhbCBudW1iZXIgb2Ygc2hhcmVzIGlzc3VlcyBieSB0aGlzIGNvcnBvcmF0aW9uICovXFxuICAgdG90YWxTaGFyZXM6IG51bWJlcjtcXG4gICAvKiogQW1vdW50IG9mIHNoYXJlIG93bmVkICovXFxuICAgbnVtU2hhcmVzOiBudW1iZXI7XFxuICAgLyoqIENvb2xkb3duIHVudGlsIHNoYXJlcyBjYW4gYmUgc29sZCBhZ2FpbiAqL1xcbiAgIHNoYXJlU2FsZUNvb2xkb3duOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBzaGFyZXMgaXNzdWVkICovXFxuICAgaXNzdWVkU2hhcmVzOiBudW1iZXI7XFxuICAgLyoqIFByaWNlIG9mIHRoZSBzaGFyZXMgKi9cXG4gICBzaGFyZVByaWNlOiBudW1iZXI7XFxuICAgLyoqIFN0YXRlIG9mIHRoZSBjb3Jwb3JhdGlvbi4gUG9zc2libGUgc3RhdGVzIGFyZSBTVEFSVCwgUFVSQ0hBU0UsIFBST0RVQ1RJT04sIFNBTEUsIEVYUE9SVC4gKi9cXG4gICBzdGF0ZTogc3RyaW5nO1xcbiAgIC8qKiBBcnJheSBvZiBhbGwgZGl2aXNpb25zICovXFxuICAgZGl2aXNpb25zOiBEaXZpc2lvbltdO1xcbiB9XFxuIFxcbiAvKipcXG4gICogRW1wbG95ZWUgaW4gYW4gb2ZmaWNlXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBFbXBsb3llZSB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIGVtcGxveWVlICovXFxuICAgbmFtZTogc3RyaW5nO1xcbiAgIC8qKiBNb3JhbGUgKi9cXG4gICBtb3I6IG51bWJlcjtcXG4gICAvKiogSGFwcGluZXNzICovXFxuICAgaGFwOiBudW1iZXI7XFxuICAgLyoqIEVuZXJneSAqL1xcbiAgIGVuZTogbnVtYmVyO1xcbiAgIGludDogbnVtYmVyO1xcbiAgIGNoYTogbnVtYmVyO1xcbiAgIGV4cDogbnVtYmVyO1xcbiAgIGNyZTogbnVtYmVyO1xcbiAgIGVmZjogbnVtYmVyO1xcbiAgIC8qKiBTYWxhcnkgKi9cXG4gICBzYWw6IG51bWJlcjtcXG4gICAvKiogQ2l0eSAqL1xcbiAgIGxvYzogc3RyaW5nO1xcbiAgIC8qKiBDdXJyZW50IGpvYiAqL1xcbiAgIHBvczogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogUHJvZHVjdCBpbiBhIHdhcmVob3VzZVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgUHJvZHVjdCB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIHByb2R1Y3QgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIERlbWFuZCBmb3IgdGhlIHByb2R1Y3QgKi9cXG4gICBkbWQ6IG51bWJlcjtcXG4gICAvKiogQ29tcGV0aXRpb24gZm9yIHRoZSBwcm9kdWN0ICovXFxuICAgY21wOiBudW1iZXI7XFxuICAgLyoqIFByb2R1Y3Rpb24gY29zdCAqL1xcbiAgIHBDb3N0OiBudW1iZXI7XFxuICAgLyoqIFNlbGwgY29zdCwgY2FuIGJlIFxcXCJNUCs1XFxcIiAqL1xcbiAgIHNDb3N0OiBzdHJpbmcgfCBudW1iZXI7XFxuICAgLyoqIERhdGEgcmVmZXJzIHRvIHRoZSBwcm9kdWN0aW9uLCBzYWxlLCBhbmQgcXVhbnRpdHkgb2YgdGhlIHByb2R1Y3RzXFxuICAgICogVGhlc2UgdmFsdWVzIGFyZSBzcGVjaWZpYyB0byBhIGNpdHlcXG4gICAgKiBGb3IgZWFjaCBjaXR5LCB0aGUgZGF0YSBpcyBbcXR5LCBwcm9kLCBzZWxsXSAqL1xcbiAgIGNpdHlEYXRhOiB7IFtrZXk6IHN0cmluZ106IG51bWJlcltdIH07XFxuICAgLyoqIENyZWF0aW9uIHByb2dyZXNzIC0gQSBudW1iZXIgYmV0d2VlbiAwLTEwMCByZXByZXNlbnRpbmcgcGVyY2VudGFnZSAqL1xcbiAgIGRldmVsb3BtZW50UHJvZ3Jlc3M6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE1hdGVyaWFsIGluIGEgd2FyZWhvdXNlXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBNYXRlcmlhbCB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIG1hdGVyaWFsICovXFxuICAgbmFtZTogc3RyaW5nO1xcbiAgIC8qKiBBbW91bnQgb2YgbWF0ZXJpYWwgICovXFxuICAgcXR5OiBudW1iZXI7XFxuICAgLyoqIFF1YWxpdHkgb2YgdGhlIG1hdGVyaWFsICovXFxuICAgcWx0OiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBtYXRlcmlhbCBwcm9kdWNlZCAgKi9cXG4gICBwcm9kOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBtYXRlcmlhbCBzb2xkICAqL1xcbiAgIHNlbGw6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFdhcmVob3VzZSBmb3IgYSBkaXZpc2lvbiBpbiBhIGNpdHlcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFdhcmVob3VzZSB7XFxuICAgLyoqIEFtb3VudCBvZiBzaXplIHVwZ3JhZGUgYm91Z2h0ICovXFxuICAgbGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQ2l0eSBpbiB3aGljaCB0aGUgd2FyZWhvdXNlIGlzIGxvY2F0ZWQgKi9cXG4gICBsb2M6IHN0cmluZztcXG4gICAvKiogVG90YWwgc3BhY2UgaW4gdGhlIHdhcmVob3VzZSAqL1xcbiAgIHNpemU6IG51bWJlcjtcXG4gICAvKiogVXNlZCBzcGFjZSBpbiB0aGUgd2FyZWhvdXNlICovXFxuICAgc2l6ZVVzZWQ6IG51bWJlcjtcXG4gICAvKiogU21hcnQgU3VwcGx5IHN0YXR1cyBpbiB0aGUgd2FyZWhvdXNlICovXFxuICAgc21hcnRTdXBwbHlFbmFibGVkOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2ZmaWNlIGZvciBhIGRpdmlzaW9uIGluIGEgY2l0eS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIE9mZmljZSB7XFxuICAgLyoqIENpdHkgb2YgdGhlIG9mZmljZSAqL1xcbiAgIGxvYzogc3RyaW5nO1xcbiAgIC8qKiBNYXhpbXVtIG51bWJlciBvZiBlbXBsb3llZSAqL1xcbiAgIHNpemU6IG51bWJlcjtcXG4gICAvKiogTWluaW11bSBhbW91bnQgb2YgZW5lcmd5IG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtaW5FbmU6IG51bWJlcjtcXG4gICAvKiogTWF4aW11bSBhbW91bnQgb2YgZW5lcmd5IG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtYXhFbmU6IG51bWJlcjtcXG4gICAvKiogTWluaW11bSBoYXBwaW5lc3Mgb2YgdGhlIGVtcGxveWVlcyAqL1xcbiAgIG1pbkhhcDogbnVtYmVyO1xcbiAgIC8qKiBNYXhpbXVtIGhhcHBpbmVzcyBvZiB0aGUgZW1wbG95ZWVzICovXFxuICAgbWF4SGFwOiBudW1iZXI7XFxuICAgLyoqIE1heGltdW0gbW9yYWxlIG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtYXhNb3I6IG51bWJlcjtcXG4gICAvKiogTmFtZSBvZiBhbGwgdGhlIGVtcGxveWVlcyAqL1xcbiAgIGVtcGxveWVlczogc3RyaW5nW107XFxuICAgLyoqIFBvc2l0aW9ucyBvZiB0aGUgZW1wbG95ZWVzICovXFxuICAgZW1wbG95ZWVQcm9kOiBFbXBsb3llZUpvYnM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPYmplY3QgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgb2YgZW1wbG95ZWUgaW4gZWFjaCBqb2IuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBFbXBsb3llZUpvYnMge1xcbiAgIE9wZXJhdGlvbnM6IG51bWJlcjtcXG4gICBFbmdpbmVlcjogbnVtYmVyO1xcbiAgIEJ1c2luZXNzOiBudW1iZXI7XFxuICAgTWFuYWdlbWVudDogbnVtYmVyO1xcbiAgIFxcXCJSZXNlYXJjaCAmIERldmVsb3BtZW50XFxcIjogbnVtYmVyO1xcbiAgIFRyYWluaW5nOiBudW1iZXI7XFxuICAgVW5hc3NpZ25lZDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gZGl2aXNpb25cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIERpdmlzaW9uIHtcXG4gICAvKiogTmFtZSBvZiB0aGUgZGl2aXNpb24gKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIFR5cGUgb2YgZGl2aXNpb24sIGxpa2UgQWdncmljdWx0dXJlICovXFxuICAgdHlwZTogc3RyaW5nO1xcbiAgIC8qKiBBd2FyZW5lc3Mgb2YgdGhlIGRpdmlzaW9uICovXFxuICAgYXdhcmVuZXNzOiBudW1iZXI7XFxuICAgLyoqIFBvcHVsYXJpdHkgb2YgdGhlIGRpdmlzaW9uICovXFxuICAgcG9wdWxhcml0eTogbnVtYmVyO1xcbiAgIC8qKiBQcm9kdWN0aW9uIG11bHRpcGxpZXIgKi9cXG4gICBwcm9kTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBBbW91bnQgb2YgcmVzZWFyY2ggaW4gdGhhdCBkaXZpc2lvbiAqL1xcbiAgIHJlc2VhcmNoOiBudW1iZXI7XFxuICAgLyoqIFJldmVudWUgbGFzdCBjeWNsZSAqL1xcbiAgIGxhc3RDeWNsZVJldmVudWU6IG51bWJlcjtcXG4gICAvKiogRXhwZW5zZXMgbGFzdCBjeWNsZSAqL1xcbiAgIGxhc3RDeWNsZUV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIFJldmVudWUgdGhpcyBjeWNsZSAqL1xcbiAgIHRoaXNDeWNsZVJldmVudWU6IG51bWJlcjtcXG4gICAvKiogRXhwZW5zZXMgdGhpcyBjeWNsZSAqL1xcbiAgIHRoaXNDeWNsZUV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIEFsbCByZXNlYXJjaCBib3VnaHQgKi9cXG4gICB1cGdyYWRlczogbnVtYmVyW107XFxuICAgLyoqIENpdGllcyBpbiB3aGljaCB0aGlzIGRpdmlzaW9uIGhhcyBleHBhbmRlZCAqL1xcbiAgIGNpdGllczogc3RyaW5nW107XFxuICAgLyoqIFByb2R1Y3RzIGRldmVsb3BlZCBieSB0aGlzIGRpdmlzaW9uICovXFxuICAgcHJvZHVjdHM6IHN0cmluZ1tdO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gaW52ZXN0bWVudCBvZmZlclxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgSW52ZXN0bWVudE9mZmVyIHtcXG4gICAvKiogQW1vdW50IG9mIGZ1bmRzIHlvdSB3aWxsIGdldCBmcm9tIHRoaXMgaW52ZXN0bWVudCAqL1xcbiAgIGZ1bmRzOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBzaGFyZSB5b3Ugd2lsbCBnaXZlIGluIGV4Y2hhbmdlIGZvciB0aGlzIGludmVzdG1lbnQgKi9cXG4gICBzaGFyZXM6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCByb3VuZCBvZiBmdW5kaW5nIChtYXggNCkgKi9cXG4gICByb3VuZDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSW50ZXJmYWNlIFRoZW1lXFxuICAqIEBpbnRlcm5hbFxcbiAgKi9cXG4gaW50ZXJmYWNlIFVzZXJJbnRlcmZhY2VUaGVtZSB7XFxuICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xcbiAgIHByaW1hcnlsaWdodDogc3RyaW5nO1xcbiAgIHByaW1hcnk6IHN0cmluZztcXG4gICBwcmltYXJ5ZGFyazogc3RyaW5nO1xcbiAgIHN1Y2Nlc3NsaWdodDogc3RyaW5nO1xcbiAgIHN1Y2Nlc3M6IHN0cmluZztcXG4gICBzdWNjZXNzZGFyazogc3RyaW5nO1xcbiAgIGVycm9ybGlnaHQ6IHN0cmluZztcXG4gICBlcnJvcjogc3RyaW5nO1xcbiAgIGVycm9yZGFyazogc3RyaW5nO1xcbiAgIHNlY29uZGFyeWxpZ2h0OiBzdHJpbmc7XFxuICAgc2Vjb25kYXJ5OiBzdHJpbmc7XFxuICAgc2Vjb25kYXJ5ZGFyazogc3RyaW5nO1xcbiAgIHdhcm5pbmdsaWdodDogc3RyaW5nO1xcbiAgIHdhcm5pbmc6IHN0cmluZztcXG4gICB3YXJuaW5nZGFyazogc3RyaW5nO1xcbiAgIGluZm9saWdodDogc3RyaW5nO1xcbiAgIGluZm86IHN0cmluZztcXG4gICBpbmZvZGFyazogc3RyaW5nO1xcbiAgIHdlbGxsaWdodDogc3RyaW5nO1xcbiAgIHdlbGw6IHN0cmluZztcXG4gICB3aGl0ZTogc3RyaW5nO1xcbiAgIGJsYWNrOiBzdHJpbmc7XFxuICAgaHA6IHN0cmluZztcXG4gICBtb25leTogc3RyaW5nO1xcbiAgIGhhY2s6IHN0cmluZztcXG4gICBjb21iYXQ6IHN0cmluZztcXG4gICBjaGE6IHN0cmluZztcXG4gICBpbnQ6IHN0cmluZztcXG4gICByZXA6IHN0cmluZztcXG4gICBkaXNhYmxlZDogc3RyaW5nO1xcbiAgIGJhY2tncm91bmRwcmltYXJ5OiBzdHJpbmc7XFxuICAgYmFja2dyb3VuZHNlY29uZGFyeTogc3RyaW5nO1xcbiAgIGJ1dHRvbjogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSW50ZXJmYWNlIFN0eWxlc1xcbiAgKiBAaW50ZXJuYWxcXG4gICovXFxuIGludGVyZmFjZSBJU3R5bGVTZXR0aW5ncyB7XFxuICAgZm9udEZhbWlseTogc3RyaW5nO1xcbiAgIGxpbmVIZWlnaHQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdhbWUgSW5mb3JtYXRpb25cXG4gICogQGludGVybmFsXFxuICAqL1xcbiBpbnRlcmZhY2UgR2FtZUluZm8ge1xcbiAgIHZlcnNpb246IHN0cmluZztcXG4gICBjb21taXQ6IHN0cmluZztcXG4gICBwbGF0Zm9ybTogc3RyaW5nO1xcbiB9XCIsXCJmaWxlbmFtZVwiOlwiaW5kZXguZC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIxNzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJuMDBkbGVzXCIsXCJmb29kbnN0dWZmXCIsXCJzaWdtYS1jb3NtZXRpY3NcIixcImpvZXNndW5zXCIsXCJob25nLWZhbmctdGVhXCIsXCJoYXJha2lyaS1zdXNoaVwiLFwiaXJvbi1neW1cIixcInBzMFwiLFwicHMxXCIsXCJwczJcIixcInBzM1wiLFwicHM0XCIsXCJwczVcIixcInBzNlwiLFwicHM3XCIsXCJwczhcIixcInBzOVwiLFwicHMxMFwiLFwicHMxMVwiLFwicHMxMlwiLFwicHMxM1wiLFwicHMxNFwiLFwicHMxNVwiLFwicHMxNlwiLFwicHMxN1wiLFwicHMxOFwiLFwicHMxOVwiLFwicHMyMFwiLFwicHMyMVwiLFwicHMyMlwiLFwicHMyM1wiLFwicHMyNFwiLFwiZGFya3dlYlwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbe1wiY3RvclwiOlwiVGV4dEZpbGVcIixcImRhdGFcIjp7XCJmblwiOlwiaGFja25ldC1sb3JkLWNmZy5qc29uLnR4dFwiLFwidGV4dFwiOlwie1xcblxcdFxcXCJwaWxsb3dcXFwiOiAyMDAwMDAwXFxufVwifX1dLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJlY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ1LjQuOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkVDb3JwXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjQ3MjgwNzE0MjQxLFwibW9uZXlNYXhcIjoxMTgyMDE3ODU2MDI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjExNjEsXCJzZXJ2ZXJHcm93dGhcIjo5OX19LFwibWVnYWNvcnBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1lZ2Fjb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NC41LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNZWdhQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJwb3dlcmhvdXNlLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTksXCJoYWNrRGlmZmljdWx0eVwiOjk5LFwibWluRGlmZmljdWx0eVwiOjMzLFwibW9uZXlBdmFpbGFibGVcIjo1MzIzNzAxMzgwNCxcIm1vbmV5TWF4XCI6MTMzMDkyNTM0NTEwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMzMxLFwic2VydmVyR3Jvd3RoXCI6OTl9fSxcImItYW5kLWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImItYW5kLWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY2LjYuNy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIjRzaWdtYVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4OCxcImhhY2tEaWZmaWN1bHR5XCI6ODgsXCJtaW5EaWZmaWN1bHR5XCI6MjksXCJtb25leUF2YWlsYWJsZVwiOjI2MDA0MzUxOTgyLFwibW9uZXlNYXhcIjo2NTAxMDg3OTk1NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA0NCxcInNlcnZlckdyb3d0aFwiOjY5fX0sXCJibGFkZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYmxhZGVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY3LjguOC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbml0ZWtcIixcImZ1bGNydW1hc3NldHNcIixcIlRoZS1DYXZlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk1LFwiaGFja0RpZmZpY3VsdHlcIjo5NSxcIm1pbkRpZmZpY3VsdHlcIjozMixcIm1vbmV5QXZhaWxhYmxlXCI6MTE5NTkyNzA0NzEsXCJtb25leU1heFwiOjI5ODk4MTc2MTc3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjEsXCJzZXJ2ZXJHcm93dGhcIjo3MH19LFwibndvXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJud29cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg0LjMuNy4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJ0aGUtaGlkZGVuLXdvcmxkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5XT1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTksXCJoYWNrRGlmZmljdWx0eVwiOjk5LFwibWluRGlmZmljdWx0eVwiOjMzLFwibW9uZXlBdmFpbGFibGVcIjozODU4Mjk0ODE0OCxcIm1vbmV5TWF4XCI6OTY0NTczNzAzNzAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNjIsXCJzZXJ2ZXJHcm93dGhcIjo4Nn19LFwiY2xhcmtpbmNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNsYXJraW5jXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMS4xLjYuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIixcImNvc3Qtb2YtaW1tb3J0YWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCIuXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjUxLFwiaGFja0RpZmZpY3VsdHlcIjo1MSxcIm1pbkRpZmZpY3VsdHlcIjoxNyxcIm1vbmV5QXZhaWxhYmxlXCI6MjAwNzE2OTUwOTQsXCJtb25leU1heFwiOjUwMTc5MjM3NzM1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMTQ5LFwic2VydmVyR3Jvd3RoXCI6NzF9fSxcIm9tbml0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbml0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEuNC43LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wiY29kZWQtaW50ZWxsaWdlbmNlLmxpdFwiLFwiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaVRlayBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZnVsY3J1bXRlY2hcIixcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk2LFwiaGFja0RpZmZpY3VsdHlcIjo5NixcIm1pbkRpZmZpY3VsdHlcIjozMixcIm1vbmV5QXZhaWxhYmxlXCI6MTM2MDcwMTgyOTEsXCJtb25leU1heFwiOjM0MDE3NTQ1NzI3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5ODksXCJzZXJ2ZXJHcm93dGhcIjo5N319LFwiNHNpZ21hXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCI0c2lnbWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQyLjQuMi4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widml0YWxpZmVcIixcImItYW5kLWFcIixcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1OSxcImhhY2tEaWZmaWN1bHR5XCI6NTksXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjE2NTU2MzI3MzgwLFwibW9uZXlNYXhcIjo0MTM5MDgxODQ1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3MCxcInNlcnZlckdyb3d0aFwiOjkzfX0sXCJrdWFpLWdvbmdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImt1YWktZ29uZ1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuMC4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzdG9ybXRlY2hcIixcIm53b1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5NyxcImhhY2tEaWZmaWN1bHR5XCI6OTcsXCJtaW5EaWZmaWN1bHR5XCI6MzIsXCJtb25leUF2YWlsYWJsZVwiOjI1NDQ0MTQ4MDgwLFwibW9uZXlNYXhcIjo2MzYxMDM3MDIwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTIxOSxcInNlcnZlckdyb3d0aFwiOjk2fX0sXCJmdWxjcnVtdGVjaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZnVsY3J1bXRlY2hcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgwLjcuNi42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyMDQ4LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcIm9tbml0ZWtcIixcIi5cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODQsXCJoYWNrRGlmZmljdWx0eVwiOjg0LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjoxNzk0MzIxNzc2LFwibW9uZXlNYXhcIjo0NDg1ODA0NDQwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMjAzLFwic2VydmVyR3Jvd3RoXCI6ODN9fSxcImZ1bGNydW1hc3NldHNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImZ1bGNydW1hc3NldHNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQzLjcuMS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZ1bGNydW0gVGVjaG5vbG9naWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MTAwMDAwMCxcIm1vbmV5TWF4XCI6MjUwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTE3MixcInNlcnZlckdyb3d0aFwiOjF9fSxcInN0b3JtdGVjaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwic3Rvcm10ZWNoXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1OS43LjEuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdG9ybSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicnVuNHRoZWgxMTF6XCIsXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODAsXCJoYWNrRGlmZmljdWx0eVwiOjgwLFwibWluRGlmZmljdWx0eVwiOjI3LFwibW9uZXlBdmFpbGFibGVcIjoxMDMyMjk1MTMzLFwibW9uZXlNYXhcIjoyNTgwNzM3ODMyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDIsXCJzZXJ2ZXJHcm93dGhcIjo4M319LFwiZGVmY29tbVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZGVmY29tbVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNC45LjguOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJEZWZDb21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImRlbHRhb25lXCIsXCJub3ZhLW1lZFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjk0MTEyODk4MCxcIm1vbmV5TWF4XCI6MjM1MjgyMjQ1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6OTcxLFwic2VydmVyR3Jvd3RoXCI6NjB9fSxcImluZm9jb21tXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJpbmZvY29tbVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMC41LjguMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJJbmZvQ29tbVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ1bml2LWVuZXJneVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OSxcImhhY2tEaWZmaWN1bHR5XCI6NzksXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjc3NTYxMDA0NyxcIm1vbmV5TWF4XCI6MTkzOTAyNTExNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6OTM0LFwic2VydmVyR3Jvd3RoXCI6NTZ9fSxcImhlbGlvc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiaGVsaW9zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzLjYuOC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIZWxpb3MgTGFic1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjo2NTU4OTU5MjMsXCJtb25leU1heFwiOjE2Mzk3Mzk4MDc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgwNCxcInNlcnZlckdyb3d0aFwiOjc2fX0sXCJ2aXRhbGlmZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc5LjAuNi40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVml0YUxpZmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGl0YW4tbGFic1wiLFwiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjgwLFwiaGFja0RpZmZpY3VsdHlcIjo4MCxcIm1pbkRpZmZpY3VsdHlcIjoyNyxcIm1vbmV5QXZhaWxhYmxlXCI6NzcwNTUyMjIyLFwibW9uZXlNYXhcIjoxOTI2MzgwNTU1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NDUsXCJzZXJ2ZXJHcm93dGhcIjo3MH19LFwiaWNhcnVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJpY2FydXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjkuMC45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkljYXJ1cyBNaWNyb3N5c3RlbXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVsdGFvbmVcIixcInpiLWRlZlwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NSxcImhhY2tEaWZmaWN1bHR5XCI6ODUsXCJtaW5EaWZmaWN1bHR5XCI6MjgsXCJtb25leUF2YWlsYWJsZVwiOjkxNzMyNzIzNCxcIm1vbmV5TWF4XCI6MjI5MzMxODA4NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODc0LFwic2VydmVyR3Jvd3RoXCI6ODZ9fSxcInVuaXYtZW5lcmd5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml2LWVuZXJneVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODQuMy4zLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjEyOCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml2ZXJzYWwgRW5lcmd5XCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInVuaXRhbGlmZVwiLFwiaW5mb2NvbW1cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODcsXCJoYWNrRGlmZmljdWx0eVwiOjg3LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjoxMTk4ODM0NjE4LFwibW9uZXlNYXhcIjoyOTk3MDg2NTQ1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NDQsXCJzZXJ2ZXJHcm93dGhcIjo5MH19LFwidGl0YW4tbGFic1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidGl0YW4tbGFic1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTMuMi43LjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJjb2RlZC1pbnRlbGxpZ2VuY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGl0YW4gTGFib3JhdG9yaWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWRlZlwiLFwidml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjo4MjQwODczMTcsXCJtb25leU1heFwiOjIwNjAyMTgyOTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgzOSxcInNlcnZlckdyb3d0aFwiOjc3fX0sXCJtaWNyb2R5bmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1pY3JvZHluZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTkuOC44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNaWNyb2R5bmUgVGVjaG5vbG9naWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5vdmEtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcyLFwiaGFja0RpZmZpY3VsdHlcIjo3MixcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6NTI0OTIzODQ5LFwibW9uZXlNYXhcIjoxMzEyMzA5NjIyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MDAsXCJzZXJ2ZXJHcm93dGhcIjo3N319LFwidGFpeWFuZy1kaWdpdGFsXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ0YWl5YW5nLWRpZ2l0YWxcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ3LjYuNy43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiLFwiYnJpZ2h0ZXItdGhhbi10aGUtc3VuLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRhaXlhbmcgRGlnaXRhbFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6ZXVzLW1lZFwiLFwicnVuNHRoZWgxMTF6XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcxLFwiaGFja0RpZmZpY3VsdHlcIjo3MSxcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6ODkwNDA0NzAxLFwibW9uZXlNYXhcIjoyMjI2MDExNzUyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MzUsXCJzZXJ2ZXJHcm93dGhcIjo3OH19LFwiZ2FsYWN0aWMtY3liZXJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImdhbGFjdGljLWN5YmVyXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4OC4zLjguN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJHYWxhY3RpYyBDeWJlcnN5c3RlbXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjo3NTc4OTA2OTMsXCJtb25leU1heFwiOjE4OTQ3MjY3MzI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg1MCxcInNlcnZlckdyb3d0aFwiOjczfX0sXCJhZXJvY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYWVyb2NvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQwLjQuOS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJtYW4tYW5kLW1hY2hpbmUubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQWVyb0NvcnBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWxwaGEtZW50XCIsXCJ1bml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjoxMDE4Njk1Mjg5LFwibW9uZXlNYXhcIjoyNTQ2NzM4MjIyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NTQsXCJzZXJ2ZXJHcm93dGhcIjo1OX19LFwib21uaWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbmlhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4zLjIuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6NjQsXCJtZXNzYWdlc1wiOltcImhpc3Rvcnktb2Ytc3ludGhvaWRzLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk9tbmlhIEN5YmVyc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzbmFwLWZpdG5lc3NcIixcInpldXMtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjg4LFwiaGFja0RpZmZpY3VsdHlcIjo4OCxcIm1pbkRpZmZpY3VsdHlcIjoyOSxcIm1vbmV5QXZhaWxhYmxlXCI6OTU1NjMwMjkzLFwibW9uZXlNYXhcIjoyMzg5MDc1NzMyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4OTcsXCJzZXJ2ZXJHcm93dGhcIjo2NX19LFwiemItZGVmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6Yi1kZWZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM1LjkuOC41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaQiBEZWZlbnNlIEluZHVzdHJpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaWNhcnVzXCIsXCJ0aXRhbi1sYWJzXCIsXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTUsXCJoYWNrRGlmZmljdWx0eVwiOjU1LFwibWluRGlmZmljdWx0eVwiOjE4LFwibW9uZXlBdmFpbGFibGVcIjoxMDAzMDI3MjAzLFwibW9uZXlNYXhcIjoyNTA3NTY4MDA3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3OTIsXCJzZXJ2ZXJHcm93dGhcIjo2OX19LFwiYXBwbGllZC1lbmVyZ2V0aWNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI2LjUuMC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFwcGxpZWQgRW5lcmdldGljc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6Yi1kZWZcIixcImZ1bGNydW10ZWNoXCIsXCJoZWxpb3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjAsXCJoYWNrRGlmZmljdWx0eVwiOjYwLFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjo5MTA0MDM5ODksXCJtb25leU1heFwiOjIyNzYwMDk5NzI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjc4NCxcInNlcnZlckdyb3d0aFwiOjczfX0sXCJzb2xhcmlzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQxMDIwOC1Kb2Unc0d1bnMuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlsxODcsMTA3LDQ4LDcyXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcInR5cGVcIjoyfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInNvbGFyaXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQyLjQuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCIsXCJ0aGUtZmFpbGVkLWZyb250aWVyLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJkZWx0YW9uZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NSxcImhhY2tEaWZmaWN1bHR5XCI6NzUsXCJtaW5EaWZmaWN1bHR5XCI6MjUsXCJtb25leUF2YWlsYWJsZVwiOjcxNzIyODA2OCxcIm1vbmV5TWF4XCI6MTc5MzA3MDE3MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODEwLFwic2VydmVyR3Jvd3RoXCI6NzB9fSxcImRlbHRhb25lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkZWx0YW9uZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTYuMy4yLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRGVsdGFPbmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZ2xvYmFsLXBoYXJtXCIsXCJkZWZjb21tXCIsXCJpY2FydXNcIixcInNvbGFyaXNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjoxMzk5OTcwMTkxLFwibW9uZXlNYXhcIjozNDk5OTI1NDc3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzIsXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiZ2xvYmFsLXBoYXJtXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJnbG9iYWwtcGhhcm1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ4LjcuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wiQS1HcmVlbi1Ub21vcnJvdy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInJoby1jb25zdHJ1Y3Rpb25cIixcImRlbHRhb25lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc5LFwiaGFja0RpZmZpY3VsdHlcIjo3OSxcIm1pbkRpZmZpY3VsdHlcIjoyNixcIm1vbmV5QXZhaWxhYmxlXCI6MTUxMjMyNDQ4MSxcIm1vbmV5TWF4XCI6Mzc4MDgxMTIwMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODE2LFwic2VydmVyR3Jvd3RoXCI6OTB9fSxcIm5vdmEtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJub3ZhLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMi45LjIuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOb3ZhIE1lZGljYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVmY29tbVwiLFwibWljcm9keW5lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcwLFwiaGFja0RpZmZpY3VsdHlcIjo3MCxcIm1pbkRpZmZpY3VsdHlcIjoyMyxcIm1vbmV5QXZhaWxhYmxlXCI6MTIwNzEzNTc2MCxcIm1vbmV5TWF4XCI6MzAxNzgzOTQwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODA1LFwic2VydmVyR3Jvd3RoXCI6NzJ9fSxcInpldXMtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6ZXVzLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTguMy40LjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWmV1cyBNZWRpY2FsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbmlhXCIsXCJ0YWl5YW5nLWRpZ2l0YWxcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjoxMzA1MDE3MTQ4LFwibW9uZXlNYXhcIjozMjYyNTQyODcwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjIsXCJzZXJ2ZXJHcm93dGhcIjo4MH19LFwidW5pdGFsaWZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg4LjguMy40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml0YUxpZmUgR3JvdXBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWVyb2NvcnBcIixcInVuaXYtZW5lcmd5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc1LFwiaGFja0RpZmZpY3VsdHlcIjo3NSxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6MTAxMjgyNTA4OSxcIm1vbmV5TWF4XCI6MjUzMjA2MjcyMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Nzc2LFwic2VydmVyR3Jvd3RoXCI6NzZ9fSxcImxleG8tY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibGV4by1jb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1LjkuNy40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJMZXhvQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJJLkkuSS5JXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYyLFwiaGFja0RpZmZpY3VsdHlcIjo2MixcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NzkzMDQzNDY2LFwibW9uZXlNYXhcIjoxOTgyNjA4NjY1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo2OTMsXCJzZXJ2ZXJHcm93dGhcIjo1NX19LFwicmhvLWNvbnN0cnVjdGlvblwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicmhvLWNvbnN0cnVjdGlvblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODEuMy4wLjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlJobyBDb25zdHJ1Y3Rpb25cIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicm90aG1hbi11bmlcIixcImdsb2JhbC1waGFybVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1NixcImhhY2tEaWZmaWN1bHR5XCI6NTYsXCJtaW5EaWZmaWN1bHR5XCI6MTksXCJtb25leUF2YWlsYWJsZVwiOjUxNjU0MjM5MCxcIm1vbmV5TWF4XCI6MTI5MTM1NTk3NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTIyLFwic2VydmVyR3Jvd3RoXCI6NTV9fSxcImFscGhhLWVudFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01MDExNDMtSm9lJ3NHdW5zLmNjdFwiLFwidHlwZVwiOlwiU3ViYXJyYXkgd2l0aCBNYXhpbXVtIFN1bVwiLFwiZGF0YVwiOlsxLDEsLTUsLTMsLTEwLDMsLTIsLTEsLTUsOSwwLDYsNCwtMSwtNSwtMyw1LDEsLTUsMl0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJKb2UncyBHdW5zXCIsXCJ0eXBlXCI6Mn19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhbHBoYS1lbnRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY2LjYuMi4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIkkuSS5JLklcIixcImFlcm9jb3JwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYzLFwiaGFja0RpZmZpY3VsdHlcIjo2MyxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6Njg4MDgxMjk1LFwibW9uZXlNYXhcIjoxNzIwMjAzMjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1NzksXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiYWV2dW0tcG9saWNlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXZ1bS1wb2xpY2VcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIwLjMuNC41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWluc3RpdHV0ZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3MixcImhhY2tEaWZmaWN1bHR5XCI6NzIsXCJtaW5EaWZmaWN1bHR5XCI6MjQsXCJtb25leUF2YWlsYWJsZVwiOjM2ODYwMTkzMCxcIm1vbmV5TWF4XCI6OTIxNTA0ODI1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0MTAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwicm90aG1hbi11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtOTkxMjkyLmNjdFwiLFwidHlwZVwiOlwiRmluZCBBbGwgVmFsaWQgTWF0aCBFeHByZXNzaW9uc1wiLFwiZGF0YVwiOltcIjE0MzI2MjQ5XCIsLTk3XSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicm90aG1hbi11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkyLjEuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJ0ZW5zaW9ucy1pbi10ZWNoLXJhY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiUm90aG1hbiBVbml2ZXJzaXR5XCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImF2bW5pdGUtMDJoXCIsXCJyaG8tY29uc3RydWN0aW9uXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ4LFwiaGFja0RpZmZpY3VsdHlcIjo0OCxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MjQ1ODA1ODY2LFwibW9uZXlNYXhcIjo2MTQ1MTQ2NjUwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjM3OCxcInNlcnZlckdyb3d0aFwiOjQ1fX0sXCJ6Yi1pbnN0aXR1dGVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNzYzNDcyLmNjdFwiLFwidHlwZVwiOlwiTWluaW11bSBQYXRoIFN1bSBpbiBhIFRyaWFuZ2xlXCIsXCJkYXRhXCI6W1s1XSxbMywzXSxbNSw1LDVdLFs3LDUsMiwyXSxbNCw2LDMsNCw1XSxbNCw3LDUsNiwyLDVdLFs4LDUsNiw2LDYsOSwxXSxbNyw1LDQsOCw2LDgsMSw0XSxbNSw2LDksNCwyLDIsMiwzLDZdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiemItaW5zdGl0dXRlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MS41LjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6NjQsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkIgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiY3J1c2gtZml0bmVzc1wiLFwiYWV2dW0tcG9saWNlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcyLFwiaGFja0RpZmZpY3VsdHlcIjo3MixcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6MTA4MTg1MDcxNyxcIm1vbmV5TWF4XCI6MjcwNDYyNjc5MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NzMyLFwic2VydmVyR3Jvd3RoXCI6Nzd9fSxcInN1bW1pdC11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN1bW1pdC11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjE3LjcuNi42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdW1taXQgVW5pdmVyc2l0eVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhdm1uaXRlLTAyaFwiLFwibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjIsXCJoYWNrRGlmZmljdWx0eVwiOjYyLFwibWluRGlmZmljdWx0eVwiOjIxLFwibW9uZXlBdmFpbGFibGVcIjoyMTM4NDkyNjIsXCJtb25leU1heFwiOjUzNDYyMzE1NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDU5LFwic2VydmVyR3Jvd3RoXCI6NTR9fSxcInN5c2NvcmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN5c2NvcmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU3LjguNC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlN5c0NvcmUgU2VjdXJpdGllc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjb21wdGVrXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc2LFwiaGFja0RpZmZpY3VsdHlcIjo3NixcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6NDUwMjk4NTYwLFwibW9uZXlNYXhcIjoxMTI1NzQ2NDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo2MDIsXCJzZXJ2ZXJHcm93dGhcIjo2OX19LFwiY2F0YWx5c3RcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTEzNTAwLmNjdFwiLFwidHlwZVwiOlwiQXJyYXkgSnVtcGluZyBHYW1lXCIsXCJkYXRhXCI6WzgsOSwyLDksMCwyLDMsMSwxLDEwLDgsMCwxMCw1LDAsNiw1LDEwXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiY2F0YWx5c3RcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjAuNC4xLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXCJ0ZW5zaW9ucy1pbi10ZWNoLXJhY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ2F0YWx5c3QgVmVudHVyZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiY29tcHRla1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MCxcImhhY2tEaWZmaWN1bHR5XCI6NjAsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjM2ODA2ODM5OCxcIm1vbmV5TWF4XCI6OTIwMTcwOTk1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0MTMsXCJzZXJ2ZXJHcm93dGhcIjo1Mn19LFwidGhlLWh1YlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidGhlLWh1YlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjIuMy44LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRoZSBIdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicGhhbnRhc3lcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NDAsXCJoYWNrRGlmZmljdWx0eVwiOjQwLFwibWluRGlmZmljdWx0eVwiOjEzLFwibW9uZXlBdmFpbGFibGVcIjoxNjg4MzYyODcsXCJtb25leU1heFwiOjQyMjA5MDcxNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Mjg4LFwic2VydmVyR3Jvd3RoXCI6NTR9fSxcImNvbXB0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNvbXB0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQuMC4yLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIm1hbi1hbmQtbWFjaGluZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJDb21wdVRla1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJwaGFudGFzeVwiLFwic3lzY29yZVwiLFwiY2F0YWx5c3RcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjoyNDY3NjUzMzAsXCJtb25leU1heFwiOjYxNjkxMzMyNTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MzgyLFwic2VydmVyR3Jvd3RoXCI6NDl9fSxcIm5ldGxpbmtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm5ldGxpbmtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjUxLjUuMC4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2ltdWxhdGVkLXJlYWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTmV0TGluayBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lsdmVyLWhlbGl4XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY5LFwiaGFja0RpZmZpY3VsdHlcIjo2OSxcIm1pbkRpZmZpY3VsdHlcIjoyMyxcIm1vbmV5QXZhaWxhYmxlXCI6Mjc1MDAwMDAwLFwibW9uZXlNYXhcIjo2ODc1MDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQxNSxcInNlcnZlckdyb3d0aFwiOjcxfX0sXCJqb2huc29uLW9ydGhvXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJqb2huc29uLW9ydGhvXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1NS42LjkuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJKb2huc29uIE9ydGhvcGVkaWNzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInBoYW50YXN5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQzLFwiaGFja0RpZmZpY3VsdHlcIjo0MyxcIm1pbkRpZmZpY3VsdHlcIjoxNCxcIm1vbmV5QXZhaWxhYmxlXCI6NzQ4NTY1MTMsXCJtb25leU1heFwiOjE4NzE0MTI4MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjU2LFwic2VydmVyR3Jvd3RoXCI6NDR9fSxcIm4wMGRsZXNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwibjAwZGxlc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTUuNS44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjQsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTm9vZGxlIEJhclwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyLjQsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcIm4wMGRsZXNcIl0sXCJkYXRhTWFwXCI6e1wibjAwZGxlc1wiOls2MzgyMDIyLDExMTEsMzcsMF19LFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MTMxNi41NjA4NTY0MTY2NTU3LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MDIsXCJvbmxpbmVFeHBHYWluZWRcIjozODIzLjg3NTAwMDAwMDA3NCxcIm9ubGluZU1vbmV5TWFkZVwiOjYzODIwMjIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjE4OTg5LjAxMDAwMDAzNjI2LFwicGlkXCI6MSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGYwNzAyNzAtOGQ0Mi00ZjhhLWI4NzktOTQ3ZTljM2I3NmM1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3Mn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHMgdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHQvL1xcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83Njc0YmQwMi0xYzJjLTRjN2UtYjIxZC00YzA5YWZjMzRhNzJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjp0cnVlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjo0LjYwNTk5OTk5OTk5OTczLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjEzMjEzNDYuNDQ0MjEzMDExNSxcIm1vbmV5TWF4XCI6MTc1MDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MzAwMH19LFwiZm9vZG5zdHVmZlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJmb29kbnN0dWZmXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS4wLjEuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcInNlY3Rvci0xMi1jcmltZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJGb29kTlN0dWZmXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjE0LjQsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImZvb2Ruc3R1ZmZcIl0sXCJkYXRhTWFwXCI6e1wiZm9vZG5zdHVmZlwiOlswLDAsMjEwNiwxNzRdfSxcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjQ2ODMuNTg0NTUyNDk5OTk5NSxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MTE1NDcuOTA0OTk5OTk5OTk5LFwib25saW5lRXhwR2FpbmVkXCI6MTM2ODAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxODkwMC40MTAwMDAwMzU5MDMsXCJwaWRcIjoyLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcInRocmVhZHNcIjo2LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84Njk3MTRlNC1lMmVjLTQwNDAtYjQ1OC1mODAxN2EzMzBlZTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjgwfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjNTg0NzQzLTQwNmYtNDRjOC1iYzExLWIzOTEyODg4NjI4YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwiemVyMFwiLFwibmVjdGFyLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjEwLFwiaGFja0RpZmZpY3VsdHlcIjo3LjcyNzk5OTk5OTk5OTkyNSxcIm1pbkRpZmZpY3VsdHlcIjozLFwibW9uZXlBdmFpbGFibGVcIjozMjIxNTExLjMzMTA0OTI3NyxcIm1vbmV5TWF4XCI6NTAwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjV9fSxcInNpZ21hLWNvc21ldGljc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02NjYxMTQtSm9lJ3NHdW5zLmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbMTEsMzUsNTAsMzgsOSwzXSxbMjIsNDEsMjcsMTUsOCwxMV0sWzIyLDQ5LDE5LDIsNCwyMV0sWzIzLDIxLDIwLDQ0LDQ5LDE2XSxbMTksNDUsMTAsMjYsNCwyMF0sWzM4LDQzLDI4LDQwLDQxLDM3XSxbMjAsMTUsMTAsMTUsNDAsM10sWzI3LDEwLDM2LDM1LDExLDI3XSxbNywzOCwzMyw2LDIsMzJdLFs0MCwzMCwzNSwyLDI1LDZdLFsxMywxLDMxLDMxLDI3LDMyXSxbMjgsNDMsOSwyNSwyMyw0M11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiSm9lJ3MgR3Vuc1wiLFwidHlwZVwiOjJ9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU4LjcuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWdtYSBDb3NtZXRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcInNpZ21hLWNvc21ldGljc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCIsXCJtYXgtaGFyZHdhcmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjp0cnVlLFwiYmFzZURpZmZpY3VsdHlcIjoxMCxcImhhY2tEaWZmaWN1bHR5XCI6Ny45NzM5OTk5OTk5OTk5MzksXCJtaW5EaWZmaWN1bHR5XCI6MyxcIm1vbmV5QXZhaWxhYmxlXCI6MjM3MzA4NS4yODUyNzExNjc4LFwibW9uZXlNYXhcIjo1NzUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1LFwic2VydmVyR3Jvd3RoXCI6MTB9fSxcImpvZXNndW5zXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImpvZXNndW5zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyNS4zLjQuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSm9lJ3MgR3Vuc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNC40LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2VzZ3Vuc1wiXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxMzQ1Njg3OCw4NCwxMzk4LDE4Nl19LFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6Mzg5My4wNzUyMzEyNSxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MTE1NDcuOTA3LFwib25saW5lRXhwR2FpbmVkXCI6MTI1MTAsXCJvbmxpbmVNb25leU1hZGVcIjoxMzQ1Njg3OCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTg4NjcuMjEwMDAwMDM1NzUzLFwicGlkXCI6MyxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjYsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdiYTUyNTUxLTEwMWItNGFjMy1hZDJmLWZhMGZmNWEzYTY2NlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODh9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzIHRvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0Ly9cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjZlZGMxNTItODQ5My00MmFiLTk5ZmEtY2ZmNzMxOTk0YWU2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwiQ1NFQ1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6dHJ1ZSxcImJhc2VEaWZmaWN1bHR5XCI6MTUsXCJoYWNrRGlmZmljdWx0eVwiOjcuMjAzOTk5OTk5OTk5OTUyLFwibWluRGlmZmljdWx0eVwiOjUsXCJtb25leUF2YWlsYWJsZVwiOjQ2ODYzMTk0LjU2NjYwNjE4LFwibW9uZXlNYXhcIjo2MjUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJ6ZXIwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6ZXIwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzOC41LjUuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkVSMCBOaWdodGNsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZm9vZG5zdHVmZlwiLFwibmVvLW5ldFwiLFwic2lsdmVyLWhlbGl4XCIsXCJvbWVnYS1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MjUsXCJoYWNrRGlmZmljdWx0eVwiOjI1LFwibWluRGlmZmljdWx0eVwiOjgsXCJtb25leUF2YWlsYWJsZVwiOjc1MDAwMDAsXCJtb25leU1heFwiOjE4NzUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3NSxcInNlcnZlckdyb3d0aFwiOjQwfX0sXCJuZWN0YXItbmV0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm5lY3Rhci1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg2LjEuMy43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZWN0YXIgTmlnaHRjbHViIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTQuNCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wibmVjdGFyLW5ldFwiXSxcImRhdGFNYXBcIjp7XCJuZWN0YXItbmV0XCI6WzAsMCw5NDIsMTc0XX0sXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjoyNzg0Ljk5ODQxMTI1LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MDksXCJvbmxpbmVFeHBHYWluZWRcIjoxMDA0NCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjE4Njk3LjIxMDAwMDAzNDk5LFwicGlkXCI6NCxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJ0aHJlYWRzXCI6NixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmY3YzU1NzctNjA3Mi00YmFlLTgwYTAtZTUyMjQ4MmEyYTIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwNX1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHMgdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHQvL1xcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYmFkZTBjZi05YmZlLTQxODAtYWJlMi03OTc2MDMwZDI5NTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImZvb2Ruc3R1ZmZcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MjAsXCJoYWNrRGlmZmljdWx0eVwiOjEwLjE2Mzk5OTk5OTk5OTg2MSxcIm1pbkRpZmZpY3VsdHlcIjo3LFwibW9uZXlBdmFpbGFibGVcIjo2MzQ4MzQwLjg1MzAyMjg4OCxcIm1vbmV5TWF4XCI6Njg3NTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwibmVvLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibmVvLW5ldFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjYuMi4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJ0aGUtaGlkZGVuLXdvcmxkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5lbyBOaWdodGNsdWIgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6ZXIwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI1LFwiaGFja0RpZmZpY3VsdHlcIjoyNSxcIm1pbkRpZmZpY3VsdHlcIjo4LFwibW9uZXlBdmFpbGFibGVcIjo1MDAwMDAwLFwibW9uZXlNYXhcIjoxMjUwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjEsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwic2lsdmVyLWhlbGl4XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzaWx2ZXItaGVsaXhcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc3LjEuNi45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wibmV3LXRyaWFkcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWx2ZXIgSGVsaXhcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiemVyMFwiLFwibmV0bGlua1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMCxcImhhY2tEaWZmaWN1bHR5XCI6MzAsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjQ1MDAwMDAwLFwibW9uZXlNYXhcIjoxMTI1MDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjE1MCxcInNlcnZlckdyb3d0aFwiOjMwfX0sXCJob25nLWZhbmctdGVhXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJob25nLWZhbmctdGVhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1Ny45LjUuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcImJyaWdodGVyLXRoYW4tdGhlLXN1bi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIb25nRmFuZyBUZWFob3VzZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjozMDAwMDAwLFwibW9uZXlNYXhcIjo3NTAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJoYXJha2lyaS1zdXNoaVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNzkuNC4yLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkhhcmFLaXJpIFN1c2hpIEJhciBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxMS40MDE5OTk5OTk5OTk5OTIsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6Mzk4OTkyNixcIm1vbmV5TWF4XCI6MTAwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjEsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQwLFwic2VydmVyR3Jvd3RoXCI6NDB9fSxcInBoYW50YXN5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJwaGFudGFzeVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuMi44LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBoYW50YXN5IENsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiQ1NFQ1wiLFwidGhlLWh1YlwiLFwiY29tcHRla1wiLFwiam9obnNvbi1vcnRob1wiLFwiY3J1c2gtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoyMCxcImhhY2tEaWZmaWN1bHR5XCI6MjAsXCJtaW5EaWZmaWN1bHR5XCI6NyxcIm1vbmV5QXZhaWxhYmxlXCI6MjQwMDAwMDAsXCJtb25leU1heFwiOjYwMDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwibWF4LWhhcmR3YXJlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtYXgtaGFyZHdhcmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ0LjYuNS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNYXggSGFyZHdhcmUgU3RvcmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lnbWEtY29zbWV0aWNzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjoxMDAwMDAwMCxcIm1vbmV5TWF4XCI6MjUwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoxLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgwLFwic2VydmVyR3Jvd3RoXCI6MzB9fSxcIm9tZWdhLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwib21lZ2EtbmV0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5OC43LjAuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInRoZS1uZXctZ29kLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk9tZWdhIFNvZnR3YXJlXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInplcjBcIixcImF2bW5pdGUtMDJoXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI5LFwiaGFja0RpZmZpY3VsdHlcIjoyOSxcIm1pbkRpZmZpY3VsdHlcIjoxMCxcIm1vbmV5QXZhaWxhYmxlXCI6NjE3ODA2NzgsXCJtb25leU1heFwiOjE1NDQ1MTY5NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjIwLFwic2VydmVyR3Jvd3RoXCI6MzZ9fSxcImNydXNoLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNydXNoLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkyLjIuMC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNydXNoIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicGhhbnRhc3lcIixcInpiLWluc3RpdHV0ZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0NSxcImhhY2tEaWZmaWN1bHR5XCI6NDUsXCJtaW5EaWZmaWN1bHR5XCI6MTUsXCJtb25leUF2YWlsYWJsZVwiOjU4MTU4NjgwLFwibW9uZXlNYXhcIjoxNDUzOTY3MDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjI3MyxcInNlcnZlckdyb3d0aFwiOjMxfX0sXCJpcm9uLWd5bVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJpcm9uLWd5bVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOS4wLjAuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSXJvbiBHeW0gTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS4yLFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJpcm9uLWd5bVwiXSxcImRhdGFNYXBcIjp7XCJpcm9uLWd5bVwiOlswLDAsMCwyMzRdfSxcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjI5OS4yNDI0MDY2NjY2NjY3LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MTEsXCJvbmxpbmVFeHBHYWluZWRcIjoyODA4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTE3MDYuNDEwMDAwMDA3NjU0LFwicGlkXCI6NSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjEzLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZGQ1YWZjNy03ZWI1LTQ2YmYtOWY0Ny0zN2VjNmNmODhiYjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NjYxfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI4NGU2ZGFiLTgyZWItNGQ5NC05MjA5LTU5NmNjN2YwODkwMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjMwLFwiaGFja0RpZmZpY3VsdHlcIjoxNS4xNTAwMDAwMDAwMDAwMixcIm1pbkRpZmZpY3VsdHlcIjoxMCxcIm1vbmV5QXZhaWxhYmxlXCI6MjAwMDAwMDAsXCJtb25leU1heFwiOjUwMDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAsXCJzZXJ2ZXJHcm93dGhcIjoyMH19LFwibWlsbGVuaXVtLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1pbGxlbml1bS1maXRuZXNzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyMi41LjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1pbGxlbml1bSBGaXRuZXNzIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3VtbWl0LXVuaVwiLFwiZ2FsYWN0aWMtY3liZXJcIixcInNuYXAtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0NSxcImhhY2tEaWZmaWN1bHR5XCI6NDUsXCJtaW5EaWZmaWN1bHR5XCI6MTUsXCJtb25leUF2YWlsYWJsZVwiOjI1MDAwMDAwMCxcIm1vbmV5TWF4XCI6NjI1MDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0NzgsXCJzZXJ2ZXJHcm93dGhcIjozN319LFwicG93ZXJob3VzZS1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJwb3dlcmhvdXNlLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc5LjkuMC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJQb3dlcmhvdXNlIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCIsXCJlY29ycFwiLFwibWVnYWNvcnBcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo5MDAwMDAwMDAsXCJtb25leU1heFwiOjIyNTAwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNTYsXCJzZXJ2ZXJHcm93dGhcIjo1N319LFwic25hcC1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzbmFwLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgyLjMuMi43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlNuYXAgRml0bmVzc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtaWxsZW5pdW0tZml0bmVzc1wiLFwib21uaWFcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo0NTAwMDAwMDAsXCJtb25leU1heFwiOjExMjUwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjcxNixcInNlcnZlckdyb3d0aFwiOjUwfX0sXCJydW40dGhlaDExMXpcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInJ1bjR0aGVoMTExelwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOC42LjkuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInNpbXVsYXRlZC1yZWFsaXR5LmxpdFwiLFwidGhlLW5ldy1nb2QubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGhlIFJ1bm5lcnNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGFpeWFuZy1kaWdpdGFsXCIsXCJzdG9ybXRlY2hcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUyMSxcInNlcnZlckdyb3d0aFwiOjB9fSxcIkkuSS5JLklcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIkkuSS5JLklcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjYwLjIuMC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkkuSS5JLklcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXZtbml0ZS0wMmhcIixcImxleG8tY29ycFwiLFwiYWxwaGEtZW50XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozNjQsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJhdm1uaXRlLTAyaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC05NzE4MC5jY3RcIixcInR5cGVcIjpcIk1pbmltdW0gUGF0aCBTdW0gaW4gYSBUcmlhbmdsZVwiLFwiZGF0YVwiOltbNV0sWzgsNV0sWzIsOSwyXSxbMiw2LDcsN11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhdm1uaXRlLTAyaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuNC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjEyOCxcIm1lc3NhZ2VzXCI6W1wiZGVtb2NyYWN5LWlzLWRlYWQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTml0ZVNlY1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJvbWVnYS1uZXRcIixcInJvdGhtYW4tdW5pXCIsXCJzdW1taXQtdW5pXCIsXCJJLkkuSS5JXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoyMjAsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCIuXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCIuXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS44LjkuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiLlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJmdWxjcnVtdGVjaFwiLFwiY2xhcmtpbmNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUzMCxcInNlcnZlckdyb3d0aFwiOjB9fSxcIkNTRUNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiQ1NFQ1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTEuOS4wLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkN5YmVyU2VjXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImpvZXNndW5zXCIsXCJwaGFudGFzeVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6dHJ1ZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoxLFwib3BlblBvcnRDb3VudFwiOjEsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjU1LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiVGhlLUNhdmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIlRoZS1DYXZlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0Ni43LjMuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYWxwaGEtb21lZ2EubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjUsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJ3MHIxZF9kNDNtMG5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIncwcjFkX2Q0M20wblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjguNi4wLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwidzByMWRfZDQzbTBuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozMDAwLFwic2VydmVyR3Jvd3RoXCI6MH19LFwicHMwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuNC4xLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzcyNDQ1MzgsNDUsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM4MC42MjUsXCJvbmxpbmVNb25leU1hZGVcIjo3MjQ0NTM4LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo0MyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMwXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWJjMDUxMWUtMjI4NS00Njk4LTg0N2ItZGFmNzRjOGM5MTAzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2MH1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80ZGFhZGI0Yi03MzVjLTQ3MGYtYTRhMC1lYmFiMWEyMWMwODdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTA0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjQuOC41LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzkzNzE3NTcsNTcsMzY5LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzQyNS42MjUsXCJvbmxpbmVNb25leU1hZGVcIjo5MzcxNzU3LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo0NCxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDUzNmI4NWUtMjU3ZS00MTFmLTkzZGUtNzIzNjY3NmFmOGM4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2Mn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lNTJiMzYzNS0xZmFlLTQwMTYtODlhMC1mOWJiYmM3NmQ3MzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTA2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjIuMS42LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzczMzc0NDIsNDUsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjczMzc0NDIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ1LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iMGRkNTAwMy02NDMyLTRiZTktYjI0My02ZDgzZGQyZDAyZmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzliY2RkMTg5LWE0MmUtNGVhYi05NzQxLWI1YmIyMTkzNTQ2ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS4yLjAuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTg3MjExMywzNiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzI0LjM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjU4NzIxMTMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ2LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczNcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84NjcyZGFiYi0xODg0LTQ5YTktOGI0Ni02NmRiMjZhZGNkZjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY2fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FkNjRkNGE5LWZhMmMtNDNhZS1iMmVlLTYxZjlmN2Y4MWQxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNy4yLjQuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTI4NTMyOCwzMywzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzAxLjg3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjUyODUzMjgsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ3LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczRcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lN2MwMWUxYy1kMDkzLTQ2NDAtOGJiOS1lNjZkMTllYjdhYTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY4fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IxODY2ZjE0LThhM2MtNDBiYi1hOTVhLTE1YWIxMWRiYWVmM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM1XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMy44LjIuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNzMyNTEyNyw0NSwzNjAsMzldfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzQxLjI1LFwib25saW5lTW9uZXlNYWRlXCI6NzMyNTEyNyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NDgsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzNVwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q3OGE3YTJiLTI4MTctNDUyNy04ODMwLTMzYzhmMmUzNmYzZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzB9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vM2FjZjJiNzktZDRlMi00MjhlLWJkYmUtNTg0N2UzMGQ4MGY1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTE0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzNlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIzLjEuMS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls2NzczNzEyLDQyLDM3MiwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzNTguMTI1LFwib25saW5lTW9uZXlNYWRlXCI6Njc3MzcxMixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NDksXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzNlwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIyMmM5OGRmLTZlNTMtNDNkMy1iZTgyLTVlZjIyMTk2NGEwM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzJ9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDVmODZkMWUtNjFhZi00ZjBiLTgyZjEtNmE2OGQxODAzNzQ5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzN1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczdcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQuNS41LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzQ5MzE1MTcsMzAsMzc1LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzI4NSxcIm9ubGluZU1vbmV5TWFkZVwiOjQ5MzE1MTcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjUwLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczdcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85N2ZlZjAxMS1mYmE1LTRiNWEtOGVmZS04Y2M2YjVlZTg1YzNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTc0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QzYjAxMWMwLTk3YmYtNDIzNC04NWZiLWFhMGQyMGUyNmE5MlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczhcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2Ni43LjEuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjc2NzAxOSw0MiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzYzLjc1LFwib25saW5lTW9uZXlNYWRlXCI6Njc2NzAxOSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTEsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzOFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEzZWYxMGQ4LWFmOWUtNGZlNC1hYTU5LWM3YzA2YWEwMTA2NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzV9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDBkMDNkMjktMjZkZC00YTRiLWEzYzQtMDQzOGNkMTQ2YTU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUyMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTIwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzOVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjYuOS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls5Mzk3MjkzLDU3LDM2MywzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM0MjAsXCJvbmxpbmVNb25leU1hZGVcIjo5Mzk3MjkzLFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo1MixcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM5XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zYjY3NjU1ZC0wNDc1LTRkYjMtYjlhYy1jYWYwODI2NDA4OTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTIyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczEwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MC41LjAuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjgyNDk2Nyw0MiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzYzLjc1LFwib25saW5lTW9uZXlNYWRlXCI6NjgyNDk2NyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTMsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTBcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mYzhmZGFiMS05NTY0LTQwOTYtYjI4MS04NWY5MTJhZDBhODdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjQ2fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzAzMDRkM2FlLWUzYjktNDhiNy05OTg2LTMyNjIxZTZjMjg1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczExXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1MS4zLjguNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjQxNTMzMiwzOSwzNjMsMzldfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzI0LjM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjY0MTUzMzIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjU0LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczExXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZjgzMjY5ODktM2Q2YS00NDlkLTk1YjQtYjgzNDhiZGIwOTg0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI0OX1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOTZhMGI2MS01MDM4LTQwZDgtOGY4Ni01MzQ1YjA3YmExMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTI2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMTJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMxMlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTAuOC42LjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzExNzc5MTcwLDcyLDM2MCwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM0OTguNzUsXCJvbmxpbmVNb25leU1hZGVcIjoxMTc3OTE3MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTUsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yYjNjMDFjZi0xMmQyLTRiN2MtOTJiYy1kMGFhYTlhZjk1ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjUyfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JmOGFkNTFmLThmMjctNDJiOC04YmU5LWFhZGI2ZGVkOTYwNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxM1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczEzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4yLjAuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTgzNzY5MSwzNiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzE4Ljc1LFwib25saW5lTW9uZXlNYWRlXCI6NTgzNzY5MSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTYsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTNcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NzBjNzk3Mi1mODU4LTQ4ZjgtYWViNi04YzU0NWY0ZTlmNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjU1fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFjZWNiZTRlLWQ4MjgtNGQ0NC1iYzVlLTAyNjJlZjhkYThjOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxNFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyLjIuOS4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls3NjkwODQ1LDQ4LDM2OSwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzODYuMjUsXCJvbmxpbmVNb25leU1hZGVcIjo3NjkwODQ1LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo1NyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxNFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBmN2MwZjFhLWU3Y2UtNGFkMC1hMDc3LTdhZjYzMTc4YjQ1ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNTh9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWJkYzMxZTktY2ZhNC00ZmU4LWI0MWYtMzg5OGYzZTM4MWZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUzMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUzMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczE1XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMTVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjIuMi4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls1OTM2NzIxLDM2LDM3MiwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzMjQuMzc1LFwib25saW5lTW9uZXlNYWRlXCI6NTkzNjcyMSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTgsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTVcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yMTFmN2FlZi0yMWUwLTQ4NGUtYTY1MC1kM2YwNjJiNGI3NGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjYxfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc0OWY4MGE3LThjYzYtNDNiMS1iMGExLTNjN2VmZmIwYWZlOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxNlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE2XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2My4xLjYuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbODc3MzY0NCw1NCwzNzIsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDI1LjYyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjg3NzM2NDQsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjU5LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE2XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDMzNmYxZTAtY2IzMS00MmYzLThiMTMtM2IxYzE1MDg4YWY2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI2NH1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjdmMmE5OS01Y2M4LTRkYjQtOGJkNS1mZDNmNmE3MWIxYjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTM2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTM2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMTdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMxN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTcuMi40LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzY4NzM2NjMsNDIsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM1Mi41LFwib25saW5lTW9uZXlNYWRlXCI6Njg3MzY2MyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NjAsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTdcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MjEyZjE3Mi1mZDk0LTQxNmItOWZjZC05NDY4OTZhYTBiNmFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY3fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzM1MjllMWY3LWE5YzctNDkxYS1hODAxLTgwMjUyZmMxYTAwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1Mzh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxOFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4NS4wLjMuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjQxODM4MywzOSwzNjksMzZdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzMwLFwib25saW5lTW9uZXlNYWRlXCI6NjQxODM4MyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NjEsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMThcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYTgyYzdkZi03YzNlLTQ3ZWMtOWY3Ny00NzE3NjhlNzI2ZTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjcwfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZkZjljN2I0LTc1ZTktNDJlNC1hMzQ2LTU1NjY4Mjc0MTdhMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxOVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE5XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4wLjIuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTg0ODcwMSwzNiwzNjYsMzZdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzEzLjEyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjU4NDg3MDEsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjYyLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE5XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWNlZTQ4MzItNDUyOC00ZTkzLWE4MjAtZTVjYjA3MDY2ZGQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3M31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZTNlNzVjNi04OTdiLTQzOTItYWY4YS03NmQyYzA1NTRhZTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuNy4zLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzkyODAzNjgsNTcsMzY2LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzQzMS4yNSxcIm9ubGluZU1vbmV5TWFkZVwiOjkyODAzNjgsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjYzLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIwXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmU0OGI2YTYtMGFhNi00YjE3LWJmMWYtMTk2ZDBjNzY3OWYwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwN31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xMzczMjlkZi1jMWJlLTRlNTgtYWI2NS1iY2MxYzc4MDM2ODhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQ0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyMVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODcuMS40LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzcxMTYwNTcsNDUsMzY5LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM2OS4zNzUsXCJvbmxpbmVNb25leU1hZGVcIjo3MTE2MDU3LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NCxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyMVwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA5NGY3YjAzLTI4MTAtNDI3OS04Y2JhLTY4YWI1MTc0ZDhhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTB9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzJkMTkyZTQtYmM4Mi00MWNmLWIzZDUtY2U3NzZhZmExY2Y1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczIyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMjJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM5LjIuMC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxMTE3MjQ1OSw2OSwzNjYsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDkzLjEyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjExMTcyNDU5LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyMlwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I1YTI0ZjBkLTQzYTYtNGIwOC05ODg5LWMxMWJkNjViNzczNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTN9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGU5YTNlY2YtYzVjYS00ZmNiLTkwODQtYmYxZjQ2YTkwODNmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczIzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMjNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg4LjIuNC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls1MzMwMDczLDMzLDM3NSwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzMDcuNSxcIm9ubGluZU1vbmV5TWFkZVwiOjUzMzAwNzMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjY2LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIzXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWJmYjE0MzMtYTEwNS00ZDA5LTlkODMtYTQ5YTc2YTk2NTFkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMxNn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOGI4Y2I5ZC1jYzc0LTQwNTEtOGE4Ny03M2IxMjIyMTlkM2NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTUwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTUwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyNFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuOS4wLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzY3ODcwNTYsNDIsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM1OC4xMjUsXCJvbmxpbmVNb25leU1hZGVcIjo2Nzg3MDU2LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyNFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ExYmUwNmVjLWFhNmItNGU2MS1iMWRjLTJmNjIwNTJkODgzY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTl9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzI1MzgzMWItZDM3Ni00NDVhLWE2MjgtOTc5MWI4MTRkYzIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU1MX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczI0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU1MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJkYXJrd2ViXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkYXJrd2ViXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2MS4yLjUuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MSxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fX0iLCJDb21wYW5pZXNTYXZlIjoie1wiRUNvcnBcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRUNvcnBcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjozLFwic2FsYXJ5TXVsdGlwbGllclwiOjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk1lZ2FDb3JwXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MyxcInNhbGFyeU11bHRpcGxpZXJcIjozLFwiam9iU3RhdFJlcU9mZnNldFwiOjI0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJCYWNobWFuICYgQXNzb2NpYXRlc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJCYWNobWFuICYgQXNzb2NpYXRlc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNixcInNhbGFyeU11bHRpcGxpZXJcIjoyLjYsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkJsYWRlIEluZHVzdHJpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQmxhZGUgSW5kdXN0cmllc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTldPXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5XT1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQ2xhcmtlIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJDbGFya2UgSW5jb3Jwb3JhdGVkXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yNSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjI1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbW5pVGVrIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbW5pVGVrIEluY29ycG9yYXRlZFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi4yNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGb3VyIFNpZ21hXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi41LFwic2FsYXJ5TXVsdGlwbGllclwiOjIuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yLFwic2FsYXJ5TXVsdGlwbGllclwiOjIuMixcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiU3Rvcm0gVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlN0b3JtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJEZWZDb21tXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkRlZkNvbW1cIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43NSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjc1LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJIZWxpb3MgTGFic1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJIZWxpb3MgTGFic1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJWaXRhTGlmZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJWaXRhTGlmZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJJY2FydXMgTWljcm9zeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkljYXJ1cyBNaWNyb3N5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS45LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuOSxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiVW5pdmVyc2FsIEVuZXJneVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJVbml2ZXJzYWwgRW5lcmd5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2FsYWN0aWMgQ3liZXJzeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjksXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS45LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJBZXJvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXJvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjcsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS43LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbW5pYSBDeWJlcnN5c3RlbXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiT21uaWEgQ3liZXJzeXN0ZW1zXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjcsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTb2xhcmlzIFNwYWNlIFN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRGVsdGFPbmVcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRGVsdGFPbmVcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS42LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNixcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2xvYmFsIFBoYXJtYWNldXRpY2Fsc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb3ZhIE1lZGljYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjc1LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNzUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJDZW50cmFsIEludGVsbGlnZW5jZSBBZ2VuY3lcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjE0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOYXRpb25hbCBTZWN1cml0eSBBZ2VuY3lcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTmF0aW9uYWwgU2VjdXJpdHkgQWdlbmN5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiV2F0Y2hkb2cgU2VjdXJpdHlcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiV2F0Y2hkb2cgU2VjdXJpdHlcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS41LFwiam9iU3RhdFJlcU9mZnNldFwiOjEyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJMZXhvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJMZXhvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS40LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNCxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJSaG8gQ29uc3RydWN0aW9uXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlJobyBDb25zdHJ1Y3Rpb25cIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS4zLFwic2FsYXJ5TXVsdGlwbGllclwiOjEuMyxcImpvYlN0YXRSZXFPZmZzZXRcIjo0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJBbHBoYSBFbnRlcnByaXNlc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBbHBoYSBFbnRlcnByaXNlc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6OTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWV2dW0gUG9saWNlIEhlYWRxdWFydGVyc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlN5c0NvcmUgU2VjdXJpdGllc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTeXNDb3JlIFNlY3VyaXRpZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNvbXB1VGVrXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkNvbXB1VGVrXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjc0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5ldExpbmsgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5ldExpbmsgVGVjaG5vbG9naWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNhcm1pY2hhZWwgU2VjdXJpdHlcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2FybWljaGFlbCBTZWN1cml0eVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NzQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MTgxLjA1NTkxNzk0ODcyMDk3LFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGb29kTlN0dWZmXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjUuNTIwNjYxNTM4NDYxNTIzLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJKb2UncyBHdW5zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjIyNi4yMTAxMDc2OTIzMDA3LFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbWVnYSBTb2Z0d2FyZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbWVnYSBTb2Z0d2FyZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4xLFwiam9iU3RhdFJlcU9mZnNldFwiOjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5vb2RsZSBCYXJcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm9vZGxlIEJhclwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiV2FpdGVyXCI6dHJ1ZSxcIlBhcnQtdGltZSBXYWl0ZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLFwic2FsYXJ5TXVsdGlwbGllclwiOjEsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX19IiwiRmFjdGlvbnNTYXZlIjoie1wiSWxsdW1pbmF0aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIlN5bnRoZXRpYyBIZWFydFwiLFwiU3luZmlicmlsIE11c2NsZVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJRTGlua1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSWxsdW1pbmF0aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkRhZWRhbHVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlRoZSBSZWQgUGlsbFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRGFlZGFsdXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgQ292ZW5hbnRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiR3JhcGhlbmUgQm9uZSBMYWNpbmdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlNQVE4tOTcgR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlRoZSBDb3ZlbmFudFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkVDb3JwXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiR3JhcGhlbmUgQmlvbmljIFNwaW5lIFVwZ3JhZGVcIixcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlIE9wdGltaXphdGlvbiBTdWJtb2R1bGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiRUNvcnAgSFZNaW5kIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkVDb3JwXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTWVnYUNvcnBcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJHcmFwaGVuZSBCaW9uaWMgTGVncyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJDb3JkaUFSQyBGdXNpb24gUmVhY3RvclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTWVnYUNvcnBcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCYWNobWFuICYgQXNzb2NpYXRlc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiU21hcnRKYXdcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQmxhZGUgSW5kdXN0cmllc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSUlcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJIeXBlclNpZ2h0IENvcm5lYWwgSW1wbGFudFwiLFwiTmVvdHJhXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTldPXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJBRFItVjEgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElJSVwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJYYW5pcGhlclwiLFwiSHlkcm9mbGFtZSBMZWZ0IEFybVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTldPXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2xhcmtlIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb25hbCBEZW5zaWZpY2F0aW9uXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwibmV4dFNFTlMgR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJPbW5pVGVrIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSUlcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJPbW5pVGVrIEluZm9Mb2FkXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJPbW5pVGVrIEluY29ycG9yYXRlZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkZvdXIgU2lnbWFcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkZvY3VzV2lyZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiQURSLVYyIFBoZXJvbW9uZSBHZW5lXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSUlcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJDb21iYXQgUmliIElcIixcIkNvbWJhdCBSaWIgSUlcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiSHlwZXJTaWdodCBDb3JuZWFsIEltcGxhbnRcIixcIlBob3Rvc3ludGhldGljIENlbGxzXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRnVsY3J1bSBTZWNyZXQgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIk5FTUVBTiBTdWJkZXJtYWwgV2VhdmVcIixcIkdyYXBoZW5lIEJvbmUgTGFjaW5nc1wiLFwiR3JhcGhlbmUgQmlvbmljIFNwaW5lIFVwZ3JhZGVcIixcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkFydGlmaWNpYWwgQmlvLW5ldXJhbCBOZXR3b3JrIEltcGxhbnRcIixcIkVuaGFuY2VkIE15ZWxpbiBTaGVhdGhpbmdcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgTmV1cm9OZXQgSW5qZWN0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRnVsY3J1bSBTZWNyZXQgVGVjaG5vbG9naWVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQml0UnVubmVyc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkFydGlmaWNpYWwgQmlvLW5ldXJhbCBOZXR3b3JrIEltcGxhbnRcIixcIkVuaGFuY2VkIE15ZWxpbiBTaGVhdGhpbmdcIixcIkRhdGFKYWNrXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIk5ldXJhbCBBY2NlbGVyYXRvclwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJSUlcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSVZcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gVlwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlcIixcIkJpdFJ1bm5lcnMgTmV1cm9saW5rXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCaXRSdW5uZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiVGhlIEJsYWNrIEhhbmRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBcnRpZmljaWFsIFN5bmFwdGljIFBvdGVudGlhdGlvblwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJVlwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJUaGUgQmxhY2sgSGFuZFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIEJsYWNrIEhhbmRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJOaXRlU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQml0V2lyZVwiLFwiQXJ0aWZpY2lhbCBTeW5hcHRpYyBQb3RlbnRpYXRpb25cIixcIk5ldXJhbC1SZXRlbnRpb24gRW5oYW5jZW1lbnRcIixcIkRhdGFKYWNrXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlcIixcIkNSVFg0Mi1BQSBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTml0ZVNlY1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkFldnVtXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiU3luYXB0aWMgRW5oYW5jZW1lbnQgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSVwiLFwiUENNYXRyaXhcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkFldnVtXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2hvbmdxaW5nXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJlZ2VuIEdlbmUgTW9kaWZpY2F0aW9uXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJDaG9uZ3FpbmdcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJJc2hpbWFcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkNvbWJhdCBSaWIgSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJJTkZSQVJFVCBFbmhhbmNlbWVudFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSXNoaW1hXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTmV3IFRva3lvXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk51dHJpR2VuIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk5ldyBUb2t5b1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNlY3Rvci0xMlwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOnRydWUsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkNhc2hSb290IFN0YXJ0ZXIgS2l0XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJWb2xoYXZlblwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkRlcm1hRm9yY2UgUGFydGljbGUgQmFycmllclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVm9saGF2ZW5cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJTcGVha2VycyBmb3IgdGhlIERlYWRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJVbnN0YWJsZSBDaXJjYWRpYW4gTW9kdWxhdG9yXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIkJpb25pYyBTcGluZVwiLFwiQmlvbmljIExlZ3NcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiVGhlIFNoYWRvdydzIFNpbXVsYWNydW1cIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiR3JhcGhlbmUgQnJhY2hpQmxhZGVzIFVwZ3JhZGVcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlNwZWFrZXJzIGZvciB0aGUgRGVhZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRoZSBEYXJrIEFybXlcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJDb21iYXQgUmliIElcIixcIkNvbWJhdCBSaWIgSUlcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIldpcmVkIFJlZmxleGVzXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkdyYXBoZW5lIEJpb25pYyBBcm1zIFVwZ3JhZGVcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlRoZSBEYXJrIEFybXlcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgU3luZGljYXRlXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkJyYWNoaUJsYWRlc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIFN5bmRpY2F0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNpbGhvdWV0dGVcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIlRJVE4tNDEgR2VuZS1Nb2RpZmljYXRpb24gSW5qZWN0aW9uXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiU2lsaG91ZXR0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRldHJhZHNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJCaW9uaWMgQXJtc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGV0cmFkc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNsdW0gU25ha2VzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJDb21iYXQgUmliIElcIixcIldpcmVkIFJlZmxleGVzXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiU21hcnRTb25hciBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTbHVtIFNuYWtlc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk5ldGJ1cm5lcnNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjp0cnVlLFwiYXVnbWVudGF0aW9uc1wiOltcIkhhY2tuZXQgTm9kZSBDUFUgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBDYWNoZSBBcmNoaXRlY3R1cmUgTmV1cmFsLVVwbG9hZFwiLFwiSGFja25ldCBOb2RlIE5JQyBBcmNoaXRlY3R1cmUgTmV1cmFsLVVwbG9hZFwiLFwiSGFja25ldCBOb2RlIEtlcm5lbCBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiSGFja25ldCBOb2RlIENvcmUgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MSxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJOZXRidXJuZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MzQ4LjM4NDM1ODk3NDM3NDI3fX0sXCJUaWFuIERpIEh1aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTb2NpYWwgTmVnb3RpYXRpb24gQXNzaXN0YW50IChTLk4uQSlcIixcIk5ldXJvcmVjZXB0b3IgTWFuYWdlbWVudCBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaWFuIERpIEh1aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkN5YmVyU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJCaXRXaXJlXCIsXCJTeW5hcHRpYyBFbmhhbmNlbWVudCBJbXBsYW50XCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElcIl0sXCJmYXZvclwiOjEsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjp0cnVlLFwibmFtZVwiOlwiQ3liZXJTZWNcIixcInBsYXllclJlcHV0YXRpb25cIjozOTIyLjE4NTIwNTEyODE5OTR9fSxcIkJsYWRlYnVybmVyc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVzcGVyVGVjaCBCbGFkZWJ1cm5lciBFeWV3ZWFyXCIsXCJFTVMtNCBSZWNvbWJpbmF0aW9uXCIsXCJPUklPTi1NS0lWIFNob3VsZGVyXCIsXCJIeXBlcmlvbiBQbGFzbWEgQ2Fubm9uIFYxXCIsXCJIeXBlcmlvbiBQbGFzbWEgQ2Fubm9uIFYyXCIsXCJHT0xFTSBTZXJ1bVwiLFwiVmFuZ2VsaXMgVmlydXNcIixcIlZhbmdlbGlzIFZpcnVzIDMuMFwiLFwiSS5OLlQuRS5SLkwuSS5OLksuRS5EXCIsXCJCbGFkZSdzIFJ1bm5lcnNcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vclwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBQb3dlciBDZWxscyBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IEVuZXJneSBTaGllbGRpbmcgVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBVbmliZWFtIFVwZ3JhZGVcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vcjogT21uaWJlYW0gVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBJUFUgVXBncmFkZVwiLFwiVGhlIEJsYWRlJ3MgU2ltdWxhY3J1bVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQmxhZGVidXJuZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2h1cmNoIG9mIHRoZSBNYWNoaW5lIEdvZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIlN0YW5laydzIEdpZnQgLSBHZW5lc2lzXCIsXCJTdGFuZWsncyBHaWZ0IC0gQXdha2VuaW5nXCIsXCJTdGFuZWsncyBHaWZ0IC0gU2VyZW5pdHlcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkNodXJjaCBvZiB0aGUgTWFjaGluZSBHb2RcIixcInBsYXllclJlcHV0YXRpb25cIjowfX19IiwiQWxpYXNlc1NhdmUiOiJ7fSIsIkdsb2JhbEFsaWFzZXNTYXZlIjoie30iLCJNZXNzYWdlc1NhdmUiOiJ7XCJqMC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImowLm1zZ1wiLFwibXNnXCI6XCJJIGtub3cgeW91IGNhbiBzZW5zZSBpdC4gSSBrbm93IHlvdSdyZSBzZWFyY2hpbmcgZm9yIGl0LiBJdCdzIHdoeSB5b3Ugc3BlbmQgbmlnaHQgYWZ0ZXIgbmlnaHQgYXQgeW91ciBjb21wdXRlci4gPGJyPjxicj5JdCdzIHJlYWwsIEkndmUgc2VlbiBpdC4gQW5kIEkgY2FuIGhlbHAgeW91IGZpbmQgaXQuIEJ1dCBub3QgcmlnaHQgbm93LiBZb3UncmUgbm90IHJlYWR5IHlldC48YnI+PGJyPlVzZSB0aGlzIHByb2dyYW0gdG8gdHJhY2sgeW91ciBwcm9ncmVzczxicj48YnI+VGhlIGZsMWdodC5leGUgcHJvZ3JhbSB3YXMgYWRkZWQgdG8geW91ciBob21lIGNvbXB1dGVyPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImoxLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajEubXNnXCIsXCJtc2dcIjpcIlNvb24geW91IHdpbGwgYmUgY29udGFjdGVkIGJ5IGEgaGFja2luZyBncm91cCBrbm93biBhcyBDeWJlclNlYy4gVGhleSBjYW4gaGVscCB5b3Ugd2l0aCB5b3VyIHNlYXJjaC4gPGJyPjxicj5Zb3Ugc2hvdWxkIGpvaW4gdGhlbSwgZ2FybmVyIHRoZWlyIGZhdm9yLCBhbmQgZXhwbG9pdCB0aGVtIGZvciB0aGVpciBBdWdtZW50YXRpb25zLiBCdXQgZG8gbm90IHRydXN0IHRoZW0uIFRoZXkgYXJlIG5vdCB3aGF0IHRoZXkgc2VlbS4gTm8gb25lIGlzLjxicj48YnI+LWp1bXAzUlwiLFwicmVjdmRcIjp0cnVlfX0sXCJqMi5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImoyLm1zZ1wiLFwibXNnXCI6XCJEbyBub3QgdHJ5IHRvIHNhdmUgdGhlIHdvcmxkLiBUaGVyZSBpcyBubyB3b3JsZCB0byBzYXZlLiBJZiB5b3Ugd2FudCB0byBmaW5kIHRoZSB0cnV0aCwgd29ycnkgb25seSBhYm91dCB5b3Vyc2VsZi4gRXRoaWNzIGFuZCBtb3JhbHMgd2lsbCBnZXQgeW91IGtpbGxlZC4gPGJyPjxicj5XYXRjaCBvdXQgZm9yIGEgaGFja2luZyBncm91cCBrbm93biBhcyBOaXRlU2VjLjxicj48YnI+LWp1bXAzUlwiLFwicmVjdmRcIjp0cnVlfX0sXCJqMy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImozLm1zZ1wiLFwibXNnXCI6XCJZb3UgbXVzdCBsZWFybiB0byB3YWxrIGJlZm9yZSB5b3UgY2FuIHJ1bi4gQW5kIHlvdSBtdXN0IHJ1biBiZWZvcmUgeW91IGNhbiBmbHkuIExvb2sgZm9yIHRoZSBibGFjayBoYW5kLiA8YnI+PGJyPkkuSS5JLkkgPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCJqNC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImo0Lm1zZ1wiLFwibXNnXCI6XCJUbyBmaW5kIHdoYXQgeW91IGFyZSBzZWFyY2hpbmcgZm9yLCB5b3UgbXVzdCB1bmRlcnN0YW5kIHRoZSBiaXRzLiBUaGUgYml0cyBhcmUgYWxsIGFyb3VuZCB1cy4gVGhlIHJ1bm5lcnMgd2lsbCBoZWxwIHlvdS48YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImNzZWMtdGVzdC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImNzZWMtdGVzdC5tc2dcIixcIm1zZ1wiOlwiV2UndmUgYmVlbiB3YXRjaGluZyB5b3UuIFlvdXIgc2tpbGxzIGFyZSB2ZXJ5IGltcHJlc3NpdmUuIEJ1dCB5b3UncmUgd2FzdGluZyB5b3VyIHRhbGVudHMuIElmIHlvdSBqb2luIHVzLCB5b3UgY2FuIHB1dCB5b3VyIHNraWxscyB0byBnb29kIHVzZSBhbmQgY2hhbmdlIHRoZSB3b3JsZCBmb3IgdGhlIGJldHRlci4gSWYgeW91IGpvaW4gdXMsIHdlIGNhbiB1bmxvY2sgeW91ciBmdWxsIHBvdGVudGlhbC4gPGJyPjxicj5CdXQgZmlyc3QsIHlvdSBtdXN0IHBhc3Mgb3VyIHRlc3QuIEZpbmQgYW5kIGluc3RhbGwgdGhlIGJhY2tkb29yIG9uIG91ciBzZXJ2ZXIuIDxicj48YnI+LUN5YmVyU2VjXCIsXCJyZWN2ZFwiOnRydWV9fSxcIm5pdGVzZWMtdGVzdC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcIm5pdGVzZWMtdGVzdC5tc2dcIixcIm1zZ1wiOlwiUGVvcGxlIHNheSB0aGF0IHRoZSBjb3JydXB0ZWQgZ292ZXJubWVudHMgYW5kIGNvcnBvcmF0aW9ucyBydWxlIHRoZSB3b3JsZC4gWWVzLCBtYXliZSB0aGV5IGRvLiBCdXQgZG8geW91IGtub3cgd2hvIGV2ZXJ5b25lIHJlYWxseSBmZWFycz8gUGVvcGxlIGxpa2UgdXMuIEJlY2F1c2UgdGhleSBjYW4ndCBoaWRlIGZyb20gdXMuIEJlY2F1c2UgdGhleSBjYW4ndCBmaWdodCBzaGFkb3dzIGFuZCBpZGVhcyB3aXRoIGJ1bGxldHMuIDxicj48YnI+Sm9pbiB1cywgYW5kIHBlb3BsZSB3aWxsIGZlYXIgeW91LCB0b28uIDxicj48YnI+RmluZCBhbmQgaW5zdGFsbCB0aGUgYmFja2Rvb3Igb24gb3VyIHNlcnZlci4gVGhlbiwgd2Ugd2lsbCBjb250YWN0IHlvdSBhZ2Fpbi48YnI+PGJyPi1OaXRlU2VjXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCIxOWRmajNsMW5kLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiMTlkZmozbDFuZC5tc2dcIixcIm1zZ1wiOlwiV2Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuIFdlIGtub3cgd2hhdCBkcml2ZXMgeW91LiBXZSBrbm93IHdoYXQgeW91IGFyZSBsb29raW5nIGZvci4gPGJyPjxicj4gV2UgY2FuIGhlbHAgeW91IGZpbmQgdGhlIGFuc3dlcnMuPGJyPjxicj5ydW40dGhlaDExMXpcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImljYXJ1cy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImljYXJ1cy5tc2dcIixcIm1zZ1wiOlwiQCkoI1YlKk4pQCgjKikqQylAIyUqKSpWKUAjKColVkApKCNWTiUqKUAjKColPGJyPilAQigqIyUpQClNI0IqJVYpX19fX0ZJTkRfX18jJEApIyUoQiopQCMoKiVCKTxicj5AXyMoJV9AI00oQkRTUE9NQl9fVEhFLUNBVkVfIykkKCpAIyQpQCNCTkJFR0I8YnI+REZMU01GVk1WKSNAKCQqKUAjKiRNVilAIygqJFYpTSMoKiQpTUAoIypWTSQpXCIsXCJyZWN2ZFwiOmZhbHNlfX19IiwiU3RvY2tNYXJrZXRTYXZlIjoie1wibGFzdFVwZGF0ZVwiOjAsXCJPcmRlcnNcIjp7fSxcInN0b3JlZEN5Y2xlc1wiOjAsXCJ0aWNrc1VudGlsQ3ljbGVcIjowfSIsIlNldHRpbmdzU2F2ZSI6IntcIkFjdGl2ZVNjcmlwdHNTZXJ2ZXJQYWdlU2l6ZVwiOjEwLFwiQWN0aXZlU2NyaXB0c1NjcmlwdFBhZ2VTaXplXCI6MTAsXCJBdXRvc2F2ZUludGVydmFsXCI6NjAsXCJDb2RlSW5zdHJ1Y3Rpb25SdW5UaW1lXCI6MjUsXCJEaXNhYmxlQVNDSUlBcnRcIjpmYWxzZSxcIkRpc2FibGVIb3RrZXlzXCI6ZmFsc2UsXCJEaXNhYmxlVGV4dEVmZmVjdHNcIjpmYWxzZSxcIkRpc2FibGVPdmVydmlld1Byb2dyZXNzQmFyc1wiOmZhbHNlLFwiRW5hYmxlQmFzaEhvdGtleXNcIjp0cnVlLFwiVGltZXN0YW1wc0Zvcm1hdFwiOlwiXCIsXCJMb2NhbGVcIjpcImVuXCIsXCJNYXhMb2dDYXBhY2l0eVwiOjUwLFwiTWF4UG9ydENhcGFjaXR5XCI6NTAsXCJNYXhUZXJtaW5hbENhcGFjaXR5XCI6NTAwLFwiT3duZWRBdWdtZW50YXRpb25zT3JkZXJcIjoxLFwiUHVyY2hhc2VBdWdtZW50YXRpb25zT3JkZXJcIjowLFwiU2F2ZUdhbWVPbkZpbGVTYXZlXCI6dHJ1ZSxcIlN1cHByZXNzQnV5QXVnbWVudGF0aW9uQ29uZmlybWF0aW9uXCI6ZmFsc2UsXCJTdXBwcmVzc0ZhY3Rpb25JbnZpdGVzXCI6ZmFsc2UsXCJTdXBwcmVzc01lc3NhZ2VzXCI6ZmFsc2UsXCJTdXBwcmVzc1RyYXZlbENvbmZpcm1hdGlvblwiOmZhbHNlLFwiU3VwcHJlc3NCbGFkZWJ1cm5lclBvcHVwXCI6ZmFsc2UsXCJTdXBwcmVzc1RJWFBvcHVwXCI6ZmFsc2UsXCJTdXBwcmVzc1NhdmVkR2FtZVRvYXN0XCI6ZmFsc2UsXCJVc2VJRUM2MDAyN18yXCI6dHJ1ZSxcIkV4Y2x1ZGVSdW5uaW5nU2NyaXB0c0Zyb21TYXZlXCI6ZmFsc2UsXCJJc1NpZGViYXJPcGVuZWRcIjpmYWxzZSxcIk1vbmFjb1RoZW1lXCI6XCJtb25va2FpXCIsXCJNb25hY29JbnNlcnRTcGFjZXNcIjpmYWxzZSxcIk1vbmFjb0ZvbnRTaXplXCI6MjAsXCJNb25hY29WaW1cIjpmYWxzZSxcIk1vbmFjb1dvcmRXcmFwXCI6XCJvZmZcIixcInRoZW1lXCI6e1wicHJpbWFyeWxpZ2h0XCI6XCIjMGYwXCIsXCJwcmltYXJ5XCI6XCIjMGMwXCIsXCJwcmltYXJ5ZGFya1wiOlwiIzA5MFwiLFwic3VjY2Vzc2xpZ2h0XCI6XCIjMGYwXCIsXCJzdWNjZXNzXCI6XCIjMGMwXCIsXCJzdWNjZXNzZGFya1wiOlwiIzA5MFwiLFwiZXJyb3JsaWdodFwiOlwiI2YwMFwiLFwiZXJyb3JcIjpcIiNjMDBcIixcImVycm9yZGFya1wiOlwiIzkwMFwiLFwic2Vjb25kYXJ5bGlnaHRcIjpcIiNBQUFcIixcInNlY29uZGFyeVwiOlwiIzg4OFwiLFwic2Vjb25kYXJ5ZGFya1wiOlwiIzY2NlwiLFwid2FybmluZ2xpZ2h0XCI6XCIjZmYwXCIsXCJ3YXJuaW5nXCI6XCIjY2MwXCIsXCJ3YXJuaW5nZGFya1wiOlwiIzk5MFwiLFwiaW5mb2xpZ2h0XCI6XCIjNjlmXCIsXCJpbmZvXCI6XCIjMzZjXCIsXCJpbmZvZGFya1wiOlwiIzAzOVwiLFwid2VsbGxpZ2h0XCI6XCIjNDQ0XCIsXCJ3ZWxsXCI6XCIjMjIyXCIsXCJ3aGl0ZVwiOlwiI2ZmZlwiLFwiYmxhY2tcIjpcIiMwMDBcIixcImhwXCI6XCIjZGQzNDM0XCIsXCJtb25leVwiOlwiI2ZmZDcwMFwiLFwiaGFja1wiOlwiI2FkZmYyZlwiLFwiY29tYmF0XCI6XCIjZmFmZmRmXCIsXCJjaGFcIjpcIiNhNjcxZDFcIixcImludFwiOlwiIzY0OTVlZFwiLFwicmVwXCI6XCIjZmFmZmRmXCIsXCJkaXNhYmxlZFwiOlwiIzY2Y2ZiY1wiLFwiYmFja2dyb3VuZHByaW1hcnlcIjpcIiMwMDBcIixcImJhY2tncm91bmRzZWNvbmRhcnlcIjpcIiMwMDBcIixcImJ1dHRvblwiOlwiIzMzM1wifSxcInN0eWxlc1wiOntcImxpbmVIZWlnaHRcIjoxLjUsXCJmb250RmFtaWx5XCI6XCJMdWNpZGEgQ29uc29sZSwgTHVjaWRhIFNhbnMgVW5pY29kZSwgRmlyYSBNb25vLCBDb25zb2xhcywgQ291cmllciBOZXcsIENvdXJpZXIsIG1vbm9zcGFjZSwgVGltZXMgTmV3IFJvbWFuXCJ9LFwib3ZlcnZpZXdcIjp7XCJ4XCI6MCxcInlcIjowLFwib3BlbmVkXCI6dHJ1ZX19IiwiVmVyc2lvblNhdmUiOiIxMCIsIkFsbEdhbmdzU2F2ZSI6IiIsIkxhc3RFeHBvcnRCb251cyI6IjE2NDI5MjkwNjU2MzYiLCJTdGFuZWtzR2lmdFNhdmUiOiJ7XCJjdG9yXCI6XCJTdGFuZWtzR2lmdFwiLFwiZGF0YVwiOntcInN0b3JlZEN5Y2xlc1wiOjAsXCJmcmFnbWVudHNcIjpbXX19IiwiU2F2ZVRpbWVzdGFtcCI6IjE2NDI5MjkwNjU2NDMifX0=\",\"filename\":\"/Saves/farm.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":5652}},{\"ctor\":\"Script\",\"data\":{\"code\":\"eyJjdG9yIjoiQml0YnVybmVyU2F2ZU9iamVjdCIsImRhdGEiOnsiUGxheWVyU2F2ZSI6IntcImN0b3JcIjpcIlBsYXllck9iamVjdFwiLFwiZGF0YVwiOntcImhhY2tpbmdcIjoxODEsXCJocFwiOjExLFwibWF4X2hwXCI6MTEsXCJzdHJlbmd0aFwiOjE5LFwiZGVmZW5zZVwiOjE4LFwiZGV4dGVyaXR5XCI6MTgsXCJhZ2lsaXR5XCI6MTgsXCJjaGFyaXNtYVwiOjk0LFwiaW50ZWxsaWdlbmNlXCI6MCxcImhhY2tpbmdfY2hhbmNlX211bHRcIjoxLFwiaGFja2luZ19zcGVlZF9tdWx0XCI6MSxcImhhY2tpbmdfbW9uZXlfbXVsdFwiOjEsXCJoYWNraW5nX2dyb3dfbXVsdFwiOjEsXCJoYWNraW5nX2V4cFwiOjE1MDU2NC40ODcyOTk5NDIxMixcInN0cmVuZ3RoX2V4cFwiOjQyOC4zODg1MDAwMDAwMDYzLFwiZGVmZW5zZV9leHBcIjo0MDMuMTg4NTAwMDAwMDA3NyxcImRleHRlcml0eV9leHBcIjo0MDMuMTg4NTAwMDAwMDA3NyxcImFnaWxpdHlfZXhwXCI6NDAzLjE4ODUwMDAwMDAwNzcsXCJjaGFyaXNtYV9leHBcIjo5MjQxLjEwMjAwMDAwMDgzMixcImludGVsbGlnZW5jZV9leHBcIjowLFwiaGFja2luZ19tdWx0XCI6MSxcInN0cmVuZ3RoX211bHRcIjoxLFwiZGVmZW5zZV9tdWx0XCI6MSxcImRleHRlcml0eV9tdWx0XCI6MSxcImFnaWxpdHlfbXVsdFwiOjEsXCJjaGFyaXNtYV9tdWx0XCI6MSxcImhhY2tpbmdfZXhwX211bHRcIjoxLFwic3RyZW5ndGhfZXhwX211bHRcIjoxLFwiZGVmZW5zZV9leHBfbXVsdFwiOjEsXCJkZXh0ZXJpdHlfZXhwX211bHRcIjoxLFwiYWdpbGl0eV9leHBfbXVsdFwiOjEsXCJjaGFyaXNtYV9leHBfbXVsdFwiOjEsXCJjb21wYW55X3JlcF9tdWx0XCI6MSxcImZhY3Rpb25fcmVwX211bHRcIjoxLFwibW9uZXlcIjoxNDYwNzMxOS41NjYxMTA1NTEsXCJjaXR5XCI6XCJTZWN0b3ItMTJcIixcImxvY2F0aW9uXCI6XCJBbHBoYSBFbnRlcnByaXNlc1wiLFwiam9ic1wiOntcIkZvb2ROU3R1ZmZcIjpcIkVtcGxveWVlXCIsXCJKb2UncyBHdW5zXCI6XCJFbXBsb3llZVwiLFwiQ2FybWljaGFlbCBTZWN1cml0eVwiOlwiU29mdHdhcmUgQ29uc3VsdGFudFwifSxcImNvbXBhbnlOYW1lXCI6XCJDYXJtaWNoYWVsIFNlY3VyaXR5XCIsXCJjdXJyZW50U2VydmVyXCI6XCJob21lXCIsXCJwdXJjaGFzZWRTZXJ2ZXJzXCI6W1wicHMwXCIsXCJwczFcIixcInBzMlwiLFwicHMzXCIsXCJwczRcIixcInBzNVwiLFwicHM2XCIsXCJwczdcIixcInBzOFwiLFwicHM5XCIsXCJwczEwXCIsXCJwczExXCIsXCJwczEyXCIsXCJwczEzXCIsXCJwczE0XCIsXCJwczE1XCIsXCJwczE2XCIsXCJwczE3XCIsXCJwczE4XCIsXCJwczE5XCIsXCJwczIwXCIsXCJwczIxXCIsXCJwczIyXCIsXCJwczIzXCIsXCJwczI0XCJdLFwiaGFja25ldE5vZGVzXCI6W3tcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNzgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6Mzk0LjcwMzU2MzQ5OTk5OTg2LFwib25saW5lVGltZVNlY29uZHNcIjozOTE0OC43OTk5OTk5MzU3MDUsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjczMjU0MjMuNDg3NjcyNTU3LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTBcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNzgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6Mzk0LjcwMzU2MzQ5OTk5OTg2LFwib25saW5lVGltZVNlY29uZHNcIjozOTAyNy4zOTk5OTk5Mzc0NjUsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjYzMDA2NjcuNjcyOTcwNjMxLFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTFcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNTgsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzUwLjM1NDg0ODQ5OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM1OTkwLjc5OTk5OTk4NzQ5NixcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTg0MTk4MS40MzA0NTgwMTMsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMlwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2NCxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNjMuNjU5NDYyOTk5OTk5ODUsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM1OTg4LjM5OTk5OTk4NzU0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1NjI2MzQyLjYxMzkxNjMwMixcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0zXCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTU5LFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjM1Mi41NzIyODQyNDk5OTk5NCxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzU5ODcuNzk5OTk5OTg3NTU0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1NjQ5ODg1Ljc5Nzk3NjQ5NCxcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS00XCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTYwLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjM1NC43ODk3MTk5OTk5OTk5LFwib25saW5lVGltZVNlY29uZHNcIjozNTk4Ny4xOTk5OTk5ODc1NixcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTMxMTE5OS4xOTk1MDY0MDcsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtNVwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2MyxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNjEuNDQyMDI3MjQ5OTk5OSxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzU5ODYuNzk5OTk5OTg3NTcsXCJyYW1cIjo0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjU1NzI3MDMuMjIxNjc2NjU0LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTZcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNjEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzU3LjAwNzE1NTc0OTk5OTg3LFwib25saW5lVGltZVNlY29uZHNcIjozNDA5NC4wMDAwMDAwMjI1OSxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTQyMzUyNy40MDA3Njg4NTMsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtN1wifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE2MSxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozNTcuMDA3MTU1NzQ5OTk5ODcsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjM0MDkxLjQwMDAwMDAyMjY0NCxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NTUwNzE2MS45MTU4NDcxMzQsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtOFwifX0se1wiY3RvclwiOlwiSGFja25ldE5vZGVcIixcImRhdGFcIjp7XCJjb3Jlc1wiOjMsXCJsZXZlbFwiOjE1MSxcIm1vbmV5R2FpblJhdGVQZXJTZWNvbmRcIjozMzQuODMyNzk4MjQ5OTk5OSxcIm9ubGluZVRpbWVTZWNvbmRzXCI6MzI4MzYuMjAwMDAwMDQzNzg0LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjo1MTUxMjEyLjE1MDk0MTk0LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTlcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNjMsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzYxLjQ0MjAyNzI0OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjI4NjIwLjYwMDAwMDAyOTQ2MyxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6NDY1NjUyMC45MjA3ODA2NjE1LFwibmFtZVwiOlwiaGFja25ldC1ub2RlLTEwXCJ9fSx7XCJjdG9yXCI6XCJIYWNrbmV0Tm9kZVwiLFwiZGF0YVwiOntcImNvcmVzXCI6MyxcImxldmVsXCI6MTUxLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjMzNC44MzI3OTgyNDk5OTk5LFwib25saW5lVGltZVNlY29uZHNcIjo3Njk4LjE5OTk5OTk5NTE1OSxcInJhbVwiOjQsXCJ0b3RhbE1vbmV5R2VuZXJhdGVkXCI6MTc0OTk3Ny44MDA4OTkzODYsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTFcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjozLFwibGV2ZWxcIjoxNTEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MzM0LjgzMjc5ODI0OTk5OTksXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjc2OTguMTk5OTk5OTk1MTU5LFwicmFtXCI6NCxcInRvdGFsTW9uZXlHZW5lcmF0ZWRcIjoxNjkyMjAyLjQwOTUxNDYzOTgsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTJcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjoxLFwibGV2ZWxcIjoxMDEsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6MTMyMy4yODg5MDA2ODU2NTQ0LFwib25saW5lVGltZVNlY29uZHNcIjoyMzg5LjAwMDAwMDAwMDAxOCxcInJhbVwiOjY0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjMxMzkzMjUuNzYwMTMwNjEsXCJuYW1lXCI6XCJoYWNrbmV0LW5vZGUtMTNcIn19LHtcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjo5LFwibGV2ZWxcIjoxNzcsXCJtb25leUdhaW5SYXRlUGVyU2Vjb25kXCI6NTQxMS4wNzI0MzU0NzY5ODQsXCJvbmxpbmVUaW1lU2Vjb25kc1wiOjIzODcuODAwMDAwMDAwMDE5MyxcInJhbVwiOjY0LFwidG90YWxNb25leUdlbmVyYXRlZFwiOjE5MDY0MDQuMjQzOTQ3NTEwNixcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0xNFwifX1dLFwiaGFzaE1hbmFnZXJcIjp7XCJjdG9yXCI6XCJIYXNoTWFuYWdlclwiLFwiZGF0YVwiOntcImNhcGFjaXR5XCI6MCxcImhhc2hlc1wiOjAsXCJ1cGdyYWRlc1wiOntcIlNlbGwgZm9yIE1vbmV5XCI6MCxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXCI6MCxcIlJlZHVjZSBNaW5pbXVtIFNlY3VyaXR5XCI6MCxcIkluY3JlYXNlIE1heGltdW0gTW9uZXlcIjowLFwiSW1wcm92ZSBTdHVkeWluZ1wiOjAsXCJJbXByb3ZlIEd5bSBUcmFpbmluZ1wiOjAsXCJFeGNoYW5nZSBmb3IgQ29ycG9yYXRpb24gUmVzZWFyY2hcIjowLFwiRXhjaGFuZ2UgZm9yIEJsYWRlYnVybmVyIFJhbmtcIjowLFwiRXhjaGFuZ2UgZm9yIEJsYWRlYnVybmVyIFNQXCI6MCxcIkdlbmVyYXRlIENvZGluZyBDb250cmFjdFwiOjB9fX0sXCJmYWN0aW9uc1wiOltcIkN5YmVyU2VjXCIsXCJOZXRidXJuZXJzXCJdLFwiZmFjdGlvbkludml0YXRpb25zXCI6W1wiU2VjdG9yLTEyXCJdLFwicXVldWVkQXVnbWVudGF0aW9uc1wiOlt7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJOZXVyb3RyYWluZXIgSVwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJCaXRXaXJlXCJ9LHtcImxldmVsXCI6MSxcIm5hbWVcIjpcIlN5bmFwdGljIEVuaGFuY2VtZW50IEltcGxhbnRcIn0se1wibGV2ZWxcIjoxLFwibmFtZVwiOlwiTmV1cm9GbHV4IEdvdmVybm9yXCJ9LHtcImxldmVsXCI6MixcIm5hbWVcIjpcIk5ldXJvRmx1eCBHb3Zlcm5vclwifV0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJzb3VyY2VGaWxlc1wiOltdLFwibnVtUGVvcGxlS2lsbGVkXCI6MCxcImthcm1hXCI6MCxcImNyaW1lX21vbmV5X211bHRcIjoxLFwiY3JpbWVfc3VjY2Vzc19tdWx0XCI6MSxcImlzV29ya2luZ1wiOmZhbHNlLFwiZm9jdXNcIjp0cnVlLFwid29ya1R5cGVcIjpcIlwiLFwid29ya0Nvc3RNdWx0XCI6MyxcIndvcmtFeHBNdWx0XCI6MixcImN1cnJlbnRXb3JrRmFjdGlvbk5hbWVcIjpcIlwiLFwiY3VycmVudFdvcmtGYWN0aW9uRGVzY3JpcHRpb25cIjpcIlwiLFwid29ya0hhY2tFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrU3RyRXhwR2FpblJhdGVcIjowLFwid29ya0RlZkV4cEdhaW5SYXRlXCI6MCxcIndvcmtEZXhFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrQWdpRXhwR2FpblJhdGVcIjowLFwid29ya0NoYUV4cEdhaW5SYXRlXCI6MCxcIndvcmtSZXBHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlMb3NzUmF0ZVwiOjAsXCJ3b3JrSGFja0V4cEdhaW5lZFwiOjAsXCJ3b3JrU3RyRXhwR2FpbmVkXCI6MCxcIndvcmtEZWZFeHBHYWluZWRcIjowLFwid29ya0RleEV4cEdhaW5lZFwiOjAsXCJ3b3JrQWdpRXhwR2FpbmVkXCI6MCxcIndvcmtDaGFFeHBHYWluZWRcIjowLFwid29ya1JlcEdhaW5lZFwiOjAsXCJ3b3JrTW9uZXlHYWluZWRcIjowLFwiY3JlYXRlUHJvZ3JhbU5hbWVcIjpcIlwiLFwiY3JlYXRlUHJvZ3JhbVJlcUx2bFwiOjc1LFwiY2xhc3NOYW1lXCI6XCJcIixcImNyaW1lVHlwZVwiOlwiXCIsXCJ0aW1lV29ya2VkXCI6MCxcInRpbWVXb3JrZWRDcmVhdGVQcm9ncmFtXCI6MCxcInRpbWVOZWVkZWRUb0NvbXBsZXRlV29ya1wiOjcyMDAwMDAwLFwid29ya19tb25leV9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9tb25leV9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHRcIjoxLFwiaGFja25ldF9ub2RlX3JhbV9jb3N0X211bHRcIjoxLFwiaGFja25ldF9ub2RlX2NvcmVfY29zdF9tdWx0XCI6MSxcImhhY2tuZXRfbm9kZV9sZXZlbF9jb3N0X211bHRcIjoxLFwiaGFzV3NlQWNjb3VudFwiOmZhbHNlLFwiaGFzVGl4QXBpQWNjZXNzXCI6ZmFsc2UsXCJoYXM0U0RhdGFcIjpmYWxzZSxcImhhczRTRGF0YVRpeEFwaVwiOmZhbHNlLFwiZ2FuZ1wiOm51bGwsXCJjb3Jwb3JhdGlvblwiOm51bGwsXCJibGFkZWJ1cm5lclwiOm51bGwsXCJibGFkZWJ1cm5lcl9tYXhfc3RhbWluYV9tdWx0XCI6MSxcImJsYWRlYnVybmVyX3N0YW1pbmFfZ2Fpbl9tdWx0XCI6MSxcImJsYWRlYnVybmVyX2FuYWx5c2lzX211bHRcIjoxLFwiYmxhZGVidXJuZXJfc3VjY2Vzc19jaGFuY2VfbXVsdFwiOjEsXCJzbGVldmVzXCI6W10sXCJyZXNsZWV2ZXNcIjpbXSxcInNsZWV2ZXNGcm9tQ292ZW5hbnRcIjowLFwiYml0Tm9kZU5cIjoxLFwibGFzdFVwZGF0ZVwiOjE2NDI5MjkwNjU2MTUsXCJ0b3RhbFBsYXl0aW1lXCI6NDQ3Mzc0MDAsXCJwbGF5dGltZVNpbmNlTGFzdEF1Z1wiOjQ0NzM3NDAwLFwicGxheXRpbWVTaW5jZUxhc3RCaXRub2RlXCI6NDQ3Mzc0MDAsXCJtb25leVNvdXJjZUFcIjp7XCJjdG9yXCI6XCJNb25leVNvdXJjZVRyYWNrZXJcIixcImRhdGFcIjp7XCJibGFkZWJ1cm5lclwiOjAsXCJjYXNpbm9cIjowLFwiY2xhc3NcIjotMTM2NTUzNy41OTk5OTk5OTcsXCJjb2Rpbmdjb250cmFjdFwiOjAsXCJjb3Jwb3JhdGlvblwiOjAsXCJjcmltZVwiOjAsXCJnYW5nXCI6MCxcImhhY2tpbmdcIjoyMDk1MTUyNTIuMDA3MjUwMjIsXCJoYWNrbmV0XCI6NzA4NTQ1MzYuMDI2ODM4NDQsXCJoYWNrbmV0X2V4cGVuc2VzXCI6LTE3MzE5NzQ1NC44NTIyOTcxMyxcImhvc3BpdGFsaXphdGlvblwiOjAsXCJpbmZpbHRyYXRpb25cIjowLFwic2xlZXZlc1wiOjAsXCJzdG9ja1wiOjAsXCJ0b3RhbFwiOjE0NjA2MzE5LjU2NjExMDU1MSxcIndvcmtcIjo2NDQ2NTIuMzk5OTk5OTI5NCxcInNlcnZlcnNcIjotMjUyODM0MzIuOTE1NzYzMixcIm90aGVyXCI6LTIwMDAwMCxcImF1Z21lbnRhdGlvbnNcIjotNjYzNjE2OTUuNX19LFwibW9uZXlTb3VyY2VCXCI6e1wiY3RvclwiOlwiTW9uZXlTb3VyY2VUcmFja2VyXCIsXCJkYXRhXCI6e1wiYmxhZGVidXJuZXJcIjowLFwiY2FzaW5vXCI6MCxcImNsYXNzXCI6LTEzNjU1MzcuNTk5OTk5OTk3LFwiY29kaW5nY29udHJhY3RcIjowLFwiY29ycG9yYXRpb25cIjowLFwiY3JpbWVcIjowLFwiZ2FuZ1wiOjAsXCJoYWNraW5nXCI6MjA5NTE1MjUyLjAwNzI1MDIyLFwiaGFja25ldFwiOjcwODU0NTM2LjAyNjgzODQ0LFwiaGFja25ldF9leHBlbnNlc1wiOi0xNzMxOTc0NTQuODUyMjk3MTMsXCJob3NwaXRhbGl6YXRpb25cIjowLFwiaW5maWx0cmF0aW9uXCI6MCxcInNsZWV2ZXNcIjowLFwic3RvY2tcIjowLFwidG90YWxcIjoxNDYwNjMxOS41NjYxMTA1NTEsXCJ3b3JrXCI6NjQ0NjUyLjM5OTk5OTkyOTQsXCJzZXJ2ZXJzXCI6LTI1MjgzNDMyLjkxNTc2MzIsXCJvdGhlclwiOi0yMDAwMDAsXCJhdWdtZW50YXRpb25zXCI6LTY2MzYxNjk1LjV9fSxcInNjcmlwdFByb2RTaW5jZUxhc3RBdWdcIjoyMDcyNzYxNDYsXCJleHBsb2l0c1wiOltdLFwiYWNoaWV2ZW1lbnRzXCI6W3tcIklEXCI6XCJGSVJTVF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQyODg5OTMwMDQxfSx7XCJJRFwiOlwiTlMyXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mjg5MTczMTAzOH0se1wiSURcIjpcIkJSVVRFU1NILkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5MDM4NTg5NzZ9LHtcIklEXCI6XCJIQUNLTkVUX05PREVfMTBNXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkwMzkxODk0N30se1wiSURcIjpcIkNZQkVSU0VDXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkxNTMzODY1N30se1wiSURcIjpcIkZUUENSQUNLLkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5MjA4MjUyMzd9LHtcIklEXCI6XCJXT1JLT1VUXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MjkyMjAyNTIzNn0se1wiSURcIjpcIlRPUlwiLFwidW5sb2NrZWRPblwiOjE2NDI5MjMwNjQyMzB9XSxcImZhY3Rpb25Xb3JrVHlwZVwiOlwiRmFjdGlvbiBIYWNraW5nIFdvcmtcIixcImNvbW1pdHRpbmdDcmltZVRocnVTaW5nRm5cIjpmYWxzZSxcInNpbmdGbkNyaW1lV29ya2VyU2NyaXB0XCI6bnVsbH19IiwiQWxsU2VydmVyc1NhdmUiOiJ7XCJob21lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImhvbWVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjAuMC4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6dHJ1ZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJqMC5tc2dcIixcInNlY3Rvci0xMi1jcmltZS5saXRcIixcImoxLm1zZ1wiLFwiY3NlYy10ZXN0Lm1zZ1wiLFwiajIubXNnXCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSG9tZSBQQ1wiLFwicHJvZ3JhbXNcIjpbXCJOVUtFLmV4ZVwiLFwiZmwxZ2h0LmV4ZVwiLFwiQXV0b0xpbmsuZXhlXCIsXCJCcnV0ZVNTSC5leGVcIixcIkZUUENyYWNrLmV4ZVwiLFwiRGVlcHNjYW5WMS5leGUtMzMuOTklLUlOQ1wiXSxcInJhbVVzZWRcIjoyLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxOTIxMjU3LDEyLDY5LDddfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo2NjcuNSxcIm9ubGluZU1vbmV5TWFkZVwiOjE5MjEyNTcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjQyMTcuMDA5OTk5OTk4MzU2LFwicGlkXCI6NzAsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hNDQxYjE3ZC1mZTc4LTRhYWEtOTEwMS1jZjJjYjY2NjFlNzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6N31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJ3aGlsZSh0cnVlKSB7XFxuXFx0Ly9oYWNrKCduMDBkbGVzJyk7XFxuXFx0Z3JvdygnbjAwZGxlcycpO1xcblxcdHdlYWtlbignbm9vZGxlcycpO1xcbn1cIixcImZpbGVuYW1lXCI6XCJuMDBkbGVzLnNjcmlwdFwiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2ODUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGxldCB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHRsZXQgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdGxldCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIkdMQVNTXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZGRjZWFlNy0wNDBmLTQ3ZGUtOTdhOS03ZGQwYzE5ZGNhNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjU3MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwMTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRcXG59XCIsXCJmaWxlbmFtZVwiOlwidGVzdC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2ODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdC8vIENvbnRpbnVvdXNseSB0cnkgdG8gcHVyY2hhc2Ugc2VydmVycyB1bnRpbCB3ZSd2ZSByZWFjaGVkIHRoZSBtYXhpbXVtXFxuXFx0Ly8gYW1vdW50IG9mIHNlcnZlcnNcXG5cXHRsZXQgcmFtID0gODtcXG5cXHRsZXQgaSA9IDA7XFxuXFx0d2hpbGUgKGkgPCBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdCgpKSB7XFxuXFx0XFx0Ly8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgYSBzZXJ2ZXJcXG5cXHRcXHRpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKSA+IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtKSkge1xcblxcdFxcdFxcdC8vIERvbid0IGJ1eSBzZXJ2ZXIgL3cgbmFtZSBpZiBhbHJlYWR5IGV4aXN0c1xcblxcdFxcdFxcdGlmIChucy5zZXJ2ZXJFeGlzdHMoXFxcInBzXFxcIisgaSkpIHsrK2k7IGNvbnRpbnVlO31cXG5cXHRcXHRcXHQvLyBJZiB3ZSBoYXZlIGVub3VnaCBtb25leSwgdGhlbjpcXG5cXHRcXHRcXHQvLyAgMS4gUHVyY2hhc2UgdGhlIHNlcnZlclxcblxcdFxcdFxcdC8vICAyLiBDb3B5IG91ciBoYWNraW5nIHNjcmlwdCBvbnRvIHRoZSBuZXdseS1wdXJjaGFzZWQgc2VydmVyXFxuXFx0XFx0XFx0Ly8gIDMuIFJ1biBvdXIgaGFja2luZyBzY3JpcHQgb24gdGhlIG5ld2x5LXB1cmNoYXNlZCBzZXJ2ZXIgd2l0aCAzIHRocmVhZHNcXG5cXHRcXHRcXHQvLyAgNC4gSW5jcmVtZW50IG91ciBpdGVyYXRvciB0byBpbmRpY2F0ZSB0aGF0IHdlJ3ZlIGJvdWdodCBhIG5ldyBzZXJ2ZXJcXG5cXHRcXHRcXHRsZXQgaG9zdG5hbWUgPSBucy5wdXJjaGFzZVNlcnZlcihcXFwicHNcXFwiICsgaSwgcmFtKTtcXG5cXHRcXHRcXHRhd2FpdCBucy5zY3AoXFxcImZhcm0uanNcXFwiLCBob3N0bmFtZSk7XFxuXFx0XFx0XFx0bnMuZXhlYyhcXFwiZmFybS5qc1xcXCIsIGhvc3RuYW1lLCAzKTtcXG5cXHRcXHRcXHQrK2k7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcblxcdH1cXG5cXHRucy5wcmludChcXFwiUHVyY2hhc2VkIGFsbCBwb3NzaWJsZSBTZXJ2ZXJzXFxcIik7XFxufVwiLFwiZmlsZW5hbWVcIjpcInNlcnZlci1mYXJtZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJzZXJ2ZXItZmFybWVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYzgzMDZhOC1kZTRlLTQxMWItYjZmNi1hZGNmZjZiOWYzMWZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY1OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo2LjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwMTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckNvc3RcIixcImNvc3RcIjowLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2VydmVyRXhpc3RzXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VTZXJ2ZXJcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM31dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0bGV0IGkgPSAwO1xcblxcdHdoaWxlIChcXFwiYXNkZlxcXCIpIHtcXG5cXHRcXHRpZiAoIW5zLnNlcnZlckV4aXN0cyhcXFwicHNcXFwiICsgaSkpIHticmVhazt9XFxuXFxuXFx0XFx0bGV0IGhvc3RuYW1lID0gXFxcInBzXFxcIiArIGk7XFxuXFx0XFx0bnMua2lsbGFsbChob3N0bmFtZSk7XFxuXFx0XFx0YXdhaXQgbnMuc2NwKFxcXCJmYXJtLmpzXFxcIiwgaG9zdG5hbWUpO1xcblxcdFxcdG5zLmV4ZWMoXFxcImZhcm0uanNcXFwiLCBob3N0bmFtZSwgMyk7XFxuXFx0XFx0KytpO1xcblxcdH1cXHRcXG59XCIsXCJmaWxlbmFtZVwiOlwic2VydmVyLXVwZGF0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJzZXJ2ZXItdXBkYXRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDA4OWI5YWMtODk2Yy00MmZhLTk0M2UtODJhYzUzODNhNjk4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE1N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjEsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzAwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNlcnZlckV4aXN0c1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY3BcIixcImNvc3RcIjowLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoXFxcIi5cXFwiKS5OUyB9IG5zICovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXG4gICAgbGV0IGFsbG93YW5jZSA9IDAuNTtcXG5cXG4gICAgd2hpbGUgKHRydWUpIHtcXG4gICAgICAgIC8vIEZpZ3VyZSBvdXQgd2hhdCB0aGUgY2hlYXBlc3QgdXBncmFkZSB3aWxsIGJlXFxuICAgICAgICB2YXIgdXBncmFkZVR5cGUgPSBcXFwibnVsbFxcXCI7XFxuICAgICAgICB2YXIgdXBncmFkZU5vZGUgPSAwO1xcbiAgICAgICAgdmFyIHVwZ3JhZGVDb3N0ID0gMTAwMDAwMDAwMDAwO1xcblxcbiAgICAgICAgaWYgKG5zLmhhY2tuZXQubnVtTm9kZXMoKSA8IG5zLmhhY2tuZXQubWF4TnVtTm9kZXMoKSkge1xcbiAgICAgICAgICAgIHVwZ3JhZGVUeXBlID0gXFxcIm5ld1xcXCI7XFxuICAgICAgICAgICAgdXBncmFkZUNvc3QgPSBucy5oYWNrbmV0LmdldFB1cmNoYXNlTm9kZUNvc3QoKTtcXG4gICAgICAgIH1cXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnMuaGFja25ldC5udW1Ob2RlcygpOyBpKyspIHtcXG4gICAgICAgICAgICBpZiAobnMuaGFja25ldC5nZXRMZXZlbFVwZ3JhZGVDb3N0KGksIDEpIDwgdXBncmFkZUNvc3Qpe1xcbiAgICAgICAgICAgICAgICB1cGdyYWRlVHlwZSA9IFxcXCJsZXZlbFxcXCI7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVOb2RlID0gaTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaWYgKG5zLmhhY2tuZXQuZ2V0UmFtVXBncmFkZUNvc3QoaSwgMSkgPCB1cGdyYWRlQ29zdCl7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVUeXBlID0gXFxcInJhbVxcXCI7XFxuICAgICAgICAgICAgICAgIHVwZ3JhZGVOb2RlID0gaTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaWYgKG5zLmhhY2tuZXQuZ2V0Q29yZVVwZ3JhZGVDb3N0KGksIDEpIDwgdXBncmFkZUNvc3Qpe1xcbiAgICAgICAgICAgICAgICB1cGdyYWRlVHlwZSA9IFxcXCJjb3JlXFxcIjtcXG4gICAgICAgICAgICAgICAgdXBncmFkZU5vZGUgPSBpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIFxcbiAgICAgICAgLy8gVHJ5IGJ1eWluZyBpdD9cXG4gICAgICAgIGlmICh1cGdyYWRlVHlwZSA9PSBudWxsKSB7IFxcbiAgICAgICAgICAgIG5zLmFsZXJ0KFxcXCJNYXhlZCBvdXQgaGFja25ldD8hXFxcIilcXG4gICAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuICAgICAgICAvLyBTbGVlcCBsb25nZXIgdG8gd2FpdCBmb3IgbW9uZXlcXG4gICAgICAgIGxldCBtb25leSA9IG5zLmdldFBsYXllcigpLm1vbmV5ICogYWxsb3dhbmNlO1xcbiAgICAgICAgbnMucHJpbnQoXFxcIkkgaGF2ZSBcXFwiICsgbW9uZXkgKyBcXFwiOyBQbGFubmluZyB0byBidXkgXFxcIiArIHVwZ3JhZGVUeXBlICsgXFxcIiBmb3Igbm9kZSBcXFwiICsgdXBncmFkZU5vZGUgKyBcXFwiIGZvciBcXFwiICsgdXBncmFkZUNvc3QpO1xcbiAgICAgICAgaWYgKG1vbmV5IDwgdXBncmFkZUNvc3QpIHsgYXdhaXQgbnMuc2xlZXAoNTAwKTsgY29udGludWU7fVxcbiAgICAgICAgc3dpdGNoICh1cGdyYWRlVHlwZSkge1xcbiAgICAgICAgICAgIGNhc2UgXFxcIm5ld1xcXCI6XFxuICAgICAgICAgICAgICAgIG5zLmhhY2tuZXQucHVyY2hhc2VOb2RlKCk7XFxuICAgICAgICAgICAgICAgIGJyZWFrO1xcbiAgICAgICAgICAgIGNhc2UgXFxcImxldmVsXFxcIjpcXG4gICAgICAgICAgICAgICAgbnMuaGFja25ldC51cGdyYWRlTGV2ZWwodXBncmFkZU5vZGUsIDEpO1xcbiAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICBjYXNlIFxcXCJyYW1cXFwiOlxcbiAgICAgICAgICAgICAgICBucy5oYWNrbmV0LnVwZ3JhZGVSYW0odXBncmFkZU5vZGUsIDEpO1xcbiAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICBjYXNlIFxcXCJjb3JlXFxcIjpcXG4gICAgICAgICAgICAgICAgbnMuaGFja25ldC51cGdyYWRlQ29yZSh1cGdyYWRlTm9kZSwgMSk7XFxuICAgICAgICAgICAgICAgIGJyZWFrO1xcbiAgICAgICAgfVxcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTApO1xcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tuZXQtbG9yZC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrbmV0LWxvcmQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UwMzcyYzRhLTQ5ODktNDU5Zi1hNmUxLTExMTFmYzM0MmFiOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDU5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuMSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJuc1wiLFwibmFtZVwiOlwiaGFja25ldFwiLFwiY29zdFwiOjR9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQbGF5ZXJcIixcImNvc3RcIjowLjV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIEBwdWJsaWNcXG4gKi9cXG4gdHlwZSBGaWxlbmFtZU9yUElEID0gbnVtYmVyIHwgc3RyaW5nO1xcblxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFBsYXllciB7XFxuICAgaGFja2luZzogbnVtYmVyO1xcbiAgIGhwOiBudW1iZXI7XFxuICAgbWF4X2hwOiBudW1iZXI7XFxuICAgc3RyZW5ndGg6IG51bWJlcjtcXG4gICBkZWZlbnNlOiBudW1iZXI7XFxuICAgZGV4dGVyaXR5OiBudW1iZXI7XFxuICAgYWdpbGl0eTogbnVtYmVyO1xcbiAgIGNoYXJpc21hOiBudW1iZXI7XFxuICAgaW50ZWxsaWdlbmNlOiBudW1iZXI7XFxuICAgaGFja2luZ19jaGFuY2VfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfc3BlZWRfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfZ3Jvd19tdWx0OiBudW1iZXI7XFxuICAgaGFja2luZ19leHA6IG51bWJlcjtcXG4gICBzdHJlbmd0aF9leHA6IG51bWJlcjtcXG4gICBkZWZlbnNlX2V4cDogbnVtYmVyO1xcbiAgIGRleHRlcml0eV9leHA6IG51bWJlcjtcXG4gICBhZ2lsaXR5X2V4cDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX2V4cDogbnVtYmVyO1xcbiAgIGhhY2tpbmdfbXVsdDogbnVtYmVyO1xcbiAgIHN0cmVuZ3RoX211bHQ6IG51bWJlcjtcXG4gICBkZWZlbnNlX211bHQ6IG51bWJlcjtcXG4gICBkZXh0ZXJpdHlfbXVsdDogbnVtYmVyO1xcbiAgIGFnaWxpdHlfbXVsdDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX211bHQ6IG51bWJlcjtcXG4gICBoYWNraW5nX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgc3RyZW5ndGhfZXhwX211bHQ6IG51bWJlcjtcXG4gICBkZWZlbnNlX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgZGV4dGVyaXR5X2V4cF9tdWx0OiBudW1iZXI7XFxuICAgYWdpbGl0eV9leHBfbXVsdDogbnVtYmVyO1xcbiAgIGNoYXJpc21hX2V4cF9tdWx0OiBudW1iZXI7XFxuICAgY29tcGFueV9yZXBfbXVsdDogbnVtYmVyO1xcbiAgIGZhY3Rpb25fcmVwX211bHQ6IG51bWJlcjtcXG4gICBudW1QZW9wbGVLaWxsZWQ6IG51bWJlcjtcXG4gICBtb25leTogbnVtYmVyO1xcbiAgIGNpdHk6IHN0cmluZztcXG4gICBsb2NhdGlvbjogc3RyaW5nO1xcbiAgIGNvbXBhbnlOYW1lOiBzdHJpbmc7XFxuICAgY3JpbWVfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGNyaW1lX3N1Y2Nlc3NfbXVsdDogbnVtYmVyO1xcbiAgIGlzV29ya2luZzogYm9vbGVhbjtcXG4gICB3b3JrVHlwZTogc3RyaW5nO1xcbiAgIGN1cnJlbnRXb3JrRmFjdGlvbk5hbWU6IHN0cmluZztcXG4gICBjdXJyZW50V29ya0ZhY3Rpb25EZXNjcmlwdGlvbjogc3RyaW5nO1xcbiAgIHdvcmtIYWNrRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrU3RyRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrRGVmRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrRGV4RXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrQWdpRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrQ2hhRXhwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrUmVwR2FpblJhdGU6IG51bWJlcjtcXG4gICB3b3JrTW9uZXlHYWluUmF0ZTogbnVtYmVyO1xcbiAgIHdvcmtNb25leUxvc3NSYXRlOiBudW1iZXI7XFxuICAgd29ya0hhY2tFeHBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrU3RyRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgd29ya0RlZkV4cEdhaW5lZDogbnVtYmVyO1xcbiAgIHdvcmtEZXhFeHBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrQWdpRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgd29ya0NoYUV4cEdhaW5lZDogbnVtYmVyO1xcbiAgIHdvcmtSZXBHYWluZWQ6IG51bWJlcjtcXG4gICB3b3JrTW9uZXlHYWluZWQ6IG51bWJlcjtcXG4gICBjcmVhdGVQcm9ncmFtTmFtZTogc3RyaW5nO1xcbiAgIGNyZWF0ZVByb2dyYW1SZXFMdmw6IG51bWJlcjtcXG4gICBjbGFzc05hbWU6IHN0cmluZztcXG4gICBjcmltZVR5cGU6IHN0cmluZztcXG4gICB3b3JrX21vbmV5X211bHQ6IG51bWJlcjtcXG4gICBoYWNrbmV0X25vZGVfbW9uZXlfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHQ6IG51bWJlcjtcXG4gICBoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9jb3JlX2Nvc3RfbXVsdDogbnVtYmVyO1xcbiAgIGhhY2tuZXRfbm9kZV9sZXZlbF9jb3N0X211bHQ6IG51bWJlcjtcXG4gICBoYXNXc2VBY2NvdW50OiBib29sZWFuO1xcbiAgIGhhc1RpeEFwaUFjY2VzczogYm9vbGVhbjtcXG4gICBoYXM0U0RhdGE6IGJvb2xlYW47XFxuICAgaGFzNFNEYXRhVGl4QXBpOiBib29sZWFuO1xcbiAgIGJsYWRlYnVybmVyX21heF9zdGFtaW5hX211bHQ6IG51bWJlcjtcXG4gICBibGFkZWJ1cm5lcl9zdGFtaW5hX2dhaW5fbXVsdDogbnVtYmVyO1xcbiAgIGJsYWRlYnVybmVyX2FuYWx5c2lzX211bHQ6IG51bWJlcjtcXG4gICBibGFkZWJ1cm5lcl9zdWNjZXNzX2NoYW5jZV9tdWx0OiBudW1iZXI7XFxuICAgYml0Tm9kZU46IG51bWJlcjtcXG4gICB0b3RhbFBsYXl0aW1lOiBudW1iZXI7XFxuICAgcGxheXRpbWVTaW5jZUxhc3RBdWc6IG51bWJlcjtcXG4gICBwbGF5dGltZVNpbmNlTGFzdEJpdG5vZGU6IG51bWJlcjtcXG4gICBqb2JzOiBhbnk7XFxuICAgZmFjdGlvbnM6IHN0cmluZ1tdO1xcbiAgIHRvcjogYm9vbGVhbjtcXG4gICBoYXNDb3Jwb3JhdGlvbjogYm9vbGVhbjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBSdW5uaW5nU2NyaXB0IHtcXG4gICBhcmdzOiBzdHJpbmdbXTtcXG4gICBmaWxlbmFtZTogc3RyaW5nO1xcbiAgIGxvZ3M6IHN0cmluZ1tdO1xcbiAgIG9mZmxpbmVFeHBHYWluZWQ6IG51bWJlcjtcXG4gICBvZmZsaW5lTW9uZXlNYWRlOiBudW1iZXI7XFxuICAgb2ZmbGluZVJ1bm5pbmdUaW1lOiBudW1iZXI7XFxuICAgb25saW5lRXhwR2FpbmVkOiBudW1iZXI7XFxuICAgb25saW5lTW9uZXlNYWRlOiBudW1iZXI7XFxuICAgb25saW5lUnVubmluZ1RpbWU6IG51bWJlcjtcXG4gICBwaWQ6IG51bWJlcjtcXG4gICByYW1Vc2FnZTogbnVtYmVyO1xcbiAgIHNlcnZlcjogc3RyaW5nO1xcbiAgIHRocmVhZHM6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIERhdGEgcmVwcmVzZW50aW5nIHRoZSBpbnRlcm5hbCB2YWx1ZXMgb2YgYSBjcmltZS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBDcmltZVN0YXRzIHtcXG4gICAvKiogTnVtYmVyIHJlcHJlc2VudGluZyB0aGUgZGlmZmljdWx0eSBvZiB0aGUgY3JpbWUuIFVzZWQgZm9yIHN1Y2Nlc3MgY2hhbmNlIGNhbGN1bGF0aW9ucyAqL1xcbiAgIGRpZmZpY3VsdHk6IG51bWJlcjtcXG4gICAvKiogQW1vdW50IG9mIGthcm1hIGxvc3QgZm9yIHN1Y2Nlc3NmdWxseSBjb21taXR0aW5nIHRoaXMgY3JpbWUgKi9cXG4gICBrYXJtYTogbnVtYmVyO1xcbiAgIC8qKiBIb3cgbWFueSBwZW9wbGUgZGllIGFzIGEgcmVzdWx0IG9mIHRoaXMgY3JpbWUgKi9cXG4gICBraWxsczogbnVtYmVyO1xcbiAgIC8qKiBIb3cgbXVjaCBtb25leSBpcyBnaXZlbiAqL1xcbiAgIG1vbmV5OiBudW1iZXI7XFxuICAgLyoqIE5hbWUgb2YgY3JpbWUgKi9cXG4gICBuYW1lOiBudW1iZXI7XFxuICAgLyoqIE1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBhdHRlbXB0IHRoZSBjcmltZSAqL1xcbiAgIHRpbWU6IG51bWJlcjtcXG4gICAvKiogRGVzY3JpcHRpb24gb2YgdGhlIGNyaW1lIGFjdGl2aXR5ICovXFxuICAgdHlwZTogc3RyaW5nO1xcbiAgIC8qKiBoYWNraW5nIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBoYWNraW5nX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIHN0cmVuZ3RoIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBzdHJlbmd0aF9zdWNjZXNzX3dlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBkZWZlbnNlIGxldmVsIGltcGFjdCBvbiBzdWNjZXNzIGNoYW5nZSBvZiB0aGUgY3JpbWUgKi9cXG4gICBkZWZlbnNlX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGRleHRlcml0eSBsZXZlbCBpbXBhY3Qgb24gc3VjY2VzcyBjaGFuZ2Ugb2YgdGhlIGNyaW1lICovXFxuICAgZGV4dGVyaXR5X3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGFnaWxpdHkgbGV2ZWwgaW1wYWN0IG9uIHN1Y2Nlc3MgY2hhbmdlIG9mIHRoZSBjcmltZSAqL1xcbiAgIGFnaWxpdHlfc3VjY2Vzc193ZWlnaHQ6IG51bWJlcjtcXG4gICAvKiogY2hhcmlzbWEgbGV2ZWwgaW1wYWN0IG9uIHN1Y2Nlc3MgY2hhbmdlIG9mIHRoZSBjcmltZSAqL1xcbiAgIGNoYXJpc21hX3N1Y2Nlc3Nfd2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIGhhY2tpbmcgZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgaGFja2luZ19leHA6IG51bWJlcjtcXG4gICAvKiogc3RyZW5ndGggZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgc3RyZW5ndGhfZXhwOiBudW1iZXI7XFxuICAgLyoqIGRlZmVuc2UgZXhwIGdhaW5lZCBmcm9tIGNyaW1lICovXFxuICAgZGVmZW5zZV9leHA6IG51bWJlcjtcXG4gICAvKiogZGV4dGVyaXR5IGV4cCBnYWluZWQgZnJvbSBjcmltZSAqL1xcbiAgIGRleHRlcml0eV9leHA6IG51bWJlcjtcXG4gICAvKiogYWdpbGl0eSBleHAgZ2FpbmVkIGZyb20gY3JpbWUgKi9cXG4gICBhZ2lsaXR5X2V4cDogbnVtYmVyO1xcbiAgIC8qKiBjaGFyaXNtYSBleHAgZ2FpbmVkIGZyb20gY3JpbWUgKi9cXG4gICBjaGFyaXNtYV9leHA6IG51bWJlcjtcXG4gICAvKiogaW50ZWxsaWdlbmNlIGV4cCBnYWluZWQgZnJvbSBjcmltZSAqL1xcbiAgIGludGVsbGlnZW5jZV9leHA6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIERhdGEgcmVwcmVzZW50aW5nIHRoZSBpbnRlcm5hbCB2YWx1ZXMgb2YgYW4gQXVnbWVudGF0aW9uLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEF1Z21lbnRhdGlvblN0YXRzIHtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGhhY2tpbmcgc2tpbGwgKi9cXG4gICBoYWNraW5nX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBzdHJlbmd0aCBza2lsbCAqL1xcbiAgIHN0cmVuZ3RoX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBkZWZlbnNlIHNraWxsICovXFxuICAgZGVmZW5zZV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gZGV4dGVyaXR5IHNraWxsICovXFxuICAgZGV4dGVyaXR5X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhZ2lsaXR5IHNraWxsICovXFxuICAgYWdpbGl0eV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gY2hhcmlzbWEgc2tpbGwgKi9cXG4gICBjaGFyaXNtYV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gaGFja2luZyBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIGhhY2tpbmdfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBzdHJlbmd0aCBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIHN0cmVuZ3RoX2V4cF9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gZGVmZW5zZSBleHBlcmllbmNlIGdhaW4gcmF0ZSAqL1xcbiAgIGRlZmVuc2VfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBkZXh0ZXJpdHkgZXhwZXJpZW5jZSBnYWluIHJhdGUgKi9cXG4gICBkZXh0ZXJpdHlfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhZ2lsaXR5IGV4cGVyaWVuY2UgZ2FpbiByYXRlICovXFxuICAgYWdpbGl0eV9leHBfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNoYXJpc21hIGV4cGVyaWVuY2UgZ2FpbiByYXRlICovXFxuICAgY2hhcmlzbWFfZXhwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjaGFuY2Ugb2Ygc3VjY2Vzc2Z1bGx5IHBlcmZvcm1pbmcgYSBoYWNrICovXFxuICAgaGFja2luZ19jaGFuY2VfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGhhY2tpbmcgc3BlZWQgKi9cXG4gICBoYWNraW5nX3NwZWVkX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgdGhlIHBsYXllciBnYWlucyBmcm9tIGhhY2tpbmcgKi9cXG4gICBoYWNraW5nX21vbmV5X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgaW5qZWN0ZWQgaW50byBzZXJ2ZXJzIHVzaW5nIGdyb3cgKi9cXG4gICBoYWNraW5nX2dyb3dfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGFtb3VudCBvZiByZXB1dGF0aW9uIGdhaW5lZCB3aGVuIHdvcmtpbmcgKi9cXG4gICBjb21wYW55X3JlcF9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gYW1vdW50IG9mIHJlcHV0YXRpb24gZ2FpbmVkIHdoZW4gd29ya2luZyAqL1xcbiAgIGZhY3Rpb25fcmVwX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBhbW91bnQgb2YgbW9uZXkgZ2FpbmVkIGZyb20gY3JpbWVzICovXFxuICAgY3JpbWVfbW9uZXlfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNyaW1lIHN1Y2Nlc3MgcmF0ZSAqL1xcbiAgIGNyaW1lX3N1Y2Nlc3NfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGFtb3VudCBvZiBtb25leSBnYWluZWQgZnJvbSB3b3JraW5nICovXFxuICAgd29ya19tb25leV9tdWx0PzogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsZXIgdG8gYW1vdW50IG9mIG1vbmV5IHByb2R1Y2VkIGJ5IEhhY2tuZXQgTm9kZXMgKi9cXG4gICBoYWNrbmV0X25vZGVfbW9uZXlfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNvc3Qgb2YgcHVyY2hhc2luZyBhIEhhY2tuZXQgTm9kZSAqL1xcbiAgIGhhY2tuZXRfbm9kZV9wdXJjaGFzZV9jb3N0X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjb3N0IG9mIHJhbSBmb3IgYSBIYWNrbmV0IE5vZGUgKi9cXG4gICBoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIGNvc3Qgb2YgY29yZSBmb3IgYSBIYWNrbmV0IE5vZGUgKi9cXG4gICBoYWNrbmV0X25vZGVfY29yZV9jb3N0X211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBjb3N0IG9mIGxldmVsaW5nIHVwIGEgSGFja25ldCBOb2RlICovXFxuICAgaGFja25ldF9ub2RlX2xldmVsX2Nvc3RfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIEJsYWRlYnVybmVyIG1heCBzdGFtaW5hICovXFxuICAgYmxhZGVidXJuZXJfbWF4X3N0YW1pbmFfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIEJsYWRlYnVybmVyIHN0YW1pbmEgZ2FpbiByYXRlICovXFxuICAgYmxhZGVidXJuZXJfc3RhbWluYV9nYWluX211bHQ/OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxlciB0byBlZmZlY3RpdmVuZXNzIGluIEJsYWRlYnVybmVyIEZpZWxkIEFuYWx5c2lzICovXFxuICAgYmxhZGVidXJuZXJfYW5hbHlzaXNfbXVsdD86IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGVyIHRvIHN1Y2Nlc3MgY2hhbmNlIGluIEJsYWRlYnVybmVyIGNvbnRyYWN0cy9vcGVyYXRpb25zICovXFxuICAgYmxhZGVidXJuZXJfc3VjY2Vzc19jaGFuY2VfbXVsdD86IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9wdGlvbnMgdG8gYWZmZWN0IHRoZSBiZWhhdmlvciBvZiB7QGxpbmsgTlMuaGFjayB8IGhhY2t9LCB7QGxpbmsgTlMuZ3JvdyB8IGdyb3d9LCBhbmQge0BsaW5rIE5TLndlYWtlbiB8IHdlYWtlbn0uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQmFzaWNIR1dPcHRpb25zIHtcXG4gICAvKiogTnVtYmVyIG9mIHRocmVhZHMgdG8gdXNlIGZvciB0aGlzIGZ1bmN0aW9uLiBNdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgbnVtYmVyIG9mIHRocmVhZHMgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguICovXFxuICAgdGhyZWFkcz86IG51bWJlcjtcXG4gICAvKiogU2V0IHRvIHRydWUgdGhpcyBhY3Rpb24gd2lsbCBhZmZlY3QgdGhlIHN0b2NrIG1hcmtldC4gKi9cXG4gICBzdG9jaz86IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPcHRpb25zIHRvIGFmZmVjdCB0aGUgYmVoYXZpb3Igb2Yge0BsaW5rIENvZGluZ0NvbnRyYWN0fSBhdHRlbXB0LlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENvZGluZ0F0dGVtcHRPcHRpb25zIHtcXG4gICAvKiogSWYgdHJ1dGh5LCB0aGVuIHRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiBhIHN0cmluZyB0aGF0IHN0YXRlcyB0aGUgY29udHJhY3TigJlzIHJld2FyZCB3aGVuIGl0IGlzIHN1Y2Nlc3NmdWxseSBzb2x2ZWQuICovXFxuICAgcmV0dXJuUmV3YXJkOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogUmV0dXJuIHZhbHVlIG9mIHtAbGluayBTbGVldmUuZ2V0U2xlZXZlUHVyY2hhc2FibGVBdWdzIHwgZ2V0U2xlZXZlUHVyY2hhc2FibGVBdWdzfVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEF1Z21lbnRQYWlyIHtcXG4gICAvKiogYXVnbWVudGF0aW9uIG5hbWUgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIGF1Z21lbnRhdGlvbiBjb3N0ICovXFxuICAgY29zdDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGVudW0gUG9zaXRpb25UeXBlcyB7XFxuICAgTG9uZyA9IFxcXCJMXFxcIixcXG4gICBTaG9ydCA9IFxcXCJTXFxcIixcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBlbnVtIE9yZGVyVHlwZXMge1xcbiAgIExpbWl0QnV5ID0gXFxcIkxpbWl0IEJ1eSBPcmRlclxcXCIsXFxuICAgTGltaXRTZWxsID0gXFxcIkxpbWl0IFNlbGwgT3JkZXJcXFwiLFxcbiAgIFN0b3BCdXkgPSBcXFwiU3RvcCBCdXkgT3JkZXJcXFwiLFxcbiAgIFN0b3BTZWxsID0gXFxcIlN0b3AgU2VsbCBPcmRlclxcXCIsXFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBWYWx1ZSBpbiBtYXAgb2Yge0BsaW5rIFN0b2NrT3JkZXJ9XFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgU3RvY2tPcmRlck9iamVjdCB7XFxuICAgLyoqIE51bWJlciBvZiBzaGFyZXMgKi9cXG4gICBzaGFyZXM6IG51bWJlcjtcXG4gICAvKiogUHJpY2UgcGVyIHNoYXJlICovXFxuICAgcHJpY2U6IG51bWJlcjtcXG4gICAvKiogT3JkZXIgdHlwZSAqL1xcbiAgIHR5cGU6IE9yZGVyVHlwZXM7XFxuICAgLyoqIE9yZGVyIHBvc2l0aW9uICovXFxuICAgcG9zaXRpb246IFBvc2l0aW9uVHlwZXM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBSZXR1cm4gdmFsdWUgb2Yge0BsaW5rIFRJWC5nZXRPcmRlcnMgfCBnZXRPcmRlcnN9XFxuICAqXFxuICAqIEtleXMgYXJlIHN0b2NrIHN5bWJvbHMsIHByb3BlcnRpZXMgYXJlIGFycmF5cyBvZiB7QGxpbmsgU3RvY2tPcmRlck9iamVjdH1cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTdG9ja09yZGVyIHtcXG4gICBba2V5OiBzdHJpbmddOiBTdG9ja09yZGVyT2JqZWN0W107XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBBIHNpbmdsZSBwcm9jZXNzIG9uIGEgc2VydmVyLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFByb2Nlc3NJbmZvIHtcXG4gICAvKiogU2NyaXB0IG5hbWUuICovXFxuICAgZmlsZW5hbWU6IHN0cmluZztcXG4gICAvKiogTnVtYmVyIG9mIHRocmVhZHMgc2NyaXB0IGlzIHJ1bm5pbmcgd2l0aCAqL1xcbiAgIHRocmVhZHM6IG51bWJlcjtcXG4gICAvKiogU2NyaXB0J3MgYXJndW1lbnRzICovXFxuICAgYXJnczogc3RyaW5nW107XFxuICAgLyoqIFByb2Nlc3MgSUQgKi9cXG4gICBwaWQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEhhY2sgcmVsYXRlZCBtdWx0aXBsaWVycy5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBIYWNraW5nTXVsdGlwbGllcnMge1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIGNoYW5jZSBtdWx0aXBsaWVyLiAqL1xcbiAgIGNoYW5jZTogbnVtYmVyO1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIHNwZWVkIG11bHRpcGxpZXIuICovXFxuICAgc3BlZWQ6IG51bWJlcjtcXG4gICAvKiogUGxheWVyJ3MgaGFja2luZyBtb25leSBzdG9sZW4gbXVsdGlwbGllci4gKi9cXG4gICBtb25leTogbnVtYmVyO1xcbiAgIC8qKiBQbGF5ZXIncyBoYWNraW5nIGdyb3d0aCBtdWx0aXBsaWVyICovXFxuICAgZ3Jvd3RoOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgSGFja25ldE11bHRpcGxpZXJzIHtcXG4gICAvKiogUGxheWVyJ3MgaGFja25ldCBwcm9kdWN0aW9uIG11bHRpcGxpZXIgKi9cXG4gICBwcm9kdWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgcHVyY2hhc2UgY29zdCBtdWx0aXBsaWVyICovXFxuICAgcHVyY2hhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgcmFtIGNvc3QgbXVsdGlwbGllciAqL1xcbiAgIHJhbUNvc3Q6IG51bWJlcjtcXG4gICAvKiogUGxheWVyJ3MgaGFja25ldCBjb3JlIGNvc3QgbXVsdGlwbGllciAqL1xcbiAgIGNvcmVDb3N0OiBudW1iZXI7XFxuICAgLyoqIFBsYXllcidzIGhhY2tuZXQgbGV2ZWwgY29zdCBtdWx0aXBsaWVyICovXFxuICAgbGV2ZWxDb3N0OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IG5vZGUgcmVsYXRlZCBjb25zdGFudHNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBIYWNrbmV0Tm9kZUNvbnN0YW50cyB7XFxuICAgLyoqIEFtb3VudCBvZiBtb25leSBnYWluZWQgcGVyIGxldmVsICovXFxuICAgTW9uZXlHYWluUGVyTGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IGZvciBhIG5ldyBub2RlICovXFxuICAgQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHBlciBsZXZlbCAqL1xcbiAgIExldmVsQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3Jhc2UgUkFNICovXFxuICAgUmFtQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgQ29yZUJhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gcHVyY2hhc2UgbmV3IG5vZGUgKi9cXG4gICBQdXJjaGFzZU5leHRNdWx0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gaW5jcmVhc2Ugbm9kZSBsZXZlbCAqL1xcbiAgIFVwZ3JhZGVMZXZlbE11bHQ6IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGllciB0byBpbmNyZWFzZSBSQU0gKi9cXG4gICBVcGdyYWRlUmFtTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgVXBncmFkZUNvcmVNdWx0OiBudW1iZXI7XFxuICAgLyoqIE1heCBub2RlIGxldmVsICovXFxuICAgTWF4TGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTWF4IGFtb3VudCBvZiBSQU0gaW4gR0IgKi9cXG4gICBNYXhSYW06IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBjb3JlcyAqL1xcbiAgIE1heENvcmVzOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IHNlcnZlciByZWxhdGVkIGNvbnN0YW50c1xcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEhhY2tuZXRTZXJ2ZXJDb25zdGFudHMge1xcbiAgIC8qKiBOdW1iZXIgb2YgaGFzaGVzIGNhbGN1bGF0ZWQgcGVyIGxldmVsICovXFxuICAgSGFzaGVzUGVyTGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IGZvciBhIG5ldyBzZXJ2ZXIgKi9cXG4gICBCYXNlQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBCYXNlIGNvc3QgdG8gaW5jcmVhc2UgUkFNICovXFxuICAgUmFtQmFzZUNvc3Q6IG51bWJlcjtcXG4gICAvKiogQmFzZSBjb3N0IHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgQ29yZUJhc2VDb3N0OiBudW1iZXI7XFxuICAgLyoqIEJhc2UgY29zdCB0byB1cGdyYWRlIGNhY2hlICovXFxuICAgQ2FjaGVCYXNlQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIHB1cmNoYXNlIGEgbmV3IHNlcnZlciAqL1xcbiAgIFB1cmNoYXNlTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIHNlcnZlciBsZXZlbCAqL1xcbiAgIFVwZ3JhZGVMZXZlbE11bHQ6IG51bWJlcjtcXG4gICAvKiogTXVsdGlwbGllciB0byBpbmNyZWFzZSBSQU0gKi9cXG4gICBVcGdyYWRlUmFtTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBNdWx0aXBsaWVyIHRvIGluY3JlYXNlIGNvcmVzICovXFxuICAgVXBncmFkZUNvcmVNdWx0OiBudW1iZXI7XFxuICAgLyoqIE11bHRpcGxpZXIgdG8gdXBncmFkZSBjYWNoZSAqL1xcbiAgIFVwZ3JhZGVDYWNoZU11bHQ6IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBzZXJ2ZXJzICovXFxuICAgTWF4U2VydmVyczogbnVtYmVyO1xcbiAgIC8qKiBNYXggbGV2ZWwgZm9yIGEgc2VydmVyICovXFxuICAgTWF4TGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTWF4IGFtb3VudCBvZiBSQU0gaW4gR0IgKi9cXG4gICBNYXhSYW06IG51bWJlcjtcXG4gICAvKiogTWF4IG51bWJlciBvZiBjb3JlcyAqL1xcbiAgIE1heENvcmVzOiBudW1iZXI7XFxuICAgLyoqIE1heCBjYWNoZSBzaXplICovXFxuICAgTWF4Q2FjaGU6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEEgc2luZ2xlIHNlcnZlci5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTZXJ2ZXIge1xcbiAgIC8qKlxcbiAgICAqIEhvdyBtYW55IENQVSBjb3JlcyB0aGlzIHNlcnZlciBoYXMuIE1heGltdW0gb2YgOC5cXG4gICAgKiBBZmZlY3RzIG1hZ25pdHVkZSBvZiBncm93IGFuZCB3ZWFrZW4uXFxuICAgICovXFxuICAgY3B1Q29yZXM6IG51bWJlcjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBGVFAgcG9ydCBpcyBvcGVuICovXFxuICAgZnRwUG9ydE9wZW46IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciBwbGF5ZXIgaGFzIGFkbWluL3Jvb3QgYWNjZXNzIHRvIHRoaXMgc2VydmVyICovXFxuICAgaGFzQWRtaW5SaWdodHM6IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBIb3N0bmFtZS4gTXVzdCBiZSB1bmlxdWUgKi9cXG4gICBob3N0bmFtZTogc3RyaW5nO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgSFRUUCBQb3J0IGlzIG9wZW4gKi9cXG4gICBodHRwUG9ydE9wZW46IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBJUCBBZGRyZXNzLiBNdXN0IGJlIHVuaXF1ZSAqL1xcbiAgIGlwOiBzdHJpbmc7XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciBwbGF5ZXIgaXMgY3VyZW50bHkgY29ubmVjdGVkIHRvIHRoaXMgc2VydmVyICovXFxuICAgaXNDb25uZWN0ZWRUbzogYm9vbGVhbjtcXG4gXFxuICAgLyoqIFJBTSAoR0IpIGF2YWlsYWJsZSBvbiB0aGlzIHNlcnZlciAqL1xcbiAgIG1heFJhbTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBOYW1lIG9mIGNvbXBhbnkvZmFjdGlvbi9ldGMuIHRoYXQgdGhpcyBzZXJ2ZXIgYmVsb25ncyB0by5cXG4gICAgKiBPcHRpb25hbCwgbm90IGFwcGxpY2FibGUgdG8gYWxsIFNlcnZlcnNcXG4gICAgKi9cXG4gICBvcmdhbml6YXRpb25OYW1lOiBzdHJpbmc7XFxuIFxcbiAgIC8qKiBSQU0gKEdCKSB1c2VkLiBpLmUuIHVuYXZhaWxhYmxlIFJBTSAqL1xcbiAgIHJhbVVzZWQ6IG51bWJlcjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIFNNVFAgUG9ydCBpcyBvcGVuICovXFxuICAgc210cFBvcnRPcGVuOiBib29sZWFuO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgU1FMIFBvcnQgaXMgb3BlbiAqL1xcbiAgIHNxbFBvcnRPcGVuOiBib29sZWFuO1xcbiBcXG4gICAvKiogRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIFNTSCBQb3J0IGlzIG9wZW4gKi9cXG4gICBzc2hQb3J0T3BlbjogYm9vbGVhbjtcXG4gXFxuICAgLyoqIEZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIHRoaXMgaXMgYSBwdXJjaGFzZWQgc2VydmVyICovXFxuICAgcHVyY2hhc2VkQnlQbGF5ZXI6IGJvb2xlYW47XFxuIFxcbiAgIC8qKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciB0aGlzIHNlcnZlciBoYXMgYSBiYWNrZG9vciBpbnN0YWxsZWQgYnkgYSBwbGF5ZXIgKi9cXG4gICBiYWNrZG9vckluc3RhbGxlZDogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogSW5pdGlhbCBzZXJ2ZXIgc2VjdXJpdHkgbGV2ZWxcXG4gICAgKiAoaS5lLiBzZWN1cml0eSBsZXZlbCB3aGVuIHRoZSBzZXJ2ZXIgd2FzIGNyZWF0ZWQpXFxuICAgICovXFxuICAgYmFzZURpZmZpY3VsdHk6IG51bWJlcjtcXG4gXFxuICAgLyoqIFNlcnZlciBTZWN1cml0eSBMZXZlbCAqL1xcbiAgIGhhY2tEaWZmaWN1bHR5OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBNaW5pbXVtIHNlcnZlciBzZWN1cml0eSBsZXZlbCB0aGF0IHRoaXMgc2VydmVyIGNhbiBiZSB3ZWFrZW5lZCB0byAqL1xcbiAgIG1pbkRpZmZpY3VsdHk6IG51bWJlcjtcXG4gXFxuICAgLyoqIEhvdyBtdWNoIG1vbmV5IGN1cnJlbnRseSByZXNpZGVzIG9uIHRoZSBzZXJ2ZXIgYW5kIGNhbiBiZSBoYWNrZWQgKi9cXG4gICBtb25leUF2YWlsYWJsZTogbnVtYmVyO1xcbiBcXG4gICAvKiogTWF4aW11bSBhbW91bnQgb2YgbW9uZXkgdGhhdCB0aGlzIHNlcnZlciBjYW4gaG9sZCAqL1xcbiAgIG1vbmV5TWF4OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBOdW1iZXIgb2Ygb3BlbiBwb3J0cyByZXF1aXJlZCBpbiBvcmRlciB0byBnYWluIGFkbWluL3Jvb3QgYWNjZXNzICovXFxuICAgbnVtT3BlblBvcnRzUmVxdWlyZWQ6IG51bWJlcjtcXG4gXFxuICAgLyoqIEhvdyBtYW55IHBvcnRzIGFyZSBjdXJyZW50bHkgb3BlbmVkIG9uIHRoZSBzZXJ2ZXIgKi9cXG4gICBvcGVuUG9ydENvdW50OiBudW1iZXI7XFxuIFxcbiAgIC8qKiBIYWNraW5nIGxldmVsIHJlcXVpcmVkIHRvIGhhY2sgdGhpcyBzZXJ2ZXIgKi9cXG4gICByZXF1aXJlZEhhY2tpbmdTa2lsbDogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBQYXJhbWV0ZXIgdGhhdCBhZmZlY3RzIGhvdyBlZmZlY3RpdmVseSB0aGlzIHNlcnZlcidzIG1vbmV5IGNhblxcbiAgICAqIGJlIGluY3JlYXNlZCB1c2luZyB0aGUgZ3JvdygpIE5ldHNjcmlwdCBmdW5jdGlvblxcbiAgICAqL1xcbiAgIHNlcnZlckdyb3d0aDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQWxsIG11bHRpcGxpZXJzIGFmZmVjdGluZyB0aGUgZGlmZmljdWx0eSBvZiB0aGUgY3VycmVudCBjaGFsbGVuZ2UuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQml0Tm9kZU11bHRpcGxpZXJzIHtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3MgYWdpbGl0eSBsZXZlbCAobm90IGV4cCkgc2NhbGVzICovXFxuICAgQWdpbGl0eUxldmVsTXVsdGlwbGllcjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBiYXNlIGNvc3QgdG8gcHVyY2hhc2UgYW4gYXVnbWVudGF0aW9uLiAqL1xcbiAgIEF1Z21lbnRhdGlvbk1vbmV5Q29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBiYXNlIHJlcCB0aGUgcGxheWVyIG11c3QgaGF2ZSB3aXRoIGEgZmFjdGlvbiB0byBwdXJjaGFzZSBhbiBhdWdtZW50YXRpb24uICovXFxuICAgQXVnbWVudGF0aW9uUmVwQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIgY2FuIGdhaW4gcmFuayB3aXRoaW4gQmxhZGVidXJuZXIuICovXFxuICAgQmxhZGVidXJuZXJSYW5rOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGNvc3Qgb2Ygc2tpbGwgbGV2ZWxzIGZyb20gQmxhZGVidXJuZXIuICovXFxuICAgQmxhZGVidXJuZXJTa2lsbENvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3MgY2hhcmlzbWEgbGV2ZWwgKG5vdCBleHApIHNjYWxlcyAqL1xcbiAgIENoYXJpc21hTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGV4cGVyaWVuY2UgZ2FpbmVkIGZvciBlYWNoIGFiaWxpdHkgd2hlbiBhIHBsYXllciBjb21wbGV0ZXMgYSBjbGFzcy4gKi9cXG4gICBDbGFzc0d5bUV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgYW1vdW50IG9mIG1vbmV5IGdhaW5lZCBmcm9tIGNvbXBsZXRpbmcgQ29kaW5nIENvbnRyYWN0cyAqL1xcbiAgIENvZGluZ0NvbnRyYWN0TW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZSBnYWluZWQgZm9yIGVhY2ggYWJpbGl0eSB3aGVuIHRoZSBwbGF5ZXIgY29tcGxldGVzIHdvcmtpbmcgdGhlaXIgam9iLiAqL1xcbiAgIENvbXBhbnlXb3JrRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IHRoZSBwbGF5ZXIgZWFybnMgd2hlbiBjb21wbGV0aW5nIHdvcmtpbmcgdGhlaXIgam9iLiAqL1xcbiAgIENvbXBhbnlXb3JrTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgdmFsdWF0aW9uIG9mIGNvcnBvcmF0aW9ucyBjcmVhdGVkIGJ5IHRoZSBwbGF5ZXIuICovXFxuICAgQ29ycG9yYXRpb25WYWx1YXRpb246IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgYmFzZSBleHBlcmllbmNlIGdhaW5lZCBmb3IgZWFjaCBhYmlsaXR5IHdoZW4gdGhlIHBsYXllciBjb21taXRzIGEgY3JpbWUuICovXFxuICAgQ3JpbWVFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGJhc2UgbW9uZXkgZ2FpbmVkIHdoZW4gdGhlIHBsYXllciBjb21taXRzIGEgY3JpbWUuICovXFxuICAgQ3JpbWVNb25leTogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtYW55IEF1Z21lbnRhdGlvbnMgeW91IG5lZWQgaW4gb3JkZXIgdG8gZ2V0IGludml0ZWQgdG8gdGhlIERhZWRhbHVzIGZhY3Rpb24gKi9cXG4gICBEYWVkYWx1c0F1Z3NSZXF1aXJlbWVudDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIncyBkZWZlbnNlIGxldmVsIChub3QgZXhwKSBzY2FsZXMgKi9cXG4gICBEZWZlbnNlTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IHF1aWNrbHkgdGhlIHBsYXllcidzIGRleHRlcml0eSBsZXZlbCAobm90IGV4cCkgc2NhbGVzICovXFxuICAgRGV4dGVyaXR5TGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggcmVwIHRoZSBwbGF5ZXIgZ2FpbnMgaW4gZWFjaCBmYWN0aW9uIHNpbXBseSBieSBiZWluZyBhIG1lbWJlci4gKi9cXG4gICBGYWN0aW9uUGFzc2l2ZVJlcEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZSBnYWluZWQgZm9yIGVhY2ggYWJpbGl0eSB3aGVuIHRoZSBwbGF5ZXIgY29tcGxldGVzIHdvcmsgZm9yIGEgRmFjdGlvbi4gKi9cXG4gICBGYWN0aW9uV29ya0V4cEdhaW46IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgbXVjaCByZXAgdGhlIHBsYXllciBnYWlucyB3aGVuIHBlcmZvcm1pbmcgd29yayBmb3IgYSBmYWN0aW9uLiAqL1xcbiAgIEZhY3Rpb25Xb3JrUmVwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIGl0IGNvc3RzIHRvIHVubG9jayB0aGUgc3RvY2sgbWFya2V0J3MgNFMgTWFya2V0IERhdGEgQVBJICovXFxuICAgRm91clNpZ21hTWFya2V0RGF0YUFwaUNvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgbXVjaCBpdCBjb3N0cyB0byB1bmxvY2sgdGhlIHN0b2NrIG1hcmtldCdzIDRTIE1hcmtldCBEYXRhIChOT1QgQVBJKSAqL1xcbiAgIEZvdXJTaWdtYU1hcmtldERhdGFDb3N0OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIHJlc3BlY3QgZ2FpbiBhbmQgbW9uZXkgZ2FpbiBvZiB5b3VyIGdhbmcuICovXFxuICAgR2FuZ1NvZnRjYXA6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgZXhwZXJpZW5jZWQgZ2FpbmVkIHdoZW4gaGFja2luZyBhIHNlcnZlci4gKi9cXG4gICBIYWNrRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBxdWlja2x5IHRoZSBwbGF5ZXIncyBoYWNraW5nIGxldmVsIChub3QgZXhwZXJpZW5jZSkgc2NhbGVzICovXFxuICAgSGFja2luZ0xldmVsTXVsdGlwbGllcjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGlzIHByb2R1Y2VkIGJ5IEhhY2tuZXQgTm9kZXMgYW5kIHRoZSBoYXNoIHJhdGUgb2YgSGFja25ldCBTZXJ2ZXJzICh1bmxvY2tlZCBpbiBCaXROb2RlLTkpICovXFxuICAgSGFja25ldE5vZGVNb25leTogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGl0IGNvc3RzIHRvIHVwZ3JhZGUgeW91ciBob21lIGNvbXB1dGVyJ3MgUkFNICovXFxuICAgSG9tZUNvbXB1dGVyUmFtQ29zdDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGlzIGdhaW5lZCB3aGVuIHRoZSBwbGF5ZXIgaW5maWx0cmF0ZXMgYSBjb21wYW55LiAqL1xcbiAgIEluZmlsdHJhdGlvbk1vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggcmVwIHRoZSBwbGF5ZXIgY2FuIGdhaW4gZnJvbSBmYWN0aW9ucyB3aGVuIHNlbGxpbmcgc3RvbGVuIGRvY3VtZW50cyBhbmQgc2VjcmV0cyAqL1xcbiAgIEluZmlsdHJhdGlvblJlcDogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIGhvdyBtdWNoIG1vbmV5IGNhbiBiZSBzdG9sZW4gZnJvbSBhIHNlcnZlciB3aGVuIHRoZSBwbGF5ZXIgcGVyZm9ybXMgYSBoYWNrIGFnYWluc3QgaXQgdGhyb3VnaCB0aGUgVGVybWluYWwuICovXFxuICAgTWFudWFsSGFja01vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZSBob3cgbXVjaCBpdCBjb3N0cyB0byBwdXJjaGFzZSBhIHNlcnZlciAqL1xcbiAgIFB1cmNoYXNlZFNlcnZlckNvc3Q6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgcHVyY2hhc2VkIHNlcnZlcnMgeW91IGNhbiBoYXZlICovXFxuICAgUHVyY2hhc2VkU2VydmVyTGltaXQ6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWF4aW11bSBhbGxvd2VkIFJBTSBmb3IgYSBwdXJjaGFzZWQgc2VydmVyICovXFxuICAgUHVyY2hhc2VkU2VydmVyTWF4UmFtOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgY29zdCBvZiBhbnkgcHVyY2hhc2VkIHNlcnZlciBhdCBvciBhYm92ZSAxMjhHQiAqL1xcbiAgIFB1cmNoYXNlZFNlcnZlclNvZnRDYXA6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgbWluaW11bSBmYXZvciB0aGUgcGxheWVyIG11c3QgaGF2ZSB3aXRoIGEgZmFjdGlvbiBiZWZvcmUgdGhleSBjYW4gZG9uYXRlIHRvIGdhaW4gcmVwLiAqL1xcbiAgIFJlcFRvRG9uYXRlVG9GYWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggdGhlIG1vbmV5IG9uIGEgc2VydmVyIGNhbiBiZSByZWR1Y2VkIHdoZW4gYSBzY3JpcHQgcGVyZm9ybXMgYSBoYWNrIGFnYWluc3QgaXQuICovXFxuICAgU2NyaXB0SGFja01vbmV5OiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgaG93IG11Y2ggb2YgdGhlIG1vbmV5IHN0b2xlbiBieSBhIHNjcmlwdGVkIGhhY2sgd2lsbCBiZSBhZGRlZCB0byB0aGUgcGxheWVyJ3MgbW9uZXkuICovXFxuICAgU2NyaXB0SGFja01vbmV5R2FpbjogbnVtYmVyO1xcbiAgIC8qKiBJbmZsdWVuY2VzIHRoZSBncm93dGggcGVyY2VudGFnZSBwZXIgY3ljbGUgYWdhaW5zdCBhIHNlcnZlci4gKi9cXG4gICBTZXJ2ZXJHcm93dGhSYXRlOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIG1heG1pbXVtIG1vbmV5IHRoYXQgYSBzZXJ2ZXIgY2FuIGdyb3cgdG8uICovXFxuICAgU2VydmVyTWF4TW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgaW5pdGlhbCBtb25leSB0aGF0IGEgc2VydmVyIHN0YXJ0cyB3aXRoLiAqL1xcbiAgIFNlcnZlclN0YXJ0aW5nTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgaW5pdGlhbCBzZWN1cml0eSBsZXZlbCAoaGFja0RpZmZpY3VsdHkpIG9mIGEgc2VydmVyLiAqL1xcbiAgIFNlcnZlclN0YXJ0aW5nU2VjdXJpdHk6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgd2Vha2VuIGFtb3VudCBwZXIgaW52b2NhdGlvbiBhZ2FpbnN0IGEgc2VydmVyLiAqL1xcbiAgIFNlcnZlcldlYWtlblJhdGU6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyBob3cgcXVpY2tseSB0aGUgcGxheWVyJ3Mgc3RyZW5ndGggbGV2ZWwgKG5vdCBleHApIHNjYWxlcyAqL1xcbiAgIFN0cmVuZ3RoTGV2ZWxNdWx0aXBsaWVyOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIHBvd2VyIG9mIHRoZSBnaWZ0ICovXFxuICAgU3RhbmVrc0dpZnRQb3dlck11bHRpcGxpZXI6IG51bWJlcjtcXG4gICAvKiogSW5mbHVlbmNlcyB0aGUgc2l6ZSBvZiB0aGUgZ2lmdCAqL1xcbiAgIFN0YW5la3NHaWZ0RXh0cmFTaXplOiBudW1iZXI7XFxuICAgLyoqIEluZmx1ZW5jZXMgdGhlIGhhY2tpbmcgc2tpbGwgcmVxdWlyZWQgdG8gYmFja2Rvb3IgdGhlIHdvcmxkIGRhZW1vbi4gKi9cXG4gICBXb3JsZERhZW1vbkRpZmZpY3VsdHk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgYWxsIHRoZSB2YWx1ZXMgcmVsYXRlZCB0byBhIGhhY2tuZXQgbm9kZS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBOb2RlU3RhdHMge1xcbiAgIC8qKiBOb2RlJ3MgbmFtZSAqL1xcbiAgIG5hbWU6IHN0cmluZztcXG4gICAvKiogTm9kZSdzIGxldmVsICovXFxuICAgbGV2ZWw6IG51bWJlcjtcXG4gICAvKiogTm9kZSdzIFJBTSAoR0IpICovXFxuICAgcmFtOiBudW1iZXI7XFxuICAgLyoqIE5vZGUncyB1c2VkIFJBTSAoR0IpICovXFxuICAgcmFtVXNlZDogbnVtYmVyO1xcbiAgIC8qKiBOb2RlJ3MgbnVtYmVyIG9mIGNvcmVzICovXFxuICAgY29yZXM6IG51bWJlcjtcXG4gICAvKiogQ2FjaGUgbGV2ZWwuIE9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICovXFxuICAgY2FjaGU6IG51bWJlcjtcXG4gICAvKiogSGFzaCBDYXBhY2l0eSBwcm92aWRlZCBieSB0aGlzIE5vZGUuIE9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICovXFxuICAgaGFzaENhcGFjaXR5OiBudW1iZXI7XFxuICAgLyoqIE5vZGUncyBwcm9kdWN0aW9uIHBlciBzZWNvbmQgKi9cXG4gICBwcm9kdWN0aW9uOiBudW1iZXI7XFxuICAgLyoqIE51bWJlciBvZiBzZWNvbmRzIHNpbmNlIE5vZGUgaGFzIGJlZW4gcHVyY2hhc2VkICovXFxuICAgdGltZU9ubGluZTogbnVtYmVyO1xcbiAgIC8qKiBUb3RhbCBudW1iZXIgb2YgbW9uZXkgTm9kZSBoYXMgcHJvZHVjZWQgKi9cXG4gICB0b3RhbFByb2R1Y3Rpb246IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFNob3J0IHN1bW1hcnkgb2YgdGhlIHBsYXllcnMgc2tpbGxzLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFBsYXllclNraWxscyB7XFxuICAgLyoqIEhhY2tpbmcgbGV2ZWwgKi9cXG4gICBoYWNraW5nOiBudW1iZXI7XFxuICAgLyoqIFN0cmVuZ3RoIGxldmVsICovXFxuICAgc3RyZW5ndGg6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBsZXZlbCAqL1xcbiAgIGRlZmVuc2U6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IGxldmVsICovXFxuICAgZGV4dGVyaXR5OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgbGV2ZWwgKi9cXG4gICBhZ2lsaXR5OiBudW1iZXI7XFxuICAgLyoqIENocmFpc21hIGxldmVsICovXFxuICAgY2hhcmlzbWE6IG51bWJlcjtcXG4gICAvKiogSW50ZWxsaWdlbmNlIGxldmVsICovXFxuICAgaW50ZWxsaWdlbmNlOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENoYXJhY3Rlck11bHQge1xcbiAgIC8qKiBBZ2lsaXR5IHN0YXQgKi9cXG4gICBhZ2lsaXR5OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgZXhwICovXFxuICAgYWdpbGl0eUV4cDogbnVtYmVyO1xcbiAgIC8qKiBDb21wYW55IHJlcHV0YXRpb24gKi9cXG4gICBjb21wYW55UmVwOiBudW1iZXI7XFxuICAgLyoqIE1vbmV5IGVhcm5lZCBmcm9tIGNyaW1lcyAqL1xcbiAgIGNyaW1lTW9uZXk6IG51bWJlcjtcXG4gICAvKiogQ3JpbWUgc3VjY2VzcyBjaGFuY2UgKi9cXG4gICBjcmltZVN1Y2Nlc3M6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBzdGF0ICovXFxuICAgZGVmZW5zZTogbnVtYmVyO1xcbiAgIC8qKiBEZWZlbnNlIGV4cCAqL1xcbiAgIGRlZmVuc2VFeHA6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IHN0YXQgKi9cXG4gICBkZXh0ZXJpdHk6IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IGV4cCAqL1xcbiAgIGRleHRlcml0eUV4cDogbnVtYmVyO1xcbiAgIC8qKiBGYWN0aW9uIHJlcHV0YXRpb24gKi9cXG4gICBmYWN0aW9uUmVwOiBudW1iZXI7XFxuICAgLyoqIEhhY2tpbmcgc3RhdCAqL1xcbiAgIGhhY2tpbmc6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBleHAgKi9cXG4gICBoYWNraW5nRXhwOiBudW1iZXI7XFxuICAgLyoqIFN0cmVuZ3RoIHN0YXQgKi9cXG4gICBzdHJlbmd0aDogbnVtYmVyO1xcbiAgIC8qKiBTdHJlbmd0aCBleHAgKi9cXG4gICBzdHJlbmd0aEV4cDogbnVtYmVyO1xcbiAgIC8qKiBNb25leSBlYXJuZWQgZnJvbSBqb2JzICovXFxuICAgd29ya01vbmV5OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENoYXJhY3RlckluZm8ge1xcbiAgIC8qKiBDdXJyZW50IEJpdE5vZGUgbnVtYmVyICovXFxuICAgYml0bm9kZTogbnVtYmVyO1xcbiAgIC8qKiBOYW1lIG9mIGNpdHkgeW91IGFyZSBjdXJyZW50bHkgaW4gKi9cXG4gICBjaXR5OiBzdHJpbmc7XFxuICAgLyoqIEFycmF5IG9mIGZhY3Rpb25zIHlvdSBhcmUgY3VycmVudGx5IGEgbWVtYmVyIG9mICovXFxuICAgZmFjdGlvbnM6IHN0cmluZ1tdO1xcbiAgIC8qKiBDdXJyZW50IGhlYWx0aCBwb2ludHMgKi9cXG4gICBocDogbnVtYmVyO1xcbiAgIC8qKiBBcnJheSBvZiBhbGwgY29tcGFuaWVzIGF0IHdoaWNoIHlvdSBoYXZlIGpvYnMgKi9cXG4gICBjb21wYW55OiBzdHJpbmdbXTtcXG4gICAvKiogQXJyYXkgb2Ygam9iIHBvc2l0aW9ucyBmb3IgYWxsIGNvbXBhbmllcyB5b3UgYXJlIGVtcGxveWVkIGF0LiBTYW1lIG9yZGVyIGFzICdqb2JzJyAqL1xcbiAgIGpvYlRpdGxlOiBzdHJpbmdbXTtcXG4gICAvKiogTWF4aW11bSBoZWFsdGggcG9pbnRzICovXFxuICAgbWF4SHA6IG51bWJlcjtcXG4gICAvKiogQm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHlvdSBoYXZlIGEgdG9yIHJvdXRlciAqL1xcbiAgIHRvcjogYm9vbGVhbjtcXG4gICAvKiogT2JqZWN0IHdpdGggbWFueSBvZiB0aGUgcGxheWVyJ3MgbXVsdGlwbGllcnMgZnJvbSBBdWdtZW50YXRpb25zL1NvdXJjZSBGaWxlcyAqL1xcbiAgIG11bHQ6IENoYXJhY3Rlck11bHQ7XFxuICAgLyoqIFRpbWVkIHdvcmtlZCBpbiBtcyAqL1xcbiAgIHRpbWVXb3JrZWQ6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya0hhY2tFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIFN0ciBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya1N0ckV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogRGVmIGV4cGVyaWVuY2UgZWFybmVkIHNvIGZhciBmcm9tIHdvcmsgKi9cXG4gICB3b3JrRGVmRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBEZXggZXhwZXJpZW5jZSBlYXJuZWQgc28gZmFyIGZyb20gd29yayAqL1xcbiAgIHdvcmtEZXhFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEFnaSBleHBlcmllbmNlIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrICovXFxuICAgd29ya0FnaUV4cEdhaW46IG51bWJlcjtcXG4gICAvKiogQ2hhIGV4cGVyaWVuY2UgZWFybmVkIHNvIGZhciBmcm9tIHdvcmsgKi9cXG4gICB3b3JrQ2hhRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBSZXB1dGF0aW9uIGVhcm5lZCBzbyBmYXIgZnJvbSB3b3JrLCBpZiBhcHBsaWNhYmxlICovXFxuICAgd29ya1JlcEdhaW46IG51bWJlcjtcXG4gICAvKiogTW9uZXkgZWFybmVkIHNvIGZhciBmcm9tIHdvcmssIGlmIGFwcGxpY2FibGUgKi9cXG4gICB3b3JrTW9uZXlHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNsZWV2ZVdvcmtHYWlucyB7XFxuICAgLyoqIEhhY2tpbmcgZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrSGFja0V4cEdhaW46IG51bWJlcjtcXG4gICAvKiogU3RyZW5ndGggZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrU3RyRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBEZWZlbnNlIGV4cCBnYWluZWQgZnJvbSB3b3JrLCAqL1xcbiAgIHdvcmtEZWZFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIERleHRlcml0eSBleHAgZ2FpbmVkIGZyb20gd29yayAqL1xcbiAgIHdvcmtEZXhFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgZXhwIGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrQWdpRXhwR2FpbjogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBleHAgZ2FpbmVkIGZyb20gd29yayAqL1xcbiAgIHdvcmtDaGFFeHBHYWluOiBudW1iZXI7XFxuICAgLyoqIE1vbmV5IGdhaW5lZCBmcm9tIHdvcmsgKi9cXG4gICB3b3JrTW9uZXlHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNvdXJjZUZpbGVMdmwge1xcbiAgIC8qKiBUaGUgbnVtYmVyIG9mIHRoZSBzb3VyY2UgZmlsZSAqL1xcbiAgIG46IG51bWJlcjtcXG4gICAvKiogVGhlIGxldmVsIG9mIHRoZSBzb3VyY2UgZmlsZSAqL1xcbiAgIGx2bDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQmxhZGVidXJuZXIgY3VycmVudCBhY3Rpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQmxhZGVidXJuZXJDdXJBY3Rpb24ge1xcbiAgIC8qKiBUeXBlIG9mIEFjdGlvbiAqL1xcbiAgIHR5cGU6IHN0cmluZztcXG4gICAvKiogTmFtZSBvZiBBY3Rpb24gKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBHYW5nIGdlbmVyYWwgaW5mby5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBHYW5nR2VuSW5mbyB7XFxuICAgLyoqIE5hbWUgb2YgZmFjdGlvbiB0aGF0IHRoZSBnYW5nIGJlbG9uZ3MgdG8gKFxcXCJTbHVtIFNuYWtlc1xcXCIsIGV0Yy4pICovXFxuICAgZmFjdGlvbjogc3RyaW5nO1xcbiAgIC8qKiBJbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IGl0J3MgYSBoYWNraW5nIGdhbmcgKi9cXG4gICBpc0hhY2tpbmc6IGJvb2xlYW47XFxuICAgLyoqIE1vbmV5IGVhcm5lZCBwZXIgZ2FtZSBjeWNsZSAqL1xcbiAgIG1vbmV5R2FpblJhdGU6IG51bWJlcjtcXG4gICAvKiogR2FuZydzIHBvd2VyIGZvciB0ZXJyaXRvcnkgd2FyZmFyZSAqL1xcbiAgIHBvd2VyOiBudW1iZXI7XFxuICAgLyoqIEdhbmcncyByZXNwZWN0ICovXFxuICAgcmVzcGVjdDogbnVtYmVyO1xcbiAgIC8qKiBSZXNwZWN0IGVhcm5lZCBwZXIgZ2FtZSBjeWNsZSAqL1xcbiAgIHJlc3BlY3RHYWluUmF0ZTogbnVtYmVyO1xcbiAgIC8qKiBBbW91bnQgb2YgdGVycml0b3J5IGhlbGQgKi9cXG4gICB0ZXJyaXRvcnk6IG51bWJlcjtcXG4gICAvKiogQ2xhc2ggY2hhbmNlICovXFxuICAgdGVycml0b3J5Q2xhc2hDaGFuY2U6IG51bWJlcjtcXG4gICAvKiogR2FuZydzIHdhbnRlZCBsZXZlbCAqL1xcbiAgIHdhbnRlZExldmVsOiBudW1iZXI7XFxuICAgLyoqIFdhbnRlZCBsZXZlbCBnYWluZWQvbG9zdCBwZXIgZ2FtZSBjeWNsZSAobmVnYXRpdmUgZm9yIGxvc3NlcykgKi9cXG4gICB3YW50ZWRMZXZlbEdhaW5SYXRlOiBudW1iZXI7XFxuICAgLyoqIEluZGljYXRpbmcgaWYgdGVycml0b3J5IHdhcmZhcmUgaXMgZW5hYmxlZCAqL1xcbiAgIHRlcnJpdG9yeVdhcmZhcmVFbmdhZ2VkOiBib29sZWFuO1xcbiAgIC8qKiBOdW1iZXIgaW5kaWNhdGluZyB0aGUgY3VycmVudCB3YW50ZWQgcGVuYWx0eSAqL1xcbiAgIHdhbnRlZFBlbmFsdHk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgR2FuZ090aGVySW5mb09iamVjdCB7XFxuICAgLyoqIEdhbmcgcG93ZXIgKi9cXG4gICBwb3dlcjogbnVtYmVyO1xcbiAgIC8qKiBHYW5nIHRlcnJpdG9yeSwgaW4gZGVjaW1hbCBmb3JtICovXFxuICAgdGVycml0b3J5OiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdPdGhlckluZm8ge1xcbiAgIFxcXCJTbHVtIFNuYWtlc1xcXCI6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgVGV0cmFkczogR2FuZ090aGVySW5mb09iamVjdDtcXG4gICBcXFwiVGhlIFN5bmRpY2F0ZVxcXCI6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgXFxcIlRoZSBEYXJrIEFybXlcXFwiOiBHYW5nT3RoZXJJbmZvT2JqZWN0O1xcbiAgIFxcXCJTcGVha2VycyBmb3IgdGhlIERlYWRcXFwiOiBHYW5nT3RoZXJJbmZvT2JqZWN0O1xcbiAgIE5pdGVTZWM6IEdhbmdPdGhlckluZm9PYmplY3Q7XFxuICAgXFxcIlRoZSBCbGFjayBIYW5kXFxcIjogR2FuZ090aGVySW5mb09iamVjdDtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgZGF0YSByZXByZXNlbnRpbmcgYSBnYW5nIG1lbWJlciB0YXNrLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdUYXNrU3RhdHMge1xcbiAgIC8qKiBUYXNrIG5hbWUgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIFRhc2sgRGVzY3JpcHRpb24gKi9cXG4gICBkZXNjOiBzdHJpbmc7XFxuICAgLyoqIElzIGEgdGFzayBvZiBhIGhhY2tpbmcgZ2FuZyAqL1xcbiAgIGlzSGFja2luZzogYm9vbGVhbjtcXG4gICAvKiogSXMgYSB0YXNrIG9mIGEgY29tYmF0IGdhbmcgKi9cXG4gICBpc0NvbWJhdDogYm9vbGVhbjtcXG4gICAvKiogQmFzZSByZXNwZWN0IGVhcm5lZCAqL1xcbiAgIGJhc2VSZXNwZWN0OiBudW1iZXI7XFxuICAgLyoqIEJhc2Ugd2FudGVkIGVhcm5lZCAqL1xcbiAgIGJhc2VXYW50ZWQ6IG51bWJlcjtcXG4gICAvKiogQmFzZSBtb25leSBlYXJuZWQgKi9cXG4gICBiYXNlTW9uZXk6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgaGFja1dlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBTdGVuZ3RoIHNraWxsIGltcGFjdCBvbiB0YXNrIHNjYWxpbmcgKi9cXG4gICBzdHJXZWlnaHQ6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgZGVmV2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIERleHRlcml0eSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgZGV4V2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgc2tpbGwgaW1wYWN0IG9uIHRhc2sgc2NhbGluZyAqL1xcbiAgIGFnaVdlaWdodDogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBza2lsbCBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgY2hhV2VpZ2h0OiBudW1iZXI7XFxuICAgLyoqIE51bWJlciByZXByZXNlbnRpbmcgdGhlIGRpZmZpY3VsdHkgb2YgdGhlIHRhc2sgKi9cXG4gICBkaWZmaWN1bHR5OiBudW1iZXI7XFxuICAgLyoqIFRlcnJpdG9yeSBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgdGVycml0b3J5OiBHYW5nVGVycml0b3J5O1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBkYXRhIHJlcHJlc2VudGluZyBhIGdhbmcgbWVtYmVyIGVxdWlwbWVudC5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBFcXVpcG1lbnRTdGF0cyB7XFxuICAgLyoqIFN0cmVuZ3RoIG11bHRpcGxpZXIgKi9cXG4gICBzdHI/OiBudW1iZXI7XFxuICAgLyoqIERlZmVuc2UgbXVsdGlwbGllciAqL1xcbiAgIGRlZj86IG51bWJlcjtcXG4gICAvKiogRGV4dGVyaXR5IG11bHRpcGxpZXIgKi9cXG4gICBkZXg/OiBudW1iZXI7XFxuICAgLyoqIEFnaWxpdHkgbXVsdGlwbGllciAqL1xcbiAgIGFnaT86IG51bWJlcjtcXG4gICAvKiogQ2hhcmlzbWEgbXVsdGlwbGllciAqL1xcbiAgIGNoYT86IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBtdWx0aXBsaWVyICovXFxuICAgaGFjaz86IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgR2FuZ1RlcnJpdG9yeSB7XFxuICAgLyoqIE1vbmV5IGdhaW4gaW1wYWN0IG9uIHRhc2sgc2NhbGluZyAqL1xcbiAgIG1vbmV5OiBudW1iZXI7XFxuICAgLyoqIFJlc3BlY3QgZ2FpbiBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgcmVzcGVjdDogbnVtYmVyO1xcbiAgIC8qKiBXYW50ZWQgZ2FpbiBpbXBhY3Qgb24gdGFzayBzY2FsaW5nICovXFxuICAgd2FudGVkOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmdNZW1iZXJJbmZvIHtcXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgdGFzazogc3RyaW5nO1xcbiAgIGVhcm5lZFJlc3BlY3Q6IG51bWJlcjtcXG4gICBoYWNrOiBudW1iZXI7XFxuICAgc3RyOiBudW1iZXI7XFxuICAgZGVmOiBudW1iZXI7XFxuICAgZGV4OiBudW1iZXI7XFxuICAgYWdpOiBudW1iZXI7XFxuICAgY2hhOiBudW1iZXI7XFxuIFxcbiAgIGhhY2tfZXhwOiBudW1iZXI7XFxuICAgc3RyX2V4cDogbnVtYmVyO1xcbiAgIGRlZl9leHA6IG51bWJlcjtcXG4gICBkZXhfZXhwOiBudW1iZXI7XFxuICAgYWdpX2V4cDogbnVtYmVyO1xcbiAgIGNoYV9leHA6IG51bWJlcjtcXG4gXFxuICAgaGFja19tdWx0OiBudW1iZXI7XFxuICAgc3RyX211bHQ6IG51bWJlcjtcXG4gICBkZWZfbXVsdDogbnVtYmVyO1xcbiAgIGRleF9tdWx0OiBudW1iZXI7XFxuICAgYWdpX211bHQ6IG51bWJlcjtcXG4gICBjaGFfbXVsdDogbnVtYmVyO1xcbiBcXG4gICBoYWNrX2FzY19tdWx0OiBudW1iZXI7XFxuICAgc3RyX2FzY19tdWx0OiBudW1iZXI7XFxuICAgZGVmX2FzY19tdWx0OiBudW1iZXI7XFxuICAgZGV4X2FzY19tdWx0OiBudW1iZXI7XFxuICAgYWdpX2FzY19tdWx0OiBudW1iZXI7XFxuICAgY2hhX2FzY19tdWx0OiBudW1iZXI7XFxuIFxcbiAgIGhhY2tfYXNjX3BvaW50czogbnVtYmVyO1xcbiAgIHN0cl9hc2NfcG9pbnRzOiBudW1iZXI7XFxuICAgZGVmX2FzY19wb2ludHM6IG51bWJlcjtcXG4gICBkZXhfYXNjX3BvaW50czogbnVtYmVyO1xcbiAgIGFnaV9hc2NfcG9pbnRzOiBudW1iZXI7XFxuICAgY2hhX2FzY19wb2ludHM6IG51bWJlcjtcXG4gXFxuICAgdXBncmFkZXM6IHN0cmluZ1tdO1xcbiAgIGF1Z21lbnRhdGlvbnM6IHN0cmluZ1tdO1xcbiBcXG4gICByZXNwZWN0R2FpbjogbnVtYmVyO1xcbiAgIHdhbnRlZExldmVsR2FpbjogbnVtYmVyO1xcbiAgIG1vbmV5R2FpbjogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBHYW5nTWVtYmVyQXNjZW5zaW9uIHtcXG4gICAvKiogQW1vdW50IG9mIHJlc3BlY3QgbG9zdCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIHJlc3BlY3Q6IG51bWJlcjtcXG4gICAvKiogSGFja2luZyBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGhhY2s6IG51bWJlcjtcXG4gICAvKiogU3RyZW5ndGggbXVsdGlwbGllciBnYWluZWQgZnJvbSBhc2NlbmRpbmcgKi9cXG4gICBzdHI6IG51bWJlcjtcXG4gICAvKiogRGVmZW5zZSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGRlZjogbnVtYmVyO1xcbiAgIC8qKiBEZXh0ZXJpdHkgbXVsdGlwbGllciBnYWluZWQgZnJvbSBhc2NlbmRpbmcgKi9cXG4gICBkZXg6IG51bWJlcjtcXG4gICAvKiogQWdpbGl0eSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGFnaTogbnVtYmVyO1xcbiAgIC8qKiBDaGFyaXNtYSBtdWx0aXBsaWVyIGdhaW5lZCBmcm9tIGFzY2VuZGluZyAqL1xcbiAgIGNoYTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBhIHNsZWV2ZSBzdGF0cy5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmVTa2lsbHMge1xcbiAgIC8qKiBDdXJyZW50IHNob2NrIG9mIHRoZSBzbGVldmUgWzAtMTAwXSAqL1xcbiAgIHNob2NrOiBudW1iZXI7XFxuICAgLyoqIEN1cnJlbnQgc3luYyBvZiB0aGUgc2xlZXZlIFswLTEwMF0gKi9cXG4gICBzeW5jOiBudW1iZXI7XFxuICAgLyoqIEN1cnJlbnQgaGFja2luZyBza2lsbCBvZiB0aGUgc2xlZXZlICovXFxuICAgaGFja2luZzogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IHN0cmVuZ3RoIG9mIHRoZSBzbGVldmUgKi9cXG4gICBzdHJlbmd0aDogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IGRlZmVuc2Ugb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGRlZmVuc2U6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCBkZXh0ZXJpdHkgb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGRleHRlcml0eTogbnVtYmVyO1xcbiAgIC8qKiBDdXJyZW50IGFnaWxpdHkgb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGFnaWxpdHk6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCBjaGFyaXNtYSBvZiB0aGUgc2xlZXZlICovXFxuICAgY2hhcmlzbWE6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE9iamVjdCByZXByZXNlbnRpbmcgc2xlZXZlIGluZm9ybWF0aW9uLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNsZWV2ZUluZm9ybWF0aW9uIHtcXG4gICAvKiogTG9jYXRpb24gb2YgdGhlIHNsZWV2ZSAqL1xcbiAgIGNpdHk6IHN0cmluZztcXG4gICAvKiogQ3VycmVudCBocCBvZiB0aGUgc2xlZXZlICovXFxuICAgaHA6IG51bWJlcjtcXG4gICAvKiogTWF4IGhwIG9mIHRoZSBzbGVldmUgKi9cXG4gICBtYXhIcDogbnVtYmVyO1xcbiAgIC8qKiBKb2JzIGF2YWlsYWJsZSB0byB0aGUgc2xlZXZlICovXFxuICAgam9iczogc3RyaW5nW107XFxuICAgLyoqIEpvYiB0aXRsZXMgYXZhaWxhYmxlIHRvIHRoZSBzbGVldmUgKi9cXG4gICBqb2JUaXRsZTogc3RyaW5nW107XFxuICAgLyoqIERvZXMgdGhpcyBzbGVldmUgaGF2ZSBhY2Nlc3MgdG8gdGhlIHRvciByb3V0ZXIgKi9cXG4gICB0b3I6IGJvb2xlYW47XFxuICAgLyoqIFNsZWV2ZSBtdWx0aXBsaWVycyAqL1xcbiAgIG11bHQ6IENoYXJhY3Rlck11bHQ7XFxuICAgLyoqIFRpbWUgc3BlbnQgb24gdGhlIGN1cnJlbnQgdGFzayBpbiBtaWxsaXNlY29uZHMgKi9cXG4gICB0aW1lV29ya2VkOiBudW1iZXI7XFxuICAgLyoqIEVhcm5pbmdzIHN5bmNocm9uaXplZCB0byBvdGhlciBzbGVldmVzICovXFxuICAgZWFybmluZ3NGb3JTbGVldmVzOiBTbGVldmVXb3JrR2FpbnM7XFxuICAgLyoqIEVhcm5pbmdzIHN5bmNocm9uaXplZCB0byB0aGUgcGxheWVyICovXFxuICAgZWFybmluZ3NGb3JQbGF5ZXI6IFNsZWV2ZVdvcmtHYWlucztcXG4gICAvKiogRWFybmluZ3MgZm9yIHRoaXMgc2xlZXZlICovXFxuICAgZWFybmluZ3NGb3JUYXNrOiBTbGVldmVXb3JrR2FpbnM7XFxuICAgLyoqIEZhY3Rpb24gb3IgY29tcGFueSByZXB1dGF0aW9uIGdhaW5lZCBmb3IgdGhlIGN1cnJlbnQgdGFzayAqL1xcbiAgIHdvcmtSZXBHYWluOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPYmplY3QgcmVwcmVzZW50aW5nIGEgc2xlZXZlIGN1cnJlbnQgdGFzay5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmVUYXNrIHtcXG4gICAvKiogVGFzayB0eXBlICovXFxuICAgdGFzazogc3RyaW5nO1xcbiAgIC8qKiBDcmltZSBjdXJyZW50bHkgYXR0ZW1wdGluZywgaWYgYW55ICovXFxuICAgY3JpbWU6IHN0cmluZztcXG4gICAvKiogTG9jYXRpb24gb2YgdGhlIHRhc2ssIGlmIGFueSAqL1xcbiAgIGxvY2F0aW9uOiBzdHJpbmc7XFxuICAgLyoqIFN0YXQgYmVpbmcgdHJhaW5lZCBhdCB0aGUgZ3ltLCBpZiBhbnkgKi9cXG4gICBneW1TdGF0VHlwZTogc3RyaW5nO1xcbiAgIC8qKiBGYWN0aW9uIHdvcmsgdHlwZSBiZWluZyBwZXJmb3JtZWQsIGlmIGFueSAqL1xcbiAgIGZhY3Rpb25Xb3JrVHlwZTogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2JqZWN0IHJlcHJlc2VudGluZyBhIHBvcnQuIEEgcG9ydCBpcyBhIHNlcmlhbGl6ZWQgcXVldWUuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgTmV0c2NyaXB0UG9ydCB7XFxuICAgLyoqXFxuICAgICogV3JpdGUgZGF0YSB0byBhIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVGhlIGRhdGEgcG9wcGVkIG9mZiB0aGUgcXVldWUgaWYgaXQgd2FzIGZ1bGwuXFxuICAgICovXFxuICAgd3JpdGUodmFsdWU6IHN0cmluZyB8IG51bWJlcik6IG51bGwgfCBzdHJpbmcgfCBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEF0dGVtcHQgdG8gd3JpdGUgZGF0YSB0byB0aGUgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBkYXRhIHdhcyBhZGRlZCB0byB0aGUgcG9ydCwgZmFsc2UgaWYgdGhlIHBvcnQgd2FzIGZ1bGxcXG4gICAgKi9cXG4gICB0cnlXcml0ZSh2YWx1ZTogc3RyaW5nIHwgbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2hpZnQgYW4gZWxlbWVudCBvdXQgb2YgdGhlIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJlbW92ZSB0aGUgZmlyc3QgZWxlbWVudCBmcm9tIHRoZSBwb3J0IGFuZCByZXR1cm4gaXQuXFxuICAgICogSWYgdGhlIHBvcnQgaXMgZW1wdHksIHRoZW4gdGhlIHN0cmluZyDigJxOVUxMIFBPUlQgREFUQeKAnSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqIEByZXR1cm5zIHRoZSBkYXRhIHJlYWQuXFxuICAgICovXFxuICAgcmVhZCgpOiBzdHJpbmcgfCBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHJpZXZlIHRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhlIHBvcnQgd2l0aG91dCByZW1vdmluZyBpdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGVlayBhdCB0aGUgZGF0YSBmcm9tIGEgcG9ydC4gSXQgcmV0dXJucyB0aGVcXG4gICAgKiBmaXJzdCBlbGVtZW50IGluIHRoZSBzcGVjaWZpZWQgcG9ydCB3aXRob3V0IHJlbW92aW5nIHRoYXQgZWxlbWVudC4gSWZcXG4gICAgKiB0aGUgcG9ydCBpcyBlbXB0eSwgdGhlIHN0cmluZyDigJxOVUxMIFBPUlQgREFUQeKAnSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqIEByZXR1cm5zIHRoZSBkYXRhIHJlYWRcXG4gICAgKi9cXG4gICBwZWVrKCk6IHN0cmluZyB8IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgdGhlIHBvcnQgaXMgZnVsbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBwb3J0IGlzIGZ1bGwsIG90aGVyd2lzZSBmYWxzZVxcbiAgICAqL1xcbiAgIGZ1bGwoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgdGhlIHBvcnQgaXMgZW1wdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgcG9ydCBpcyBlbXB0eSwgb3RoZXJ3aXNlIGZhbHNlXFxuICAgICovXFxuICAgZW1wdHkoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogRW1wdGllcyBhbGwgZGF0YSBmcm9tIHRoZSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICBjbGVhcigpOiB2b2lkO1xcbiB9XFxuIFxcbiAvKipcXG4gICogU3RvY2sgbWFya2V0IEFQSVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFRJWCB7XFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiB0aGUgc3ltYm9scyBvZiB0aGUgdHJhZGFibGUgc3RvY2tzXFxuICAgICpcXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMiBHQlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHRoZSBzeW1ib2xzIG9mIHRoZSB0cmFkYWJsZSBzdG9ja3MuXFxuICAgICovXFxuICAgZ2V0U3ltYm9scygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcHJpY2Ugb2YgYSBzdG9ja1xcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqIFRoZSBzdG9ja+KAmXMgcHJpY2UgaXMgdGhlIGF2ZXJhZ2Ugb2YgaXRzIGJpZCBhbmQgYXNrIHByaWNlLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHN0b2NrLmdldFByaWNlKFxcXCJGSVNHXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMlxcbiAgICAqIG5zLnN0b2NrLmdldFByaWNlKFxcXCJGSVNHXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBUaGUgcHJpY2Ugb2YgYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRQcmljZShzeW06IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgYXNrIHByaWNlIG9mIHRoYXQgc3RvY2suXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDIgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgVGhlIGFzayBwcmljZSBvZiBhIHN0b2NrLlxcbiAgICAqL1xcbiAgIGdldEFza1ByaWNlKHN5bTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBiaWQgcHJpY2Ugb2YgdGhhdCBzdG9jay5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBUaGUgYmlkIHByaWNlIG9mIGEgc3RvY2suXFxuICAgICovXFxuICAgZ2V0QmlkUHJpY2Uoc3ltOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIHBsYXllcuKAmXMgcG9zaXRpb24gaW4gYSBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBmb3VyIGVsZW1lbnRzIHRoYXQgcmVwcmVzZW50cyB0aGUgcGxheWVy4oCZcyBwb3NpdGlvbiBpbiBhIHN0b2NrLlxcbiAgICAqXFxuICAgICogVGhlIGZpcnN0IGVsZW1lbnQgaXMgdGhlIHJldHVybmVkIGFycmF5IGlzIHRoZSBudW1iZXIgb2Ygc2hhcmVzIHRoZSBwbGF5ZXIgb3ducyBvZlxcbiAgICAqIHRoZSBzdG9jayBpbiB0aGUgTG9uZyBwb3NpdGlvbi4gVGhlIHNlY29uZCBlbGVtZW50IGluIHRoZSBhcnJheSBpcyB0aGUgYXZlcmFnZSBwcmljZVxcbiAgICAqIG9mIHRoZSBwbGF5ZXLigJlzIHNoYXJlcyBpbiB0aGUgTG9uZyBwb3NpdGlvbi5cXG4gICAgKlxcbiAgICAqIFRoZSB0aGlyZCBlbGVtZW50IGluIHRoZSBhcnJheSBpcyB0aGUgbnVtYmVyIG9mIHNoYXJlcyB0aGUgcGxheWVyIG93bnMgb2YgdGhlIHN0b2NrXFxuICAgICogaW4gdGhlIFNob3J0IHBvc2l0aW9uLiBUaGUgZm91cnRoIGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhdmVyYWdlIHByaWNlIG9mIHRoZVxcbiAgICAqIHBsYXllcuKAmXMgU2hvcnQgcG9zaXRpb24uXFxuICAgICpcXG4gICAgKiBBbGwgZWxlbWVudHMgaW4gdGhlIHJldHVybmVkIGFycmF5IGFyZSBudW1lcmljLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHZhciBwb3MgPSBzdG9jay5nZXRQb3NpdGlvbihcXFwiRUNQXFxcIik7XFxuICAgICogdmFyIHNoYXJlcyAgICAgID0gcG9zWzBdO1xcbiAgICAqIHZhciBhdmdQeCAgICAgICA9IHBvc1sxXTtcXG4gICAgKiB2YXIgc2hhcmVzU2hvcnQgPSBwb3NbMl07XFxuICAgICogdmFyIGF2Z1B4U2hvcnQgID0gcG9zWzNdO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzJcXG4gICAgKiBjb25zdCBbc2hhcmVzLCBhdmdQeCwgc2hhcmVzU2hvcnQsIGF2Z1B4U2hvcnRdID0gbnMuc3RvY2suZ2V0UG9zaXRpb24oXFxcIkVDUFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgQXJyYXkgb2YgZm91ciBlbGVtZW50cyB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgcG9zaXRpb24gaW4gYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRQb3NpdGlvbihzeW06IHN0cmluZyk6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIG51bWJlciBvZiBzaGFyZXMgb2YgYSBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogVGhpcyBpcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgdGhlIHN0b2NrIHRoYXQgY2FuIGJlIHB1cmNoYXNlZFxcbiAgICAqIGluIGJvdGggdGhlIExvbmcgYW5kIFNob3J0IHBvc2l0aW9ucyBjb21iaW5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHJldHVybnMgTWF4aW11bSBudW1iZXIgb2Ygc2hhcmVzIHRoYXQgdGhlIHN0b2NrIGhhcy5cXG4gICAgKi9cXG4gICBnZXRNYXhTaGFyZXMoc3ltOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZXMgY29zdCBvZiBidXlpbmcgc3RvY2tzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0JcXG4gICAgKiBDYWxjdWxhdGVzIGFuZCByZXR1cm5zIGhvdyBtdWNoIGl0IHdvdWxkIGNvc3QgdG8gYnV5IGEgZ2l2ZW4gbnVtYmVyIG9mIHNoYXJlcyBvZiBhIHN0b2NrLlxcbiAgICAqIFRoaXMgdGFrZXMgaW50byBhY2NvdW50IHNwcmVhZCwgbGFyZ2UgdHJhbnNhY3Rpb25zIGluZmx1ZW5jaW5nIHRoZSBwcmljZSBvZiB0aGUgc3RvY2sgYW5kIGNvbW1pc3Npb24gZmVlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gcHVyY2hhc2UuXFxuICAgICogQHBhcmFtIHBvc1R5cGUgLSBTcGVjaWZpZXMgd2hldGhlciB0aGUgb3JkZXIgaXMgYSDigJxMb25n4oCdIG9yIOKAnFNob3J04oCdIHBvc2l0aW9uLlxcbiAgICAqIEByZXR1cm5zIENvc3QgdG8gYnV5IGEgZ2l2ZW4gbnVtYmVyIG9mIHNoYXJlcyBvZiBhIHN0b2NrLlxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlQ29zdChzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHBvc1R5cGU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHByb2ZpdCBvZiBzZWxsaW5nIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogQ2FsY3VsYXRlcyBhbmQgcmV0dXJucyBob3cgbXVjaCB5b3Ugd291bGQgZ2FpbiBmcm9tIHNlbGxpbmcgYSBnaXZlbiBudW1iZXIgb2Ygc2hhcmVzIG9mIGEgc3RvY2suXFxuICAgICogVGhpcyB0YWtlcyBpbnRvIGFjY291bnQgc3ByZWFkLCBsYXJnZSB0cmFuc2FjdGlvbnMgaW5mbHVlbmNpbmcgdGhlIHByaWNlIG9mIHRoZSBzdG9jayBhbmQgY29tbWlzc2lvbiBmZWVzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyB0byBzZWxsLlxcbiAgICAqIEBwYXJhbSBwb3NUeXBlIC0gU3BlY2lmaWVzIHdoZXRoZXIgdGhlIG9yZGVyIGlzIGEg4oCcTG9uZ+KAnSBvciDigJxTaG9ydOKAnSBwb3NpdGlvbi5cXG4gICAgKiBAcmV0dXJucyBHYWluIGZyb20gc2VsbGluZyBhIGdpdmVuIG51bWJlciBvZiBzaGFyZXMgb2YgYSBzdG9jay5cXG4gICAgKi9cXG4gICBnZXRTYWxlR2FpbihzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHBvc1R5cGU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQnV5IHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBwdXJjaGFzZSBzaGFyZXMgb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzLFxcbiAgICAqIHRoZW4gbm8gc2hhcmVzIHdpbGwgYmUgcHVyY2hhc2VkLiBSZW1lbWJlciB0aGF0IGV2ZXJ5IHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZVxcbiAgICAqIGNvc3RzIGEgY2VydGFpbiBjb21taXNzaW9uIGZlZS5cXG4gICAgKlxcbiAgICAqIElmIHRoaXMgZnVuY3Rpb24gc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlcyB0aGUgc2hhcmVzLCBpdCB3aWxsIHJldHVybiB0aGUgc3RvY2sgcHJpY2UgYXQgd2hpY2hcXG4gICAgKiBlYWNoIHNoYXJlIHdhcyBwdXJjaGFzZWQuIE90aGVyd2lzZSwgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gcHVyY2hhc2VkLiBNdXN0IGJlIHBvc2l0aXZlLiBXaWxsIGJlIHJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzdG9jayBwcmljZSBhdCB3aGljaCBlYWNoIHNoYXJlIHdhcyBwdXJjaGFzZWQsIG90aGVyd2lzZSAwIGlmIHRoZSBzaGFyZXMgd2VyZW4ndCBwdXJjaGFzZWQuXFxuICAgICovXFxuICAgYnV5KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2VsbCBzdG9ja3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogQXR0ZW1wdHMgdG8gc2VsbCBzaGFyZXMgb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHNoYXJlcyBpbiB0aGUgZnVuY3Rpb24gZXhjZWVkcyB0aGUgYW1vdW50IHRoYXQgdGhlIHBsYXllclxcbiAgICAqIGFjdHVhbGx5IG93bnMsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHNlbGwgYWxsIG93bmVkIHNoYXJlcy4gUmVtZW1iZXIgdGhhdCBldmVyeVxcbiAgICAqIHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZSBjb3N0cyBhIGNlcnRhaW4gY29tbWlzc2lvbiBmZWUuXFxuICAgICpcXG4gICAgKiBUaGUgbmV0IHByb2ZpdCBtYWRlIGZyb20gc2VsbGluZyBzdG9ja3Mgd2l0aCB0aGlzIGZ1bmN0aW9uIGlzIHJlZmxlY3RlZCBpbiB0aGUgc2NyaXB04oCZc1xcbiAgICAqIHN0YXRpc3RpY3MuIFRoaXMgbmV0IHByb2ZpdCBpcyBjYWxjdWxhdGVkIGFzOlxcbiAgICAqXFxuICAgICogICAgc2hhcmVzICogKHNlbGxfcHJpY2UgLSBhdmVyYWdlX3ByaWNlX29mX3B1cmNoYXNlZF9zaGFyZXMpXFxuICAgICpcXG4gICAgKiBJZiB0aGUgc2FsZSBpcyBzdWNjZXNzZnVsLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBzdG9jayBwcmljZSBhdFxcbiAgICAqIHdoaWNoIGVhY2ggc2hhcmUgd2FzIHNvbGQuIE90aGVyd2lzZSwgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gc2VsbC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgc29sZCwgb3RoZXJ3aXNlIDAgaWYgdGhlIHNoYXJlcyB3ZXJlbid0IHNvbGQuXFxuICAgICovXFxuICAgc2VsbChzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNob3J0IHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBwdXJjaGFzZSBhIHNob3J0IHBvc2l0aW9uIG9mIGEgc3RvY2sgdXNpbmcgYSBNYXJrZXQgT3JkZXIuXFxuICAgICpcXG4gICAgKiBUaGUgYWJpbGl0eSB0byBzaG9ydCBhIHN0b2NrIGlzICoqbm90KiogaW1tZWRpYXRlbHkgYXZhaWxhYmxlIHRvIHRoZSBwbGF5ZXIgYW5kXFxuICAgICogbXVzdCBiZSB1bmxvY2tlZCBsYXRlciBvbiBpbiB0aGUgZ2FtZS5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzLFxcbiAgICAqIHRoZW4gbm8gc2hhcmVzIHdpbGwgYmUgcHVyY2hhc2VkLiBSZW1lbWJlciB0aGF0IGV2ZXJ5IHRyYW5zYWN0aW9uIG9uIHRoZSBzdG9jayBleGNoYW5nZVxcbiAgICAqIGNvc3RzIGEgY2VydGFpbiBjb21taXNzaW9uIGZlZS5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBwdXJjaGFzZSBpcyBzdWNjZXNzZnVsLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBzdG9jayBwcmljZSBhdCB3aGljaCBlYWNoXFxuICAgICogc2hhcmUgd2FzIHB1cmNoYXNlZC4gT3RoZXJ3aXNlLCBpdCB3aWxsIHJldHVybiAwLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyB0byBzaG9ydC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgcHVyY2hhc2VkLCBvdGhlcndpc2UgMCBpZiB0aGUgc2hhcmVzIHdlcmVuJ3QgcHVyY2hhc2VkLlxcbiAgICAqL1xcbiAgIHNob3J0KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2VsbCBzaG9ydCBzdG9jay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBzZWxsIGEgc2hvcnQgcG9zaXRpb24gb2YgYSBzdG9jayB1c2luZyBhIE1hcmtldCBPcmRlci5cXG4gICAgKlxcbiAgICAqIFRoZSBhYmlsaXR5IHRvIHNob3J0IGEgc3RvY2sgaXMgKipub3QqKiBpbW1lZGlhdGVseSBhdmFpbGFibGUgdG8gdGhlIHBsYXllciBhbmRcXG4gICAgKiBtdXN0IGJlIHVubG9ja2VkIGxhdGVyIG9uIGluIHRoZSBnYW1lLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBudW1iZXIgb2Ygc2hhcmVzIGV4Y2VlZHMgdGhlIGFtb3VudCB0aGF0IHRoZSBwbGF5ZXIgYWN0dWFsbHkgb3ducyxcXG4gICAgKiB0aGVuIHRoaXMgZnVuY3Rpb24gd2lsbCBzZWxsIGFsbCBvd25lZCBzaGFyZXMuIFJlbWVtYmVyIHRoYXQgZXZlcnkgdHJhbnNhY3Rpb24gb25cXG4gICAgKiB0aGUgc3RvY2sgZXhjaGFuZ2UgY29zdHMgYSBjZXJ0YWluIGNvbW1pc3Npb24gZmVlLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNhbGUgaXMgc3VjY2Vzc2Z1bCwgdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaFxcbiAgICAqIHNoYXJlIHdhcyBzb2xkLiBPdGhlcndpc2UgaXQgd2lsbCByZXR1cm4gMC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzeW0gLSBTdG9jayBzeW1ib2wuXFxuICAgICogQHBhcmFtIHNoYXJlcyAtIE51bWJlciBvZiBzaGFyZXMgdG8gc2VsbC4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgc3RvY2sgcHJpY2UgYXQgd2hpY2ggZWFjaCBzaGFyZSB3YXMgc29sZCwgb3RoZXJ3aXNlIDAgaWYgdGhlIHNoYXJlcyB3ZXJlbid0IHNvbGQuXFxuICAgICovXFxuICAgc2VsbFNob3J0KHN5bTogc3RyaW5nLCBzaGFyZXM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUGxhY2Ugb3JkZXIgZm9yIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBQbGFjZXMgYW4gb3JkZXIgb24gdGhlIHN0b2NrIG1hcmtldC4gVGhpcyBmdW5jdGlvbiBvbmx5IHdvcmtzIGZvciBMaW1pdCBhbmQgU3RvcCBPcmRlcnMuXFxuICAgICpcXG4gICAgKiBUaGUgYWJpbGl0eSB0byBwbGFjZSBsaW1pdCBhbmQgc3RvcCBvcmRlcnMgaXMgKipub3QqKiBpbW1lZGlhdGVseSBhdmFpbGFibGUgdG8gdGhlIHBsYXllciBhbmRcXG4gICAgKiBtdXN0IGJlIHVubG9ja2VkIGxhdGVyIG9uIGluIHRoZSBnYW1lLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBvcmRlciBpcyBzdWNjZXNzZnVsbHkgcGxhY2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcGFyYW0gc2hhcmVzIC0gTnVtYmVyIG9mIHNoYXJlcyBmb3Igb3JkZXIuIE11c3QgYmUgcG9zaXRpdmUuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIHByaWNlIC0gRXhlY3V0aW9uIHByaWNlIGZvciB0aGUgb3JkZXIuXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIG9yZGVyLlxcbiAgICAqIEBwYXJhbSBwb3MgLSBTcGVjaWZpZXMgd2hldGhlciB0aGUgb3JkZXIgaXMgYSDigJxMb25n4oCdIG9yIOKAnFNob3J04oCdIHBvc2l0aW9uLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIG9yZGVyIGlzIHN1Y2Nlc3NmdWxseSBwbGFjZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgcGxhY2VPcmRlcihzeW06IHN0cmluZywgc2hhcmVzOiBudW1iZXIsIHByaWNlOiBudW1iZXIsIHR5cGU6IHN0cmluZywgcG9zOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDYW5jZWwgb3JkZXIgZm9yIHN0b2Nrcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBDYW5jZWxzIGFuIG91c3RhbmRpbmcgTGltaXQgb3IgU3RvcCBvcmRlciBvbiB0aGUgc3RvY2sgbWFya2V0LlxcbiAgICAqXFxuICAgICogVGhlIGFiaWxpdHkgdG8gdXNlIGxpbWl0IGFuZCBzdG9wIG9yZGVycyBpcyAqKm5vdCoqIGltbWVkaWF0ZWx5IGF2YWlsYWJsZSB0byB0aGUgcGxheWVyIGFuZFxcbiAgICAqIG11c3QgYmUgdW5sb2NrZWQgbGF0ZXIgb24gaW4gdGhlIGdhbWUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc3ltIC0gU3RvY2sgc3ltYm9sLlxcbiAgICAqIEBwYXJhbSBzaGFyZXMgLSBOdW1iZXIgb2Ygc2hhcmVzIGZvciBvcmRlci4gTXVzdCBiZSBwb3NpdGl2ZS4gV2lsbCBiZSByb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcGFyYW0gcHJpY2UgLSBFeGVjdXRpb24gcHJpY2UgZm9yIHRoZSBvcmRlci5cXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2Ygb3JkZXIuXFxuICAgICogQHBhcmFtIHBvcyAtIFNwZWNpZmllcyB3aGV0aGVyIHRoZSBvcmRlciBpcyBhIOKAnExvbmfigJ0gb3Ig4oCcU2hvcnTigJ0gcG9zaXRpb24uXFxuICAgICovXFxuICAgY2FuY2VsT3JkZXIoc3ltOiBzdHJpbmcsIHNoYXJlczogbnVtYmVyLCBwcmljZTogbnVtYmVyLCB0eXBlOiBzdHJpbmcsIHBvczogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB5b3VyIG9yZGVyIGJvb2sgZm9yIHRoZSBzdG9jayBtYXJrZXQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogVGhpcyBpcyBhbiBvYmplY3QgY29udGFpbmluZyBpbmZvcm1hdGlvbiBmb3IgYWxsIHRoZSBMaW1pdCBhbmQgU3RvcCBPcmRlcnMgeW91IGhhdmUgaW4gdGhlIHN0b2NrIG1hcmtldC5cXG4gICAgKiBGb3IgZWFjaCBzeW1ib2wgeW91IGhhdmUgYSBwb3NpdGlvbiBpbiwgdGhlIHJldHVybmVkIG9iamVjdCB3aWxsIGhhdmUgYSBrZXkgd2l0aCB0aGF0IHN5bWJvbCdzIG5hbWUuXFxuICAgICogVGhlIG9iamVjdCdzIHByb3BlcnRpZXMgYXJlIGVhY2ggYW4gYXJyYXkgb2Yge0BsaW5rIFN0b2NrT3JkZXJPYmplY3R9XFxuICAgICogVGhlIG9iamVjdCBoYXMgdGhlIGZvbGxvd2luZyBzdHJ1Y3R1cmU6XFxuICAgICpcXG4gICAgKiBgYGB0c1xcbiAgICAqIHtcXG4gICAgKiAgc3RyaW5nMTogWyAvLyBBcnJheSBvZiBvcmRlcnMgZm9yIHRoaXMgc3RvY2tcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IE9yZGVyIHF1YW50aXR5XFxuICAgICogICAgICAgICAgcHJpY2U6IE9yZGVyIHByaWNlXFxuICAgICogICAgICAgICAgdHlwZTogT3JkZXIgdHlwZVxcbiAgICAqICAgICAgICAgIHBvc2l0aW9uOiBFaXRoZXIgXFxcIkxcXFwiIG9yIFxcXCJTXFxcIiBmb3IgTG9uZyBvciBTaG9ydCBwb3NpdGlvblxcbiAgICAqICAgICAgfSxcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICAuLi5cXG4gICAgKiAgICAgIH0sXFxuICAgICogICAgICAuLi5cXG4gICAgKiAgXSxcXG4gICAgKiAgc3RyaW5nMjogWyAvLyBBcnJheSBvZiBvcmRlcnMgZm9yIHRoaXMgc3RvY2tcXG4gICAgKiAgICAgIC4uLlxcbiAgICAqICBdLFxcbiAgICAqICAuLi5cXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogVGhlIOKAnE9yZGVyIHR5cGXigJ0gcHJvcGVydHkgY2FuIGhhdmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgZm91ciB2YWx1ZXM6IFxcXCJMaW1pdCBCdXkgT3JkZXJcXFwiLCBcXFwiTGltaXQgU2VsbCBPcmRlclxcXCIsIFxcXCJTdG9wIEJ1eSBPcmRlclxcXCIsIFxcXCJTdG9wIFNlbGwgT3JkZXJcXFwiLlxcbiAgICAqIE5vdGUgdGhhdCB0aGUgb3JkZXIgYm9vayB3aWxsIG9ubHkgY29udGFpbiBpbmZvcm1hdGlvbiBmb3Igc3RvY2tzIHRoYXQgeW91IGFjdHVhbGx5IGhhdmUgb3JkZXJzIGluLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIFxcXCJJZiB5b3UgZG8gbm90IGhhdmUgb3JkZXJzIGluIE5vdmEgTWVkaWNhbCAoTlZNRCksIHRoZW4gdGhlIHJldHVybmVkIG9iamVjdCB3aWxsIG5vdCBoYXZlIGEg4oCcTlZNROKAnSBwcm9wZXJ0eS5cXFwiXFxuICAgICoge1xcbiAgICAqICBFQ1A6IFtcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IDUsXFxuICAgICogICAgICAgICAgcHJpY2U6IDEwMCwwMDBcXG4gICAgKiAgICAgICAgICB0eXBlOiBcXFwiU3RvcCBCdXkgT3JkZXJcXFwiLFxcbiAgICAqICAgICAgICAgIHBvc2l0aW9uOiBcXFwiU1xcXCIsXFxuICAgICogICAgICB9LFxcbiAgICAqICAgICAge1xcbiAgICAqICAgICAgICAgIHNoYXJlczogMjUsXFxuICAgICogICAgICAgICAgcHJpY2U6IDEyNSwwMDBcXG4gICAgKiAgICAgICAgICB0eXBlOiBcXFwiTGltaXQgU2VsbCBPcmRlclxcXCIsXFxuICAgICogICAgICAgICAgcG9zaXRpb246IFxcXCJMXFxcIixcXG4gICAgKiAgICAgIH0sXFxuICAgICogIF0sXFxuICAgICogIFNZU0M6IFtcXG4gICAgKiAgICAgIHtcXG4gICAgKiAgICAgICAgICBzaGFyZXM6IDEwMCxcXG4gICAgKiAgICAgICAgICBwcmljZTogMTAsMDAwXFxuICAgICogICAgICAgICAgdHlwZTogXFxcIkxpbWl0IEJ1eSBPcmRlclxcXCIsXFxuICAgICogICAgICAgICAgcG9zaXRpb246IFxcXCJMXFxcIixcXG4gICAgKiAgICAgIH0sXFxuICAgICogIF0sXFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIGluZm9ybWF0aW9uIGZvciBhbGwgdGhlIExpbWl0IGFuZCBTdG9wIE9yZGVycyB5b3UgaGF2ZSBpbiB0aGUgc3RvY2sgbWFya2V0LlxcbiAgICAqL1xcbiAgIGdldE9yZGVycygpOiBTdG9ja09yZGVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSB2b2xhdGlsaXR5IG9mIHRoZSBzcGVjaWZpZWQgc3RvY2suXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCXFxuICAgICogVm9sYXRpbGl0eSByZXByZXNlbnRzIHRoZSBtYXhpbXVtIHBlcmNlbnRhZ2UgYnkgd2hpY2ggYSBzdG9ja+KAmXMgcHJpY2UgY2FuIGNoYW5nZSBldmVyeSB0aWNrLlxcbiAgICAqIFRoZSB2b2xhdGlsaXR5IGlzIHJldHVybmVkIGFzIGEgZGVjaW1hbCB2YWx1ZSwgTk9UIGEgcGVyY2VudGFnZVxcbiAgICAqIChlLmcuIGlmIGEgc3RvY2sgaGFzIGEgdm9sYXRpbGl0eSBvZiAzJSwgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIDAuMDMsIE5PVCAzKS5cXG4gICAgKlxcbiAgICAqIEluIG9yZGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uLCB5b3UgbXVzdCBmaXJzdCBwdXJjaGFzZSBhY2Nlc3MgdG8gdGhlIEZvdXIgU2lnbWEgKDRTKSBNYXJrZXQgRGF0YSBUSVggQVBJLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBWb2xhdGlsaXR5IG9mIHRoZSBzcGVjaWZpZWQgc3RvY2suXFxuICAgICovXFxuICAgZ2V0Vm9sYXRpbGl0eShzeW06IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcHJvYmFiaWxpdHkgdGhhdCB0aGUgc3BlY2lmaWVkIHN0b2Nr4oCZcyBwcmljZSB3aWxsIGluY3JlYXNlIChhcyBvcHBvc2VkIHRvIGRlY3JlYXNlKSBkdXJpbmcgdGhlIG5leHQgdGljay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0JcXG4gICAgKiBUaGUgcHJvYmFiaWxpdHkgaXMgcmV0dXJuZWQgYXMgYSBkZWNpbWFsIHZhbHVlLCBOT1QgYSBwZXJjZW50YWdlXFxuICAgICogKGUuZy4gaWYgYSBzdG9jayBoYXMgYSA2MCUgY2hhbmNlIG9mIGluY3JlYXNpbmcsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAwLjYsIE5PVCA2MCkuXFxuICAgICpcXG4gICAgKiBJbiBvdGhlciB3b3JkcywgaWYgdGhpcyBmdW5jdGlvbiByZXR1cm5lZCAwLjMwIGZvciBhIHN0b2NrLCB0aGVuIHRoaXMgbWVhbnMgdGhhdCB0aGUgc3RvY2vigJlzIHByaWNlIGhhcyBhXFxuICAgICogMzAlIGNoYW5jZSBvZiBpbmNyZWFzaW5nIGFuZCBhIDcwJSBjaGFuY2Ugb2YgZGVjcmVhc2luZyBkdXJpbmcgdGhlIG5leHQgdGljay5cXG4gICAgKlxcbiAgICAqIEluIG9yZGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uLCB5b3UgbXVzdCBmaXJzdCBwdXJjaGFzZSBhY2Nlc3MgdG8gdGhlIEZvdXIgU2lnbWEgKDRTKSBNYXJrZXQgRGF0YSBUSVggQVBJLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHN5bSAtIFN0b2NrIHN5bWJvbC5cXG4gICAgKiBAcmV0dXJucyBQcm9iYWJpbGl0eSB0aGF0IHRoZSBzcGVjaWZpZWQgc3RvY2vigJlzIHByaWNlIHdpbGwgaW5jcmVhc2UgKGFzIG9wcG9zZWQgdG8gZGVjcmVhc2UpIGR1cmluZyB0aGUgbmV4dCB0aWNrLlxcbiAgICAqL1xcbiAgIGdldEZvcmVjYXN0KHN5bTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSA0UyBNYXJrZXQgRGF0YSBBY2Nlc3MuXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDIuNSBHQlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQgaXQgb3IgaWYgeW91IGFscmVhZHkgaGF2ZSBhY2Nlc3MsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZTRTTWFya2V0RGF0YSgpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSA0UyBNYXJrZXQgRGF0YSBUSVggQVBJIEFjY2Vzcy5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMi41IEdCXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlZCBpdCBvciBpZiB5b3UgYWxyZWFkeSBoYXZlIGFjY2VzcywgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlNFNNYXJrZXREYXRhVGl4QXBpKCk6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBTaW5ndWxhcml0eSBBUElcXG4gICogQHJlbWFya3NcXG4gICogVGhpcyBBUEkgcmVxdWlyZXMgU291cmNlLUZpbGUgNCB0byB1c2UuIFRoZSBSQU0gY29zdCBvZiBhbGwgdGhlc2UgZnVuY3Rpb25zIGlzIG11bHRpcGxpZWQgYnkgMTYvNC8xIGJhc2VkIG9uIFNvdXJjZS1GaWxlIDQgbGV2ZWxzLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIFNpbmd1bGFyaXR5IHtcXG4gICAvKipcXG4gICAgKiBUYWtlIHVuaXZlcnNpdHkgY2xhc3MuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgdGFraW5nIGEgY291cnNlIGF0IGEgdW5pdmVyc2l0eS5cXG4gICAgKiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAnHdvcmtpbmfigJ0gYWN0aW9uIChzdWNoIGFzIHdvcmtpbmcgYXQgYVxcbiAgICAqIGNvbXBhbnksIGZvciBhIGZhY3Rpb24sIG9yIG9uIGEgcHJvZ3JhbSksIHRoZW4gcnVubmluZyB0aGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseVxcbiAgICAqIGNhbmNlbCB0aGF0IGFjdGlvbiBhbmQgZ2l2ZSB5b3UgeW91ciBlYXJuaW5ncy5cXG4gICAgKlxcbiAgICAqIFRoZSBjb3N0IGFuZCBleHBlcmllbmNlIGdhaW5zIGZvciBhbGwgb2YgdGhlc2UgdW5pdmVyc2l0aWVzIGFuZCBjbGFzc2VzIGFyZSB0aGUgc2FtZSBhc1xcbiAgICAqIGlmIHlvdSB3ZXJlIHRvIG1hbnVhbGx5IHZpc2l0IGFuZCB0YWtlIHRoZXNlIGNsYXNzZXMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdW5pdmVyc2l0eU5hbWUgLSBOYW1lIG9mIHVuaXZlcnNpdHkuIFlvdSBtdXN0IGJlIGluIHRoZSBjb3JyZWN0IGNpdHkgZm9yIHdoYXRldmVyIHVuaXZlcnNpdHkgeW91IHNwZWNpZnkuXFxuICAgICogQHBhcmFtIGNvdXJzZU5hbWUgLSBOYW1lIG9mIGNvdXJzZS5cXG4gICAgKiBAcGFyYW0gZm9jdXMgLSBBY3F1aXJlIHBsYXllciBmb2N1cyBvbiB0aGlzIGNsYXNzLiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gdHJ1ZS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIGFjdGlvbnMgaXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1bml2ZXJzaXR5Q291cnNlKHVuaXZlcnNpdHlOYW1lOiBzdHJpbmcsIGNvdXJzZU5hbWU6IHN0cmluZywgZm9jdXM/OiBib29sZWFuKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogV29ya291dCBhdCB0aGUgZ3ltLlxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuIFxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgd29ya2luZyBvdXQgYXQgYSBneW0gdG8gdHJhaW5cXG4gICAgKiBhIHBhcnRpY3VsYXIgc3RhdC4gSWYgeW91IGFyZSBhbHJlYWR5IGluIHRoZSBtaWRkbGUgb2Ygc29tZSDigJx3b3JraW5n4oCdIGFjdGlvblxcbiAgICAqIChzdWNoIGFzIHdvcmtpbmcgYXQgYSBjb21wYW55LCBmb3IgYSBmYWN0aW9uLCBvciBvbiBhIHByb2dyYW0pLCB0aGVuIHJ1bm5pbmdcXG4gICAgKiB0aGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBjYW5jZWwgdGhhdCBhY3Rpb24gYW5kIGdpdmUgeW91IHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGUgY29zdCBhbmQgZXhwZXJpZW5jZSBnYWlucyBmb3IgYWxsIG9mIHRoZXNlIGd5bXMgYXJlIHRoZSBzYW1lIGFzIGlmIHlvdSB3ZXJlXFxuICAgICogdG8gbWFudWFsbHkgdmlzaXQgdGhlc2UgZ3ltcyBhbmQgdHJhaW5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBneW1OYW1lIC0gTmFtZSBvZiBneW0uIFlvdSBtdXN0IGJlIGluIHRoZSBjb3JyZWN0IGNpdHkgZm9yIHdoYXRldmVyIGd5bSB5b3Ugc3BlY2lmeS5cXG4gICAgKiBAcGFyYW0gc3RhdCAtIFRoZSBzdGF0IHlvdSB3YW50IHRvIHRyYWluLlxcbiAgICAqIEBwYXJhbSBmb2N1cyAtIEFjcXVpcmUgcGxheWVyIGZvY3VzIG9uIHRoaXMgZ3ltIHdvcmtvdXQuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byB0cnVlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYWN0aW9ucyBpcyBzdWNjZXNzZnVsbHkgc3RhcnRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGd5bVdvcmtvdXQoZ3ltTmFtZTogc3RyaW5nLCBzdGF0OiBzdHJpbmcsIGZvY3VzPzogYm9vbGVhbik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRyYXZlbCB0byBhbm90aGVyIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGFsbG93cyB0aGUgcGxheWVyIHRvIHRyYXZlbCB0byBhbnkgY2l0eS4gVGhlIGNvc3QgZm9yIHVzaW5nIHRoaXNcXG4gICAgKiBmdW5jdGlvbiBpcyB0aGUgc2FtZSBhcyB0aGUgY29zdCBmb3IgdHJhdmVsaW5nIHRocm91Z2ggdGhlIFRyYXZlbCBBZ2VuY3kuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eSAtIENpdHkgdG8gdHJhdmVsIHRvLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYWN0aW9ucyBpcyBzdWNjZXNzZnVsLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJhdmVsVG9DaXR5KGNpdHk6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIHRoZSBUT1Igcm91dGVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBhbGxvd3MgeW91IHRvIGF1dG9tYXRpY2FsbHkgcHVyY2hhc2UgYSBUT1Igcm91dGVyLiBUaGUgY29zdCBmb3JcXG4gICAgKiBwdXJjaGFzaW5nIGEgVE9SIHJvdXRlciB1c2luZyB0aGlzIGZ1bmN0aW9uIGlzIHRoZSBzYW1lIGFzIGlmIHlvdSB3ZXJlIHRvXFxuICAgICogbWFudWFsbHkgcHVyY2hhc2Ugb25lLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBhY3Rpb25zIGlzIHN1Y2Nlc3NmdWwsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZVRvcigpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSBhIHByb2dyYW0gZnJvbSB0aGUgZGFyayB3ZWIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGFsbG93cyB5b3UgdG8gYXV0b21hdGljYWxseSBwdXJjaGFzZSBwcm9ncmFtcy4gWW91IE1VU1QgaGF2ZSBhXFxuICAgICogVE9SIHJvdXRlciBpbiBvcmRlciB0byB1c2UgdGhpcyBmdW5jdGlvbi4gVGhlIGNvc3Qgb2YgcHVyY2hhc2luZyBwcm9ncmFtc1xcbiAgICAqIHVzaW5nIHRoaXMgZnVuY3Rpb24gaXMgdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgcHVyY2hhc2luZyB0aGVtIHRocm91Z2ggdGhlIERhcmtcXG4gICAgKiBXZWIgdXNpbmcgdGhlIFRlcm1pbmFsIGJ1eSBjb21tYW5kLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMVxcbiAgICAqIHB1cmNoYXNlUHJvZ3JhbShcXFwiYnJ1dGVzc2guZXhlXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMlxcbiAgICAqIG5zLnB1cmNoYXNlUHJvZ3JhbShcXFwiYnJ1dGVzc2guZXhlXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHByb2dyYW1OYW1lIC0gTmFtZSBvZiBwcm9ncmFtIHRvIHB1cmNoYXNlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNwZWNpZmllZCBwcm9ncmFtIGlzIHB1cmNoYXNlZCwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwdXJjaGFzZVByb2dyYW0ocHJvZ3JhbU5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHRoZSBwbGF5ZXIgaXMgYnVzeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGUgcGxheWVyIGlzIGN1cnJlbnRseSBwZXJmb3JtaW5nIGFuXFxuICAgICog4oCYYWN0aW9u4oCZLiBUaGVzZSBhY3Rpb25zIGluY2x1ZGUgd29ya2luZyBmb3IgYSBjb21wYW55L2ZhY3Rpb24sIHN0dWR5aW5nIGF0IGEgdW5pdmVyaXN0eSxcXG4gICAgKiB3b3JraW5nIG91dCBhdCBhIGd5bSwgY3JlYXRpbmcgYSBwcm9ncmFtLCBjb21taXR0aW5nIGEgY3JpbWUsIG9yIGNhcnJ5aW5nIG91dCBhIEhhY2tpbmcgTWlzc2lvbi5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBpcyBjdXJyZW50bHkgcGVyZm9ybWluZyBhbiDigJhhY3Rpb27igJksIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBpc0J1c3koKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU3RvcCB0aGUgY3VycmVudCBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gZW5kIHdoYXRldmVyIOKAmGFjdGlvbuKAmSB0aGUgcGxheWVyIGlzIGN1cnJlbnRseSBwZXJmb3JtaW5nLlxcbiAgICAqIFRoZSBwbGF5ZXIgd2lsbCByZWNlaXZlIHdoYXRldmVyIG1vbmV5L2V4cGVyaWVuY2UvZXRjLiBoZSBoYXMgZWFybmVkIGZyb20gdGhhdCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBUaGUgYWN0aW9ucyB0aGF0IGNhbiBiZSBzdG9wcGVkIHdpdGggdGhpcyBmdW5jdGlvbiBhcmU6XFxuICAgICpcXG4gICAgKiAqIFN0dWR5aW5nIGF0IGEgdW5pdmVyc2l0eVxcbiAgICAqICogV29ya2luZyBmb3IgYSBjb21wYW55L2ZhY3Rpb25cXG4gICAgKiAqIENyZWF0aW5nIGEgcHJvZ3JhbVxcbiAgICAqICogQ29tbWl0dGluZyBhIENyaW1lXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgYWN0aW9uIHdhcyBlbmRlZC5cXG4gICAgKiBJdCB3aWxsIHJldHVybiBmYWxzZSBpZiB0aGUgcGxheWVyIHdhcyBub3QgcGVyZm9ybWluZyBhbiBhY3Rpb24gd2hlbiB0aGlzIGZ1bmN0aW9uIHdhcyBjYWxsZWQuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXLigJlzIGFjdGlvbiB3YXMgZW5kZWQsIGZhbHNlIGlmIHRoZSBwbGF5ZXIgd2FzIG5vdCBwZXJmb3JtaW5nIGFuIGFjdGlvbi5cXG4gICAgKi9cXG4gICBzdG9wQWN0aW9uKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgaG9tZSBjb21wdXRlciBSQU0uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgdXBncmFkZSBhbW91bnQgb2YgUkFNIG9uIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIuIFRoZSBjb3N0IGlzXFxuICAgICogdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgdG8gZG8gaXQgbWFudWFsbHkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBSQU0gaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgcGxheWVy4oCZcyBob21lIGNvbXB1dGVyIFJBTSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdXBncmFkZUhvbWVSYW0oKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogVXBncmFkZSBob21lIGNvbXB1dGVyIGNvcmVzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHVwZ3JhZGUgYW1vdW50IG9mIGNvcmVzIG9uIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIuIFRoZSBjb3N0IGlzXFxuICAgICogdGhlIHNhbWUgYXMgaWYgeW91IHdlcmUgdG8gZG8gaXQgbWFudWFsbHkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBjb3JlcyBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgY29yZXMgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVIb21lQ29yZXMoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB1cGdyYWRpbmcgaG9tZSBSQU0uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMS41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgUkFNLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBSQU0uXFxuICAgICovXFxuICAgZ2V0VXBncmFkZUhvbWVSYW1Db3N0KCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB1cGdyYWRpbmcgaG9tZSBjb3Jlcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiB1cGdyYWRpbmcgdGhlIHBsYXllcuKAmXMgaG9tZSBjb21wdXRlciBjb3Jlcy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIENvc3Qgb2YgdXBncmFkaW5nIHRoZSBwbGF5ZXLigJlzIGhvbWUgY29tcHV0ZXIgY29yZXMuXFxuICAgICovXFxuICAgZ2V0VXBncmFkZUhvbWVDb3Jlc0Nvc3QoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBXb3JrIGZvciBhIGNvbXBhbnkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBzZXQgeW91IHRvIHN0YXJ0IHdvcmtpbmcgYXQgdGhlIGNvbXBhbnlcXG4gICAgKiBhdCB3aGljaCB5b3UgYXJlIGVtcGxveWVkLiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAnHdvcmtpbmfigJ1cXG4gICAgKiBhY3Rpb24gKHN1Y2ggYXMgd29ya2luZyBmb3IgYSBmYWN0aW9uLCB0cmFpbmluZyBhdCBhIGd5bSwgb3IgY3JlYXRpbmcgYSBwcm9ncmFtKSxcXG4gICAgKiB0aGVuIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2FuY2VsIHRoYXQgYWN0aW9uIGFuZCBnaXZlIHlvdVxcbiAgICAqIHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllciBzdGFydHMgd29ya2luZywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCB3aGVuIHlvdSBhcmUgd29ya2luZyBmb3IgYSBjb21wYW55LCB5b3Ugd2lsbCBub3QgYWN0dWFsbHkgcmVjZWl2ZSB5b3VyIGVhcm5pbmdzIChyZXB1dGF0aW9uLCBtb25leSwgZXhwZXJpZW5jZSkgdW50aWwgeW91IEZJTklTSCB0aGUgYWN0aW9uLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgY29tcGFueSByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKGdldENvbXBhbnlSZXAoQ09NUEFOWSBIRVJFKSA8IFZBTFVFKSB7XFxuICAgICogICAgd29ya0ZvckNvbXBhbnkoKTtcXG4gICAgKiAgICBzbGVlcCg2MDAwMCk7XFxuICAgICogfVxcbiAgICAqIC8vVGhpcyB3YXksIHlvdXIgY29tcGFueSByZXB1dGF0aW9uIHdpbGwgYmUgdXBkYXRlZCBldmVyeSBtaW51dGUuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgY29tcGFueSByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKG5zLmdldENvbXBhbnlSZXAoQ09NUEFOWSBIRVJFKSA8IFZBTFVFKSB7XFxuICAgICogICAgbnMud29ya0ZvckNvbXBhbnkoKTtcXG4gICAgKiAgICBhd2FpdCBucy5zbGVlcCg2MDAwMCk7XFxuICAgICogfVxcbiAgICAqIC8vVGhpcyB3YXksIHlvdXIgY29tcGFueSByZXB1dGF0aW9uIHdpbGwgYmUgdXBkYXRlZCBldmVyeSBtaW51dGUuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiBjb21wYW55IHRvIHdvcmsgZm9yLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLiBPcHRpb25hbC4gSWYgbm90IHNwZWNpZmllZCwgdGhpcyBhcmd1bWVudCBkZWZhdWx0cyB0byB0aGUgbGFzdCBqb2IgdGhhdCB5b3Ugd29ya2VkXFxuICAgICogQHBhcmFtIGZvY3VzIC0gQWNxdWlyZSBwbGF5ZXIgZm9jdXMgb24gdGhpcyB3b3JrIG9wZXJhdGlvbi4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIHRydWUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgcGxheWVyIHN0YXJ0cyB3b3JraW5nLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHdvcmtGb3JDb21wYW55KGNvbXBhbnlOYW1lPzogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBBcHBseSBmb3IgYSBqb2IgYXQgYSBjb21wYW55LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgdHJ5IHRvIGFwcGx5IHRvIHRoZSBzcGVjaWZpZWQgY29tcGFueVxcbiAgICAqIGZvciBhIHBvc2l0aW9uIGluIHRoZSBzcGVjaWZpZWQgZmllbGQuIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgdXNlZCB0b1xcbiAgICAqIGFwcGx5IGZvciBwcm9tb3Rpb25zIGJ5IHNwZWNpZnlpbmcgdGhlIGNvbXBhbnkgYW5kIGZpZWxkIHlvdSBhcmUgYWxyZWFkeVxcbiAgICAqIGVtcGxveWVkIGF0LlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0cnVlIGlmIHlvdSBzdWNjZXNzZnVsbHkgZ2V0IGEgam9iL3Byb21vdGlvbixcXG4gICAgKiBhbmQgZmFsc2Ugb3RoZXJ3aXNlLiBOb3RlIHRoYXQgaWYgeW91IGFyZSB0cnlpbmcgdG8gdXNlIHRoaXMgZnVuY3Rpb24gdG9cXG4gICAgKiBhcHBseSBmb3IgYSBwcm9tb3Rpb24gYW5kIHlvdSBkb27igJl0IGdldCBvbmUsIGl0IHdpbGwgcmV0dXJuIGZhbHNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiBjb21wYW55IHRvIGFwcGx5IHRvLlxcbiAgICAqIEBwYXJhbSBmaWVsZCAtIEZpZWxkIHRvIHdoaWNoIHlvdSB3YW50IHRvIGFwcGx5LlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBzdWNjZXNzZnVsbHkgZ2V0IGEgam9iL3Byb21vdGlvbiwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBhcHBseVRvQ29tcGFueShjb21wYW55TmFtZTogc3RyaW5nLCBmaWVsZDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNvbXBhbnkgcmVwdXRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4gdGhlIGFtb3VudCBvZiByZXB1dGF0aW9uIHlvdSBoYXZlIGF0IHRoZSBzcGVjaWZpZWQgY29tcGFueS5cXG4gICAgKiBJZiB0aGUgY29tcGFueSBwYXNzZWQgaW4gYXMgYW4gYXJndW1lbnQgaXMgaW52YWxpZCwgLTEgd2lsbCBiZSByZXR1cm5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIHJlcHV0YXRpb24geW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqL1xcbiAgIGdldENvbXBhbnlSZXAoY29tcGFueU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNvbXBhbnkgZmF2b3IuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBhbW91bnQgb2YgZmF2b3IgeW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqIElmIHRoZSBjb21wYW55IHBhc3NlZCBpbiBhcyBhbiBhcmd1bWVudCBpcyBpbnZhbGlkLCAtMSB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGNvbXBhbnlOYW1lIC0gTmFtZSBvZiB0aGUgY29tcGFueS5cXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgZmF2b3IgeW91IGhhdmUgYXQgdGhlIHNwZWNpZmllZCBjb21wYW55LlxcbiAgICAqL1xcbiAgIGdldENvbXBhbnlGYXZvcihjb21wYW55TmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29tcGFueSBmYXZvciBnYWluLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNzUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgYW1vdW50IG9mIGZhdm9yIHlvdSB3aWxsIGdhaW4gZm9yIHRoZSBzcGVjaWZpZWRcXG4gICAgKiBjb21wYW55IHdoZW4geW91IHJlc2V0IGJ5IGluc3RhbGxpbmcgQXVnbWVudGF0aW9ucy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGZhdm9yIHlvdSBnYWluIGF0IHRoZSBzcGVjaWZpZWQgY29tcGFueSB3aGVuIHlvdSByZXNldCBieSBpbnN0YWxsaW5nIEF1Z21lbnRhdGlvbnMuXFxuICAgICovXFxuICAgZ2V0Q29tcGFueUZhdm9yR2Fpbihjb21wYW55TmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBjdXJyZW50IGZhY3Rpb24gaW52aXRhdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMyBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIG5hbWUgb2YgYWxsIEZhY3Rpb25zIHlvdSBjdXJyZW50bHkgaGF2ZSBvdXN0YW5kaW5nIGludml0YXRpb25zIGZyb20uXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIHRoZSBuYW1lIG9mIGFsbCBGYWN0aW9ucyB5b3UgY3VycmVudGx5IGhhdmUgb3VzdGFuZGluZyBpbnZpdGF0aW9ucyBmcm9tLlxcbiAgICAqL1xcbiAgIGNoZWNrRmFjdGlvbkludml0YXRpb25zKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBKb2luIGEgZmFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAzIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGFjY2VwdCBhbiBpbnZpdGF0aW9uIGZyb20gYSBmYWN0aW9uIGFuZCBqb2luIGl0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gam9pbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHBsYXllciBqb2luZWQgdGhlIGZhY3Rpb24sIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgam9pbkZhY3Rpb24oZmFjdGlvbjogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogV29yayBmb3IgYSBmYWN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDMgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgc2V0IHlvdSB0byBzdGFydCB3b3JraW5nIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24uXFxuICAgICogT2J2aW91c2x5LCB5b3UgbXVzdCBiZSBhIG1lbWJlciBvZiB0aGUgZmFjdGlvbiBvciBlbHNlIHRoaXMgZnVuY3Rpb24gd2lsbCBmYWlsLiBJZlxcbiAgICAqIHlvdSBhcmUgYWxyZWFkeSBpbiB0aGUgbWlkZGxlIG9mIHNvbWUg4oCcd29ya2luZ+KAnSBhY3Rpb24gKHN1Y2ggYXMgd29ya2luZyBmb3IgYSBjb21wYW55LFxcbiAgICAqIHRyYWluaW5nIGF0IGEgZ3ltLCBvciBjcmVhdGluZyBhIHByb2dyYW0pLCB0aGVuIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHlcXG4gICAgKiBjYW5jZWwgdGhhdCBhY3Rpb24gYW5kIGdpdmUgeW91IHlvdXIgZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBzdGFydCB3b3JraW5nIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24sIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBOb3RlIHRoYXQgd2hlbiB5b3UgYXJlIHdvcmtpbmcgZm9yIGEgZmFjdGlvbiwgeW91IHdpbGwgbm90IGFjdHVhbGx5IHJlY2VpdmUgeW91ciBlYXJuaW5ncyAocmVwdXRhdGlvbiwgZXhwZXJpZW5jZSkgdW50aWwgeW91IEZJTklTSCB0aGUgYWN0aW9uLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0lmIHlvdSBvbmx5IHdhbnQgdG8gd29yayB1bnRpbCB5b3UgZ2V0IDEwMCwwMDAgZmFjdGlvbiByZXB1dGF0aW9uLiBPbmUgc21hbGwgaGFjayB0byBnZXQgYXJvdW5kIHRoaXMgaXMgdG8gY29udGludW91c2x5IHJlc3RhcnQgdGhlIGFjdGlvbiB0byByZWNlaXZlIHlvdXIgZWFybmluZ3M6XFxuICAgICogd2hpbGUgKGdldEZhY3Rpb25SZXAoRkFDVElPTiBOQU1FKSA8IFZBTFVFKSB7XFxuICAgICogICAgd29ya0ZvckZhY3Rpb24oRkFDTkFNRSwgV09SS1RZUEUpO1xcbiAgICAqICAgIHNsZWVwKDYwMDAwKTtcXG4gICAgKiB9XFxuICAgICogLy9UaGlzIHdheSwgeW91ciBmYWN0aW9uIHJlcHV0YXRpb24gd2lsbCBiZSB1cGRhdGVkIGV2ZXJ5IG1pbnV0ZS5cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vSWYgeW91IG9ubHkgd2FudCB0byB3b3JrIHVudGlsIHlvdSBnZXQgMTAwLDAwMCBmYWN0aW9uIHJlcHV0YXRpb24uIE9uZSBzbWFsbCBoYWNrIHRvIGdldCBhcm91bmQgdGhpcyBpcyB0byBjb250aW51b3VzbHkgcmVzdGFydCB0aGUgYWN0aW9uIHRvIHJlY2VpdmUgeW91ciBlYXJuaW5nczpcXG4gICAgKiB3aGlsZSAobnMuZ2V0RmFjdGlvblJlcChGQUNUSU9OIE5BTUUpIDwgVkFMVUUpIHtcXG4gICAgKiAgICBucy53b3JrRm9yRmFjdGlvbihGQUNOQU1FLCBXT1JLVFlQRSk7XFxuICAgICogICAgYXdhaXQgbnMuc2xlZXAoNjAwMDApO1xcbiAgICAqIH1cXG4gICAgKiAvL1RoaXMgd2F5LCB5b3VyIGZhY3Rpb24gcmVwdXRhdGlvbiB3aWxsIGJlIHVwZGF0ZWQgZXZlcnkgbWludXRlLlxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uIHRvIHdvcmsgZm9yLlxcbiAgICAqIEBwYXJhbSB3b3JrVHlwZSAtIFR5cGUgb2Ygd29yayB0byBwZXJmb3JtIGZvciB0aGUgZmFjdGlvbi5cXG4gICAgKiBAcGFyYW0gZm9jdXMgLSBBY3F1aXJlIHBsYXllciBmb2N1cyBvbiB0aGlzIHdvcmsgb3BlcmF0aW9uLiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gdHJ1ZS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgc3RhcnRzIHdvcmtpbmcsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgd29ya0ZvckZhY3Rpb24oZmFjdGlvbjogc3RyaW5nLCB3b3JrVHlwZTogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgZmFjdGlvbiByZXB1dGF0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBhbW91bnQgb2YgcmVwdXRhdGlvbiB5b3UgaGF2ZSBmb3IgdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gd29yayBmb3IuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIHJlcHV0YXRpb24geW91IGhhdmUgZm9yIHRoZSBzcGVjaWZpZWQgZmFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRGYWN0aW9uUmVwKGZhY3Rpb246IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGZhY3Rpb24gZmF2b3IuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIGFtb3VudCBvZiBmYXZvciB5b3UgaGF2ZSBmb3IgdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24uXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGZhdm9yIHlvdSBoYXZlIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0RmFjdGlvbkZhdm9yKGZhY3Rpb246IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGZhY3Rpb24gZmF2b3IgZ2Fpbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjc1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgYW1vdW50IG9mIGZhdm9yIHlvdSB3aWxsIGdhaW4gZm9yIHRoZSBzcGVjaWZpZWRcXG4gICAgKiBmYWN0aW9uIHdoZW4geW91IHJlc2V0IGJ5IGluc3RhbGxpbmcgQXVnbWVudGF0aW9ucy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFtb3VudCBvZiBmYXZvciB5b3Ugd2lsbCBnYWluIGZvciB0aGUgc3BlY2lmaWVkIGZhY3Rpb24gd2hlbiB5b3UgcmVzZXQgYnkgaW5zdGFsbGluZyBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEZhY3Rpb25GYXZvckdhaW4oZmFjdGlvbjogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBEb25hdGUgdG8gYSBmYWN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gZG9uYXRlIG1vbmV5IHRvIHRoZSBzcGVjaWZpZWQgZmFjdGlvbiBpbiBleGNoYW5nZSBmb3IgcmVwdXRhdGlvbi5cXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBkb25hdGUgdGhlIG1vbmV5LCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gZG9uYXRlIHRvLlxcbiAgICAqIEBwYXJhbSBhbW91bnQgLSBBbW91bnQgb2YgbW9uZXkgdG8gZG9uYXRlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIG1vbmV5IHdhcyBkb25hdGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGRvbmF0ZVRvRmFjdGlvbihmYWN0aW9uOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgcHJvZ3JhbS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB5b3UgdG8gc3RhcnQgd29ya2luZyBvbiBjcmVhdGluZyB0aGVcXG4gICAgKiBzcGVjaWZpZWQgcHJvZ3JhbS4gSWYgeW91IGFyZSBhbHJlYWR5IGluIHRoZSBtaWRkbGUgb2Ygc29tZSDigJx3b3JraW5n4oCdIGFjdGlvblxcbiAgICAqIChzdWNoIGFzIHdvcmtpbmcgZm9yIGEgY29tcGFueSwgdHJhaW5pbmcgYXQgYSBneW0sIG9yIHRha2luZyBhIGNvdXJzZSksIHRoZW5cXG4gICAgKiBydW5uaW5nIHRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGNhbmNlbCB0aGF0IGFjdGlvbiBhbmQgZ2l2ZSB5b3UgeW91clxcbiAgICAqIGVhcm5pbmdzLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBzdGFydCB3b3JraW5nIG9uIHRoZSBzcGVjaWZpZWQgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCBjcmVhdGluZyBhIHByb2dyYW0gdXNpbmcgdGhpcyBmdW5jdGlvbiBoYXMgdGhlIHNhbWUgaGFja2luZyBsZXZlbCByZXF1aXJlbWVudHMgYXMgaXQgbm9ybWFsbHkgd291bGQuIFRoZXNlIGxldmVsIHJlcXVpcmVtZW50cyBhcmU6XFxuICAgICogKiBCcnV0ZVNTSC5leGU6IDUwXFxuICAgICogKiBGVFBDcmFjay5leGU6IDEwMFxcbiAgICAqICogcmVsYXlTTVRQLmV4ZTogMjUwXFxuICAgICogKiBIVFRQV29ybS5leGU6IDUwMFxcbiAgICAqICogU1FMSW5qZWN0LmV4ZTogNzUwXFxuICAgICogKiBEZWVwc2NhblYxLmV4ZTogNzVcXG4gICAgKiAqIERlZXBzY2FuVjIuZXhlOiA0MDBcXG4gICAgKiAqIFNlcnZlclByb2ZpbGVyLmV4ZTogNzVcXG4gICAgKiAqIEF1dG9MaW5rLmV4ZTogMjVcXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogY3JlYXRlUHJvZ3JhbSjigJxyZWxheXNtdHAuZXhl4oCdKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmNyZWF0ZVByb2dyYW0o4oCccmVsYXlzbXRwLmV4ZeKAnSk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHByb2dyYW0gLSBOYW1lIG9mIHByb2dyYW0gdG8gY3JlYXRlLlxcbiAgICAqIEBwYXJhbSBmb2N1cyAtIEFjcXVpcmUgcGxheWVyIGZvY3VzIG9uIHRoaXMgcHJvZ3JhbSBjcmVhdGlvbi4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIHRydWUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IHN0YXJ0IHdvcmtpbmcgb24gdGhlIHNwZWNpZmllZCBwcm9ncmFtLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNyZWF0ZVByb2dyYW0ocHJvZ3JhbTogc3RyaW5nLCBmb2N1cz86IGJvb2xlYW4pOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDb21taXQgYSBjcmltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBhdXRvbWF0aWNhbGx5IGF0dGVtcHQgdG8gY29tbWl0IGNyaW1lcy5cXG4gICAgKiBJZiB5b3UgYXJlIGFscmVhZHkgaW4gdGhlIG1pZGRsZSBvZiBzb21lIOKAmHdvcmtpbmfigJkgYWN0aW9uIChzdWNoXFxuICAgICogYXMgd29ya2luZyBmb3IgYSBjb21wYW55IG9yIHRyYWluaW5nIGF0IGEgZ3ltKSwgdGhlbiBydW5uaW5nIHRoaXNcXG4gICAgKiBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2FuY2VsIHRoYXQgYWN0aW9uIGFuZCBnaXZlIHlvdSB5b3VyXFxuICAgICogZWFybmluZ3MuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gYXR0ZW1wdCB0aGVcXG4gICAgKiBzcGVjaWZpZWQgY3JpbWUgKGUuZyBJdCB0YWtlcyA2MCBzZWNvbmRzIHRvIGF0dGVtcHQgdGhlIOKAmFJvYiBTdG9yZeKAmSBjcmltZSxcXG4gICAgKiBzbyBydW5uaW5nIGBjb21taXRDcmltZSgncm9iIHN0b3JlJylgIHdpbGwgcmV0dXJuIDYwLDAwMCkuXFxuICAgICpcXG4gICAgKiBXYXJuaW5nOiBJIGRvIG5vdCByZWNvbW1lbmQgdXNpbmcgdGhlIHRpbWUgcmV0dXJuZWQgZnJvbSB0aGlzIGZ1bmN0aW9uIHRvIHRyeVxcbiAgICAqIGFuZCBzY2hlZHVsZSB5b3VyIGNyaW1lIGF0dGVtcHRzLiBJbnN0ZWFkLCBJIHdvdWxkIHVzZSB0aGUgaXNCdXN5IFNpbmd1bGFyaXR5XFxuICAgICogZnVuY3Rpb24gdG8gY2hlY2sgd2hldGhlciB5b3UgaGF2ZSBmaW5pc2hlZCBhdHRlbXB0aW5nIGEgY3JpbWUuIFRoaXMgaXMgYmVjYXVzZVxcbiAgICAqIGFsdGhvdWdoIHRoZSBnYW1lIHNldHMgYSBjZXJ0YWluIGNyaW1lIHRvIGJlIFggYW1vdW50IG9mIHNlY29uZHMsIHRoZXJlIGlzIG5vXFxuICAgICogZ3VhcmFudGVlIHRoYXQgeW91ciBicm93c2VyIHdpbGwgZm9sbG93IHRoYXQgdGltZSBsaW1pdC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUgdG8gYXR0ZW1wdC5cXG4gICAgKiBAcmV0dXJucyBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBhdHRlbXB0IHRoZSBzcGVjaWZpZWQgY3JpbWUuXFxuICAgICovXFxuICAgY29tbWl0Q3JpbWUoY3JpbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNoYW5jZSB0byBzdWNjZXNzZnVsbHkgY29tbWl0IGEgY3JpbWUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgeW91ciBjaGFuY2Ugb2Ygc3VjY2VzcyBhdCBjb21taXRpbmcgdGhlIHNwZWNpZmllZCBjcmltZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUuXFxuICAgICogQHJldHVybnMgQ2hhbmNlIG9mIHN1Y2Nlc3MgYXQgY29tbWl0aW5nIHRoZSBzcGVjaWZpZWQgY3JpbWUuXFxuICAgICovXFxuICAgZ2V0Q3JpbWVDaGFuY2UoY3JpbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIHJlbGF0ZWQgdG8gYSBjcmltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHN0YXRzIG9mIHRoZSBjcmltZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBjcmltZSAtIE5hbWUgb2YgY3JpbWUuIE5vdCBjYXNlLXNlbnNpdGl2ZVxcbiAgICAqIEByZXR1cm5zIFRoZSBzdGF0cyBvZiB0aGUgY3JpbWUuXFxuICAgICovXFxuICAgZ2V0Q3JpbWVTdGF0cyhjcmltZTogc3RyaW5nKTogQ3JpbWVTdGF0cztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGEgbGlzdCBvZiBvd25lZCBhdWdtZW50YXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgbmFtZXMgKGFzIHN0cmluZ3MpIG9mIGFsbCBBdWdtZW50YXRpb25zIHlvdSBoYXZlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHB1cmNoYXNlZCAtIFNwZWNpZmllcyB3aGV0aGVyIHRoZSByZXR1cm5lZCBhcnJheSBzaG91bGQgaW5jbHVkZSBBdWdtZW50YXRpb25zIHlvdSBoYXZlIHB1cmNoYXNlZCBidXQgbm90IHlldCBpbnN0YWxsZWQuIEJ5IGRlZmF1bHQsIHRoaXMgYXJndW1lbnQgaXMgZmFsc2Ugd2hpY2ggbWVhbnMgdGhhdCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgTk9UIGhhdmUgdGhlIHB1cmNoYXNlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIChhcyBzdHJpbmdzKSBvZiBhbGwgQXVnbWVudGF0aW9ucyB5b3UgaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRPd25lZEF1Z21lbnRhdGlvbnMocHVyY2hhc2VkPzogYm9vbGVhbik6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYSBsaXN0IG9mIGF1Z21lbnRhdGlvbiBhdmFpbGFibGUgZnJvbSBhIGZhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIChhcyBzdHJpbmdzKSBvZiBhbGwgQXVnbWVudGF0aW9uc1xcbiAgICAqIHRoYXQgYXJlIGF2YWlsYWJsZSBmcm9tIHRoZSBzcGVjaWZpZWQgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uIC0gTmFtZSBvZiBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvbihmYWN0aW9uOiBzdHJpbmcpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmUtcmVxdWlzaXRlIG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhbiBhcnJheSB3aXRoIHRoZSBuYW1lcyBvZiB0aGUgcHJlcmVxdWlzaXRlIEF1Z21lbnRhdGlvbihzKSBmb3IgdGhlIHNwZWNpZmllZCBBdWdtZW50YXRpb24uXFxuICAgICogSWYgdGhlcmUgYXJlIG5vIHByZXJlcXVpc2l0ZXMsIGEgYmxhbmsgYXJyYXkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gYXVnTmFtZSAtIE5hbWUgb2YgQXVnbWVudGF0aW9uLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdGhlIG5hbWVzIG9mIHRoZSBwcmVyZXF1aXNpdGUgQXVnbWVudGF0aW9uKHMpIGZvciB0aGUgc3BlY2lmaWVkIEF1Z21lbnRhdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25QcmVyZXEoYXVnTmFtZTogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgcHJpY2UgYW5kIHJlcHV0YXRpb24gb2YgYW4gYXVnbWVudGF0aW9uLlxcbiAgICAqIEBkZXByZWNhdGVkIHVzZSBnZXRBdWdtZW50YXRpb25QcmljZSBnZXRBdWdtZW50YXRpb25SZXBDb3N0XFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgYW4gYXJyYXkgd2l0aCB0d28gZWxlbWVudHMgdGhhdCBnaXZlcyB0aGUgY29zdCBmb3JcXG4gICAgKiB0aGUgc3BlY2lmaWVkIEF1Z21lbnRhdGlvbi4gVGhlIGZpcnN0IGVsZW1lbnQgaW4gdGhlIHJldHVybmVkIGFycmF5IGlzIHRoZVxcbiAgICAqIHJlcHV0YXRpb24gcmVxdWlyZW1lbnQgb2YgdGhlIEF1Z21lbnRhdGlvbiwgYW5kIHRoZSBzZWNvbmQgZWxlbWVudCBpcyB0aGVcXG4gICAgKiBtb25leSBjb3N0LlxcbiAgICAqXFxuICAgICogSWYgYW4gaW52YWxpZCBBdWdtZW50YXRpb24gbmFtZSBpcyBwYXNzZWQgaW4gZm9yIHRoZSBhdWdOYW1lIGFyZ3VtZW50LCB0aGlzXFxuICAgICogZnVuY3Rpb24gd2lsbCByZXR1cm4gdGhlIGFycmF5IFstMSwgLTFdLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGF1Z05hbWUgLSBOYW1lIG9mIEF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIGZpcnN0IGVsZW1lbnQgYXMgYSByZXB1dGF0aW9uIHJlcXVpcmVtZW50IGFuZCBzZWNvbmQgZWxlbWVudCBhcyB0aGUgbW9uZXkgY29zdC5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25Db3N0KGF1Z05hbWU6IHN0cmluZyk6IFtudW1iZXIsIG51bWJlcl07XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBwcmljZSBvZiBhbiBhdWdtZW50YXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBhdWdOYW1lIC0gTmFtZSBvZiBBdWdtZW50YXRpb24uXFxuICAgICogQHJldHVybnMgUHJpY2Ugb2YgdGhlIGF1Z21lbnRhdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBdWdtZW50YXRpb25QcmljZShhdWdOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCByZXB1dGF0aW9uIHJlcXVpcmVtZW50IG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyLjUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogQHBhcmFtIGF1Z05hbWUgLSBOYW1lIG9mIEF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBSZXB1dGF0aW9uIHJlcXVpcmVtZW50IG9mIHRoZSBhdWdtZW50YXRpb24uXFxuICAgICovXFxuICAgZ2V0QXVnbWVudGF0aW9uUmVwUmVxKGF1Z05hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUHVyY2hhc2UgYW4gYXVnbWVudGF0aW9uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgdHJ5IHRvIHB1cmNoYXNlIHRoZSBzcGVjaWZpZWQgQXVnbWVudGF0aW9uIHRocm91Z2ggdGhlIGdpdmVuIEZhY3Rpb24uXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIEF1Z21lbnRhdGlvbiBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZhY3Rpb24gLSBOYW1lIG9mIGZhY3Rpb24gdG8gcHVyY2hhc2UgQXVnbWVudGF0aW9uIGZyb20uXFxuICAgICogQHBhcmFtIGF1Z21lbnRhdGlvbiAtIE5hbWUgb2YgQXVnbWVudGF0aW9uIHRvIHB1cmNoYXNlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIEF1Z21lbnRhdGlvbiBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlQXVnbWVudGF0aW9uKGZhY3Rpb246IHN0cmluZywgYXVnbWVudGF0aW9uOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHN0YXRzIG9mIGFuIGF1Z21lbnRhdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhdWdtZW50YXRpb24gc3RhdHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgQXVnbWVudGF0aW9uLiBDQVNFLVNFTlNJVElWRS5cXG4gICAgKiBAcmV0dXJucyBBdWdtZW50YXRpb24gc3RhdHMuXFxuICAgICovXFxuICAgZ2V0QXVnbWVudGF0aW9uU3RhdHMobmFtZTogc3RyaW5nKTogQXVnbWVudGF0aW9uU3RhdHM7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEluc3RhbGwgeW91ciBwdXJjaGFzZWQgYXVnbWVudGF0aW9ucy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGluc3RhbGwgeW91ciBBdWdtZW50YXRpb25zLCByZXNldHRpbmcgdGhlIGdhbWUgYXMgdXN1YWwuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2JTY3JpcHQgLSBUaGlzIGlzIGEgc2NyaXB0IHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJ1biBhZnRlciBBdWdtZW50YXRpb25zIGFyZSBpbnN0YWxsZWQgKGFmdGVyIHRoZSByZXNldCkuIFRoaXMgc2NyaXB0IHdpbGwgYmUgcnVuIHdpdGggbm8gYXJndW1lbnRzIGFuZCAxIHRocmVhZC4gSXQgbXVzdCBiZSBsb2NhdGVkIG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKi9cXG4gICBpbnN0YWxsQXVnbWVudGF0aW9ucyhjYlNjcmlwdD86IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIFBsYXllcuKAmXMgc3RhdHMuXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlIGdldFBsYXllclxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiByZXMgPSBnZXRTdGF0cygpO1xcbiAgICAqIHByaW50KCdNeSBjaGFyaXNtYSBsZXZlbCBpczogJyArIHJlcy5jaGFyaXNtYSk7XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgT2JqZWN0IHdpdGggdGhlIFBsYXllcuKAmXMgc3RhdHMuXFxuICAgICovXFxuICAgZ2V0U3RhdHMoKTogUGxheWVyU2tpbGxzO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIGFuIG9iamVjdCB3aXRoIHZhcmlvdXMgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBjaGFyYWN0ZXIuXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlIGdldFBsYXllclxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCB3aXRoIHZhcmlvdXMgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBjaGFyYWN0ZXIuXFxuICAgICovXFxuICAgZ2V0Q2hhcmFjdGVySW5mb3JtYXRpb24oKTogQ2hhcmFjdGVySW5mbztcXG4gXFxuICAgLyoqXFxuICAgICogSG9zcGl0YWxpemUgdGhlIHBsYXllci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjI1IEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRoZSBjb3N0IG9mIHRoZSBob3NwaXRhbGl6YXRpb24uXFxuICAgICovXFxuICAgaG9zcGl0YWxpemUoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBTb2Z0IHJlc2V0IHRoZSBnYW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHBlcmZvcm0gYSByZXNldCBldmVuIGlmIHlvdSBkb27igJl0IGhhdmUgYW55IGF1Z21lbnRhdGlvbiBpbnN0YWxsZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2JTY3JpcHQgLSBUaGlzIGlzIGEgc2NyaXB0IHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJ1biBhZnRlciBBdWdtZW50YXRpb25zIGFyZSBpbnN0YWxsZWQgKGFmdGVyIHRoZSByZXNldCkuIFRoaXMgc2NyaXB0IHdpbGwgYmUgcnVuIHdpdGggbm8gYXJndW1lbnRzIGFuZCAxIHRocmVhZC4gSXQgbXVzdCBiZSBsb2NhdGVkIG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKi9cXG4gICBzb2Z0UmVzZXQoY2JTY3JpcHQ6IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdvIHRvIGEgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBNb3ZlIHRoZSBwbGF5ZXIgdG8gYSBzcGVjaWZpYyBsb2NhdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBsb2NhdGlvbk5hbWUgLSBOYW1lIG9mIHRoZSBsb2NhdGlvbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgd2FzIG1vdmVkIHRoZXJlLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgZ29Ub0xvY2F0aW9uKGxvY2F0aW9uTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE5hbWUgb2YgdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldEN1cnJlbnRTZXJ2ZXIoKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBDb25uZWN0IHRvIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDIgR0IgKiAxNi80LzFcXG4gICAgKlxcbiAgICAqXFxuICAgICogUnVuIHRoZSBjb25uZWN0IEhPU1ROQU1FIGNvbW1hbmQgaW4gdGhlIHRlcm1pbmFsLiBDYW4gb25seSBjb25uZWN0IHRvIG5laWdoYm9ycy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGNvbm5lY3QgY29tbWFuZCB3YXMgc3VjY2Vzc2Z1bCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNvbm5lY3QoaG9zdG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1biB0aGUgaGFjayBjb21tYW5kIGluIHRoZSB0ZXJtaW5hbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFtb3VudCBvZiBtb25leSBzdG9sZW4gYnkgbWFudWFsIGhhY2tpbmcuXFxuICAgICovXFxuICAgbWFudWFsSGFjaygpOiBQcm9taXNlPG51bWJlcj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1biB0aGUgYmFja2Rvb3IgY29tbWFuZCBpbiB0aGUgdGVybWluYWwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQiAqIDE2LzQvMVxcbiAgICAqXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBQcm9taXNlIHdhaXRpbmcgZm9yIHRoZSBpbnN0YWxsYXRpb24gdG8gZmluaXNoLlxcbiAgICAqL1xcbiAgIGluc3RhbGxCYWNrZG9vcigpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB0aGUgcGxheWVyIGlzIGZvY3VzZWQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBsYXllciBpcyBmb2N1c2VkLlxcbiAgICAqL1xcbiAgIGlzRm9jdXNlZCgpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBTZXQgdGhlIHBsYXllcnMgZm9jdXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCICogMTYvNC8xXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBmb2N1cyB3YXMgY2hhbmdlZC5cXG4gICAgKi9cXG4gICBzZXRGb2N1cyhmb2N1czogYm9vbGVhbik6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IEFQSVxcbiAgKiBAcmVtYXJrc1xcbiAgKiBOb3QgYWxsIHRoZXNlIGZ1bmN0aW9ucyBhcmUgaW1tZWRpYXRlbHkgYXZhaWxhYmxlLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEhhY2tuZXQge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMgeW91IG93bi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgSGFja25ldCBOb2RlcyB5b3Ugb3duLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMuXFxuICAgICovXFxuICAgbnVtTm9kZXMoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG1heGltdW0gbnVtYmVyIG9mIGhhY2tuZXQgbm9kZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgbWF4aW11bSBudW1iZXIgb2YgaGFja25ldCBub2Rlcy5cXG4gICAgKi9cXG4gICBtYXhOdW1Ob2RlcygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgbmV3IGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBQdXJjaGFzZXMgYSBuZXcgSGFja25ldCBOb2RlLiBSZXR1cm5zIGEgbnVtYmVyIHdpdGggdGhlIGluZGV4IG9mIHRoZVxcbiAgICAqIEhhY2tuZXQgTm9kZS4gVGhpcyBpbmRleCBpcyBlcXVpdmFsZW50IHRvIHRoZSBudW1iZXIgYXQgdGhlIGVuZCBvZlxcbiAgICAqIHRoZSBIYWNrbmV0IE5vZGXigJlzIG5hbWUgKGUuZyBUaGUgSGFja25ldCBOb2RlIG5hbWVkIGBoYWNrbmV0LW5vZGUtNGBcXG4gICAgKiB3aWxsIGhhdmUgYW4gaW5kZXggb2YgNCkuXFxuICAgICpcXG4gICAgKiBJZiB0aGUgcGxheWVyIGNhbm5vdCBhZmZvcmQgdG8gcHVyY2hhc2UgYSBuZXcgSGFja25ldCBOb2RlIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIC0xLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVGhlIGluZGV4IG9mIHRoZSBIYWNrbmV0IE5vZGUgb3IgaWYgdGhlIHBsYXllciBjYW5ub3QgYWZmb3JkIHRvIHB1cmNoYXNlIGEgbmV3IEhhY2tuZXQgTm9kZSB0aGUgZnVuY3Rpb24gd2lsbCByZXR1cm4gLTEuXFxuICAgICovXFxuICAgcHVyY2hhc2VOb2RlKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwcmljZSBvZiB0aGUgbmV4dCBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiBwdXJjaGFzaW5nIGEgbmV3IEhhY2tuZXQgTm9kZS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIENvc3Qgb2YgcHVyY2hhc2luZyBhIG5ldyBIYWNrbmV0IE5vZGUuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VOb2RlQ29zdCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgc3RhdHMgb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyBhIHZhcmlldHkgb2Ygc3RhdHMgYWJvdXQgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUuXFxuICAgICpcXG4gICAgKiBOb3RlIHRoYXQgZm9yIEhhY2tuZXQgTm9kZXMsIHByb2R1Y3Rpb24gcmVmZXJzIHRvIHRoZSBhbW91bnQgb2YgbW9uZXkgdGhlIG5vZGUgZ2VuZXJhdGVzLlxcbiAgICAqIEZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIEhhY2tuZXQgTm9kZXMpLCBwcm9kdWN0aW9uIHJlZmVycyB0byB0aGVcXG4gICAgKiBhbW91bnQgb2YgaGFzaGVzIHRoZSBub2RlIGdlbmVyYXRlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlXFxuICAgICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgYSB2YXJpZXR5IG9mIHN0YXRzIGFib3V0IHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlLlxcbiAgICAqL1xcbiAgIGdldE5vZGVTdGF0cyhpbmRleDogbnVtYmVyKTogTm9kZVN0YXRzO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHRoZSBsZXZlbCBvZiBhIGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUcmllcyB0byB1cGdyYWRlIHRoZSBsZXZlbCBvZiB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSBieSBuLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIGxldmVsIGlzIHN1Y2Nlc3NmdWxseSB1cGdyYWRlZCBieSBuXFxuICAgICogb3IgaWYgaXQgaXMgdXBncmFkZWQgYnkgc29tZSBwb3NpdGl2ZSBhbW91bnQgYW5kIHRoZSBOb2RlIHJlYWNoZXMgaXRzIG1heCBsZXZlbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGluZGV4IC0gSW5kZXgvSWRlbnRpZmllciBvZiBIYWNrbmV0IE5vZGUuXFxuICAgICogQHBhcmFtIG4gLSBOdW1iZXIgb2YgbGV2ZWxzIHRvIHB1cmNoYXNlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIGxldmVsIGlzIHN1Y2Nlc3NmdWxseSB1cGdyYWRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVMZXZlbChpbmRleDogbnVtYmVyLCBuOiBudW1iZXIpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHRoZSBSQU0gb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVHJpZXMgdG8gdXBncmFkZSB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZeKAmXMgUkFNIG4gdGltZXMuXFxuICAgICogTm90ZSB0aGF0IGVhY2ggdXBncmFkZSBkb3VibGVzIHRoZSBOb2Rl4oCZcyBSQU0uXFxuICAgICogU28gdGhpcyBpcyBlcXVpdmFsZW50IHRvIG11bHRpcGx5aW5nIHRoZSBOb2Rl4oCZcyBSQU0gYnkgMiBuLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIFJBTSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQgbiB0aW1lc1xcbiAgICAqIG9yIGlmIGl0IGlzIHVwZ3JhZGVkIHNvbWUgcG9zaXRpdmUgbnVtYmVyIG9mIHRpbWVzIGFuZCB0aGUgTm9kZSByZWFjaGVzIGl0IG1heCBSQU0uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIG9mIHRpbWVzIHRvIHVwZ3JhZGUgUkFNLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBIYWNrbmV0IE5vZGXigJlzIHJhbSBpcyBzdWNjZXNzZnVsbHkgdXBncmFkZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1cGdyYWRlUmFtKGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgdGhlIGNvcmUgb2YgYSBoYWNrbmV0IG5vZGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVHJpZXMgdG8gcHVyY2hhc2UgbiBjb3JlcyBmb3IgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgaXQgc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlcyBuIGNvcmVzIGZvciB0aGUgSGFja25ldCBOb2RlXFxuICAgICogb3IgaWYgaXQgcHVyY2hhc2VzIHNvbWUgcG9zaXRpdmUgYW1vdW50IGFuZCB0aGUgTm9kZSByZWFjaGVzIGl0cyBtYXggbnVtYmVyIG9mIGNvcmVzLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiBjb3JlcyB0byBwdXJjaGFzZS4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgSGFja25ldCBOb2Rl4oCZcyBjb3JlcyBhcmUgc3VjY2Vzc2Z1bGx5IHB1cmNoYXNlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVDb3JlKGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFVwZ3JhZGUgdGhlIGNhY2hlIG9mIGEgaGFja25ldCBub2RlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFRyaWVzIHRvIHVwZ3JhZGUgdGhlIHNwZWNpZmllZCBIYWNrbmV0IFNlcnZlcuKAmXMgY2FjaGUgbiB0aW1lcy5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiBpdCBzdWNjZXNzZnVsbHkgdXBncmFkZXMgdGhlIFNlcnZlcuKAmXMgY2FjaGUgbiB0aW1lcyxcXG4gICAgKiBvciBpZiBpdCBwdXJjaGFzZXMgc29tZSBwb3NpdGl2ZSBhbW91bnQgYW5kIHRoZSBTZXJ2ZXIgcmVhY2hlcyBpdHMgbWF4IGNhY2hlIGxldmVsLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiBjYWNoZSBsZXZlbHMgdG8gcHVyY2hhc2UuIE11c3QgYmUgcG9zaXRpdmUuIFJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIEhhY2tuZXQgTm9kZeKAmXMgY29yZXMgYXJlIHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB1cGdyYWRlQ2FjaGUoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgbGV2ZWxzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGJ5IG4gbGV2ZWxzLlxcbiAgICAqXFxuICAgICogSWYgYW4gaW52YWxpZCB2YWx1ZSBmb3IgbiBpcyBwcm92aWRlZCwgdGhlbiB0aGlzIGZ1bmN0aW9uIHJldHVybnMgMC5cXG4gICAgKiBJZiB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSBpcyBhbHJlYWR5IGF0IG1heCBsZXZlbCwgdGhlbiBJbmZpbml0eSBpcyByZXR1cm5lZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBpbmRleCAtIEluZGV4L0lkZW50aWZpZXIgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIG9mIGxldmVscyB0byB1cGdyYWRlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBDb3N0IG9mIHVwZ3JhZGluZyB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZS5cXG4gICAgKi9cXG4gICBnZXRMZXZlbFVwZ3JhZGVDb3N0KGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgUkFNLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIHRoZSBSQU0gb2YgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgbiB0aW1lcy5cXG4gICAgKlxcbiAgICAqIElmIGFuIGludmFsaWQgdmFsdWUgZm9yIG4gaXMgcHJvdmlkZWQsIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIDAuXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgaXMgYWxyZWFkeSBhdCBtYXggbGV2ZWwsIHRoZW4gSW5maW5pdHkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiB0aW1lcyB0byB1cGdyYWRlIFJBTS4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUncyByYW0uXFxuICAgICovXFxuICAgZ2V0UmFtVXBncmFkZUNvc3QoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgdGhlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgbm9kZSBjb3Jlcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyB0aGUgbnVtYmVyIG9mIGNvcmVzIG9mIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGJ5IG4uXFxuICAgICpcXG4gICAgKiBJZiBhbiBpbnZhbGlkIHZhbHVlIGZvciBuIGlzIHByb3ZpZGVkLCB0aGVuIHRoaXMgZnVuY3Rpb24gcmV0dXJucyAwLlxcbiAgICAqIElmIHRoZSBzcGVjaWZpZWQgSGFja25ldCBOb2RlIGlzIGFscmVhZHkgYXQgbWF4IGxldmVsLCB0aGVuIEluZmluaXR5IGlzIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGluZGV4IC0gSW5kZXgvSWRlbnRpZmllciBvZiBIYWNrbmV0IE5vZGUuXFxuICAgICogQHBhcmFtIG4gLSBOdW1iZXIgb2YgdGltZXMgdG8gdXBncmFkZSBjb3Jlcy4gTXVzdCBiZSBwb3NpdGl2ZS4gUm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUncyBudW1iZXIgb2YgY29yZXMuXFxuICAgICovXFxuICAgZ2V0Q29yZVVwZ3JhZGVDb3N0KGluZGV4OiBudW1iZXIsIG46IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgY2FjaGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY29zdCBvZiB1cGdyYWRpbmcgdGhlIGNhY2hlIGxldmVsIG9mIHRoZSBzcGVjaWZpZWQgSGFja25ldCBTZXJ2ZXIgYnkgbi5cXG4gICAgKlxcbiAgICAqIElmIGFuIGludmFsaWQgdmFsdWUgZm9yIG4gaXMgcHJvdmlkZWQsIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIDAuXFxuICAgICogSWYgdGhlIHNwZWNpZmllZCBIYWNrbmV0IE5vZGUgaXMgYWxyZWFkeSBhdCBtYXggbGV2ZWwsIHRoZW4gSW5maW5pdHkgaXMgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaW5kZXggLSBJbmRleC9JZGVudGlmaWVyIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIE51bWJlciBvZiB0aW1lcyB0byB1cGdyYWRlIGNhY2hlLiBNdXN0IGJlIHBvc2l0aXZlLiBSb3VuZGVkIHRvIG5lYXJlc3QgaW50ZWdlci5cXG4gICAgKiBAcmV0dXJucyBDb3N0IG9mIHVwZ3JhZGluZyB0aGUgc3BlY2lmaWVkIEhhY2tuZXQgTm9kZSdzIGNhY2hlLlxcbiAgICAqL1xcbiAgIGdldENhY2hlVXBncmFkZUNvc3QoaW5kZXg6IG51bWJlciwgbjogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHRvdGFsIG51bWJlciBvZiBoYXNoZXMgc3RvcmVkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBoYXNoZXMgeW91IGhhdmUuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgaGFzaGVzIHlvdSBoYXZlLlxcbiAgICAqL1xcbiAgIG51bUhhc2hlcygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbWF4aW11bSBudW1iZXIgb2YgaGFzaGVzIHlvdSBjYW4gc3RvcmUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGhhc2hlcyB5b3UgY2FuIHN0b3JlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIGhhc2hlcyB5b3UgY2FuIHN0b3JlLlxcbiAgICAqL1xcbiAgIGhhc2hDYXBhY2l0eSgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY29zdCBvZiBhIGhhc2ggdXBncmFkZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICh0aGUgdXBncmFkZWQgdmVyc2lvbiBvZiBhIEhhY2tuZXQgTm9kZSkuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgaGFzaGVzIHJlcXVpcmVkIGZvciB0aGUgc3BlY2lmaWVkIHVwZ3JhZGUuIFRoZSBuYW1lIG9mIHRoZSB1cGdyYWRlIG11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciB1cGdyYWRlTmFtZSA9IFxcXCJTZWxsIGZvciBDb3Jwb3JhdGlvbiBGdW5kc1xcXCI7XFxuICAgICogaWYgKGhhY2tuZXQubnVtSGFzaGVzKCkgPiBoYWNrbmV0Lmhhc2hDb3N0KHVwZ3JhZGVOYW1lKSkge1xcbiAgICAqICAgIGhhY2tuZXQuc3BlbmRIYXNoZXModXBnTmFtZSk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogY29uc3QgdXBncmFkZU5hbWUgPSBcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiO1xcbiAgICAqIGlmIChucy5oYWNrbmV0Lm51bUhhc2hlcygpID4gbnMuaGFja25ldC5oYXNoQ29zdCh1cGdyYWRlTmFtZSkpIHtcXG4gICAgKiAgICBucy5oYWNrbmV0LnNwZW5kSGFzaGVzKHVwZ05hbWUpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gdXBnTmFtZSAtIE5hbWUgb2YgdGhlIHVwZ3JhZGUgb2YgSGFja25ldCBOb2RlLlxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiBoYXNoZXMgcmVxdWlyZWQgZm9yIHRoZSBzcGVjaWZpZWQgdXBncmFkZS5cXG4gICAgKi9cXG4gICBoYXNoQ29zdCh1cGdOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgaGFzaCB1cGdyYWRlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIFNwZW5kIHRoZSBoYXNoZXMgZ2VuZXJhdGVkIGJ5IHlvdXIgSGFja25ldCBTZXJ2ZXJzIG9uIGFuIHVwZ3JhZGUuXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gdmFsdWUgLSB0cnVlIGlmIHRoZSB1cGdyYWRlIGlzIHN1Y2Nlc3NmdWxseSBwdXJjaGFzZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBUaGUgbmFtZSBvZiB0aGUgdXBncmFkZSBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIFRoZSBgdXBnVGFyZ2V0YCBhcmd1bWVudCBpcyB1c2VkIGZvciB1cGdyYWRlcyBzdWNoIGFzIGBSZWR1Y2UgTWluaW11bSBTZWN1cml0eWAsIHdoaWNoIGFwcGxpZXMgdG8gYSBzcGVjaWZpYyBzZXJ2ZXIuXFxuICAgICogSW4gdGhpcyBjYXNlLCB0aGUgYHVwZ1RhcmdldGAgYXJndW1lbnQgbXVzdCBiZSB0aGUgaG9zdG5hbWUgb2YgdGhlIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaGFja25ldC5zcGVuZEhhc2hlcyhcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiKTtcXG4gICAgKiBoYWNrbmV0LnNwZW5kSGFzaGVzKFxcXCJJbmNyZWFzZSBNYXhpbXVtIE1vbmV5XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogTlMyOlxcbiAgICAqIG5zLmhhY2tuZXQuc3BlbmRIYXNoZXMoXFxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXFxcIik7XFxuICAgICogbnMuaGFja25ldC5zcGVuZEhhc2hlcyhcXFwiSW5jcmVhc2UgTWF4aW11bSBNb25leVxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHVwZ05hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlIG9mIEhhY2tuZXQgTm9kZS5cXG4gICAgKiBAcGFyYW0gdXBnVGFyZ2V0IC0gT2JqZWN0IHRvIHdoaWNoIHVwZ3JhZGUgYXBwbGllcy4gUmVxdWlyZWQgZm9yIGNlcnRhaW4gdXBncmFkZXMuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgdXBncmFkZSBpcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLi5cXG4gICAgKi9cXG4gICBzcGVuZEhhc2hlcyh1cGdOYW1lOiBzdHJpbmcsIHVwZ1RhcmdldD86IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbGlzdCBvZiBoYXNoIHVwZ3JhZGVzXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIEhhY2tuZXQgU2VydmVycyAodGhlIHVwZ3JhZGVkIHZlcnNpb24gb2YgYSBIYWNrbmV0IE5vZGUpLlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbGlzdCBvZiBhbGwgYXZhaWxhYmxlIGhhc2ggdXBncmFkZXMgdGhhdCBjYW4gYmUgdXNlZCBpbiB0aGUgc3BlbmRIYXNoZXMgZnVuY3Rpb24uXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB2YXIgdXBncmFkZXMgPSBoYWNrbmV0LmdldEhhc2hVcGdyYWRlcygpOyAvLyBbXFxcIlNlbGwgZm9yIE1vbmV5XFxcIixcXFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcXFwiLC4uLl1cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IHVwZ3JhZGVzID0gbnMuaGFja25ldC5nZXRIYXNoVXBncmFkZXMoKTsgLy8gW1xcXCJTZWxsIGZvciBNb25leVxcXCIsXFxcIlNlbGwgZm9yIENvcnBvcmF0aW9uIEZ1bmRzXFxcIiwuLi5dXFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgQW4gYXJyYXkgY29udGFpbmluZyB0aGUgYXZhaWxhYmxlIHVwZ3JhZGVzXFxuICAgICovXFxuICAgZ2V0SGFzaFVwZ3JhZGVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGxldmVsIG9mIGEgaGFzaCB1cGdyYWRlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIExldmVsIG9mIHRoZSB1cGdyYWRlLlxcbiAgICAqL1xcbiAgIGdldEhhc2hVcGdyYWRlTGV2ZWwodXBnTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG11bHRpcGxlciB0byBzdHVkeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXBwbGljYWJsZSBmb3IgSGFja25ldCBTZXJ2ZXJzICh0aGUgdXBncmFkZWQgdmVyc2lvbiBvZiBhIEhhY2tuZXQgTm9kZSkuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBNdWx0aXBsaWVyLlxcbiAgICAqL1xcbiAgIGdldFN0dWR5TXVsdCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbXVsdGlwbGVyIHRvIHRyYWluaW5nLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgb25seSBhcHBsaWNhYmxlIGZvciBIYWNrbmV0IFNlcnZlcnMgKHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIGEgSGFja25ldCBOb2RlKS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE11bHRpcGxpZXIuXFxuICAgICovXFxuICAgZ2V0VHJhaW5pbmdNdWx0KCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEJsYWRlYnVybmVyIEFQSVxcbiAgKiBAcmVtYXJrc1xcbiAgKiBZb3UgaGF2ZSB0byBiZSBlbXBsb3llZCBpbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24gYW5kIGJlIGluIEJpdE5vZGUtN1xcbiAgKiBvciBoYXZlIFNvdXJjZS1GaWxlIDcgaW4gb3JkZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEJsYWRlYnVybmVyIHtcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBjb250cmFjdHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIEJsYWRlYnVybmVyIGNvbnRyYWN0cy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIEJsYWRlYnVybmVyIGNvbnRyYWN0cy5cXG4gICAgKi9cXG4gICBnZXRDb250cmFjdE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBvcGVyYXRpb25zLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBvcGVyYXRpb25zLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQXJyYXkgb2Ygc3RyaW5ncyBjb250YWluaW5nIHRoZSBuYW1lcyBvZiBhbGwgQmxhZGVidXJuZXIgb3BlcmF0aW9ucy5cXG4gICAgKi9cXG4gICBnZXRPcGVyYXRpb25OYW1lcygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogTGlzdCBhbGwgYmxhY2sgb3BzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBCbGFjayBPcHMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBCbGFkZWJ1cm5lciBCbGFjayBPcHMuXFxuICAgICovXFxuICAgZ2V0QmxhY2tPcE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGFsbCBnZW5lcmFsIGFjdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIGdlbmVyYWwgQmxhZGVidXJuZXIgYWN0aW9ucy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyB0aGUgbmFtZXMgb2YgYWxsIGdlbmVyYWwgQmxhZGVidXJuZXIgYWN0aW9ucy5cXG4gICAgKi9cXG4gICBnZXRHZW5lcmFsQWN0aW9uTmFtZXMoKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgYWxsIHNraWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gYXJyYXkgb2Ygc3RyaW5ncyBjb250YWluaW5nIHRoZSBuYW1lcyBvZiBhbGwgZ2VuZXJhbCBCbGFkZWJ1cm5lciBza2lsbHMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBcnJheSBvZiBzdHJpbmdzIGNvbnRhaW5pbmcgdGhlIG5hbWVzIG9mIGFsbCBnZW5lcmFsIEJsYWRlYnVybmVyIHNraWxscy5cXG4gICAgKi9cXG4gICBnZXRTa2lsbE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBTdGFydCBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gc3RhcnQgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBhY3Rpb24gd2FzIHN0YXJ0ZWQgc3VjY2Vzc2Z1bGx5LCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgYWN0aW9uIHdhcyBzdGFydGVkIHN1Y2Nlc3NmdWxseSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzdGFydEFjdGlvbih0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0b3AgY3VycmVudCBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogU3RvcHMgdGhlIGN1cnJlbnQgQmxhZGVidXJuZXIgYWN0aW9uLlxcbiAgICAqXFxuICAgICovXFxuICAgc3RvcEJsYWRlYnVybmVyQWN0aW9uKCk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjdXJyZW50IGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgY3VycmVudCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICogSWYgdGhlIHBsYXllciBpcyBub3QgcGVyZm9ybWluZyBhbiBhY3Rpb24sIHRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiBhbiBvYmplY3Qgd2l0aCB0aGUg4oCYdHlwZeKAmSBwcm9wZXJ0eSBzZXQgdG8g4oCcSWRsZeKAnS5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHBsYXllcuKAmXMgY3VycmVudCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0Q3VycmVudEFjdGlvbigpOiBCbGFkZWJ1cm5lckN1ckFjdGlvbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSB0aW1lIHRvIGNvbXBsZXRlIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBpdCB0YWtlcyB0byBjb21wbGV0ZSB0aGUgc3BlY2lmaWVkIGFjdGlvblxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gY29tcGxldGUgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uVGltZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGVzdGltYXRlIHN1Y2Nlc3MgY2hhbmNlIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBlc3RpbWF0ZWQgc3VjY2VzcyBjaGFuY2UgZm9yIHRoZSBzcGVjaWZpZWQgYWN0aW9uLlxcbiAgICAqIFRoaXMgY2hhbmNlIGlzIHJldHVybmVkIGFzIGEgZGVjaW1hbCB2YWx1ZSwgTk9UIGEgcGVyY2VudGFnZVxcbiAgICAqIChlLmcuIGlmIHlvdSBoYXZlIGFuIGVzdGltYXRlZCBzdWNjZXNzIGNoYW5jZSBvZiA4MCUsIHRoZW4gdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAwLjgwLCBOT1QgODApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIEVzdGltYXRlZCBzdWNjZXNzIGNoYW5jZSBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uRXN0aW1hdGVkU3VjY2Vzc0NoYW5jZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IFtudW1iZXIsIG51bWJlcl07XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgcmVwdXRhdGlvbiBnYWluIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhdmVyYWdlIEJsYWRlYnVybmVyIHJlcHV0YXRpb24gZ2FpbiBmb3Igc3VjY2Vzc2Z1bGx5XFxuICAgICogY29tcGxldGluZyB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKiBOb3RlIHRoYXQgdGhpcyB2YWx1ZSBpcyBhbiDigJhhdmVyYWdl4oCZIGFuZCB0aGUgcmVhbCByZXB1dGF0aW9uIGdhaW4gbWF5IHZhcnkgc2xpZ2h0bHkgZnJvbSB0aGlzIHZhbHVlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEBwYXJhbSBsZXZlbCAtIE9wdGlvbmFsIGFjdGlvbiBsZXZlbCBhdCB3aGljaCB0byBjYWxjdWxhdGUgdGhlIGdhaW5cXG4gICAgKiBAcmV0dXJucyBBdmVyYWdlIEJsYWRlYnVybmVyIHJlcHV0YXRpb24gZ2FpbiBmb3Igc3VjY2Vzc2Z1bGx5IGNvbXBsZXRpbmcgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uUmVwR2Fpbih0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgbGV2ZWw6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGFjdGlvbiBjb3VudCByZW1haW5pbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgcmVtYWluaW5nIGNvdW50IG9mIHRoZSBzcGVjaWZpZWQgYWN0aW9uLlxcbiAgICAqXFxuICAgICogTm90ZSB0aGF0IHRoaXMgaXMgbWVhbnQgdG8gYmUgdXNlZCBmb3IgQ29udHJhY3RzIGFuZCBPcGVyYXRpb25zLlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4g4oCYSW5maW5pdHnigJkgZm9yIGFjdGlvbnMgc3VjaCBhcyBUcmFpbmluZyBhbmQgRmllbGQgQW5hbHlzaXMuXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiAxIGZvciBCbGFja09wcyBub3QgeWV0IGNvbXBsZXRlZCByZWdhcmRsZXNzIG9mIHdldGhlclxcbiAgICAqIHRoZSBwbGF5ZXIgaGFzIHRoZSByZXF1aXJlZCByYW5rIHRvIGF0dGVtcHQgdGhlIG1pc3Npb24gb3Igbm90LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFJlbWFpbmluZyBjb3VudCBvZiB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRBY3Rpb25Db3VudFJlbWFpbmluZyh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBtYXhpbXVtIGxldmVsIG9mIGFuIGFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIGxldmVsIGZvciB0aGlzIGFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIE1heGltdW0gbGV2ZWwgb2YgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uTWF4TGV2ZWwodHlwZTogc3RyaW5nLCBuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCBsZXZlbCBvZiBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY3VycmVudCBsZXZlbCBvZiB0aGlzIGFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIEN1cnJlbnQgbGV2ZWwgb2YgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0QWN0aW9uQ3VycmVudExldmVsKHR5cGU6IHN0cmluZywgbmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgd2V0aGVyIGFuIGFjdGlvbiBpcyBzZXQgdG8gYXV0b2xldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiBpcyBjdXJyZW50bHkgc2V0IHRvIGF1dG9sZXZlbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2UgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGFjdGlvbiBpcyBzZXQgdG8gYXV0b2xldmVsLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGdldEFjdGlvbkF1dG9sZXZlbCh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhbiBhY3Rpb24gYXV0b2xldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEVuYWJsZS9kaXNhYmxlIGF1dG9sZXZlbGluZyBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2YgYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBhY3Rpb24uIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHBhcmFtIGF1dG9MZXZlbCAtIFdoZXRoZXIgb3Igbm90IHRvIGF1dG9sZXZlbCB0aGlzIGFjdGlvblxcbiAgICAqL1xcbiAgIHNldEFjdGlvbkF1dG9sZXZlbCh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgYXV0b0xldmVsOiBib29sZWFuKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IHRoZSBsZXZlbCBvZiBhbiBhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogU2V0IHRoZSBsZXZlbCBmb3IgdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdHlwZSAtIFR5cGUgb2YgYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBhY3Rpb24uIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHBhcmFtIGxldmVsIC0gTGV2ZWwgdG8gc2V0IHRoaXMgYWN0aW9uIHRvLlxcbiAgICAqL1xcbiAgIHNldEFjdGlvbkxldmVsKHR5cGU6IHN0cmluZywgbmFtZTogc3RyaW5nLCBsZXZlbDogbnVtYmVyKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHBsYXllciBibGFkZWJ1cm5lciByYW5rLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHBsYXllcuKAmXMgQmxhZGVidXJuZXIgUmFuay5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIFBsYXllcuKAmXMgQmxhZGVidXJuZXIgUmFuay5cXG4gICAgKi9cXG4gICBnZXRSYW5rKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWNrIG9wIHJlcXVpcmVkIHJhbmsuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgcmFuayByZXF1aXJlZCB0byBjb21wbGV0ZSB0aGlzIEJsYWNrT3AuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIC0xIGlmIGFuIGludmFsaWQgYWN0aW9uIGlzIHNwZWNpZmllZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBCbGFja09wLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEByZXR1cm5zIFJhbmsgcmVxdWlyZWQgdG8gY29tcGxldGUgdGhpcyBCbGFja09wLlxcbiAgICAqL1xcbiAgIGdldEJsYWNrT3BSYW5rKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWRlYnVybmVyIHNraWxsIHBvaW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgQmxhZGVidXJuZXIgc2tpbGwgcG9pbnRzIHlvdSBoYXZlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIEJsYWRlYnVybmVyIHNraWxsIHBvaW50cyB5b3UgaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRTa2lsbFBvaW50cygpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBza2lsbCBsZXZlbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgeW91ciBsZXZlbCBpbiB0aGUgc3BlY2lmaWVkIHNraWxsLlxcbiAgICAqXFxuICAgICogVGhlIGZ1bmN0aW9uIHJldHVybnMgLTEgaWYgYW4gaW52YWxpZCBza2lsbCBuYW1lIGlzIHBhc3NlZCBpbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBza2lsbE5hbWUgLSBOYW1lIG9mIHNraWxsLiBDYXNlLXNlbnNpdGl2ZSBhbmQgbXVzdCBiZSBhbiBleGFjdCBtYXRjaFxcbiAgICAqIEByZXR1cm5zIExldmVsIGluIHRoZSBzcGVjaWZpZWQgc2tpbGwuXFxuICAgICovXFxuICAgZ2V0U2tpbGxMZXZlbChuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjb3N0IHRvIHVwZ3JhZGUgc2tpbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBudW1iZXIgb2Ygc2tpbGwgcG9pbnRzIG5lZWRlZCB0byB1cGdyYWRlIHRoZSBzcGVjaWZpZWQgc2tpbGwuXFxuICAgICpcXG4gICAgKiBUaGUgZnVuY3Rpb24gcmV0dXJucyAtMSBpZiBhbiBpbnZhbGlkIHNraWxsIG5hbWUgaXMgcGFzc2VkIGluLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNraWxsTmFtZSAtIE5hbWUgb2Ygc2tpbGwuIENhc2Utc2Vuc2l0aXZlIGFuZCBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIHNraWxsIHBvaW50cyBuZWVkZWQgdG8gdXBncmFkZSB0aGUgc3BlY2lmaWVkIHNraWxsLlxcbiAgICAqL1xcbiAgIGdldFNraWxsVXBncmFkZUNvc3QobmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBVcGdyYWRlIHNraWxsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEF0dGVtcHRzIHRvIHVwZ3JhZGUgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBza2lsbC5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc2tpbGwgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNraWxsTmFtZSAtIE5hbWUgb2Ygc2tpbGwgdG8gYmUgdXBncmFkZWQuIENhc2Utc2Vuc2l0aXZlIGFuZCBtdXN0IGJlIGFuIGV4YWN0IG1hdGNoXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgc2tpbGwgaXMgc3VjY2Vzc2Z1bGx5IHVwZ3JhZGVkLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHVwZ3JhZGVTa2lsbChuYW1lOiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGVhbSBzaXplLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBCbGFkZWJ1cm5lciB0ZWFtIG1lbWJlcnMgeW91IGhhdmUgYXNzaWduZWQgdG8gdGhlIHNwZWNpZmllZCBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBTZXR0aW5nIGEgdGVhbSBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIE9wZXJhdGlvbnMgYW5kIEJsYWNrT3BzLiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIDAgZm9yIG90aGVyIGFjdGlvbiB0eXBlcy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSB0eXBlIC0gVHlwZSBvZiBhY3Rpb24uXFxuICAgICogQHBhcmFtIG5hbWUgLSBOYW1lIG9mIGFjdGlvbi4gTXVzdCBiZSBhbiBleGFjdCBtYXRjaC5cXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgQmxhZGVidXJuZXIgdGVhbSBtZW1iZXJzIHRoYXQgd2VyZSBhc3NpZ25lZCB0byB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBnZXRUZWFtU2l6ZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IHRlYW0gc2l6ZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBTZXQgdGhlIHRlYW0gc2l6ZSBmb3IgdGhlIHNwZWNpZmllZCBCbGFkZWJ1cm5lciBhY3Rpb24uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSB0ZWFtIHNpemUgdGhhdCB3YXMgc2V0LCBvciAtMSBpZiB0aGUgZnVuY3Rpb24gZmFpbGVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR5cGUgLSBUeXBlIG9mIGFjdGlvbi5cXG4gICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgYWN0aW9uLiBNdXN0IGJlIGFuIGV4YWN0IG1hdGNoLlxcbiAgICAqIEBwYXJhbSBzaXplIC0gTnVtYmVyIG9mIHRlYW0gbWVtYmVycyB0byBzZXQuIFdpbGwgYmUgY29udmVydGVkIHVzaW5nIE1hdGgucm91bmQoKS5cXG4gICAgKiBAcmV0dXJucyBOdW1iZXIgb2YgQmxhZGVidXJuZXIgdGVhbSBtZW1iZXJzIHlvdSBhc3NpZ25lZCB0byB0aGUgc3BlY2lmaWVkIGFjdGlvbi5cXG4gICAgKi9cXG4gICBzZXRUZWFtU2l6ZSh0eXBlOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgc2l6ZTogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgZXN0aW1hdGVkIHBvcHVsYXRpb24gaW4gY2l0eS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBlc3RpbWF0ZWQgbnVtYmVyIG9mIFN5bnRob2lkcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgRXN0aW1hdGVkIG51bWJlciBvZiBTeW50aG9pZHMgaW4gdGhlIHNwZWNpZmllZCBjaXR5LlxcbiAgICAqL1xcbiAgIGdldENpdHlFc3RpbWF0ZWRQb3B1bGF0aW9uKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IG51bWJlciBvZiBjb21tdW5pdGllcyBpbiBhIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgZXN0aW1hdGVkIG51bWJlciBvZiBTeW50aG9pZCBjb21tdW5pdGllcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgTnVtYmVyIG9mIFN5bnRob2lkcyBjb21tdW5pdGllcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHkuXFxuICAgICovXFxuICAgZ2V0Q2l0eUNvbW11bml0aWVzKG5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGNoYW9zIG9mIGEgY2l0eS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjaGFvcyBpbiB0aGUgc3BlY2lmaWVkIGNpdHksXFxuICAgICogb3IgLTEgaWYgYW4gaW52YWxpZCBjaXR5IHdhcyBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIGNpdHkuIENhc2Utc2Vuc2l0aXZlXFxuICAgICogQHJldHVybnMgQ2hhb3MgaW4gdGhlIHNwZWNpZmllZCBjaXR5LlxcbiAgICAqL1xcbiAgIGdldENpdHlDaGFvcyhuYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjdXJyZW50IGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY2l0eSB0aGF0IHRoZSBwbGF5ZXIgaXMgY3VycmVudGx5IGluIChmb3IgQmxhZGVidXJuZXIpLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQ2l0eSB0aGF0IHRoZSBwbGF5ZXIgaXMgY3VycmVudGx5IGluIChmb3IgQmxhZGVidXJuZXIpLlxcbiAgICAqL1xcbiAgIGdldENpdHkoKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBUcmF2ZWwgdG8gYW5vdGhlciBjaXR5IGluIGJsYWRlYnVybmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKiBBdHRlbXB0cyB0byBzd2l0Y2ggdG8gdGhlIHNwZWNpZmllZCBjaXR5IChmb3IgQmxhZGVidXJuZXIgb25seSkuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgc3VjY2Vzc2Z1bCwgYW5kIGZhbHNlIG90aGVyd2lzZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiBjaXR5LiBDYXNlLXNlbnNpdGl2ZVxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgc3VjY2Vzc2Z1bCwgYW5kIGZhbHNlIG90aGVyd2lzZVxcbiAgICAqL1xcbiAgIHN3aXRjaENpdHkobmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGJsYWRlYnVybmVyIHN0YW1pbmEuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqIFJldHVybnMgYW4gYXJyYXkgd2l0aCB0d28gZWxlbWVudHM6XFxuICAgICogKiBbQ3VycmVudCBzdGFtaW5hLCBNYXggc3RhbWluYV1cXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGZ1bmN0aW9uIGdldFN0YW1pbmFQZXJjZW50YWdlKCkge1xcbiAgICAqICAgIHZhciByZXMgPSBibGFkZWJ1cm5lci5nZXRTdGFtaW5hKCk7XFxuICAgICogICAgcmV0dXJuIHJlc1swXSAvIHJlc1sxXTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBmdW5jdGlvbiBnZXRTdGFtaW5hUGVyY2VudGFnZSgpIHtcXG4gICAgKiAgICBjb25zdCBbY3VycmVudCwgbWF4XSA9IG5zLmJsYWRlYnVybmVyLmdldFN0YW1pbmEoKTtcXG4gICAgKiAgICByZXR1cm4gY3VycmVudCAvIG1heDtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgQXJyYXkgY29udGFpbmluZyBjdXJyZW50IHN0YW1pbmEgYW5kIG1heCBzdGFtaW5hLlxcbiAgICAqL1xcbiAgIGdldFN0YW1pbmEoKTogW251bWJlciwgbnVtYmVyXTtcXG4gXFxuICAgLyoqXFxuICAgICogSm9pbiB0aGUgYmxhZGVidXJuZXIgZmFjdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICogQXR0ZW1wdHMgdG8gam9pbiB0aGUgQmxhZGVidXJuZXIgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgdHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGpvaW4gdGhlIEJsYWRlYnVybmVyIGZhY3Rpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlci5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGpvaW4gdGhlIEJsYWRlYnVybmVyIGZhY3Rpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlciwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGpvaW5CbGFkZWJ1cm5lckZhY3Rpb24oKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogSm9pbiB0aGUgYmxhZGVidXJuZXIgZGl2aXNpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gam9pbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24uXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRydWUgaWYgeW91IHN1Y2Nlc3NmdWxseSBqb2luIHRoZSBCbGFkZWJ1cm5lciBkaXZpc2lvbiwgb3IgaWYgeW91IGFyZSBhbHJlYWR5IGEgbWVtYmVyLlxcbiAgICAqXFxuICAgICogUmV0dXJucyBmYWxzZSBvdGhlcndpc2UuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHlvdSBzdWNjZXNzZnVsbHkgam9pbiB0aGUgQmxhZGVidXJuZXIgZGl2aXNpb24sIG9yIGlmIHlvdSBhcmUgYWxyZWFkeSBhIG1lbWJlciwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGpvaW5CbGFkZWJ1cm5lckRpdmlzaW9uKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBibGFkZWJ1cm5lciBib251cyB0aW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBhY2N1bXVsYXRlZCDigJxib251cyB0aW1l4oCdIChzZWNvbmRzKSBmb3IgdGhlIEJsYWRlYnVybmVyIG1lY2hhbmljLlxcbiAgICAqXFxuICAgICog4oCcQm9udXMgdGltZeKAnSBpcyBhY2N1bXVsYXRlZCB3aGVuIHRoZSBnYW1lIGlzIG9mZmxpbmUgb3IgaWYgdGhlIGdhbWUgaXMgaW5hY3RpdmUgaW4gdGhlIGJyb3dzZXIuXFxuICAgICpcXG4gICAgKiDigJxCb251cyB0aW1l4oCdIG1ha2VzIHRoZSBnYW1lIHByb2dyZXNzIGZhc3RlciwgdXAgdG8gNXggdGhlIG5vcm1hbCBzcGVlZC5cXG4gICAgKiBGb3IgZXhhbXBsZSwgaWYgYW4gYWN0aW9uIHRha2VzIDMwIHNlY29uZHMgdG8gY29tcGxldGUgYnV0IHlvdeKAmXZlIGFjY3VtdWxhdGVkIG92ZXJcXG4gICAgKiAzMCBzZWNvbmRzIGluIGJvbnVzIHRpbWUsIHRoZW4gdGhlIGFjdGlvbiB3aWxsIG9ubHkgdGFrZSA2IHNlY29uZHMgaW4gcmVhbCBsaWZlIHRvIGNvbXBsZXRlLlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGFjY3VtdWxhdGVkIOKAnGJvbnVzIHRpbWXigJ0gKG1pbGxpc2Vjb25kcykgZm9yIHRoZSBCbGFkZWJ1cm5lciBtZWNoYW5pYy5cXG4gICAgKi9cXG4gICBnZXRCb251c1RpbWUoKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29kaW5nIENvbnRyYWN0IEFQSVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIENvZGluZ0NvbnRyYWN0IHtcXG4gICAvKipcXG4gICAgKiBBdHRlbXBzIGEgY29kaW5nIGNvbnRyYWN0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEwIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0cyB0byBzb2x2ZSB0aGUgQ29kaW5nIENvbnRyYWN0IHdpdGggdGhlIHByb3ZpZGVkIHNvbHV0aW9uLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGFuc3dlciAtIFNvbHV0aW9uIGZvciB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGZuIC0gRmlsZW5hbWUgb2YgdGhlIGNvbnRyYWN0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0aGUgc2VydmVyIGNvbnRhaW5pbmcgdGhlIGNvbnRyYWN0LiBPcHRpb25hbC4gRGVmYXVsdHMgdG8gY3VycmVudCBzZXJ2ZXIgaWYgbm90IHByb3ZpZGVkLlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc29sdXRpb24gd2FzIGNvcnJlY3QsIGZhbHNlIG90aGVyd2lzZS4gSWYgdGhlIHJldHVyblJld2FyZCBvcHRpb24gaXMgY29uZmlndXJlZCwgdGhlbiB0aGUgZnVuY3Rpb24gd2lsbCBpbnN0ZWFkIHJldHVybiBhIHN0cmluZy4gSWYgdGhlIGNvbnRyYWN0IGlzIHN1Y2Nlc3NmdWxseSBzb2x2ZWQsIHRoZSBzdHJpbmcgd2lsbCBjb250YWluIGEgZGVzY3JpcHRpb24gb2YgdGhlIGNvbnRyYWN04oCZcyByZXdhcmQuIE90aGVyd2lzZSwgaXQgd2lsbCBiZSBhbiBlbXB0eSBzdHJpbmcuXFxuICAgICovXFxuICAgYXR0ZW1wdChhbnN3ZXI6IHN0cmluZ1tdIHwgbnVtYmVyLCBmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nLCBvcHRzPzogQ29kaW5nQXR0ZW1wdE9wdGlvbnMpOiBib29sZWFuIHwgc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHR5cGUgb2YgYSBjb2RpbmcgY29udHJhY3QuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIG5hbWUgZGVzY3JpYmluZyB0aGUgdHlwZSBvZiBwcm9ibGVtIHBvc2VkIGJ5IHRoZSBDb2RpbmcgQ29udHJhY3QuXFxuICAgICogKGUuZy4gRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvciwgVG90YWwgV2F5cyB0byBTdW0sIGV0Yy4pXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZm4gLSBGaWxlbmFtZSBvZiB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRoZSBzZXJ2ZXIgY29udGFpbmluZyB0aGUgY29udHJhY3QuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlciBpZiBub3QgcHJvdmlkZWQuXFxuICAgICogQHJldHVybnMgTmFtZSBkZXNjcmliaW5nIHRoZSB0eXBlIG9mIHByb2JsZW0gcG9zZWQgYnkgdGhlIENvZGluZyBDb250cmFjdC5cXG4gICAgKi9cXG4gICBnZXRDb250cmFjdFR5cGUoZmlsZW5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBkZXNjcmlwdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA1IEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIGZ1bGwgdGV4dCBkZXNjcmlwdGlvbiBmb3IgdGhlIHByb2JsZW0gcG9zZWQgYnkgdGhlIENvZGluZyBDb250cmFjdC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIEZpbGVuYW1lIG9mIHRoZSBjb250cmFjdC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciBjb250YWluaW5nIHRoZSBjb250cmFjdC4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIGN1cnJlbnQgc2VydmVyIGlmIG5vdCBwcm92aWRlZC5cXG4gICAgKiBAcmV0dXJucyBDb250cmFjdOKAmXMgdGV4dCBkZXNjcmlwdGlvbi5cXG4gICAgKi9cXG4gICBnZXREZXNjcmlwdGlvbihmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGlucHV0IGRhdGEuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgc3BlY2lmaWMgQ29kaW5nIENvbnRyYWN0LlxcbiAgICAqIE5vdGUgdGhhdCB0aGlzIGlzIG5vdCB0aGUgc2FtZSBhcyB0aGUgY29udHJhY3TigJlzIGRlc2NyaXB0aW9uLlxcbiAgICAqIFRoaXMgaXMganVzdCB0aGUgZGF0YSB0aGF0IHRoZSBjb250cmFjdCB3YW50cyB5b3UgdG8gYWN0IG9uIGluIG9yZGVyIHRvIHNvbHZlXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZmlsZW5hbWUgLSBGaWxlbmFtZSBvZiB0aGUgY29udHJhY3QuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRoZSBzZXJ2ZXIgY29udGFpbmluZyB0aGUgY29udHJhY3QuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlciBpZiBub3QgcHJvdmlkZWQuXFxuICAgICogQHJldHVybnMgVGhlIHNwZWNpZmllZCBjb250cmFjdOKAmXMgZGF0YSwgZGF0YSB0eXBlIGRlcGVuZHMgb24gY29udHJhY3QgdHlwZS47XFxuICAgICovXFxuICAgZ2V0RGF0YShmaWxlbmFtZTogc3RyaW5nLCBob3N0Pzogc3RyaW5nKTogYW55O1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIG51bWJlciBvZiBhdHRlbXB0IHJlbWFpbmluZy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG51bWJlciBvZiB0cmllcyByZW1haW5pbmcgb24gdGhlIGNvbnRyYWN0IGJlZm9yZSBpdCBzZWxmLWRlc3RydWN0cy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIEZpbGVuYW1lIG9mIHRoZSBjb250cmFjdC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciBjb250YWluaW5nIHRoZSBjb250cmFjdC4gT3B0aW9uYWwuIERlZmF1bHRzIHRvIGN1cnJlbnQgc2VydmVyIGlmIG5vdCBwcm92aWRlZC5cXG4gICAgKiBAcmV0dXJucyBIb3cgbWFueSBhdHRlbXB0cyBhcmUgcmVtYWluaW5nIGZvciB0aGUgY29udHJhY3Q7XFxuICAgICovXFxuICAgZ2V0TnVtVHJpZXNSZW1haW5pbmcoZmlsZW5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdhbmcgQVBJXFxuICAqIEByZW1hcmtzXFxuICAqIElmIHlvdSBhcmUgbm90IGluIEJpdE5vZGUtMiwgdGhlbiB5b3UgbXVzdCBoYXZlIFNvdXJjZS1GaWxlIDIgaW4gb3JkZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEdhbmcge1xcbiAgIC8qKlxcbiAgICAqIENyZWF0ZSBhIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMUdCXFxuICAgICpcXG4gICAgKiBDcmVhdGUgYSBnYW5nIHdpdGggdGhlIHNwZWNpZmllZCBmYWN0aW9uLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGdhbmcgd2FzIGNyZWF0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBjcmVhdGVHYW5nKGZhY3Rpb246IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdSdyZSBpbiBhIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMUdCXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB5b3UncmUgaW4gYSBnYW5nLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgaW5HYW5nKCk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgYWxsIGdhbmcgbWVtYmVycy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG5hbWVzIG9mIGFsbCBHYW5nIG1lbWJlcnNcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIE5hbWVzIG9mIGFsbCBHYW5nIG1lbWJlcnMuXFxuICAgICovXFxuICAgZ2V0TWVtYmVyTmFtZXMoKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIGdhbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGdhbmcuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBnZW5lcmFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBnYW5nLlxcbiAgICAqL1xcbiAgIGdldEdhbmdJbmZvcm1hdGlvbigpOiBHYW5nR2VuSW5mbztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBvdGhlciBnYW5ncy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGVycml0b3J5IGFuZCBwb3dlciBpbmZvcm1hdGlvbiBhYm91dCBhbGwgZ2FuZ3MuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0ZXJyaXRvcnkgYW5kIHBvd2VyIGluZm9ybWF0aW9uIGFib3V0IGFsbCBnYW5ncy5cXG4gICAgKi9cXG4gICBnZXRPdGhlckdhbmdJbmZvcm1hdGlvbigpOiBHYW5nT3RoZXJJbmZvO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgaW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBnYW5nIG1lbWJlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgc3RhdCBhbmQgZXF1aXBtZW50LXJlbGF0ZWQgaW5mb3JtYXRpb24gYWJvdXQgYSBHYW5nIE1lbWJlclxcbiAgICAqXFxuICAgICogQHBhcmFtIG5hbWUgLSBOYW1lIG9mIG1lbWJlci5cXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBzdGF0IGFuZCBlcXVpcG1lbnQtcmVsYXRlZCBpbmZvcm1hdGlvbiBhYm91dCBhIEdhbmcgTWVtYmVyLlxcbiAgICAqL1xcbiAgIGdldE1lbWJlckluZm9ybWF0aW9uKG5hbWU6IHN0cmluZyk6IEdhbmdNZW1iZXJJbmZvO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB5b3UgY2FuIHJlY3J1aXQgYSBuZXcgZ2FuZyBtZW1iZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBhIG1lbWJlciBjYW4gY3VycmVudGx5IGJlIHJlY3J1aXRlZFxcbiAgICAqXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBhIG1lbWJlciBjYW4gY3VycmVudGx5IGJlIHJlY3J1aXRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGNhblJlY3J1aXRNZW1iZXIoKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmVjcnVpdCBhIG5ldyBnYW5nIG1lbWJlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0IHRvIHJlY3J1aXQgYSBuZXcgZ2FuZyBtZW1iZXIuXFxuICAgICpcXG4gICAgKiBQb3NzaWJsZSByZWFzb25zIGZvciBmYWlsdXJlOlxcbiAgICAqICogQ2Fubm90IGN1cnJlbnRseSByZWNydWl0IGEgbmV3IG1lbWJlclxcbiAgICAqICogVGhlcmUgYWxyZWFkeSBleGlzdHMgYSBtZW1iZXIgd2l0aCB0aGUgc3BlY2lmaWVkIG5hbWVcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiBtZW1iZXIgdG8gcmVjcnVpdC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBtZW1iZXIgd2FzIHN1Y2Nlc3NmdWxseSByZWNydWl0ZWQsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICByZWNydWl0TWVtYmVyKG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgbWVtYmVyIHRhc2sgbmFtZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBuYW1lIG9mIGFsbCB2YWxpZCB0YXNrcyB0aGF0IEdhbmcgbWVtYmVycyBjYW4gYmUgYXNzaWduZWQgdG8uXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBBbGwgdmFsaWQgdGFza3MgdGhhdCBHYW5nIG1lbWJlcnMgY2FuIGJlIGFzc2lnbmVkIHRvLlxcbiAgICAqL1xcbiAgIGdldFRhc2tOYW1lcygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGdhbmcgbWVtYmVyIHRvIHRhc2suXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogQXR0ZW1wdHMgdG8gYXNzaWduIHRoZSBzcGVjaWZpZWQgR2FuZyBNZW1iZXIgdG8gdGhlIHNwZWNpZmllZCB0YXNrLlxcbiAgICAqIElmIGFuIGludmFsaWQgdGFzayBpcyBzcGVjaWZpZWQsIHRoZSBHYW5nIG1lbWJlciB3aWxsIGJlIHNldCB0byBpZGxlICjigJxVbmFzc2lnbmVk4oCdKS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBtZW1iZXJOYW1lIC0gTmFtZSBvZiBHYW5nIG1lbWJlciB0byBhc3NpZ24uXFxuICAgICogQHBhcmFtIHRhc2tOYW1lIC0gVGFzayB0byBhc3NpZ24uXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgR2FuZyBNZW1iZXIgd2FzIHN1Y2Nlc3NmdWxseSBhc3NpZ25lZCB0byB0aGUgdGFzaywgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldE1lbWJlclRhc2sobWVtYmVyTmFtZTogc3RyaW5nLCB0YXNrTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIG9mIGEgdGFzay5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHN0YXRzIG9mIGEgZ2FuZyB0YXNrIHN0YXRzLiBUaGlzIGlzIHR5cGljYWxseSB1c2VkIHRvIGV2YWx1YXRlIHdoaWNoIGFjdGlvbiBzaG91bGQgYmUgZXhlY3V0ZWQgbmV4dC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gIE5hbWUgb2YgdGhlIHRhc2suXFxuICAgICogQHJldHVybnMgRGV0YWlsZWQgc3RhdHMgb2YgYSB0YXNrLlxcbiAgICAqL1xcbiAgIGdldFRhc2tTdGF0cyhuYW1lOiBzdHJpbmcpOiBHYW5nVGFza1N0YXRzO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IGVxdWlwbWVudCBuYW1lcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIG5hbWUgb2YgYWxsIHBvc3NpYmxlIGVxdWlwbWVudC91cGdyYWRlcyB5b3UgY2FuIHB1cmNoYXNlIGZvciB5b3VyIEdhbmcgTWVtYmVycy5cXG4gICAgKiBUaGlzIGluY2x1ZGVzIEF1Z21lbnRhdGlvbnMuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBOYW1lcyBvZiBhbGwgRXF1aXBtZW50cy9BdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldEVxdWlwbWVudE5hbWVzKCk6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29zdCBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSBhbW91bnQgb2YgbW9uZXkgaXQgdGFrZXMgdG8gcHVyY2hhc2UgYSBwaWVjZSBvZiBFcXVpcG1lbnQgb3IgYW4gQXVnbWVudGF0aW9uLlxcbiAgICAqIElmIGFuIGludmFsaWQgRXF1aXBtZW50L0F1Z21lbnRhdGlvbiBpcyBzcGVjaWZpZWQsIHRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4gSW5maW5pdHkuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZXF1aXBOYW1lIC0gTmFtZSBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJldHVybnMgQ29zdCB0byBwdXJjaGFzZSB0aGUgc3BlY2lmaWVkIEVxdWlwbWVudC9BdWdtZW50YXRpb24gKG51bWJlcikuIEluZmluaXR5IGZvciBpbnZhbGlkIGFyZ3VtZW50c1xcbiAgICAqL1xcbiAgIGdldEVxdWlwbWVudENvc3QoZXF1aXBOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0eXBlIG9mIGFuIGVxdWlwbWVudC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHNwZWNpZmllZCBlcXVpcG1lbnQgdHlwZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBlcXVpcE5hbWUgLSBOYW1lIG9mIGVxdWlwbWVudC5cXG4gICAgKiBAcmV0dXJucyBUeXBlIG9mIHRoZSBlcXVpcG1lbnQuXFxuICAgICovXFxuICAgZ2V0RXF1aXBtZW50VHlwZShlcXVpcE5hbWU6IHN0cmluZyk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHN0YXRzIG9mIGFuIGVxdWlwbWVudC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBHZXQgdGhlIHNwZWNpZmllZCBlcXVpcG1lbnQgc3RhdHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZXF1aXBOYW1lIC0gTmFtZSBvZiBlcXVpcG1lbnQuXFxuICAgICogQHJldHVybnMgQSBkaWN0aW9uYXJ5IGNvbnRhaW5pbmcgdGhlIHN0YXRzIG9mIHRoZSBlcXVpcG1lbnQuXFxuICAgICovXFxuICAgZ2V0RXF1aXBtZW50U3RhdHMoZXF1aXBOYW1lOiBzdHJpbmcpOiBFcXVpcG1lbnRTdGF0cztcXG4gXFxuICAgLyoqXFxuICAgICogUHVyY2hhc2UgYW4gZXF1aXBtZW50IGZvciBhIGdhbmcgbWVtYmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIEF0dGVtcHQgdG8gcHVyY2hhc2UgdGhlIHNwZWNpZmllZCBFcXVpcG1lbnQvQXVnbWVudGF0aW9uIGZvciB0aGUgc3BlY2lmaWVkIEdhbmcgbWVtYmVyLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG1lbWJlck5hbWUgLSBOYW1lIG9mIEdhbmcgbWVtYmVyIHRvIHB1cmNoYXNlIHRoZSBlcXVpcG1lbnQgZm9yLlxcbiAgICAqIEBwYXJhbSBlcXVpcE5hbWUgLSBOYW1lIG9mIEVxdWlwbWVudC9BdWdtZW50YXRpb24gdG8gcHVyY2hhc2UuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgZXF1aXBtZW50IHdhcyBzdWNjZXNzZnVsbHkgcHVyY2hhc2VkLiBGYWxzZSBvdGhlcndpc2VcXG4gICAgKi9cXG4gICBwdXJjaGFzZUVxdWlwbWVudChtZW1iZXJOYW1lOiBzdHJpbmcsIGVxdWlwTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogQXNjZW5kIGEgZ2FuZyBtZW1iZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogQXNjZW5kIHRoZSBzcGVjaWZpZWQgR2FuZyBNZW1iZXIuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWVtYmVyTmFtZSAtIE5hbWUgb2YgbWVtYmVyIHRvIGFzY2VuZC5cXG4gICAgKiBAcmV0dXJucyBPYmplY3Qgd2l0aCBpbmZvIGFib3V0IHRoZSBhc2NlbnNpb24gcmVzdWx0cy4gdW5kZWZpbmVkIGlmIGFzY2Vuc2lvbiBkaWQgbm90IG9jY3VyLlxcbiAgICAqL1xcbiAgIGFzY2VuZE1lbWJlcihtZW1iZXJOYW1lOiBzdHJpbmcpOiBHYW5nTWVtYmVyQXNjZW5zaW9uIHwgdW5kZWZpbmVkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHJlc3VsdCBvZiBhbiBhc2NlbnNpb24gd2l0aG91dCBhc2NlbmRpbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMiBHQlxcbiAgICAqXFxuICAgICogR2V0IHRoZSByZXN1bHQgb2YgYW4gYXNjZW5zaW9uIHdpdGhvdXQgYXNjZW5kaW5nLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG1lbWJlck5hbWUgLSBOYW1lIG9mIG1lbWJlci5cXG4gICAgKiBAcmV0dXJucyBPYmplY3Qgd2l0aCBpbmZvIGFib3V0IHRoZSBhc2NlbnNpb24gcmVzdWx0cy4gdW5kZWZpbmVkIGlmIGFzY2Vuc2lvbiBpcyBpbXBvc3NpYmxlLlxcbiAgICAqL1xcbiAgIGdldEFzY2Vuc2lvblJlc3VsdChtZW1iZXJOYW1lOiBzdHJpbmcpOiBHYW5nTWVtYmVyQXNjZW5zaW9uIHwgdW5kZWZpbmVkO1xcbiBcXG4gICAvKipcXG4gICAgKiBFbmFibGUvRGlzYWJsZSB0ZXJyaXRvcnkgd2FyZmFyZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBTZXQgd2hldGhlciBvciBub3QgdGhlIGdhbmcgc2hvdWxkIGVuZ2FnZSBpbiB0ZXJyaXRvcnkgd2FyZmFyZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGVuZ2FnZSAtIFdoZXRoZXIgb3Igbm90IHRvIGVuZ2FnZSBpbiB0ZXJyaXRvcnkgd2FyZmFyZS5cXG4gICAgKi9cXG4gICBzZXRUZXJyaXRvcnlXYXJmYXJlKGVuZ2FnZTogYm9vbGVhbik6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBjaGFuY2UgdG8gd2luIGNsYXNoIHdpdGggb3RoZXIgZ2FuZy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBjaGFuY2UgeW91IGhhdmUgdG8gd2luIGEgY2xhc2ggd2l0aCB0aGUgc3BlY2lmaWVkIGdhbmcuIFRoZSBjaGFuY2UgaXMgcmV0dXJuZWQgaW4gZGVjaW1hbCBmb3JtLCBub3QgcGVyY2VudGFnZVxcbiAgICAqXFxuICAgICogQHBhcmFtIGdhbmdOYW1lIC0gVGFyZ2V0IGdhbmdcXG4gICAgKiBAcmV0dXJucyBDaGFuY2UgeW91IGhhdmUgdG8gd2luIGEgY2xhc2ggd2l0aCB0aGUgc3BlY2lmaWVkIGdhbmcuXFxuICAgICovXFxuICAgZ2V0Q2hhbmNlVG9XaW5DbGFzaChnYW5nTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYm9udXMgdGltZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgYWNjdW11bGF0ZWQg4oCcYm9udXMgdGltZeKAnSAoc2Vjb25kcykgZm9yIHRoZSBHYW5nIG1lY2hhbmljLlxcbiAgICAqXFxuICAgICog4oCcQm9udXMgdGltZeKAnSBpcyBhY2N1bXVsYXRlZCB3aGVuIHRoZSBnYW1lIGlzIG9mZmxpbmUgb3IgaWYgdGhlIGdhbWUgaXMgaW5hY3RpdmUgaW4gdGhlIGJyb3dzZXIuXFxuICAgICpcXG4gICAgKiDigJxCb251cyB0aW1l4oCdIG1ha2VzIHRoZSBnYW1lIHByb2dyZXNzIGZhc3RlciwgdXAgdG8gMTB4IHRoZSBub3JtYWwgc3BlZWQuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBCb251cyB0aW1lIGZvciB0aGUgR2FuZyBtZWNoYW5pYyBpbiBtaWxsaXNlY29uZHMuXFxuICAgICovXFxuICAgZ2V0Qm9udXNUaW1lKCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFNsZWV2ZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogSWYgeW91IGFyZSBub3QgaW4gQml0Tm9kZS0xMCwgdGhlbiB5b3UgbXVzdCBoYXZlIFNvdXJjZS1GaWxlIDEwIGluIG9yZGVyIHRvIHVzZSB0aGlzIEFQSS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBTbGVldmUge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIHNsZWV2ZXMgeW91IG93bi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gdGhlIG51bWJlciBvZiBkdXBsaWNhdGUgc2xlZXZlcyB0aGUgcGxheWVyIGhhcy5cXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIG51bWJlciBvZiBkdXBsaWNhdGUgc2xlZXZlcyB0aGUgcGxheWVyIGhhcy5cXG4gICAgKi9cXG4gICBnZXROdW1TbGVldmVzKCk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBzdGF0cyBvZiBhIHNsZWV2ZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBzdHJ1Y3R1cmUgY29udGFpbmluZyB0aGUgc3RhdHMgb2YgdGhlIHNsZWV2ZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIGdldCBzdGF0cyBvZi5cXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0aGUgc3RhdHMgb2YgdGhlIHNsZWV2ZS5cXG4gICAgKi9cXG4gICBnZXRTbGVldmVTdGF0cyhzbGVldmVOdW1iZXI6IG51bWJlcik6IFNsZWV2ZVNraWxscztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGluZm9ybWF0aW9uIGFib3V0IGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIHN0cnVjdCBjb250YWluaW5nIHRvbnMgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBzbGVldmVcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHJldHJpZXZlIGluZm9ybWF0aW9uLlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIHRvbnMgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBzbGVldmUuXFxuICAgICovXFxuICAgZ2V0SW5mb3JtYXRpb24oc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBTbGVldmVJbmZvcm1hdGlvbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRhc2sgb2YgYSBzbGVldmUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIHRoZSBjdXJyZW50IHRhc2sgdGhhdCB0aGUgc2xlZXZlIGlzIHBlcmZvcm1pbmcuIHR5cGUgaXMgc2V0IHRvIOKAnElkbGXigJ0gaWYgdGhlIHNsZWV2ZSBpc27igJl0IGRvaW5nIGFueXRoaW5nLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gcmV0cmlldmUgdGFzayBmcm9tLlxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIGluZm9ybWF0aW9uIHRoZSBjdXJyZW50IHRhc2sgdGhhdCB0aGUgc2xlZXZlIGlzIHBlcmZvcm1pbmcuXFxuICAgICovXFxuICAgZ2V0VGFzayhzbGVldmVOdW1iZXI6IG51bWJlcik6IFNsZWV2ZVRhc2s7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byBzaG9jayByZWNvdmVyeS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhpcyBhY3Rpb24gd2FzIHNldCBzdWNjZXNzZnVsbHkuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byBzdGFydCByZWNvdmVyeS5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2V0VG9TaG9ja1JlY292ZXJ5KHNsZWV2ZU51bWJlcjogbnVtYmVyKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHN5bmNocm9uaXplLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHN0YXJ0IHN5bmNocm9uaXppbmcuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvU3luY2hyb25pemUoc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBTZXQgYSBzbGVldmUgdG8gY29tbWl0IGNyaW1lLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseS5cXG4gICAgKlxcbiAgICAqIFJldHVybnMgZmFsc2UgaWYgYW4gaW52YWxpZCBhY3Rpb24gaXMgc3BlY2lmaWVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gc3RhcnQgY29tbWl0aW5nIGNyaW1lLlxcbiAgICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgY3JpbWUuIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGlzIGFjdGlvbiB3YXMgc2V0IHN1Y2Nlc3NmdWxseSwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvQ29tbWl0Q3JpbWUoc2xlZXZlTnVtYmVyOiBudW1iZXIsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byB3b3JrIGZvciBhIGZhY3Rpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG9yIHRoaXMgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHdvcmsgZm9yIHRoZSBmYWN0aW9uLlxcbiAgICAqIEBwYXJhbSBmYWN0aW9uTmFtZSAtIE5hbWUgb2YgdGhlIGZhY3Rpb24gdG8gd29yayBmb3IuXFxuICAgICogQHBhcmFtIGZhY3Rpb25Xb3JrVHlwZSAtIE5hbWUgb2YgdGhlIGFjdGlvbiB0byBwZXJmb3JtIGZvciB0aGlzIGZhY3Rpb24uXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2xlZXZlIHN0YXJ0ZWQgd29ya2luZyBvbiB0aGlzIGZhY3Rpb24sIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzZXRUb0ZhY3Rpb25Xb3JrKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBmYWN0aW9uTmFtZTogc3RyaW5nLCBmYWN0aW9uV29ya1R5cGU6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFNldCBhIHNsZWV2ZSB0byB3b3JrIGZvciBhIGNvbXBhbnkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG9yIHRoaXMgY29tcGFueS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHdvcmsgZm9yIHRoZSBjb21wYW55LlxcbiAgICAqIEBwYXJhbSBjb21wYW55TmFtZSAtIE5hbWUgb2YgdGhlIGNvbXBhbnkgdG8gd29yayBmb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2xlZXZlIHN0YXJ0ZWQgd29ya2luZyBvbiB0aGlzIGNvbXBhbnksIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzZXRUb0NvbXBhbnlXb3JrKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBjb21wYW55TmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHRha2UgYSBjbGFzcyBhdCBhIHVuaXZlcnNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gc3RhcnQgdGFraW5nIGNsYXNzLlxcbiAgICAqIEBwYXJhbSB1bml2ZXJzaXR5IC0gTmFtZSBvZiB0aGUgdW5pdmVyc2l0eSB0byBhdHRlbmQuXFxuICAgICogQHBhcmFtIGNsYXNzTmFtZSAtIE5hbWUgb2YgdGhlIGNsYXNzIHRvIGZvbGxvdy5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoaXMgYWN0aW9uIHdhcyBzZXQgc3VjY2Vzc2Z1bGx5LCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2V0VG9Vbml2ZXJzaXR5Q291cnNlKHNsZWV2ZU51bWJlcjogbnVtYmVyLCB1bml2ZXJzaXR5OiBzdHJpbmcsIGNsYXNzTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0IGEgc2xlZXZlIHRvIHdvcmtvdXQgYXQgdGhlIGd5bS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiA0IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm4gYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIHNsZWV2ZSBzdGFydGVkIHdvcmtpbmcgb3V0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNsZWV2ZU51bWJlciAtIEluZGV4IG9mIHRoZSBzbGVldmUgdG8gd29ya291dCBhdCB0aGUgZ3ltLlxcbiAgICAqIEBwYXJhbSBneW1OYW1lIC0gTmFtZSBvZiB0aGUgZ3ltLlxcbiAgICAqIEBwYXJhbSBzdGF0IC0gTmFtZSBvZiB0aGUgc3RhdCB0byB0cmFpbi5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBzbGVldmUgc3RhcnRlZCB3b3JraW5nIG91dCwgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHNldFRvR3ltV29ya291dChzbGVldmVOdW1iZXI6IG51bWJlciwgZ3ltTmFtZTogc3RyaW5nLCBzdGF0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBNYWtlIGEgc2xlZXZlIHRyYXZlbCB0byBhbm90aGVyIGNpdHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJuIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBzbGVldmUgcmVhY2hlZCBkZXN0aW5hdGlvbi5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHRyYXZlbC5cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBkZXN0aW5hdGlvbiBjaXR5LlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNsZWV2ZSByZWFjaGVkIGRlc3RpbmF0aW9uLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJhdmVsKHNsZWV2ZU51bWJlcjogbnVtYmVyLCBjaXR5TmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGF1Z21lbnRhdGlvbnMgaW5zdGFsbGVkIG9uIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGxpc3Qgb2YgYXVnbWVudGF0aW9uIG5hbWVzIHRoYXQgdGhpcyBzbGVldmUgaGFzIGluc3RhbGxlZC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBzbGVldmVOdW1iZXIgLSBJbmRleCBvZiB0aGUgc2xlZXZlIHRvIHJldHJpZXZlIGF1Z21lbnRhdGlvbnMgZnJvbS5cXG4gICAgKiBAcmV0dXJucyBMaXN0IG9mIGF1Z21lbnRhdGlvbiBuYW1lcyB0aGF0IHRoaXMgc2xlZXZlIGhhcyBpbnN0YWxsZWQuXFxuICAgICovXFxuICAgZ2V0U2xlZXZlQXVnbWVudGF0aW9ucyhzbGVldmVOdW1iZXI6IG51bWJlcik6IHN0cmluZ1tdO1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IHB1cmNoYXNhYmxlIGF1Z3MgZm9yIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiBhIGxpc3Qgb2YgYXVnbWVudGF0aW9ucyB0aGF0IHRoZSBwbGF5ZXIgY2FuIGJ1eSBmb3IgdGhpcyBzbGVldmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byByZXRyaWV2ZSBwdXJjaGFzYWJsZSBhdWdtZW50YXRpb25zIGZyb20uXFxuICAgICogQHJldHVybnMgTGlzdCBvZiBhdWdtZW50YXRpb25zIHRoYXQgdGhlIHBsYXllciBjYW4gYnV5IGZvciB0aGlzIHNsZWV2ZS5cXG4gICAgKi9cXG4gICBnZXRTbGVldmVQdXJjaGFzYWJsZUF1Z3Moc2xlZXZlTnVtYmVyOiBudW1iZXIpOiBBdWdtZW50UGFpcltdO1xcbiBcXG4gICAvKipcXG4gICAgKiBQdXJjaGFzZSBhbiBhdWcgZm9yIGEgc2xlZXZlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybiB0cnVlIGlmIHRoZSBhdWcgd2FzIHB1cmNoYXNlZCBhbmQgaW5zdGFsbGVkIG9uIHRoZSBzbGVldmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2xlZXZlTnVtYmVyIC0gSW5kZXggb2YgdGhlIHNsZWV2ZSB0byBidXkgYW4gYXVnIGZvci5cXG4gICAgKiBAcGFyYW0gYXVnTmFtZSAtIE5hbWUgb2YgdGhlIGF1ZyB0byBidXkuIE11c3QgYmUgYW4gZXhhY3QgbWF0Y2guXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgYXVnIHdhcyBwdXJjaGFzZWQgYW5kIGluc3RhbGxlZCBvbiB0aGUgc2xlZXZlLCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgcHVyY2hhc2VTbGVldmVBdWcoc2xlZXZlTnVtYmVyOiBudW1iZXIsIGF1Z05hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBTa2lsbHMgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFNraWxsc0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgc2tpbGwgbGV2ZWwuXFxuICAgICogQHBhcmFtIGV4cCAtIGV4cGVyaWVuY2UgZm9yIHRoYXQgc2tpbGxcXG4gICAgKiBAcGFyYW0gc2tpbGxNdWx0IC0gTXVsdGlwbGllciBmb3IgdGhhdCBza2lsbCwgZGVmYXVsdHMgdG8gMS5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBza2lsbCBsZXZlbC5cXG4gICAgKi9cXG4gICBjYWxjdWxhdGVTa2lsbChleHA6IG51bWJlciwgc2tpbGxNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBleHAgZm9yIHNraWxsIGxldmVsLlxcbiAgICAqIEBwYXJhbSBza2lsbCAtIHRhcmdldCBza2lsbCBsZXZlbFxcbiAgICAqIEBwYXJhbSBza2lsbE11bHQgLSBNdWx0aXBsaWVyIGZvciB0aGF0IHNraWxsLCBkZWZhdWx0cyB0byAxLlxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGV4cCByZXF1aXJlZC5cXG4gICAgKi9cXG4gICBjYWxjdWxhdGVFeHAoc2tpbGw6IG51bWJlciwgc2tpbGxNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSGFja2luZyBmb3JtdWxhc1xcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgSGFja2luZ0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgaGFjayBjaGFuY2UuXFxuICAgICogQHBhcmFtIHNlcnZlciAtIFNlcnZlciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFNlcnZlciB8IGdldFNlcnZlcn1cXG4gICAgKiBAcGFyYW0gcGxheWVyIC0gUGxheWVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0UGxheWVyIHwgZ2V0UGxheWVyfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhY2sgY2hhbmNlLlxcbiAgICAqL1xcbiAgIGhhY2tDaGFuY2Uoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYWNrIGV4cCBmb3Igb25lIHRocmVhZC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIE11bHRpcGx5IGJ5IHRocmVhZCB0byBnZXQgdG90YWwgZXhwXFxuICAgICogQHBhcmFtIHNlcnZlciAtIFNlcnZlciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFNlcnZlciB8IGdldFNlcnZlcn1cXG4gICAgKiBAcGFyYW0gcGxheWVyIC0gUGxheWVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0UGxheWVyIHwgZ2V0UGxheWVyfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhY2sgZXhwLlxcbiAgICAqL1xcbiAgIGhhY2tFeHAoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYWNrIHBlcmNlbnQgZm9yIG9uZSB0aHJlYWQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBNdWx0aXBseSBieSB0aHJlYWQgdG8gZ2V0IHRvdGFsIHBlcmNlbnQgaGFja2VkLlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHBsYXllciAtIFBsYXllciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFBsYXllciB8IGdldFBsYXllcn1cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBoYWNrIHBlcmNlbnQuXFxuICAgICovXFxuICAgaGFja1BlcmNlbnQoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgcGVyY2VudCBhIHNlcnZlciB3b3VsZCBncm93LlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHRocmVhZHMgLSBBbW91bnQgb2YgdGhyZWFkLlxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHBhcmFtIGNvcmVzIC0gTnVtYmVyIG9mIGNvcmVzIG9uIHRoZSBjb21wdXRlciB0aGF0IHdpbGwgZXhlY3V0ZSBncm93LlxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGdyb3cgcGVyY2VudC5cXG4gICAgKi9cXG4gICBncm93UGVyY2VudChzZXJ2ZXI6IFNlcnZlciwgdGhyZWFkczogbnVtYmVyLCBwbGF5ZXI6IFBsYXllciwgY29yZXM/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGhhY2sgdGltZS5cXG4gICAgKiBAcGFyYW0gc2VydmVyIC0gU2VydmVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0U2VydmVyIHwgZ2V0U2VydmVyfVxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgaGFjayB0aW1lLlxcbiAgICAqL1xcbiAgIGhhY2tUaW1lKHNlcnZlcjogU2VydmVyLCBwbGF5ZXI6IFBsYXllcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgZ3JvdyB0aW1lLlxcbiAgICAqIEBwYXJhbSBzZXJ2ZXIgLSBTZXJ2ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRTZXJ2ZXIgfCBnZXRTZXJ2ZXJ9XFxuICAgICogQHBhcmFtIHBsYXllciAtIFBsYXllciBpbmZvIGZyb20ge0BsaW5rIE5TLmdldFBsYXllciB8IGdldFBsYXllcn1cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBncm93IHRpbWUuXFxuICAgICovXFxuICAgZ3Jvd1RpbWUoc2VydmVyOiBTZXJ2ZXIsIHBsYXllcjogUGxheWVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB3ZWFrZW4gdGltZS5cXG4gICAgKiBAcGFyYW0gc2VydmVyIC0gU2VydmVyIGluZm8gZnJvbSB7QGxpbmsgTlMuZ2V0U2VydmVyIHwgZ2V0U2VydmVyfVxcbiAgICAqIEBwYXJhbSBwbGF5ZXIgLSBQbGF5ZXIgaW5mbyBmcm9tIHtAbGluayBOUy5nZXRQbGF5ZXIgfCBnZXRQbGF5ZXJ9XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgd2Vha2VuIHRpbWUuXFxuICAgICovXFxuICAgd2Vha2VuVGltZShzZXJ2ZXI6IFNlcnZlciwgcGxheWVyOiBQbGF5ZXIpOiBudW1iZXI7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBIYWNrbmV0IE5vZGUgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIEhhY2tuZXROb2Rlc0Zvcm11bGFzIHtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgbW9uZXkgZ2FpbiByYXRlLlxcbiAgICAqIEBwYXJhbSBsZXZlbCAtIGxldmVsIG9mIHRoZSBub2RlLlxcbiAgICAqIEBwYXJhbSByYW0gLSByYW0gb2YgdGhlIG5vZGUuXFxuICAgICogQHBhcmFtIGNvcmVzIC0gY29yZXMgb2YgdGhlIG5vZGUuXFxuICAgICogQHBhcmFtIG11bHQgLSBwbGF5ZXIgcHJvZHVjdGlvbiBtdWx0IChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgbW9uZXkgZ2FpbiByYXRlLlxcbiAgICAqL1xcbiAgIG1vbmV5R2FpblJhdGUobGV2ZWw6IG51bWJlciwgcmFtOiBudW1iZXIsIGNvcmVzOiBudW1iZXIsIG11bHQ/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgbm9kZSBsZXZlbC5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdMZXZlbCAtIHN0YXJ0aW5nIGxldmVsXFxuICAgICogQHBhcmFtIGV4dHJhTGV2ZWxzIC0gYW1vdW50IG9mIGxldmVsIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgbGV2ZWxVcGdyYWRlQ29zdChzdGFydGluZ0xldmVsOiBudW1iZXIsIGV4dHJhTGV2ZWxzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBub2RlIHJhbS5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdSYW0gLSBzdGFydGluZyByYW1cXG4gICAgKiBAcGFyYW0gZXh0cmFMZXZlbHMgLSBhbW91bnQgb2YgbGV2ZWwgb2YgcmFtIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgcmFtVXBncmFkZUNvc3Qoc3RhcnRpbmdSYW06IG51bWJlciwgZXh0cmFMZXZlbHM/OiBudW1iZXIsIGNvc3RNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IG5vZGUgY29yZXMuXFxuICAgICogQHBhcmFtIHN0YXJ0aW5nQ29yZSAtIHN0YXJ0aW5nIGNvcmVzXFxuICAgICogQHBhcmFtIGV4dHJhQ29yZXMgLSBhbW91bnQgb2YgY29yZXMgdG8gcHVyY2hhc2UgKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHBhcmFtIGNvc3RNdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICBjb3JlVXBncmFkZUNvc3Qoc3RhcnRpbmdDb3JlOiBudW1iZXIsIGV4dHJhQ29yZXM/OiBudW1iZXIsIGNvc3RNdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgY29zdCBvZiBhIGhhY2tuZXQgbm9kZS5cXG4gICAgKiBAcGFyYW0gbiAtIG51bWJlciBvZiB0aGUgaGFja25ldCBub2RlXFxuICAgICogQHBhcmFtIG11bHQgLSBwbGF5ZXIgY29zdCByZWR1Y3Rpb24gKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICBoYWNrbmV0Tm9kZUNvc3QobjogbnVtYmVyLCBtdWx0OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQWxsIGNvbnN0YW50cyB1c2VkIGJ5IHRoZSBnYW1lLlxcbiAgICAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIGFsbCBoYWNrbmV0IG5vZGUgY29uc3RhbnRzIHVzZWQgYnkgdGhlIGdhbWUuXFxuICAgICovXFxuICAgY29uc3RhbnRzKCk6IEhhY2tuZXROb2RlQ29uc3RhbnRzO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSGFja25ldCBTZXJ2ZXIgZm9ybXVsYXNcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIEhhY2tuZXRTZXJ2ZXJzRm9ybXVsYXMge1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYXNoIGdhaW4gcmF0ZS5cXG4gICAgKiBAcGFyYW0gbGV2ZWwgLSBsZXZlbCBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSByYW1Vc2VkIC0gcmFtVXNlZCBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBtYXhSYW0gLSBtYXhSYW0gb2YgdGhlIHNlcnZlci5cXG4gICAgKiBAcGFyYW0gY29yZXMgLSBjb3JlcyBvZiB0aGUgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBtdWx0IC0gcGxheWVyIHByb2R1Y3Rpb24gbXVsdCAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhc2ggZ2FpbiByYXRlLlxcbiAgICAqL1xcbiAgIGhhc2hHYWluUmF0ZShsZXZlbDogbnVtYmVyLCByYW1Vc2VkOiBudW1iZXIsIG1heFJhbTogbnVtYmVyLCBjb3JlczogbnVtYmVyLCBtdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBjb3N0IG9mIHVwZ3JhZGluZyBoYWNrbmV0IHNlcnZlciBsZXZlbC5cXG4gICAgKiBAcGFyYW0gc3RhcnRpbmdMZXZlbCAtIHN0YXJ0aW5nIGxldmVsXFxuICAgICogQHBhcmFtIGV4dHJhTGV2ZWxzIC0gYW1vdW50IG9mIGxldmVsIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgbGV2ZWxVcGdyYWRlQ29zdChzdGFydGluZ0xldmVsOiBudW1iZXIsIGV4dHJhTGV2ZWxzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBzZXJ2ZXIgcmFtLlxcbiAgICAqIEBwYXJhbSBzdGFydGluZ1JhbSAtIHN0YXJ0aW5nIHJhbVxcbiAgICAqIEBwYXJhbSBleHRyYUxldmVscyAtIGFtb3VudCBvZiBsZXZlbCBvZiByYW0gdG8gcHVyY2hhc2UgKGRlZmF1bHRzIHRvIDEpXFxuICAgICogQHBhcmFtIGNvc3RNdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0IHRvIDEpXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgY29zdC5cXG4gICAgKi9cXG4gICByYW1VcGdyYWRlQ29zdChzdGFydGluZ1JhbTogbnVtYmVyLCBleHRyYUxldmVscz86IG51bWJlciwgY29zdE11bHQ/OiBudW1iZXIpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGNvc3Qgb2YgdXBncmFkaW5nIGhhY2tuZXQgc2VydmVyIGNvcmVzLlxcbiAgICAqIEBwYXJhbSBzdGFydGluZ0NvcmUgLSBzdGFydGluZyBjb3Jlc1xcbiAgICAqIEBwYXJhbSBleHRyYUNvcmVzIC0gYW1vdW50IG9mIGNvcmVzIHRvIHB1cmNoYXNlIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEBwYXJhbSBjb3N0TXVsdCAtIHBsYXllciBjb3N0IHJlZHVjdGlvbiAoZGVmYXVsdCB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgY29yZVVwZ3JhZGVDb3N0KHN0YXJ0aW5nQ29yZTogbnVtYmVyLCBleHRyYUNvcmVzPzogbnVtYmVyLCBjb3N0TXVsdD86IG51bWJlcik6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgY29zdCBvZiB1cGdyYWRpbmcgaGFja25ldCBzZXJ2ZXIgY2FjaGUuXFxuICAgICogQHBhcmFtIHN0YXJ0aW5nQ2FjaGUgLSBzdGFydGluZyBjYWNoZSBsZXZlbFxcbiAgICAqIEBwYXJhbSBleHRyYUNhY2hlIC0gYW1vdW50IG9mIGxldmVscyBvZiBjYWNoZSB0byBwdXJjaGFzZSAoZGVmYXVsdHMgdG8gMSlcXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBjb3N0LlxcbiAgICAqL1xcbiAgIGNhY2hlVXBncmFkZUNvc3Qoc3RhcnRpbmdDYWNoZTogbnVtYmVyLCBleHRyYUNhY2hlPzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSBoYXNoIGNvc3Qgb2YgYW4gdXBncmFkZS5cXG4gICAgKiBAcGFyYW0gdXBnTmFtZSAtIG5hbWUgb2YgdGhlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gbGV2ZWwgLSBsZXZlbCBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGhhc2ggY29zdC5cXG4gICAgKi9cXG4gICBoYXNoVXBncmFkZUNvc3QodXBnTmFtZTogbnVtYmVyLCBsZXZlbDogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgY29zdCBvZiBhIGhhY2tuZXQgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBuIC0gbnVtYmVyIG9mIHRoZSBoYWNrbmV0IHNlcnZlclxcbiAgICAqIEBwYXJhbSBtdWx0IC0gcGxheWVyIGNvc3QgcmVkdWN0aW9uIChkZWZhdWx0cyB0byAxKVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIGNvc3QuXFxuICAgICovXFxuICAgaGFja25ldFNlcnZlckNvc3QobjogbnVtYmVyLCBtdWx0PzogbnVtYmVyKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEFsbCBjb25zdGFudHMgdXNlZCBieSB0aGUgZ2FtZS5cXG4gICAgKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCBhbGwgaGFja25ldCBzZXJ2ZXIgY29uc3RhbnRzIHVzZWQgYnkgdGhlIGdhbWUuXFxuICAgICovXFxuICAgY29uc3RhbnRzKCk6IEhhY2tuZXRTZXJ2ZXJDb25zdGFudHM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBHYW5nIGZvcm11bGFzXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBHYW5nRm9ybXVsYXMge1xcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB0aGUgd2FudGVkIHBlbmFsdHkuXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgd2FudGVkIHBlbmFsdHkuXFxuICAgICovXFxuICAgd2FudGVkUGVuYWx0eShnYW5nOiBHYW5nR2VuSW5mbyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgcmVzcGVjdCBnYWluIHBlciB0aWNrLlxcbiAgICAqIEBwYXJhbSBnYW5nIC0gR2FuZyBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0R2FuZ0luZm9ybWF0aW9uIHwgZ2V0R2FuZ0luZm9ybWF0aW9ufVxcbiAgICAqIEBwYXJhbSBtZW1iZXIgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRNZW1iZXJJbmZvcm1hdGlvbiB8IGdldE1lbWJlckluZm9ybWF0aW9ufVxcbiAgICAqIEBwYXJhbSB0YXNrIC0gR2FuZyBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0VGFza1N0YXRzIHwgZ2V0VGFza1N0YXRzfVxcbiAgICAqIEByZXR1cm5zIFRoZSBjYWxjdWxhdGVkIHJlc3BlY3QgZ2Fpbi5cXG4gICAgKi9cXG4gICByZXNwZWN0R2FpbihnYW5nOiBHYW5nR2VuSW5mbywgbWVtYmVyOiBHYW5nTWVtYmVySW5mbywgdGFzazogR2FuZ1Rhc2tTdGF0cyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDYWxjdWxhdGUgd2FudGVkIGdhaW4gcGVyIHRpY2suXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHBhcmFtIG1lbWJlciAtIE1lbWJlciBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0TWVtYmVySW5mb3JtYXRpb24gfCBnZXRNZW1iZXJJbmZvcm1hdGlvbn1cXG4gICAgKiBAcGFyYW0gdGFzayAtIFRhc2sgaW5mbyBmcm9tIHtAbGluayBHYW5nLmdldFRhc2tTdGF0cyB8IGdldFRhc2tTdGF0c31cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCB3YW50ZWQgZ2Fpbi5cXG4gICAgKi9cXG4gICB3YW50ZWRMZXZlbEdhaW4oZ2FuZzogR2FuZ0dlbkluZm8sIG1lbWJlcjogR2FuZ01lbWJlckluZm8sIHRhc2s6IEdhbmdUYXNrU3RhdHMpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIG1vbmV5IGdhaW4gcGVyIHRpY2suXFxuICAgICogQHBhcmFtIGdhbmcgLSBHYW5nIGluZm8gZnJvbSB7QGxpbmsgR2FuZy5nZXRHYW5nSW5mb3JtYXRpb24gfCBnZXRHYW5nSW5mb3JtYXRpb259XFxuICAgICogQHBhcmFtIG1lbWJlciAtIE1lbWJlciBpbmZvIGZyb20ge0BsaW5rIEdhbmcuZ2V0TWVtYmVySW5mb3JtYXRpb24gfCBnZXRNZW1iZXJJbmZvcm1hdGlvbn1cXG4gICAgKiBAcGFyYW0gdGFzayAtIFRhc2sgaW5mbyBmcm9tIHtAbGluayBHYW5nLmdldFRhc2tTdGF0cyB8IGdldFRhc2tTdGF0c31cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBtb25leSBnYWluLlxcbiAgICAqL1xcbiAgIG1vbmV5R2FpbihnYW5nOiBHYW5nR2VuSW5mbywgbWVtYmVyOiBHYW5nTWVtYmVySW5mbywgdGFzazogR2FuZ1Rhc2tTdGF0cyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGFzY2Vuc2lvbiBwb2ludCBnYWluLlxcbiAgICAqIEBwYXJhbSBleHAgLSBFeHBlcmllbmNlIHBvaW50IGJlZm9yZSBhc2NlbnNpb24uXFxuICAgICogQHJldHVybnMgVGhlIGNhbGN1bGF0ZWQgYXNjZW5zaW9uIHBvaW50IGdhaW4uXFxuICAgICovXFxuICAgYXNjZW5zaW9uUG9pbnRzR2FpbihleHA6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIGFzY2Vuc2lvbiBtdWx0LlxcbiAgICAqIEBwYXJhbSBwb2ludHMgLSBBbW91bnQgb2YgYXNjZW5zaW9uIHBvaW50cy5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2FsY3VsYXRlZCBhc2NlbnNpb24gbXVsdC5cXG4gICAgKi9cXG4gICBhc2NlbnNpb25NdWx0aXBsaWVyKHBvaW50czogbnVtYmVyKTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogRm9ybXVsYXMgQVBJXFxuICAqIEByZW1hcmtzXFxuICAqIFlvdSBuZWVkIEZvcm11bGFzLmV4ZSBvbiB5b3VyIGhvbWUgY29tcHV0ZXIgdG8gdXNlIHRoaXMgQVBJLlxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBleHBvcnQgaW50ZXJmYWNlIEZvcm11bGFzIHtcXG4gICAvKiogU2tpbGxzIGZvcm11bGFzICovXFxuICAgc2tpbGxzOiBTa2lsbHNGb3JtdWxhcztcXG4gICAvKiogSGFja2luZyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tpbmc6IEhhY2tpbmdGb3JtdWxhcztcXG4gICAvKiogSGFja25ldCBOb2RlcyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tuZXROb2RlczogSGFja25ldE5vZGVzRm9ybXVsYXM7XFxuICAgLyoqIEhhY2tuZXQgU2VydmVycyBmb3JtdWxhcyAqL1xcbiAgIGhhY2tuZXRTZXJ2ZXJzOiBIYWNrbmV0U2VydmVyc0Zvcm11bGFzO1xcbiAgIC8qKiBHYW5nIGZvcm11bGFzICovXFxuICAgZ2FuZzogR2FuZ0Zvcm11bGFzO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBGcmFnbWVudCB7XFxuICAgaWQ6IG51bWJlcjtcXG4gICBzaGFwZTogYm9vbGVhbltdW107XFxuICAgdHlwZTogbnVtYmVyO1xcbiAgIHBvd2VyOiBudW1iZXI7XFxuICAgbGltaXQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQWN0aXZlRnJhZ21lbnQge1xcbiAgIGlkOiBudW1iZXI7XFxuICAgYXZnQ2hhcmdlOiBudW1iZXI7XFxuICAgbnVtQ2hhcmdlOiBudW1iZXI7XFxuICAgcm90YXRpb246IG51bWJlcjtcXG4gICB4OiBudW1iZXI7XFxuICAgeTogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogU3RhbmVrJ3MgR2lmdCBBUEkuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBTdGFuZWsge1xcbiAgIC8qKlxcbiAgICAqIFN0YW5laydzIEdpZnQgd2lkdGguXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC40IEdCXFxuICAgICogQHJldHVybnMgVGhlIHdpZHRoIG9mIHRoZSBnaWZ0LlxcbiAgICAqL1xcbiAgIHdpZHRoKCk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBTdGFuZWsncyBHaWZ0IGhlaWdodC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKiBAcmV0dXJucyBUaGUgaGVpZ2h0IG9mIHRoZSBnaWZ0LlxcbiAgICAqL1xcbiAgIGhlaWdodCgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoYXJnZSBhIGZyYWdtZW50LCBpbmNyZWFzaW5nIGl0cyBwb3dlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjQgR0JcXG4gICAgKiBAcGFyYW0gcm9vdFggLSByb290WCBSb290IFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIHJvb3RZIFJvb3QgWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IGxhc3RzIHVudGlsIHRoZSBjaGFyZ2UgYWN0aW9uIGlzIG92ZXIuXFxuICAgICovXFxuICAgY2hhcmdlKHJvb3RYOiBudW1iZXIsIHJvb3RZOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBMaXN0IHBvc3NpYmxlIGZyYWdtZW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBMaXN0IG9mIHBvc3NpYmxlIGZyYWdtZW50cy5cXG4gICAgKi9cXG4gICBmcmFnbWVudERlZmluaXRpb25zKCk6IEZyYWdtZW50W107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3Qgb2YgZnJhZ21lbnRzIGluIFN0YW5laydzIEdpZnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgTGlzdCBvZiBhY3RpdmUgZnJhZ21lbnRzIHBsYWNlZCBvbiBTdGFuZWsncyBHaWZ0LlxcbiAgICAqL1xcbiAgIGFjdGl2ZUZyYWdtZW50cygpOiBBY3RpdmVGcmFnbWVudFtdO1xcbiBcXG4gICAvKipcXG4gICAgKiBDbGVhciB0aGUgYm9hcmQgb2YgYWxsIGZyYWdtZW50cy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgY2xlYXIoKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ2hlY2sgaWYgZnJhZ21lbnQgY2FuIGJlIHBsYWNlZCBhdCBzcGVjaWZpZWQgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC41IEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gcm9vdFggLSByb290WCBSb290IFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIHJvb3RZIFJvb3QgWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHBhcmFtIHJvdGF0aW9uIC0gcm90YXRpb24gQSBudW1iZXIgZnJvbSAwIHRvIDMsIHRoZSBtb3VudCBvZiA5MCBkZWdyZWUgdHVybiB0byB0YWtlLlxcbiAgICAqIEBwYXJhbSBmcmFnbWVudElkIC0gZnJhZ21lbnRJZCBJRCBvZiB0aGUgZnJhZ21lbnQgdG8gcGxhY2UuXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgZnJhZ21lbnQgY2FuIGJlIHBsYWNlZCBhdCB0aGF0IHBvc2l0aW9uLiBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgY2FuUGxhY2Uocm9vdFg6IG51bWJlciwgcm9vdFk6IG51bWJlciwgcm90YXRpb246IG51bWJlciwgZnJhZ21lbnRJZDogbnVtYmVyKTogYm9vbGVhbjtcXG4gICAvKipcXG4gICAgKiBQbGFjZSBmcmFnbWVudCBvbiBTdGFuZWsncyBHaWZ0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSByb290WCAtIFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIFkgYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb3RhdGlvbiAtIEEgbnVtYmVyIGZyb20gMCB0byAzLCB0aGUgbW91bnQgb2YgOTAgZGVncmVlIHR1cm4gdG8gdGFrZS5cXG4gICAgKiBAcGFyYW0gZnJhZ21lbnRJZCAtIElEIG9mIHRoZSBmcmFnbWVudCB0byBwbGFjZS5cXG4gICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBmcmFnbWVudCBjYW4gYmUgcGxhY2VkIGF0IHRoYXQgcG9zaXRpb24uIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBwbGFjZShyb290WDogbnVtYmVyLCByb290WTogbnVtYmVyLCByb3RhdGlvbjogbnVtYmVyLCBmcmFnbWVudElkOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEdldCBwbGFjZWQgZnJhZ21lbnQgYXQgbG9jYXRpb24uXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIHJvb3RYIC0gWCBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHBhcmFtIHJvb3RZIC0gWSBhZ2FpbnN0IHdoaWNoIHRvIGFsaWduIHRoZSB0b3AgbGVmdCBvZiB0aGUgZnJhZ21lbnQuXFxuICAgICogQHJldHVybnMgVGhlIGZyYWdtZW50IGF0IFtyb290WCwgcm9vdFldLCBpZiBhbnkuXFxuICAgICovXFxuICAgZ2V0KHJvb3RYOiBudW1iZXIsIHJvb3RZOiBudW1iZXIpOiBBY3RpdmVGcmFnbWVudCB8IHVuZGVmaW5lZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmVtb3ZlIGZyYWdtZW50IGF0IGxvY2F0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSByb290WCAtIFggYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEBwYXJhbSByb290WSAtIFkgYWdhaW5zdCB3aGljaCB0byBhbGlnbiB0aGUgdG9wIGxlZnQgb2YgdGhlIGZyYWdtZW50LlxcbiAgICAqIEByZXR1cm5zIFRoZSBmcmFnbWVudCBhdCBbcm9vdFgsIHJvb3RZXSwgaWYgYW55LlxcbiAgICAqL1xcbiAgIHJlbW92ZShyb290WDogbnVtYmVyLCByb290WTogbnVtYmVyKTogYm9vbGVhbjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFVzZXIgSW50ZXJmYWNlIEFQSS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFVzZXJJbnRlcmZhY2Uge1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCB0aGVtZVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSB0aGVtZSdzIGNvbG9yc1xcbiAgICAqL1xcbiAgIGdldFRoZW1lKCk6IFVzZXJJbnRlcmZhY2VUaGVtZTtcXG4gXFxuICAgLyoqXFxuICAgICogU2V0cyB0aGUgY3VycmVudCB0aGVtZVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIFVzYWdlIGV4YW1wbGUgKE5TMilcXG4gICAgKiBgYGB0c1xcbiAgICAqIGNvbnN0IHRoZW1lID0gbnMudWkuZ2V0VGhlbWUoKTtcXG4gICAgKiB0aGVtZS5wcmltYXJ5ID0gJyNmZjU1MDAnO1xcbiAgICAqIG5zLnVpLnNldFRoZW1lKHRoZW1lKTtcXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBzZXRUaGVtZShuZXdUaGVtZTogVXNlckludGVyZmFjZVRoZW1lKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUmVzZXRzIHRoZSBwbGF5ZXIncyB0aGVtZSB0byB0aGUgZGVmYXVsdCB2YWx1ZXNcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVzZXRUaGVtZSgpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGN1cnJlbnQgc3R5bGVzXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHBsYXllcidzIHN0eWxlc1xcbiAgICAqL1xcbiAgIGdldFN0eWxlcygpOiBJU3R5bGVTZXR0aW5ncztcXG4gXFxuICAgLyoqXFxuICAgICogU2V0cyB0aGUgY3VycmVudCBzdHlsZXNcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBVc2FnZSBleGFtcGxlIChOUzIpXFxuICAgICogYGBgdHNcXG4gICAgKiBjb25zdCBzdHlsZXMgPSBucy51aS5nZXRTdHlsZXMoKTtcXG4gICAgKiBzdHlsZXMuZm9udEZhbWlseSA9ICdDb21pYyBTYW5zIE1zJztcXG4gICAgKiBucy51aS5zZXRTdHlsZXMoc3R5bGVzKTtcXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBzZXRTdHlsZXMobmV3U3R5bGVzOiBJU3R5bGVTZXR0aW5ncyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJlc2V0cyB0aGUgcGxheWVyJ3Mgc3R5bGVzIHRvIHRoZSBkZWZhdWx0IHZhbHVlc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICByZXNldFN0eWxlcygpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjdXJyZW50IGdhbWUgaW5mb3JtYXRpb24gKHZlcnNpb24sIGNvbW1pdCwgLi4uKVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICBnZXRHYW1lSW5mbygpOiBHYW1lSW5mbztcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvbGxlY3Rpb24gb2YgYWxsIGZ1bmN0aW9ucyBwYXNzZWQgdG8gc2NyaXB0c1xcbiAgKiBAcHVibGljXFxuICAqIEByZW1hcmtzXFxuICAqIDxiPkJhc2ljIG5zMSB1c2FnZSBleGFtcGxlOjwvYj5cXG4gICogYGBgdHNcXG4gICogIC8vIEJhc2ljIG5zIGZ1bmN0aW9ucyBjYW4gYmUgdXNlZCBkaXJlY3RseVxcbiAgKiAgZ2V0SG9zdG5hbWUoKTtcXG4gICogIC8vIFNvbWUgcmVsYXRlZCBmdW5jdGlvbnMgYXJlIGdhdGhlcmVkIHdpdGhpbiBhIGNvbW1vbiBuYW1lc3BhY2VcXG4gICogIHN0b2NrLmdldFByaWNlKCk7XFxuICAqIGBgYFxcbiAgKiB7QGxpbmsgaHR0cHM6Ly9iaXRidXJuZXIucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L25ldHNjcmlwdC9uZXRzY3JpcHQxLmh0bWx8IG5zMSBpbi1nYW1lIGRvY3N9XFxuICAqIDxocj5cXG4gICogPGI+QmFzaWMgbnMyIHVzYWdlIGV4YW1wbGU6PC9iPlxcbiAgKiBgYGB0c1xcbiAgKiBleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgKiAgLy8gQmFzaWMgbnMgZnVuY3Rpb25zIGNhbiBiZSBhY2Nlc3NlZCBvbiB0aGUgbnMgb2JqZWN0XFxuICAqICBucy5nZXRIb3N0bmFtZSgpO1xcbiAgKiAgLy8gU29tZSByZWxhdGVkIGZ1bmN0aW9ucyBhcmUgZ2F0aGVyZWQgdW5kZXIgYSBzdWItcHJvcGVydHkgb2YgdGhlIG5zIG9iamVjdFxcbiAgKiAgbnMuc3RvY2suZ2V0UHJpY2UoKTtcXG4gICogIC8vIFNvbWUgZnVuY3Rpb25zIG5lZWQgdG8gYmUgYXdhaXQgZWRcXG4gICogIGF3YWl0IG5zLmhhY2soJ24wMGRsZXMnKTtcXG4gICogfVxcbiAgKiBgYGBcXG4gICoge0BsaW5rIGh0dHBzOi8vYml0YnVybmVyLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9uZXRzY3JpcHQvbmV0c2NyaXB0anMuaHRtbHwgbnMyIGluLWdhbWUgZG9jc31cXG4gICogPGhyPlxcbiAgKi9cXG4gZXhwb3J0IGludGVyZmFjZSBOUyBleHRlbmRzIFNpbmd1bGFyaXR5IHtcXG4gICAvKipcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGhhY2tuZXQgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiA0IEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgaGFja25ldDogSGFja25ldDtcXG4gICAvKipcXG4gICAgKlxcbiAgICAqIE5hbWVzcGFjZSBmb3IgYmxhZGVidXJuZXIgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgYmxhZGVidXJuZXI6IEJsYWRlYnVybmVyO1xcbiAgIC8qKlxcbiAgICAqXFxuICAgICogTmFtZXNwYWNlIGZvciBjb2Rpbmdjb250cmFjdCBmdW5jdGlvbnMuXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAgR0JcXG4gICAgKi9cXG4gICByZWFkb25seSBjb2Rpbmdjb250cmFjdDogQ29kaW5nQ29udHJhY3Q7XFxuICAgLyoqXFxuICAgICpcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGdhbmcgZnVuY3Rpb25zLlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgZ2FuZzogR2FuZztcXG4gICAvKipcXG4gICAgKlxcbiAgICAqIE5hbWVzcGFjZSBmb3Igc2xlZXZlIGZ1bmN0aW9ucy5cXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHNsZWV2ZTogU2xlZXZlO1xcbiAgIC8qKlxcbiAgICAqXFxuICAgICogTmFtZXNwYWNlIGZvciBzdG9jayBmdW5jdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHN0b2NrOiBUSVg7XFxuICAgLyoqXFxuICAgICpcXG4gICAgKiBOYW1lc3BhY2UgZm9yIGZvcm11bGFzIGZ1bmN0aW9ucy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgZm9ybXVsYXM6IEZvcm11bGFzO1xcbiAgIC8qKlxcbiAgICAqIE5hbWVzcGFjZSBmb3Igc3RhbmVrIGZ1bmN0aW9ucy5cXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHN0YW5lazogU3RhbmVrO1xcbiAgIC8qKlxcbiAgICAqIE5hbWVzcGFjZSBmb3IgY29ycG9yYXRpb24gZnVuY3Rpb25zLlxcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgcmVhZG9ubHkgY29ycG9yYXRpb246IENvcnBvcmF0aW9uO1xcbiBcXG4gICAvKipcXG4gICAgKiBOYW1lc3BhY2UgZm9yIHVzZXIgaW50ZXJmYWNlIGZ1bmN0aW9ucy5cXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIHJlYWRvbmx5IHVpOiBVc2VySW50ZXJmYWNlO1xcbiBcXG4gICAvKipcXG4gICAgKiBBcmd1bWVudHMgcGFzc2VkIGludG8gdGhlIHNjcmlwdC5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEFyZ3VtZW50cyBwYXNzZWQgaW50byBhIHNjcmlwdCBjYW4gYmUgYWNjZXNzZWQgdXNpbmcgYSBub3JtYWxcXG4gICAgKiBhcnJheSB1c2luZyB0aGUgW10gb3BlcmF0b3IgKGFyZ3NbMF0sIGFyZ3NbMV0sIGV0Y+KApikuXFxuICAgICpcXG4gICAgKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGdldCB0aGUgbnVtYmVyIG9mIGFyZ3VtZW50cyB0aGF0IHdhcyBwYXNzZWQgaW50byBhIHNjcmlwdCB1c2luZzogJ2FyZ3MubGVuZ3RoJ1xcbiAgICAqIFdBUk5JTkc6IERvIG5vdCB0cnkgdG8gbW9kaWZ5IHRoZSBhcmdzIGFycmF5LiBUaGlzIHdpbGwgYnJlYWsgdGhlIGdhbWUuXFxuICAgICovXFxuICAgcmVhZG9ubHkgYXJnczogKHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4pW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0ZWFsIGEgc2VydmVycyBtb25leS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIEZ1bmN0aW9uIHRoYXQgaXMgdXNlZCB0byB0cnkgYW5kIGhhY2sgc2VydmVycyB0byBzdGVhbCBtb25leSBhbmQgZ2FpbiBoYWNraW5nIGV4cGVyaWVuY2UuXFxuICAgICogVGhlIHJ1bnRpbWUgZm9yIHRoaXMgY29tbWFuZCBkZXBlbmRzIG9uIHlvdXIgaGFja2luZyBsZXZlbCBhbmQgdGhlIHRhcmdldCBzZXJ2ZXLigJlzXFxuICAgICogc2VjdXJpdHkgbGV2ZWwgd2hlbiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZC4gSW4gb3JkZXIgdG8gaGFjayBhIHNlcnZlciB5b3UgbXVzdCBmaXJzdCBnYWluIHJvb3QgYWNjZXNzIHRvIHRoYXQgc2VydmVyXFxuICAgICogYW5kIGFsc28gaGF2ZSB0aGUgcmVxdWlyZWQgaGFja2luZyBsZXZlbC5cXG4gICAgKlxcbiAgICAqIEEgc2NyaXB0IGNhbiBoYWNrIGEgc2VydmVyIGZyb20gYW55d2hlcmUuIEl0IGRvZXMgbm90IG5lZWQgdG8gYmUgcnVubmluZyBvbiB0aGUgc2FtZVxcbiAgICAqIHNlcnZlciB0byBoYWNrIHRoYXQgc2VydmVyLiBGb3IgZXhhbXBsZSwgeW91IGNhbiBjcmVhdGUgYSBzY3JpcHQgdGhhdCBoYWNrcyB0aGUgYGZvb2Ruc3R1ZmZgXFxuICAgICogc2VydmVyIGFuZCBydW4gdGhhdCBzY3JpcHQgb24gYW55IHNlcnZlciBpbiB0aGUgZ2FtZS5cXG4gICAgKlxcbiAgICAqIEEgc3VjY2Vzc2Z1bCBgaGFjaygpYCBvbiBhIHNlcnZlciB3aWxsIHJhaXNlIHRoYXQgc2VydmVy4oCZcyBzZWN1cml0eSBsZXZlbCBieSAwLjAwMi5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogdmFyIGVhcm5lZE1vbmV5ID0gaGFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGVhcm5lZE1vbmV5ID0gZWFybmVkTW9uZXkgKyBoYWNrKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gaGFja1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbGV0IGVhcm5lZE1vbmV5ID0gYXdhaXQgbnMuaGFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGVhcm5lZE1vbmV5ICs9IGF3YWl0IG5zLmhhY2soXFxcImZvb2Ruc3R1ZmZcXFwiLCB7IHRocmVhZHM6IDUgfSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBoYWNrXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBoYWNrLlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiBtb25leSBzdG9sZW4gaWYgdGhlIGhhY2sgaXMgc3VjY2Vzc2Z1bCwgYW5kIHplcm8gb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGhhY2soaG9zdDogc3RyaW5nLCBvcHRzPzogQmFzaWNIR1dPcHRpb25zKTogUHJvbWlzZTxudW1iZXI+O1xcbiBcXG4gICAvKipcXG4gICAgKiBTcG9vZiBtb25leSBpbiBhIHNlcnZlcnMgYmFuayBhY2NvdW50LCBpbmNyZWFzaW5nIHRoZSBhbW91bnQgYXZhaWxhYmxlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIFVzZSB5b3VyIGhhY2tpbmcgc2tpbGxzIHRvIGluY3JlYXNlIHRoZSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIFRoZSBydW50aW1lIGZvciB0aGlzIGNvbW1hbmQgZGVwZW5kcyBvbiB5b3VyIGhhY2tpbmcgbGV2ZWwgYW5kIHRoZSB0YXJnZXQgc2VydmVy4oCZc1xcbiAgICAqIHNlY3VyaXR5IGxldmVsLiBXaGVuIGBncm93YCBjb21wbGV0ZXMsIHRoZSBtb25leSBhdmFpbGFibGUgb24gYSB0YXJnZXQgc2VydmVyIHdpbGxcXG4gICAgKiBiZSBpbmNyZWFzZWQgYnkgYSBjZXJ0YWluLCBmaXhlZCBwZXJjZW50YWdlLiBUaGlzIHBlcmNlbnRhZ2UgaXMgZGV0ZXJtaW5lZCBieSB0aGVcXG4gICAgKiB0YXJnZXQgc2VydmVy4oCZcyBncm93dGggcmF0ZSAod2hpY2ggdmFyaWVzIGJldHdlZW4gc2VydmVycykgYW5kIHNlY3VyaXR5IGxldmVsLiBHZW5lcmFsbHksXFxuICAgICogaGlnaGVyLWxldmVsIHNlcnZlcnMgaGF2ZSBoaWdoZXIgZ3Jvd3RoIHJhdGVzLiBUaGUgZ2V0U2VydmVyR3Jvd3RoKCkgZnVuY3Rpb24gY2FuIGJlIHVzZWRcXG4gICAgKiB0byBvYnRhaW4gYSBzZXJ2ZXLigJlzIGdyb3d0aCByYXRlLlxcbiAgICAqXFxuICAgICogTGlrZSBoYWNrLCBgZ3Jvd2AgY2FuIGJlIGNhbGxlZCBvbiBhbnkgc2VydmVyLCByZWdhcmRsZXNzIG9mIHdoZXJlIHRoZSBzY3JpcHQgaXMgcnVubmluZy5cXG4gICAgKiBUaGUgZ3JvdygpIGNvbW1hbmQgcmVxdWlyZXMgcm9vdCBhY2Nlc3MgdG8gdGhlIHRhcmdldCBzZXJ2ZXIsIGJ1dCB0aGVyZSBpcyBubyByZXF1aXJlZCBoYWNraW5nXFxuICAgICogbGV2ZWwgdG8gcnVuIHRoZSBjb21tYW5kLiBJdCBhbHNvIHJhaXNlcyB0aGUgc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIgYnkgMC4wMDQuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBhdmFpbGFibGVNb25leSA9IGdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudE1vbmV5ID0gY3VycmVudE1vbmV5ICogKDEgKyBncm93KFxcXCJmb29kbnN0dWZmXFxcIikpO1xcbiAgICAqIGN1cnJlbnRNb25leSA9IGN1cnJlbnRNb25leSAqICgxICsgZ3JvdyhcXFwiZm9vZG5zdHVmZlxcXCIsIHsgdGhyZWFkczogNSB9KSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBncm93XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBsZXQgYXZhaWxhYmxlTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGN1cnJlbnRNb25leSAqPSAoMSArIGF3YWl0IG5zLmdyb3coXFxcImZvb2Ruc3R1ZmZcXFwiKSk7XFxuICAgICogY3VycmVudE1vbmV5ICo9ICgxICsgYXdhaXQgbnMuZ3JvdyhcXFwiZm9vZG5zdHVmZlxcXCIsIHsgdGhyZWFkczogNSB9KSk7IC8vIE9ubHkgdXNlIDUgdGhyZWFkcyB0byBncm93XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBncm93LlxcbiAgICAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgcGFyYW1ldGVycyBmb3IgY29uZmlndXJpbmcgZnVuY3Rpb24gYmVoYXZpb3IuXFxuICAgICogQHJldHVybnMgVGhlIG51bWJlciBieSB3aGljaCB0aGUgbW9uZXkgb24gdGhlIHNlcnZlciB3YXMgbXVsdGlwbGllZCBmb3IgdGhlIGdyb3d0aC5cXG4gICAgKi9cXG4gICBncm93KGhvc3Q6IHN0cmluZywgb3B0cz86IEJhc2ljSEdXT3B0aW9ucyk6IFByb21pc2U8bnVtYmVyPjtcXG4gXFxuICAgLyoqXFxuICAgICogUmVkdWNlIGEgc2VydmVyIHNlY3VyaXR5IGxldmVsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMTUgR0JcXG4gICAgKlxcbiAgICAqIFVzZSB5b3VyIGhhY2tpbmcgc2tpbGxzIHRvIGF0dGFjayBhIHNlcnZlcuKAmXMgc2VjdXJpdHksIGxvd2VyaW5nIHRoZSBzZXJ2ZXLigJlzIHNlY3VyaXR5IGxldmVsLlxcbiAgICAqIFRoZSBydW50aW1lIGZvciB0aGlzIGNvbW1hbmQgZGVwZW5kcyBvbiB5b3VyIGhhY2tpbmcgbGV2ZWwgYW5kIHRoZSB0YXJnZXQgc2VydmVy4oCZcyBzZWN1cml0eVxcbiAgICAqIGxldmVsIHdoZW4gdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQuIFRoaXMgZnVuY3Rpb24gbG93ZXJzIHRoZSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlciBieSAwLjA1LlxcbiAgICAqXFxuICAgICogTGlrZSBoYWNrIGFuZCBncm93LCBgd2Vha2VuYCBjYW4gYmUgY2FsbGVkIG9uIGFueSBzZXJ2ZXIsIHJlZ2FyZGxlc3Mgb2ZcXG4gICAgKiB3aGVyZSB0aGUgc2NyaXB0IGlzIHJ1bm5pbmcuIFRoaXMgY29tbWFuZCByZXF1aXJlcyByb290IGFjY2VzcyB0byB0aGUgdGFyZ2V0IHNlcnZlciwgYnV0XFxuICAgICogdGhlcmUgaXMgbm8gcmVxdWlyZWQgaGFja2luZyBsZXZlbCB0byBydW4gdGhlIGNvbW1hbmQuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBjdXJyZW50U2VjdXJpdHkgPSBnZXRTZXJ2ZXJTZWN1cml0eUxldmVsKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudFNlY3VyaXR5ID0gY3VycmVudFNlY3VyaXR5IC0gd2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogY3VycmVudFNlY3VyaXR5ID0gY3VycmVudFNlY3VyaXR5IC0gd2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gd2Vha2VuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBsZXQgY3VycmVudFNlY3VyaXR5ID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGN1cnJlbnRTZWN1cml0eSAtPSBhd2FpdCBucy53ZWFrZW4oXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBjdXJyZW50U2VjdXJpdHkgLT0gYXdhaXQgbnMud2Vha2VuKFxcXCJmb29kbnN0dWZmXFxcIiwgeyB0aHJlYWRzOiA1IH0pOyAvLyBPbmx5IHVzZSA1IHRocmVhZHMgdG8gd2Vha2VuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byB3ZWFrZW4uXFxuICAgICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXJhbWV0ZXJzIGZvciBjb25maWd1cmluZyBmdW5jdGlvbiBiZWhhdmlvci5cXG4gICAgKiBAcmV0dXJucyBUaGUgYW1vdW50IGJ5IHdoaWNoIHRoZSB0YXJnZXQgc2VydmVy4oCZcyBzZWN1cml0eSBsZXZlbCB3YXMgZGVjcmVhc2VkLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gMC4wNSBtdWx0aXBsaWVkIGJ5IHRoZSBudW1iZXIgb2Ygc2NyaXB0IHRocmVhZHMuXFxuICAgICovXFxuICAgd2Vha2VuKGhvc3Q6IHN0cmluZywgb3B0cz86IEJhc2ljSEdXT3B0aW9ucyk6IFByb21pc2U8bnVtYmVyPjtcXG4gXFxuICAgLyoqXFxuICAgICogUHJlZGljdCB0aGUgZWZmZWN0IG9mIHdlYWtlbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBzZWN1cml0eSBkZWNyZWFzZSB0aGF0IHdvdWxkIG9jY3VyIGlmIGEgd2Vha2VuIHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEBwYXJhbSBjb3JlcyAtIE9wdGlvbmFsLiBUaGUgbnVtYmVyIG9mIGNvcmVzIG9mIHRoZSBzZXJ2ZXIgdGhhdCB3b3VsZCBydW4gd2Vha2VuLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBkZWNyZWFzZS5cXG4gICAgKi9cXG4gICB3ZWFrZW5BbmFseXplKHRocmVhZHM6IG51bWJlciwgY29yZXM/OiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFByZWRpY3QgdGhlIGVmZmVjdCBvZiBoYWNrLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgbnVtYmVyIG9mIHNjcmlwdCB0aHJlYWRzIHlvdSBuZWVkIHdoZW4gcnVubmluZyB0aGUgaGFjayBjb21tYW5kXFxuICAgICogdG8gc3RlYWwgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgbW9uZXkgZnJvbSB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBJZiBoYWNrQW1vdW50IGlzIGxlc3MgdGhhbiB6ZXJvIG9yIGdyZWF0ZXIgdGhhbiB0aGUgYW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc2VydmVyLFxcbiAgICAqIHRoZW4gdGhpcyBmdW5jdGlvbiByZXR1cm5zIC0xLlxcbiAgICAqXFxuICAgICogV2FybmluZzogVGhlIHZhbHVlIHJldHVybmVkIGJ5IHRoaXMgZnVuY3Rpb24gaXNu4oCZdCBuZWNlc3NhcmlseSBhIHdob2xlIG51bWJlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBsZXTigJlzIHNheSB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgaGFzICQxMG0gYW5kIHlvdSBydW46XFxuICAgICogaGFja0FuYWx5emVUaHJlYWRzKFxcXCJmb29kbnN0dWZmXFxcIiwgMWU2KTtcXG4gICAgKiAvL0lmIHRoaXMgZnVuY3Rpb24gcmV0dXJucyA1MCwgdGhpcyBtZWFucyB0aGF0IGlmIHlvdXIgbmV4dCBoYWNrIGNhbGwgaXMgcnVuIG9uIGEgc2NyaXB0IHdpdGggNTAgdGhyZWFkcywgaXQgd2lsbCBzdGVhbCAkMW0gZnJvbSB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byBhbmFseXplLlxcbiAgICAqIEBwYXJhbSBoYWNrQW1vdW50IC0gQW1vdW50IG9mIG1vbmV5IHlvdSB3YW50IHRvIGhhY2sgZnJvbSB0aGUgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgdGhyZWFkcyBuZWVkZWQgdG8gaGFjayB0aGUgc2VydmVyIGZvciBoYWNrQW1vdW50IG1vbmV5LlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplVGhyZWFkcyhob3N0OiBzdHJpbmcsIGhhY2tBbW91bnQ6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBwYXJ0IG9mIG1vbmV5IHN0b2xlbiB3aXRoIGEgc2luZ2xlIHRocmVhZC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBwYXJ0IG9mIHRoZSBzcGVjaWZpZWQgc2VydmVy4oCZcyBtb25leSB5b3Ugd2lsbCBzdGVhbCB3aXRoIGEgc2luZ2xlIHRocmVhZCBoYWNrLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBhc3N1bWUgdGhlIGZvbGxvd2luZyByZXR1cm5zIDAuMDE6XFxuICAgICogdmFyIGhhY2tBbW91bnQgPSBoYWNrQW5hbHl6ZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIC8vVGhpcyBtZWFucyB0aGF0IGlmIGhhY2sgdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHVzaW5nIGEgc2luZ2xlIHRocmVhZCwgdGhlbiB5b3Ugd2lsbCBzdGVhbCAxJSwgb3IgMC4wMSBvZiBpdHMgdG90YWwgbW9uZXkuIElmIHlvdSBoYWNrIHVzaW5nIE4gdGhyZWFkcywgdGhlbiB5b3Ugd2lsbCBzdGVhbCBOKjAuMDEgdGltZXMgaXRzIHRvdGFsIG1vbmV5LlxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy9Gb3IgZXhhbXBsZSwgYXNzdW1lIHRoZSBmb2xsb3dpbmcgcmV0dXJucyAwLjAxOlxcbiAgICAqIGNvbnN0IGhhY2tBbW91bnQgPSBucy5oYWNrQW5hbHl6ZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIC8vVGhpcyBtZWFucyB0aGF0IGlmIGhhY2sgdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHVzaW5nIGEgc2luZ2xlIHRocmVhZCwgdGhlbiB5b3Ugd2lsbCBzdGVhbCAxJSwgb3IgMC4wMSBvZiBpdHMgdG90YWwgbW9uZXkuIElmIHlvdSBoYWNrIHVzaW5nIE4gdGhyZWFkcywgdGhlbiB5b3Ugd2lsbCBzdGVhbCBOKjAuMDEgdGltZXMgaXRzIHRvdGFsIG1vbmV5LlxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgVGhlIHBhcnQgb2YgbW9uZXkgeW91IHdpbGwgc3RlYWwgZnJvbSB0aGUgdGFyZ2V0IHNlcnZlciB3aXRoIGEgc2luZ2xlIHRocmVhZCBoYWNrLlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBzZWN1cml0eSBpbmNyZWFzZSBmb3IgYSBudW1iZXIgb2YgdGhyZWFkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGluY3JlYXNlIHRoYXQgd291bGQgb2NjdXIgaWYgYSBoYWNrIHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBpbmNyZWFzZS5cXG4gICAgKi9cXG4gICBoYWNrQW5hbHl6ZVNlY3VyaXR5KHRocmVhZHM6IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjaGFuY2Ugb2Ygc3VjY2Vzc2Z1bGx5IGhhY2tpbmcgYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgY2hhbmNlIHlvdSBoYXZlIG9mIHN1Y2Nlc3NmdWxseSBoYWNraW5nIHRoZSBzcGVjaWZpZWQgc2VydmVyLlxcbiAgICAqXFxuICAgICogVGhpcyByZXR1cm5lZCB2YWx1ZSBpcyBpbiBkZWNpbWFsIGZvcm0sIG5vdCBwZXJjZW50YWdlLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgY2hhbmNlIHlvdSBoYXZlIG9mIHN1Y2Nlc3NmdWxseSBoYWNraW5nIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGhhY2tBbmFseXplQ2hhbmNlKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgZ3JvdyB0aHJlYWQgbmVlZGVkIHRvIGdyb3cgYSBzZXJ2ZXIgYnkgYSBjZXJ0YWluIG11bHRpcGxpZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSBudW1iZXIgb2Yg4oCcZ3Jvd3Roc+KAnSBuZWVkZWQgaW4gb3JkZXIgdG8gaW5jcmVhc2VcXG4gICAgKiB0aGUgYW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlciBieSB0aGUgc3BlY2lmaWVkIGFtb3VudC5cXG4gICAgKiBUaGUgc3BlY2lmaWVkIGFtb3VudCBpcyBtdWx0aXBsaWNhdGl2ZSBhbmQgaXMgaW4gZGVjaW1hbCBmb3JtLCBub3QgcGVyY2VudGFnZS5cXG4gICAgKlxcbiAgICAqIFdhcm5pbmc6IFRoZSB2YWx1ZSByZXR1cm5lZCBieSB0aGlzIGZ1bmN0aW9uIGlzbuKAmXQgbmVjZXNzYXJpbHkgYSB3aG9sZSBudW1iZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vRm9yIGV4YW1wbGUsIGlmIHlvdSB3YW50IHRvIGRldGVybWluZSBob3cgbWFueSBncm93IGNhbGxzIHlvdSBuZWVkIHRvIGRvdWJsZSB0aGUgYW1vdW50IG9mIG1vbmV5IG9uIGZvb2Ruc3R1ZmYsIHlvdSB3b3VsZCB1c2U6XFxuICAgICogdmFyIGdyb3dUaW1lcyA9IGdyb3d0aEFuYWx5emUoXFxcImZvb2Ruc3R1ZmZcXFwiLCAyKTtcXG4gICAgKiAvL0lmIHRoaXMgcmV0dXJucyAxMDAsIHRoZW4gdGhpcyBtZWFucyB5b3UgbmVlZCB0byBjYWxsIGdyb3cgMTAwIHRpbWVzIGluIG9yZGVyIHRvIGRvdWJsZSB0aGUgbW9uZXkgKG9yIG9uY2Ugd2l0aCAxMDAgdGhyZWFkcykuXFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0ZvciBleGFtcGxlLCBpZiB5b3Ugd2FudCB0byBkZXRlcm1pbmUgaG93IG1hbnkgZ3JvdyBjYWxscyB5b3UgbmVlZCB0byBkb3VibGUgdGhlIGFtb3VudCBvZiBtb25leSBvbiBmb29kbnN0dWZmLCB5b3Ugd291bGQgdXNlOlxcbiAgICAqIGNvbnN0IGdyb3dUaW1lcyA9IG5zLmdyb3d0aEFuYWx5emUoXFxcImZvb2Ruc3R1ZmZcXFwiLCAyKTtcXG4gICAgKiAvL0lmIHRoaXMgcmV0dXJucyAxMDAsIHRoZW4gdGhpcyBtZWFucyB5b3UgbmVlZCB0byBjYWxsIGdyb3cgMTAwIHRpbWVzIGluIG9yZGVyIHRvIGRvdWJsZSB0aGUgbW9uZXkgKG9yIG9uY2Ugd2l0aCAxMDAgdGhyZWFkcykuXFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gZ3Jvd3RoQW1vdW50IC0gTXVsdGlwbGljYXRpdmUgZmFjdG9yIGJ5IHdoaWNoIHRoZSBzZXJ2ZXIgaXMgZ3Jvd24uIERlY2ltYWwgZm9ybS4uXFxuICAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiBncm93IGNhbGxzIG5lZWRlZCB0byBncm93IHRoZSBzcGVjaWZpZWQgc2VydmVyIGJ5IHRoZSBzcGVjaWZpZWQgYW1vdW50XFxuICAgICovXFxuICAgZ3Jvd3RoQW5hbHl6ZShob3N0OiBzdHJpbmcsIGdyb3d0aEFtb3VudDogbnVtYmVyLCBjb3Jlcz86IG51bWJlcik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQ2FsY3VsYXRlIHRoZSBzZWN1cml0eSBpbmNyZWFzZSBmb3IgYSBudW1iZXIgb2YgdGhyZWFkLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGluY3JlYXNlIHRoYXQgd291bGQgb2NjdXIgaWYgYSBncm93IHdpdGggdGhpcyBtYW55IHRocmVhZHMgaGFwcGVuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gdGhyZWFkcyAtIEFtb3VudCBvZiB0aHJlYWRzIHRoYXQgd2lsbCBiZSB1c2VkLlxcbiAgICAqIEByZXR1cm5zIFRoZSBzZWN1cml0eSBpbmNyZWFzZS5cXG4gICAgKi9cXG4gICBncm93dGhBbmFseXplU2VjdXJpdHkodGhyZWFkczogbnVtYmVyKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBTdXNwZW5kcyB0aGUgc2NyaXB0IGZvciBuIG1pbGxpc2Vjb25kcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWlsbGlzIC0gTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBzbGVlcC5cXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vIFRoaXMgd2lsbCBjb3VudCBmcm9tIDEgdG8gMTAgaW4geW91ciB0ZXJtaW5hbCwgd2l0aCBvbmUgbnVtYmVyIGV2ZXJ5IDUgc2Vjb25kc1xcbiAgICAqIGZvciAodmFyIGk9MDsgaTwxMDsgaSsrKSB7XFxuICAgICogICB0cHJpbnQoaSArIDEpO1xcbiAgICAqICAgc2xlZXAoNTAwMCk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy8gVGhpcyB3aWxsIGNvdW50IGZyb20gMSB0byAxMCBpbiB5b3VyIHRlcm1pbmFsLCB3aXRoIG9uZSBudW1iZXIgZXZlcnkgNSBzZWNvbmRzXFxuICAgICogZm9yICh2YXIgaT0wOyBpPDEwOyBpKyspIHtcXG4gICAgKiAgIG5zLnRwcmludChpICsgMSk7XFxuICAgICogICBhd2FpdCBucy5zbGVlcCg1MDAwKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnNcXG4gICAgKi9cXG4gICBzbGVlcChtaWxsaXM6IG51bWJlcik6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN1c3BlbmRzIHRoZSBzY3JpcHQgZm9yIG4gbWlsbGlzZWNvbmRzLiBEb2Vzbid0IGJsb2NrIHdpdGggY29uY3VycmVudCBjYWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBAcGFyYW0gbWlsbGlzIC0gTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBzbGVlcC5cXG4gICAgKiBAcmV0dXJuc1xcbiAgICAqL1xcbiAgIGFzbGVlcChtaWxsaXM6IG51bWJlcik6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFByaW50cyBvbmUgb3IgbW92ZSB2YWx1ZXMgb3IgdmFyaWFibGVzIHRvIHRoZSBzY3JpcHTigJlzIGxvZ3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIGFyZ3MgLSBWYWx1ZShzKSB0byBiZSBwcmludGVkLlxcbiAgICAqL1xcbiAgIHByaW50KC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUHJpbnRzIG9uZSBvciBtb3JlIHZhbHVlcyBvciB2YXJpYWJsZXMgdG8gdGhlIFRlcm1pbmFsLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gVmFsdWUocykgdG8gYmUgcHJpbnRlZC5cXG4gICAgKi9cXG4gICB0cHJpbnQoLi4uYXJnczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBQcmludHMgYSByYXcgdmFsdWUgb3IgYSB2YXJpYWJsZSB0byB0aGUgVGVybWluYWwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZvcm1hdCAtIGZvcm1hdCBvZiB0aGUgbWVzc2FnZVxcbiAgICAqIEBwYXJhbSBtc2cgLSBWYWx1ZSB0byBiZSBwcmludGVkLlxcbiAgICAqL1xcbiAgIHRwcmludGYoZm9ybWF0OiBzdHJpbmcsIC4uLnZhbHVlczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBDbGVhcnMgdGhlIHNjcmlwdOKAmXMgbG9ncy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICovXFxuICAgY2xlYXJMb2coKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRGlzYWJsZXMgbG9nZ2luZyBmb3IgdGhlIGdpdmVuIGZ1bmN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIExvZ2dpbmcgY2FuIGJlIGRpc2FibGVkIGZvciBhbGwgZnVuY3Rpb25zIGJ5IHBhc3NpbmcgYEFMTGAgYXMgdGhlIGFyZ3VtZW50LlxcbiAgICAqXFxuICAgICogTm90ZSB0aGF0IHRoaXMgZG9lcyBub3QgY29tcGxldGVseSByZW1vdmUgYWxsIGxvZ2dpbmcgZnVuY3Rpb25hbGl0eS5cXG4gICAgKiBUaGlzIG9ubHkgc3RvcHMgYSBmdW5jdGlvbiBmcm9tIGxvZ2dpbmcgd2hlbiB0aGUgZnVuY3Rpb24gaXMgc3VjY2Vzc2Z1bC5cXG4gICAgKiBJZiB0aGUgZnVuY3Rpb24gZmFpbHMsIGl0IHdpbGwgc3RpbGwgbG9nIHRoZSByZWFzb24gZm9yIGZhaWx1cmUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gZm4gLSBOYW1lIG9mIGZ1bmN0aW9uIGZvciB3aGljaCB0byBkaXNhYmxlIGxvZ2dpbmcuXFxuICAgICovXFxuICAgZGlzYWJsZUxvZyhmbjogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRW5hYmxlIGxvZ2dpbmcgZm9yIGEgY2VydGFpbiBmdW5jdGlvbi5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZS1lbmFibGVzIGxvZ2dpbmcgZm9yIHRoZSBnaXZlbiBmdW5jdGlvbi4gSWYgYEFMTGAgaXMgcGFzc2VkIGludG8gdGhpc1xcbiAgICAqIGZ1bmN0aW9uIGFzIGFuIGFyZ3VtZW50LCB0aGVuIGl0IHdpbGwgcmV2ZXJ0IHRoZSBlZmZlY3RzIG9mIGRpc2FibGVMb2coYEFMTGApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGZuIC0gTmFtZSBvZiBmdW5jdGlvbiBmb3Igd2hpY2ggdG8gZW5hYmxlIGxvZ2dpbmcuXFxuICAgICovXFxuICAgZW5hYmxlTG9nKGZuOiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVja3MgdGhlIHN0YXR1cyBvZiB0aGUgbG9nZ2luZyBmb3IgdGhlIGdpdmVuIGZ1bmN0aW9uLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmbiAtIE5hbWUgb2YgZnVuY3Rpb24gdG8gY2hlY2suXFxuICAgICogQHJldHVybnMgUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCBsb2dnaW5nIGlzIGVuYWJsZWQgZm9yIHRoYXQgZnVuY3Rpb24gKG9yIGBBTExgKVxcbiAgICAqL1xcbiAgIGlzTG9nRW5hYmxlZChmbjogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGFsbCB0aGUgbG9ncyBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgc2NyaXB04oCZcyBsb2dzLiBUaGUgbG9ncyBhcmUgcmV0dXJuZWQgYXMgYW4gYXJyYXksIHdoZXJlIGVhY2ggbGluZSBpcyBhbiBlbGVtZW50IGluIHRoZSBhcnJheS5cXG4gICAgKiBUaGUgbW9zdCByZWNlbnRseSBsb2dnZWQgbGluZSBpcyBhdCB0aGUgZW5kIG9mIHRoZSBhcnJheS5cXG4gICAgKiBOb3RlIHRoYXQgdGhlcmUgaXMgYSBtYXhpbXVtIG51bWJlciBvZiBsaW5lcyB0aGF0IGEgc2NyaXB0IHN0b3JlcyBpbiBpdHMgbG9ncy4gVGhpcyBpcyBjb25maWd1cmFibGUgaW4gdGhlIGdhbWXigJlzIG9wdGlvbnMuXFxuICAgICogSWYgdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cywgaXQgd2lsbCByZXR1cm4gdGhlIGN1cnJlbnQgc2NyaXB04oCZcyBsb2dzLlxcbiAgICAqXFxuICAgICogT3RoZXJ3aXNlLCB0aGUgZm4sIGhvc3RuYW1lL2lwLCBhbmQgYXJnc+KApiBhcmd1bWVudHMgY2FuIGJlIHVzZWQgdG8gZ2V0IHRoZSBsb2dzIGZyb20gYW5vdGhlciBzY3JpcHQuXFxuICAgICogUmVtZW1iZXIgdGhhdCBzY3JpcHRzIGFyZSB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggdGhlaXIgbmFtZXMgYW5kIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9HZXQgbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiBnZXRTY3JpcHRMb2dzKFxcXCJmb28uc2NyaXB0XFxcIik7XFxuICAgICpcXG4gICAgKiAvL09wZW4gbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiBnZXRTY3JpcHRMb2dzKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggdGhlIGFyZ3VtZW50cyBbMSwgXFxcInRlc3RcXFwiXVxcbiAgICAqIGdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0dldCBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLmdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLmdldFNjcmlwdExvZ3MoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9PcGVuIGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCB0aGUgYXJndW1lbnRzIFsxLCBcXFwidGVzdFxcXCJdXFxuICAgICogbnMuZ2V0U2NyaXB0TG9ncyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIiwgMSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZm4gLSBPcHRpb25hbC4gRmlsZW5hbWUgb2Ygc2NyaXB0IHRvIGdldCBsb2dzIGZyb20uXFxuICAgICogQHBhcmFtIGhvc3QgLSBPcHRpb25hbC4gSG9zdG5hbWUgb2YgdGhlIHNlcnZlciB0aGF0IHRoZSBzY3JpcHQgaXMgb24uXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gaWRlbnRpZnkgd2hpY2ggc2NyaXB0cyB0byBnZXQgbG9ncyBmb3IuXFxuICAgICogQHJldHVybnMgUmV0dXJucyBhbiBzdHJpbmcgYXJyYXksIHdoZXJlIGVhY2ggbGluZSBpcyBhbiBlbGVtZW50IGluIHRoZSBhcnJheS4gVGhlIG1vc3QgcmVjZW50bHkgbG9nZ2VkIGxpbmUgaXMgYXQgdGhlIGVuZCBvZiB0aGUgYXJyYXkuXFxuICAgICovXFxuICAgZ2V0U2NyaXB0TG9ncyhmbj86IHN0cmluZywgaG9zdD86IHN0cmluZywgLi4uYXJnczogYW55W10pOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogT3BlbiB0aGUgdGFpbCB3aW5kb3cgb2YgYSBzY3JpcHQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogT3BlbnMgYSBzY3JpcHTigJlzIGxvZ3MuIFRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHRoZSB0YWlsIFRlcm1pbmFsIGNvbW1hbmQuXFxuICAgICpcXG4gICAgKiBJZiB0aGUgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggbm8gYXJndW1lbnRzLCBpdCB3aWxsIG9wZW4gdGhlIGN1cnJlbnQgc2NyaXB04oCZcyBsb2dzLlxcbiAgICAqXFxuICAgICogT3RoZXJ3aXNlLCB0aGUgZm4sIGhvc3RuYW1lL2lwLCBhbmQgYXJnc+KApiBhcmd1bWVudHMgY2FuIGJlIHVzZWQgdG8gZ2V0IHRoZSBsb2dzIGZyb20gYW5vdGhlciBzY3JpcHQuXFxuICAgICogUmVtZW1iZXIgdGhhdCBzY3JpcHRzIGFyZSB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggdGhlaXIgbmFtZXMgYW5kIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9PcGVuIGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBjdXJyZW50IHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCBubyBhcmdzXFxuICAgICogdGFpbChcXFwiZm9vLnNjcmlwdFxcXCIpO1xcbiAgICAqXFxuICAgICogLy9HZXQgbG9ncyBmcm9tIGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHRoYXQgd2FzIHJ1biB3aXRoIG5vIGFyZ3NcXG4gICAgKiB0YWlsKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vR2V0IGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCB0aGUgYXJndW1lbnRzIFsxLCBcXFwidGVzdFxcXCJdXFxuICAgICogdGFpbChcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIiwgMSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vT3BlbiBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggbm8gYXJnc1xcbiAgICAqIG5zLnRhaWwoXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vR2V0IGxvZ3MgZnJvbSBmb28uc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciB0aGF0IHdhcyBydW4gd2l0aCBubyBhcmdzXFxuICAgICogbnMudGFpbChcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL0dldCBsb2dzIGZyb20gZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcnVuIHdpdGggdGhlIGFyZ3VtZW50cyBbMSwgXFxcInRlc3RcXFwiXVxcbiAgICAqIG5zLnRhaWwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGZuIC0gT3B0aW9uYWwuIEZpbGVuYW1lIG9yIFBJRCBvZiB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC4gSWYgb21pdHRlZCwgdGhlIGN1cnJlbnQgc2NyaXB0IGlzIHRhaWxlZC5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIE9wdGlvbmFsLiBIb3N0bmFtZSBvZiB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC4gRGVmYXVsdHMgdG8gdGhlIHNlcnZlciB0aGlzIHNjcmlwdCBpcyBydW5uaW5nIG9uLiBJZiBhcmdzIGFyZSBzcGVjaWZpZWQsIHRoaXMgaXMgbm90IG9wdGlvbmFsLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIGZvciB0aGUgc2NyaXB0IGJlaW5nIHRhaWxlZC5cXG4gICAgKi9cXG4gICB0YWlsKGZuPzogRmlsZW5hbWVPclBJRCwgaG9zdD86IHN0cmluZywgLi4uYXJnczogYW55W10pOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGxpc3Qgb2Ygc2VydmVycyBjb25uZWN0ZWQgdG8gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4yIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIGhvc3RuYW1lcyBvZiBhbGwgc2VydmVycyB0aGF0IGFyZSBvbmVcXG4gICAgKiBub2RlIHdheSBmcm9tIHRoZSBzcGVjaWZpZWQgdGFyZ2V0IHNlcnZlci4gVGhlIGhvc3RuYW1lcyBpbiB0aGUgcmV0dXJuZWRcXG4gICAgKiBhcnJheSBhcmUgc3RyaW5ncy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gT3B0aW9uYWwsIEhvc3RuYW1lIG9mIHRoZSBzZXJ2ZXIgdG8gc2NhbiwgZGVmYXVsdCB0byBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIGFuIHN0cmluZyBvZiBob3N0bmFtZXMuXFxuICAgICovXFxuICAgc2Nhbihob3N0Pzogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1bnMgTlVLRS5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVubmluZyBOVUtFLmV4ZSBvbiBhIHRhcmdldCBzZXJ2ZXIgZ2l2ZXMgeW91IHJvb3QgYWNjZXNzIHdoaWNoIG1lYW5zIHlvdSBjYW4gZXhlY3V0ZXMgc2NyaXB0cyBvbiBzYWlkIHNlcnZlci4gTlVLRS5leGUgbXVzdCBleGlzdCBvbiB5b3VyIGhvbWUgY29tcHV0ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIG51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLm51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3RuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIG51a2UoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUnVucyBCcnV0ZVNTSC5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgQnJ1dGVTU0guZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIEJydXRlU1NILmV4ZSBtdXN0IGV4aXN0IG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogYnJ1dGVzc2goXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmJydXRlc3NoKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBicnV0ZXNzaChob3N0OiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBSdW5zIEZUUENyYWNrLmV4ZSBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSdW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSBvbiB0aGUgdGFyZ2V0IHNlcnZlci4gRlRQQ3JhY2suZXhlIG11c3QgZXhpc3Qgb24geW91ciBob21lIGNvbXB1dGVyLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiBmdHBjcmFjayhcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbnMuZnRwY3JhY2soXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3RuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGZ0cGNyYWNrKGhvc3Q6IHN0cmluZyk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJ1bnMgcmVsYXlTTVRQLmV4ZSBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSdW5zIHRoZSByZWxheVNNVFAuZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIHJlbGF5U01UUC5leGUgbXVzdCBleGlzdCBvbiB5b3VyIGhvbWUgY29tcHV0ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHJlbGF5c210cChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogbnMucmVsYXlzbXRwKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICByZWxheXNtdHAoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogUnVucyBIVFRQV29ybS5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgSFRUUFdvcm0uZXhlIHByb2dyYW0gb24gdGhlIHRhcmdldCBzZXJ2ZXIuIEhUVFBXb3JtLmV4ZSBtdXN0IGV4aXN0IG9uIHlvdXIgaG9tZSBjb21wdXRlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaHR0cHdvcm0oXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmh0dHB3b3JtKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBodHRwd29ybShob3N0OiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBSdW5zIFNRTEluamVjdC5leGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUnVucyB0aGUgU1FMSW5qZWN0LmV4ZSBwcm9ncmFtIG9uIHRoZSB0YXJnZXQgc2VydmVyLiBTUUxJbmplY3QuZXhlIG11c3QgZXhpc3Qgb24geW91ciBob21lIGNvbXB1dGVyLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiBzcWxpbmplY3QoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLnNxbGluamVjdChcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0bmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBzcWxpbmplY3QoaG9zdDogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogU3RhcnQgYW5vdGhlciBzY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDEgR0JcXG4gICAgKlxcbiAgICAqIFJ1biBhIHNjcmlwdCBhcyBhIHNlcGFyYXRlIHByb2Nlc3MuIFRoaXMgZnVuY3Rpb24gY2FuIG9ubHkgYmUgdXNlZCB0byBydW4gc2NyaXB0cyBsb2NhdGVkIG9uIHRoZVxcbiAgICAqIGN1cnJlbnQgc2VydmVyICh0aGUgc2VydmVyIHJ1bm5pbmcgdGhlIHNjcmlwdCB0aGF0IGNhbGxzIHRoaXMgZnVuY3Rpb24pLiBSZXF1aXJlcyBhIHNpZ25pZmljYW50XFxuICAgICogYW1vdW50IG9mIFJBTSB0byBydW4gdGhpcyBjb21tYW5kLlxcbiAgICAqXFxuICAgICogSWYgdGhlIHNjcmlwdCB3YXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQsIHRoZW4gdGhpcyBmdW5jdGlvbnMgcmV0dXJucyB0aGUgUElEIG9mIHRoYXQgc2NyaXB0LlxcbiAgICAqIE90aGVyd2lzZSwgaXQgcmV0dXJucyAwLlxcbiAgICAqXFxuICAgICogUElEIHN0YW5kcyBmb3IgUHJvY2VzcyBJRC4gVGhlIFBJRCBpcyBhIHVuaXF1ZSBpZGVudGlmaWVyIGZvciBlYWNoIHNjcmlwdC5cXG4gICAgKiBUaGUgUElEIHdpbGwgYWx3YXlzIGJlIGEgcG9zaXRpdmUgaW50ZWdlci5cXG4gICAgKlxcbiAgICAqIFJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aXRoIGEgbnVtVGhyZWFkcyBhcmd1bWVudCBvZiAwIHdpbGwgcmV0dXJuIDAgd2l0aG91dCBydW5uaW5nIHRoZSBzY3JpcHQuXFxuICAgICogSG93ZXZlciwgcnVubmluZyB0aGlzIGZ1bmN0aW9uIHdpdGggYSBuZWdhdGl2ZSBudW1UaHJlYWRzIGFyZ3VtZW50IHdpbGwgY2F1c2UgYSBydW50aW1lIGVycm9yLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBydW4gY29tbWFuZCBpcyB0byBjYWxsIGl0IHdpdGgganVzdCB0aGUgc2NyaXB0IG5hbWUuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCB3aXRoIG5vIGFyZ3VtZW50czpcXG4gICAgKiBydW4oXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgcnVuIOKAmGZvby5zY3JpcHTigJkgYnV0IHdpdGggNSB0aHJlYWRzIGluc3RlYWQgb2Ygc2luZ2xlLXRocmVhZGVkOlxcbiAgICAqIHJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDUpO1xcbiAgICAqXFxuICAgICogLy9UaGlzIG5leHQgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCwgYW5kIHdpbGwgcGFzcyB0aGUgc3RyaW5nIOKAmGZvb2Ruc3R1ZmbigJkgaW50byB0aGUgc2NyaXB0IGFzIGFuIGFyZ3VtZW50OlxcbiAgICAqIHJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDEsICdmb29kbnN0dWZmJyk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBydW4gY29tbWFuZCBpcyB0byBjYWxsIGl0IHdpdGgganVzdCB0aGUgc2NyaXB0IG5hbWUuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCB3aXRoIG5vIGFyZ3VtZW50czpcXG4gICAgKiBucy5ydW4oXFxcImZvby5zY3JpcHRcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgcnVuIOKAmGZvby5zY3JpcHTigJkgYnV0IHdpdGggNSB0aHJlYWRzIGluc3RlYWQgb2Ygc2luZ2xlLXRocmVhZGVkOlxcbiAgICAqIG5zLnJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDUpO1xcbiAgICAqXFxuICAgICogLy9UaGlzIG5leHQgZXhhbXBsZSB3aWxsIHJ1biDigJhmb28uc2NyaXB04oCZIHNpbmdsZS10aHJlYWRlZCwgYW5kIHdpbGwgcGFzcyB0aGUgc3RyaW5nIOKAmGZvb2Ruc3R1ZmbigJkgaW50byB0aGUgc2NyaXB0IGFzIGFuIGFyZ3VtZW50OlxcbiAgICAqIG5zLnJ1bihcXFwiZm9vLnNjcmlwdFxcXCIsIDEsICdmb29kbnN0dWZmJyk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBydW4uXFxuICAgICogQHBhcmFtIG51bVRocmVhZHMgLSBPcHRpb25hbCB0aHJlYWQgY291bnQgZm9yIG5ldyBzY3JpcHQuIFNldCB0byAxIGJ5IGRlZmF1bHQuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBZGRpdGlvbmFsIGFyZ3VtZW50cyB0byBwYXNzIGludG8gdGhlIG5ldyBzY3JpcHQgdGhhdCBpcyBiZWluZyBydW4uIE5vdGUgdGhhdCBpZiBhbnkgYXJndW1lbnRzIGFyZSBiZWluZyBwYXNzZWQgaW50byB0aGUgbmV3IHNjcmlwdCwgdGhlbiB0aGUgc2Vjb25kIGFyZ3VtZW50IG51bVRocmVhZHMgbXVzdCBiZSBmaWxsZWQgaW4gd2l0aCBhIHZhbHVlLlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgdGhlIFBJRCBvZiBhIHN1Y2Nlc3NmdWxseSBzdGFydGVkIHNjcmlwdCwgYW5kIDAgb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHJ1bihzY3JpcHQ6IHN0cmluZywgbnVtVGhyZWFkcz86IG51bWJlciwgLi4uYXJnczogQXJyYXk8c3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbj4pOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFN0YXJ0IGFub3RoZXIgc2NyaXB0IG9uIGFueSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMS4zIEdCXFxuICAgICpcXG4gICAgKiBSdW4gYSBzY3JpcHQgYXMgYSBzZXBhcmF0ZSBwcm9jZXNzIG9uIGEgc3BlY2lmaWVkIHNlcnZlci4gVGhpcyBpcyBzaW1pbGFyIHRvIHRoZSBydW4gZnVuY3Rpb25cXG4gICAgKiBleGNlcHQgdGhhdCBpdCBjYW4gYmUgdXNlZCB0byBydW4gYSBzY3JpcHQgb24gYW55IHNlcnZlciwgaW5zdGVhZCBvZiBqdXN0IHRoZSBjdXJyZW50IHNlcnZlci5cXG4gICAgKlxcbiAgICAqIElmIHRoZSBzY3JpcHQgd2FzIHN1Y2Nlc3NmdWxseSBzdGFydGVkLCB0aGVuIHRoaXMgZnVuY3Rpb25zIHJldHVybnMgdGhlIFBJRCBvZiB0aGF0IHNjcmlwdC5cXG4gICAgKiBPdGhlcndpc2UsIGl0IHJldHVybnMgMC5cXG4gICAgKlxcbiAgICAqIFBJRCBzdGFuZHMgZm9yIFByb2Nlc3MgSUQuIFRoZSBQSUQgaXMgYSB1bmlxdWUgaWRlbnRpZmllciBmb3IgZWFjaCBzY3JpcHQuXFxuICAgICogVGhlIFBJRCB3aWxsIGFsd2F5cyBiZSBhIHBvc2l0aXZlIGludGVnZXIuXFxuICAgICpcXG4gICAgKiBSdW5uaW5nIHRoaXMgZnVuY3Rpb24gd2l0aCBhIG51bVRocmVhZHMgYXJndW1lbnQgb2YgMCB3aWxsIHJldHVybiAwIHdpdGhvdXQgcnVubmluZyB0aGUgc2NyaXB0LlxcbiAgICAqIEhvd2V2ZXIsIHJ1bm5pbmcgdGhpcyBmdW5jdGlvbiB3aXRoIGEgbmVnYXRpdmUgbnVtVGhyZWFkcyBhcmd1bWVudCB3aWxsIGNhdXNlIGEgcnVudGltZSBlcnJvci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9UaGUgc2ltcGxlc3Qgd2F5IHRvIHVzZSB0aGUgZXhlYyBjb21tYW5kIGlzIHRvIGNhbGwgaXQgd2l0aCBqdXN0IHRoZSBzY3JpcHQgbmFtZSBhbmQgdGhlIHRhcmdldCBzZXJ2ZXIuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHRyeSB0byBydW4gZ2VuZXJpYy1oYWNrLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXI6XFxuICAgICogZXhlYyhcXFwiZ2VuZXJpYy1oYWNrLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmb2xsb3dpbmcgZXhhbXBsZSB3aWxsIHRyeSB0byBydW4gdGhlIHNjcmlwdCBnZW5lcmljLWhhY2suc2NyaXB0IG9uIHRoZSBqb2VzZ3VucyBzZXJ2ZXIgd2l0aCAxMCB0aHJlYWRzOlxcbiAgICAqIGV4ZWMoXFxcImdlbmVyaWMtaGFjay5zY3JpcHRcXFwiLCBcXFwiam9lc2d1bnNcXFwiLCAxMCk7XFxuICAgICpcXG4gICAgKiAvL1RoaXMgbGFzdCBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biB0aGUgc2NyaXB0IGZvby5zY3JpcHQgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyIHdpdGggNSB0aHJlYWRzLiBJdCB3aWxsIGFsc28gcGFzcyB0aGUgbnVtYmVyIDEgYW5kIHRoZSBzdHJpbmcg4oCcdGVzdOKAnSBpbiBhcyBhcmd1bWVudHMgdG8gdGhlIHNjcmlwdDpcXG4gICAgKiBleGVjKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiLCA1LCAxLCBcXFwidGVzdFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL1RoZSBzaW1wbGVzdCB3YXkgdG8gdXNlIHRoZSBleGVjIGNvbW1hbmQgaXMgdG8gY2FsbCBpdCB3aXRoIGp1c3QgdGhlIHNjcmlwdCBuYW1lIGFuZCB0aGUgdGFyZ2V0IHNlcnZlci4gVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biBnZW5lcmljLWhhY2suc2NyaXB0IG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlcjpcXG4gICAgKiBucy5leGVjKFxcXCJnZW5lcmljLWhhY2suc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIHJ1biB0aGUgc2NyaXB0IGdlbmVyaWMtaGFjay5zY3JpcHQgb24gdGhlIGpvZXNndW5zIHNlcnZlciB3aXRoIDEwIHRocmVhZHM6XFxuICAgICogbnMuZXhlYyhcXFwiZ2VuZXJpYy1oYWNrLnNjcmlwdFxcXCIsIFxcXCJqb2VzZ3Vuc1xcXCIsIDEwKTtcXG4gICAgKlxcbiAgICAqIC8vVGhpcyBsYXN0IGV4YW1wbGUgd2lsbCB0cnkgdG8gcnVuIHRoZSBzY3JpcHQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgd2l0aCA1IHRocmVhZHMuIEl0IHdpbGwgYWxzbyBwYXNzIHRoZSBudW1iZXIgMSBhbmQgdGhlIHN0cmluZyDigJx0ZXN04oCdIGluIGFzIGFyZ3VtZW50cyB0byB0aGUgc2NyaXB0OlxcbiAgICAqIG5zLmV4ZWMoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIsIDUsIDEsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBleGVjdXRlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIGB0YXJnZXQgc2VydmVyYCBvbiB3aGljaCB0byBleGVjdXRlIHRoZSBzY3JpcHQuXFxuICAgICogQHBhcmFtIG51bVRocmVhZHMgLSBPcHRpb25hbCB0aHJlYWQgY291bnQgZm9yIG5ldyBzY3JpcHQuIFNldCB0byAxIGJ5IGRlZmF1bHQuIFdpbGwgYmUgcm91bmRlZCB0byBuZWFyZXN0IGludGVnZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBZGRpdGlvbmFsIGFyZ3VtZW50cyB0byBwYXNzIGludG8gdGhlIG5ldyBzY3JpcHQgdGhhdCBpcyBiZWluZyBydW4uIE5vdGUgdGhhdCBpZiBhbnkgYXJndW1lbnRzIGFyZSBiZWluZyBwYXNzZWQgaW50byB0aGUgbmV3IHNjcmlwdCwgdGhlbiB0aGUgdGhpcmQgYXJndW1lbnQgbnVtVGhyZWFkcyBtdXN0IGJlIGZpbGxlZCBpbiB3aXRoIGEgdmFsdWUuXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgUElEIG9mIGEgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQgc2NyaXB0LCBhbmQgMCBvdGhlcndpc2UuXFxuICAgICovXFxuICAgZXhlYyhzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCBudW1UaHJlYWRzPzogbnVtYmVyLCAuLi5hcmdzOiBBcnJheTxzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuPik6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogVGVybWluYXRlIGN1cnJlbnQgc2NyaXB0IGFuZCBzdGFydCBhbm90aGVyIGluIDEwcy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICpcXG4gICAgKiBUZXJtaW5hdGVzIHRoZSBjdXJyZW50IHNjcmlwdCwgYW5kIHRoZW4gYWZ0ZXIgYSBkZWxheSBvZiBhYm91dCAxMCBzZWNvbmRzIGl0IHdpbGwgZXhlY3V0ZSB0aGVcXG4gICAgKiBuZXdseS1zcGVjaWZpZWQgc2NyaXB0LiBUaGUgcHVycG9zZSBvZiB0aGlzIGZ1bmN0aW9uIGlzIHRvIGV4ZWN1dGUgYSBuZXcgc2NyaXB0IHdpdGhvdXQgYmVpbmdcXG4gICAgKiBjb25zdHJhaW5lZCBieSB0aGUgUkFNIHVzYWdlIG9mIHRoZSBjdXJyZW50IG9uZS4gVGhpcyBmdW5jdGlvbiBjYW4gb25seSBiZSB1c2VkIHRvIHJ1biBzY3JpcHRzXFxuICAgICogb24gdGhlIGxvY2FsIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpbW1lZGlhdGVseSB0ZXJtaW5hdGVzIHRoZSBzY3JpcHQsIGl0IGRvZXMgbm90IGhhdmUgYSByZXR1cm4gdmFsdWUuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgZXhlY3V0ZSB0aGUgc2NyaXB0IOKAmGZvby5zY3JpcHTigJkgd2l0aCAxMCB0aHJlYWRzIGFuZCB0aGUgYXJndW1lbnRzIOKAmGZvb2Ruc3R1ZmbigJkgYW5kIDkwOlxcbiAgICAqIHNwYXduKCdmb28uc2NyaXB0JywgMTAsICdmb29kbnN0dWZmJywgOTApO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy9UaGUgZm9sbG93aW5nIGV4YW1wbGUgd2lsbCBleGVjdXRlIHRoZSBzY3JpcHQg4oCYZm9vLnNjcmlwdOKAmSB3aXRoIDEwIHRocmVhZHMgYW5kIHRoZSBhcmd1bWVudHMg4oCYZm9vZG5zdHVmZuKAmSBhbmQgOTA6XFxuICAgICogbnMuc3Bhd24oJ2Zvby5zY3JpcHQnLCAxMCwgJ2Zvb2Ruc3R1ZmYnLCA5MCk7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBleGVjdXRlLlxcbiAgICAqIEBwYXJhbSBudW1UaHJlYWRzIC0gTnVtYmVyIG9mIHRocmVhZHMgdG8gc3Bhd24gbmV3IHNjcmlwdCB3aXRoLiBXaWxsIGJlIHJvdW5kZWQgdG8gbmVhcmVzdCBpbnRlZ2VyLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQWRkaXRpb25hbCBhcmd1bWVudHMgdG8gcGFzcyBpbnRvIHRoZSBuZXcgc2NyaXB0IHRoYXQgaXMgYmVpbmcgcnVuLlxcbiAgICAqL1xcbiAgIHNwYXduKHNjcmlwdDogc3RyaW5nLCBudW1UaHJlYWRzPzogbnVtYmVyLCAuLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRlcm1pbmF0ZSBhbm90aGVyIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0JcXG4gICAgKlxcbiAgICAqIEtpbGxzIHRoZSBzY3JpcHQgb24gdGhlIHRhcmdldCBzZXJ2ZXIgc3BlY2lmaWVkIGJ5IHRoZSBzY3JpcHTigJlzIG5hbWUgYW5kIGFyZ3VtZW50cy5cXG4gICAgKiBSZW1lbWJlciB0aGF0IHNjcmlwdHMgYXJlIHVuaXF1ZWx5IGlkZW50aWZpZWQgYnkgYm90aCB0aGVpciBuYW1lIGFuZCBhcmd1bWVudHMuXFxuICAgICogRm9yIGV4YW1wbGUsIGlmIGBmb28uc2NyaXB0YCBpcyBydW4gd2l0aCB0aGUgYXJndW1lbnQgMSwgdGhlbiB0aGlzIGlzIG5vdCB0aGUgc2FtZSBhc1xcbiAgICAqIGBmb28uc2NyaXB0YCBydW4gd2l0aCB0aGUgYXJndW1lbnQgMiwgZXZlbiB0aG91Z2ggdGhleSBoYXZlIHRoZSBzYW1lIGNvZGUuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIGtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZm9sbG93aW5nIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIGtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBnZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyB3aWxsIHRyeSB0byBraWxsIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJhbiB3aXRoIHRoZSBhcmd1bWVudHMgMSBhbmQg4oCcZm9vZG5zdHVmZuKAnTpcXG4gICAgKiBraWxsKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSwgMSwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyBleGFtcGxlIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIG5zLmtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZm9sbG93aW5nIHdpbGwgdHJ5IHRvIGtpbGwgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCBvbiB0aGUgY3VycmVudCBzZXJ2ZXIgdGhhdCB3YXMgcmFuIHdpdGggbm8gYXJndW1lbnRzOlxcbiAgICAqIG5zLmtpbGwoXFxcImZvby5zY3JpcHRcXFwiLCBnZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZvbGxvd2luZyB3aWxsIHRyeSB0byBraWxsIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgb24gdGhlIGN1cnJlbnQgc2VydmVyIHRoYXQgd2FzIHJhbiB3aXRoIHRoZSBhcmd1bWVudHMgMSBhbmQg4oCcZm9vZG5zdHVmZuKAnTpcXG4gICAgKiBucy5raWxsKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSwgMSwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb3IgcGlkIG9mIHRoZSBzY3JpcHQgdG8ga2lsbFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBraWxsIHRoZSBzY3JpcHQuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gaWRlbnRpZnkgd2hpY2ggc2NyaXB0IHRvIGtpbGwuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgc2NyaXB0IGlzIHN1Y2Nlc3NmdWxseSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAga2lsbChzY3JpcHQ6IG51bWJlcik6IGJvb2xlYW47XFxuICAga2lsbChzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFRlcm1pbmF0ZSBhbGwgc2NyaXB0cyBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjUgR0JcXG4gICAgKlxcbiAgICAqIEtpbGxzIGFsbCBydW5uaW5nIHNjcmlwdHMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0cnVlXFxuICAgICogaWYgYW55IHNjcmlwdHMgd2VyZSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuIEluIG90aGVyIHdvcmRzLCBpdCB3aWxsIHJldHVyblxcbiAgICAqIHRydWUgaWYgdGhlcmUgYXJlIGFueSBzY3JpcHRzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogSWYgbm8gaG9zdCBpcyBkZWZpbmVkLCBpdCB3aWxsIGtpbGwgYWxsIHNjcmlwdHMsIHdoZXJlIHRoZSBzY3JpcHQgaXMgcnVubmluZy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSVAgb3IgaG9zdG5hbWUgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBraWxsIGFsbCBzY3JpcHRzLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgYW55IHNjcmlwdHMgd2VyZSBraWxsZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAga2lsbGFsbChob3N0Pzogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogVGVybWluYXRlcyB0aGUgY3VycmVudCBzY3JpcHQgaW1tZWRpYXRlbHkuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqL1xcbiAgIGV4aXQoKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ29weSBmaWxlIGJldHdlZW4gc2VydmVycy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjYgR0JcXG4gICAgKlxcbiAgICAqIENvcGllcyBhIHNjcmlwdCBvciBsaXRlcmF0dXJlICgubGl0KSBmaWxlKHMpIHRvIGFub3RoZXIgc2VydmVyLiBUaGUgZmlsZXMgYXJndW1lbnQgY2FuIGJlIGVpdGhlciBhIHN0cmluZ1xcbiAgICAqIHNwZWNpZnlpbmcgYSBzaW5nbGUgZmlsZSB0byBjb3B5LCBvciBhbiBhcnJheSBvZiBzdHJpbmdzIHNwZWNpZnlpbmcgbXVsdGlwbGUgZmlsZXMgdG8gY29weS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9Db3BpZXMgZm9vLmxpdCBmcm9tIHRoZSBoZWxpb3Mgc2VydmVyIHRvIHRoZSBob21lIGNvbXB1dGVyOlxcbiAgICAqIHNjcChcXFwiZm9vLmxpdFxcXCIsIFxcXCJoZWxpb3NcXFwiLCBcXFwiaG9tZVxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UcmllcyB0byBjb3B5IHRocmVlIGZpbGVzIGZyb20gcm90aG1hbi11bmkgdG8gaG9tZSBjb21wdXRlcjpcXG4gICAgKiBmaWxlcyA9IFtcXFwiZm9vMS5saXRcXFwiLCBcXFwiZm9vMi5zY3JpcHRcXFwiLCBcXFwiZm9vMy5zY3JpcHRcXFwiXTtcXG4gICAgKiBzY3AoZmlsZXMsIFxcXCJyb3RobWFuLXVuaVxcXCIsIFxcXCJob21lXFxcIik7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvL0NvcGllcyBmb28ubGl0IGZyb20gdGhlIGhlbGlvcyBzZXJ2ZXIgdG8gdGhlIGhvbWUgY29tcHV0ZXI6XFxuICAgICogYXdhaXQgbnMuc2NwKFxcXCJmb28ubGl0XFxcIiwgXFxcImhlbGlvc1xcXCIsIFxcXCJob21lXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RyaWVzIHRvIGNvcHkgdGhyZWUgZmlsZXMgZnJvbSByb3RobWFuLXVuaSB0byBob21lIGNvbXB1dGVyOlxcbiAgICAqIGZpbGVzID0gW1xcXCJmb28xLmxpdFxcXCIsIFxcXCJmb28yLnNjcmlwdFxcXCIsIFxcXCJmb28zLnNjcmlwdFxcXCJdO1xcbiAgICAqIGF3YWl0IG5zLnNjcChmaWxlcywgXFxcInJvdGhtYW4tdW5pXFxcIiwgXFxcImhvbWVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy9uczIsIGNvcGllcyBmaWxlcyBmcm9tIGhvbWUgdG8gYSB0YXJnZXQgc2VydmVyXFxuICAgICogY29uc3Qgc2VydmVyID0gbnMuYXJnc1swXTtcXG4gICAgKiBjb25zdCBmaWxlcyA9IFtcXFwiaGFjay5qc1xcXCIsXFxcIndlYWtlbi5qc1xcXCIsXFxcImdyb3cuanNcXFwiXTtcXG4gICAgKiBhd2FpdCBucy5zY3AoZmlsZXMsIFxcXCJob21lXFxcIiwgc2VydmVyKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZmlsZXMgLSBGaWxlbmFtZSBvciBhbiBhcnJheSBvZiBmaWxlbmFtZXMgb2Ygc2NyaXB0L2xpdGVyYXR1cmUgZmlsZXMgdG8gY29weS5cXG4gICAgKiBAcGFyYW0gc291cmNlIC0gSG9zdCBvZiB0aGUgc291cmNlIHNlcnZlciwgd2hpY2ggaXMgdGhlIHNlcnZlciBmcm9tIHdoaWNoIHRoZSBmaWxlIHdpbGwgYmUgY29waWVkLiBUaGlzIGFyZ3VtZW50IGlzIG9wdGlvbmFsIGFuZCBpZiBpdOKAmXMgb21pdHRlZCB0aGUgc291cmNlIHdpbGwgYmUgdGhlIGN1cnJlbnQgc2VydmVyLlxcbiAgICAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIEhvc3Qgb2YgdGhlIGRlc3RpbmF0aW9uIHNlcnZlciwgd2hpY2ggaXMgdGhlIHNlcnZlciB0byB3aGljaCB0aGUgZmlsZSB3aWxsIGJlIGNvcGllZC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBzY3JpcHQvbGl0ZXJhdHVyZSBmaWxlIGlzIHN1Y2Nlc3NmdWxseSBjb3BpZWQgb3ZlciBhbmQgZmFsc2Ugb3RoZXJ3aXNlLiBJZiB0aGUgZmlsZXMgYXJndW1lbnQgaXMgYW4gYXJyYXkgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgYXQgbGVhc3Qgb25lIG9mIHRoZSBmaWxlcyBpbiB0aGUgYXJyYXkgaXMgc3VjY2Vzc2Z1bGx5IGNvcGllZC5cXG4gICAgKi9cXG4gICBzY3AoZmlsZXM6IHN0cmluZyB8IHN0cmluZ1tdLCBkZXN0aW5hdGlvbjogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcXG4gICBzY3AoZmlsZXM6IHN0cmluZyB8IHN0cmluZ1tdLCBzb3VyY2U6IHN0cmluZywgZGVzdGluYXRpb246IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgZmlsZXMgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4yIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIGZpbGVuYW1lcyBvZiBhbGwgZmlsZXMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXJcXG4gICAgKiAoYXMgc3RyaW5ncykuIFRoZSByZXR1cm5lZCBhcnJheSBpcyBzb3J0ZWQgaW4gYWxwaGFiZXRpYyBvcmRlci5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gZ3JlcCAtIEEgc3Vic3RyaW5nIHRvIHNlYXJjaCBmb3IgaW4gdGhlIGZpbGVuYW1lLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdGhlIGZpbGVuYW1lcyBvZiBhbGwgZmlsZXMgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuXFxuICAgICovXFxuICAgbHMoaG9zdDogc3RyaW5nLCBncmVwPzogc3RyaW5nKTogc3RyaW5nW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIExpc3QgcnVubmluZyBzY3JpcHRzIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMiBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSB3aXRoIGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgYWxsIHNjcmlwdHMgcnVubmluZyBvbiB0aGUgc3BlY2lmaWVkIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGNvbnN0IHNjcmlwdHMgPSBwcyhcXFwiaG9tZVxcXCIpO1xcbiAgICAqIGZvciAobGV0IGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7ICsraSkge1xcbiAgICAqICAgICB0cHJpbnQoc2NyaXB0c1tpXS5maWxlbmFtZSArICcgJyArIHNjcmlwdHNbaV0udGhyZWFkcyk7XFxuICAgICogICAgIHRwcmludChzY3JpcHRzW2ldLmFyZ3MpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IHBzID0gbnMucHMoXFxcImhvbWVcXFwiKTtcXG4gICAgKiBmb3IgKHNjcmlwdCBvZiBwcykge1xcbiAgICAqICAgICBucy50cHJpbnQoYCR7c2NyaXB0LmZpbGVuYW1lfSAke3BzW2ldLnRocmVhZHN9YCk7XFxuICAgICogICAgIG5zLnRwcmludChzY3JpcHQuYXJncyk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBhZGRyZXNzIG9mIHRoZSB0YXJnZXQgc2VydmVyLiBJZiBub3Qgc3BlY2lmaWVkLCBpdCB3aWxsIGJlIHRoZSBjdXJyZW50IHNlcnZlcuKAmXMgSVAgYnkgZGVmYXVsdC5cXG4gICAgKiBAcmV0dXJucyBBcnJheSB3aXRoIGdlbmVyYWwgaW5mb3JtYXRpb24gYWJvdXQgYWxsIHNjcmlwdHMgcnVubmluZyBvbiB0aGUgc3BlY2lmaWVkIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgcHMoaG9zdD86IHN0cmluZyk6IFByb2Nlc3NJbmZvW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdXIgaGF2ZSByb290IGFjY2VzcyBvbiBhIHNlcnZlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBwbGF5ZXIgaGFzIHJvb3QgYWNjZXNzIHRvIHRoZSBzcGVjaWZpZWQgdGFyZ2V0IHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogaWYgKGhhc1Jvb3RBY2Nlc3MoXFxcImZvb2Ruc3R1ZmZcXFwiKSA9PSBmYWxzZSkge1xcbiAgICAqICAgIG51a2UoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBpZiAobnMuaGFzUm9vdEFjY2VzcyhcXFwiZm9vZG5zdHVmZlxcXCIpID09IGZhbHNlKSB7XFxuICAgICogICAgbnMubnVrZShcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqIH1cXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHRhcmdldCBzZXJ2ZXJcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHBsYXllciBoYXMgcm9vdCBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCB0YXJnZXQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGhhc1Jvb3RBY2Nlc3MoaG9zdDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIHN0cmluZyB3aXRoIHRoZSBob3N0bmFtZSBvZiB0aGUgc2VydmVyIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIG9uLlxcbiAgICAqXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqIEByZXR1cm5zIEhvc3RuYW1lIG9mIHRoZSBzZXJ2ZXIgdGhhdCB0aGUgc2NyaXB0IGlzIG9uLlxcbiAgICAqL1xcbiAgIGdldEhvc3RuYW1lKCk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgcGxheWVy4oCZcyBjdXJyZW50IGhhY2tpbmcgbGV2ZWwuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHJldHVybnMgUGxheWVy4oCZcyBjdXJyZW50IGhhY2tpbmcgbGV2ZWxcXG4gICAgKi9cXG4gICBnZXRIYWNraW5nTGV2ZWwoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIFBsYXllcuKAmXMgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqIFRoZXNlIG11bHRpcGxpZXJzIGFyZSByZXR1cm5lZCBpbiBmcmFjdGlvbmFsIGZvcm1zLCBub3QgcGVyY2VudGFnZXNcXG4gICAgKiAoZS5nLiAxLjUgaW5zdGVhZCBvZiAxNTAlKS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy8gRXhhbXBsZSBvZiBob3cgdGhpcyBjYW4gYmUgdXNlZDpcXG4gICAgKiB2YXIgbXVsdHMgPSBnZXRIYWNraW5nTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChtdWx0cy5jaGFuY2UpO1xcbiAgICAqIHByaW50KG11bHRzLmdyb3d0aCk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIGNvbnN0IHtjaGFuY2UsIGdyb3d0aH0gPSBucy5nZXRIYWNraW5nTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChjaGFuY2UpO1xcbiAgICAqIHByaW50KGdyb3d0aCk7XFxuICAgICogYGBgXFxuICAgICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgdGhlIFBsYXllcuKAmXMgaGFja2luZyByZWxhdGVkIG11bHRpcGxpZXJzLlxcbiAgICAqL1xcbiAgIGdldEhhY2tpbmdNdWx0aXBsaWVycygpOiBIYWNraW5nTXVsdGlwbGllcnM7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNCBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgUGxheWVy4oCZcyBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICogVGhlc2UgbXVsdGlwbGllcnMgYXJlIHJldHVybmVkIGluIGZyYWN0aW9uYWwgZm9ybXMsIG5vdCBwZXJjZW50YWdlc1xcbiAgICAqIChlLmcuIDEuNSBpbnN0ZWFkIG9mIDE1MCUpLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIHZhciBtdWx0cyA9IGdldEhhY2tuZXRNdWx0aXBsaWVycygpO1xcbiAgICAqIHByaW50KG11bHRzLnByb2R1Y3Rpb24pO1xcbiAgICAqIHByaW50KG11bHRzLnB1cmNoYXNlQ29zdCk7XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiAvLyBFeGFtcGxlIG9mIGhvdyB0aGlzIGNhbiBiZSB1c2VkOlxcbiAgICAqIGNvbnN0IHtwcm9kdWN0aW9uLCBwdXJjaGFzZUNvc3R9ID0gbnMuZ2V0SGFja25ldE11bHRpcGxpZXJzKCk7XFxuICAgICogcHJpbnQocHJvZHVjdGlvbik7XFxuICAgICogcHJpbnQocHVyY2hhc2VDb3N0KTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyB0aGUgUGxheWVy4oCZcyBoYWNrbmV0IHJlbGF0ZWQgbXVsdGlwbGllcnMuXFxuICAgICovXFxuICAgZ2V0SGFja25ldE11bHRpcGxpZXJzKCk6IEhhY2tuZXRNdWx0aXBsaWVycztcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIHNlcnZlciBvYmplY3QgZm9yIHRoZSBnaXZlbiBzZXJ2ZXIuIERlZmF1bHRzIHRvIHRoZSBydW5uaW5nIHNjcmlwdCdzIHNlcnZlciBpZiBob3N0IGlzIG5vdCBzcGVjaWZpZWQuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAyIEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBPcHRpb25hbC4gSG9zdG5hbWUgZm9yIHRoZSByZXF1ZXN0ZWQgc2VydmVyIG9iamVjdC5cXG4gICAgKiBAcmV0dXJucyBUaGUgcmVxdWVzdGVkIHNlcnZlciBvYmplY3QuXFxuICAgICovXFxuICAgZ2V0U2VydmVyKGhvc3Q/OiBzdHJpbmcpOiBTZXJ2ZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBtb25leSBhdmFpbGFibGUgb24gYSBzZXJ2ZXIuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIFJ1bm5pbmcgdGhpcyBmdW5jdGlvbiBvbiB0aGUgaG9tZSBjb21wdXRlciB3aWxsIHJldHVybiB0aGUgcGxheWVy4oCZcyBtb25leS5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKiBnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiaG9tZVxcXCIpOyAvL1JldHVybnMgcGxheWVyJ3MgbW9uZXlcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICogbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKTsgLy8gUmV0dXJucyBwbGF5ZXIncyBtb25leVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIG1vbmV5IGF2YWlsYWJsZSBvbiB0aGUgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFNlcnZlck1vbmV5QXZhaWxhYmxlKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IG1heGltdW0gbW9uZXkgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgbWF4aW11bSBhbW91bnQgb2YgbW9uZXkgdGhhdCBjYW4gYmUgYXZhaWxhYmxlIG9uIGEgc2VydmVyLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgTWF4aW11bSBhbW91bnQgb2YgbW9uZXkgYXZhaWxhYmxlIG9uIHRoZSBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyTWF4TW9uZXkoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgYSBzZXJ2ZXIgZ3Jvd3RoIHBhcmFtZXRlci5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlcnZlcuKAmXMgaW50cmluc2ljIOKAnGdyb3d0aCBwYXJhbWV0ZXLigJ0uIFRoaXMgZ3Jvd3RoXFxuICAgICogcGFyYW1ldGVyIGlzIGEgbnVtYmVyIHR5cGljYWxseSBiZXR3ZWVuIDAgYW5kIDEwMCB0aGF0IHJlcHJlc2VudHNcXG4gICAgKiBob3cgcXVpY2tseSB0aGUgc2VydmVy4oCZcyBtb25leSBncm93cy4gVGhpcyBwYXJhbWV0ZXIgYWZmZWN0cyB0aGVcXG4gICAgKiBwZXJjZW50YWdlIGJ5IHdoaWNoIHRoZSBzZXJ2ZXLigJlzIG1vbmV5IGlzIGluY3JlYXNlZCB3aGVuIHVzaW5nIHRoZVxcbiAgICAqIGdyb3cgZnVuY3Rpb24uIEEgaGlnaGVyIGdyb3d0aCBwYXJhbWV0ZXIgd2lsbCByZXN1bHQgaW4gYVxcbiAgICAqIGhpZ2hlciBwZXJjZW50YWdlIGluY3JlYXNlIGZyb20gZ3Jvdy5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFBhcmFtZXRlciB0aGF0IGFmZmVjdHMgdGhlIHBlcmNlbnRhZ2UgYnkgd2hpY2ggdGhlIHNlcnZlcuKAmXMgbW9uZXkgaXMgaW5jcmVhc2VkIHdoZW4gdXNpbmcgdGhlIGdyb3cgZnVuY3Rpb24uXFxuICAgICovXFxuICAgZ2V0U2VydmVyR3Jvd3RoKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHNlcnZlciBzZWN1cml0eSBsZXZlbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIHNlY3VyaXR5IGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLiBBIHNlcnZlcuKAmXMgc2VjdXJpdHlcXG4gICAgKiBsZXZlbCBpcyBkZW5vdGVkIGJ5IGEgbnVtYmVyLCB0eXBpY2FsbHkgYmV0d2VlbiAxIGFuZCAxMDBcXG4gICAgKiAoYnV0IGl0IGNhbiBnbyBhYm92ZSAxMDApLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgU2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChob3N0OiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIG1pbmltdW0gc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrcyBSQU0gY29zdDogMC4xIEdCXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgTWluaW11bSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogQGRlcHJlY2F0ZWQgdXNlbGVzc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIFJldHVybnMgdGhlIGJhc2Ugc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuIFRoaXMgaXMgdGhlIHNlY3VyaXR5XFxuICAgICogbGV2ZWwgdGhhdCB0aGUgc2VydmVyIHN0YXJ0cyBvdXQgd2l0aC4gVGhpcyBpcyBkaWZmZXJlbnQgdGhhblxcbiAgICAqIGdldFNlcnZlclNlY3VyaXR5TGV2ZWwgYmVjYXVzZSBnZXRTZXJ2ZXJTZWN1cml0eUxldmVsIHJldHVybnNcXG4gICAgKiB0aGUgY3VycmVudCBzZWN1cml0eSBsZXZlbCBvZiBhIHNlcnZlciwgd2hpY2ggY2FuIGNvbnN0YW50bHkgY2hhbmdlIGR1ZSB0b1xcbiAgICAqIGhhY2ssIGdyb3csIGFuZCB3ZWFrZW4sIGNhbGxzIG9uIHRoYXQgc2VydmVyLlxcbiAgICAqIFRoZSBiYXNlIHNlY3VyaXR5IGxldmVsIHdpbGwgc3RheSB0aGUgc2FtZSB1bnRpbCB5b3UgcmVzZXQgYnlcXG4gICAgKiBpbnN0YWxsaW5nIGFuIEF1Z21lbnRhdGlvbihzKS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIEJhc2Ugc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0U2VydmVyQmFzZVNlY3VyaXR5TGV2ZWwoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBAZGVwcmVjYXRlZCB1c2UgZ2V0U2VydmVyTWF4UmFtIC8gZ2V0U2VydmVyVXNlZFJhbVxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSB3aXRoIHR3byBlbGVtZW50cyB0aGF0IGdpdmVzIGluZm9ybWF0aW9uIGFib3V0IGEgc2VydmVy4oCZcyBtZW1vcnkgKFJBTSkuXFxuICAgICogVGhlIGZpcnN0IGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhbW91bnQgb2YgUkFNIHRoYXQgdGhlIHNlcnZlciBoYXMgdG90YWwgKGluIEdCKS5cXG4gICAgKiBUaGUgc2Vjb25kIGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIHRoZSBhbW91bnQgb2YgUkFNIHRoYXQgaXMgY3VycmVudGx5IGJlaW5nIHVzZWQgb25cXG4gICAgKiB0aGUgc2VydmVyIChpbiBHQikuXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIHZhciBzZXJ2ZXJSYW0gPSBnZXRTZXJ2ZXJSYW0oXFxcImhlbGlvc1xcXCIpO1xcbiAgICAqIHZhciB0b3RhbFJhbSA9IHNlcnZlclJhbVswXTtcXG4gICAgKiB2YXIgcmFtVXNlZCA9IHNlcnZlclJhbVsxXTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGNvbnN0IFt0b3RhbFJhbSwgcmFtVXNlZF0gPSBucy5nZXRTZXJ2ZXJSYW0oXFxcImhlbGlvc1xcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIEFycmF5IHdpdGggdG90YWwgYW5kIHVzZWQgbWVtb3J5IG9uIHRoZSBzcGVjaWZpZWQgc2VydmVyLCBpbiBHQi5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJSYW0oaG9zdDogc3RyaW5nKTogW251bWJlciwgbnVtYmVyXTtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBtYXggUkFNIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgbWF4IHJhbSAoR0IpXFxuICAgICovXFxuICAgZ2V0U2VydmVyTWF4UmFtKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIHVzZWQgUkFNIG9uIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdG5hbWUgb2YgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgdXNlZCByYW0gKEdCKVxcbiAgICAqL1xcbiAgIGdldFNlcnZlclVzZWRSYW0oaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSByZXF1aXJlZCBoYWNraW5nIGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRoZSByZXF1aXJlZCBoYWNraW5nIGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFNlcnZlclJlcXVpcmVkSGFja2luZ0xldmVsKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIG9wZW4gcG9ydHMgcmVxdWlyZWQgdG8gc3VjY2Vzc2Z1bGx5IHJ1biBOVUtFLmV4ZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlci5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUaGUgbnVtYmVyIG9mIG9wZW4gcG9ydHMgcmVxdWlyZWQgdG8gc3VjY2Vzc2Z1bGx5IHJ1biBOVUtFLmV4ZSBvbiB0aGUgc3BlY2lmaWVkIHNlcnZlci5cXG4gICAgKi9cXG4gICBnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gZGVub3Rpbmcgd2hldGhlciBvciBub3QgdGhlIHNwZWNpZmllZCBzZXJ2ZXIgZXhpc3RzLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgc3BlY2lmaWVkIHNlcnZlciBleGlzdHMsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgc2VydmVyRXhpc3RzKGhvc3Q6IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIGEgZmlsZSBleGlzdHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4xIEdCXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIGEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBmaWxlIGV4aXN0cyBvbiB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBUaGUgZmlsZW5hbWUgZm9yIHNjcmlwdHMgaXMgY2FzZS1zZW5zaXRpdmUsIGJ1dCBmb3Igb3RoZXIgdHlwZXMgb2YgZmlsZXMgaXQgaXMgbm90LlxcbiAgICAqIEZvciBleGFtcGxlLCBmaWxlRXhpc3RzKOKAnGJydXRlc3NoLmV4ZeKAnSkgd2lsbCB3b3JrIGZpbmUsIGV2ZW4gdGhvdWdoIHRoZSBhY3R1YWwgcHJvZ3JhbVxcbiAgICAqIGlzIG5hbWVkICdCcnV0ZVNTSC5leGUnLlxcbiAgICAqXFxuICAgICogSWYgdGhlIGhvc3RuYW1lL2lwIGFyZ3VtZW50IGlzIG9taXR0ZWQsIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgc2VhcmNoIHRocm91Z2ggdGhlIGN1cnJlbnRcXG4gICAgKiBzZXJ2ZXIgKHRoZSBzZXJ2ZXIgcnVubmluZyB0aGUgc2NyaXB0IHRoYXQgY2FsbHMgdGhpcyBmdW5jdGlvbikgZm9yIHRoZSBmaWxlLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IGV4aXN0cyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICogZmlsZUV4aXN0cyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIGN1cnJlbnQgc2VydmVyIGNvbnRhaW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBmaWxlRXhpc3RzKFxcXCJmdHBjcmFjay5leGVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogLy8gVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGUgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgZXhpc3RzIG9uIHRoZSBmb29kbnN0dWZmIHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBucy5maWxlRXhpc3RzKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vIFRoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIGN1cnJlbnQgc2VydmVyIGNvbnRhaW5zIHRoZSBGVFBDcmFjay5leGUgcHJvZ3JhbSwgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKiBucy5maWxlRXhpc3RzKFxcXCJmdHBjcmFjay5leGVcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gZmlsZW5hbWUgLSBGaWxlbmFtZSBvZiBmaWxlIHRvIGNoZWNrLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLiBUaGlzIGlzIG9wdGlvbmFsLiBJZiBpdCBpcyBub3Qgc3BlY2lmaWVkIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgdXNlIHRoZSBjdXJyZW50IHNlcnZlciBhcyB0aGUgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHNwZWNpZmllZCBmaWxlIGV4aXN0cywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBmaWxlRXhpc3RzKGZpbGVuYW1lOiBzdHJpbmcsIGhvc3Q/OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiBhIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgc2NyaXB0IGlzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogSWYgeW91IHVzZSBhIFBJRCBpbnN0ZWFkIG9mIGEgZmlsZW5hbWUsIHRoZSBob3N0bmFtZSBhbmQgYXJncyBwYXJhbWV0ZXJzIGFyZSB1bm5lY2Vzc2FyeS5cXG4gICAgKiBSZW1lbWJlciB0aGF0IGEgc2NyaXB0IGlzIHVuaXF1ZWx5IGlkZW50aWZpZWQgYnkgYm90aCBpdHMgbmFtZSBhbmQgaXRzIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgd2l0aCBubyBhcmd1bWVudHMgcnVubmluZyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogaXNSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImZvb2Ruc3R1ZmZcXFwiKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHdpdGggbm8gYXJndW1lbnRzIHJ1bm5pbmcgb24gdGhlIGN1cnJlbnQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIGlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIGdldEhvc3RuYW1lKCkpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGEgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgcnVubmluZyB3aXRoIHRoZSBhcmd1bWVudHMgMSwgNSwgYW5kIOKAnHRlc3TigJ0gKGluIHRoYXQgb3JkZXIpIG9uIHRoZSBqb2VzZ3VucyBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogaXNSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgXFxcImpvZXNndW5zXFxcIiwgMSwgNSwgXFxcInRlc3RcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHdpdGggbm8gYXJndW1lbnRzIHJ1bm5pbmcgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLmlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYSBzY3JpcHQgbmFtZWQgZm9vLnNjcmlwdCB3aXRoIG5vIGFyZ3VtZW50cyBydW5uaW5nIG9uIHRoZSBjdXJyZW50IHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZTpcXG4gICAgKiBucy5pc1J1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBucy5nZXRIb3N0bmFtZSgpKTtcXG4gICAgKlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhIHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHJ1bm5pbmcgd2l0aCB0aGUgYXJndW1lbnRzIDEsIDUsIGFuZCDigJx0ZXN04oCdIChpbiB0aGF0IG9yZGVyKSBvbiB0aGUgam9lc2d1bnMgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLmlzUnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJqb2VzZ3Vuc1xcXCIsIDEsIDUsIFxcXCJ0ZXN0XFxcIik7XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9yIFBJRCBvZiBzY3JpcHQgdG8gY2hlY2suIFRoaXMgaXMgY2FzZS1zZW5zaXRpdmUuXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gc3BlY2lmeS9pZGVudGlmeSB3aGljaCBzY3JpcHRzIHRvIHNlYXJjaCBmb3IuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBzcGVjaWZpZWQgc2NyaXB0IGlzIHJ1bm5pbmcgb24gdGhlIHRhcmdldCBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgaXNSdW5uaW5nKHNjcmlwdDogRmlsZW5hbWVPclBJRCwgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBnZW5lcmFsIGluZm8gYWJvdXQgYSBydW5uaW5nIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjMgR0JcXG4gICAgKlxcbiAgICAqIFJ1bm5pbmcgd2l0aCBubyBhcmdzIHJldHVybnMgY3VyZW50IHNjcmlwdC5cXG4gICAgKiBJZiB5b3UgdXNlIGEgUElEIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIsIHRoZSBob3N0bmFtZSBhbmQgYXJncyBwYXJhbWV0ZXJzIGFyZSB1bm5lY2Vzc2FyeS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBmaWxlbmFtZSAtIE9wdGlvbmFsLiBGaWxlbmFtZSBvciBQSUQgb2YgdGhlIHNjcmlwdC5cXG4gICAgKiBAcGFyYW0gaG9zdG5hbWUgLSBPcHRpb25hbC4gTmFtZSBvZiBob3N0IHNlcnZlciB0aGUgc2NyaXB0IGlzIHJ1bm5pbmcgb24uXFxuICAgICogQHBhcmFtIGFyZ3MgIC0gQXJndW1lbnRzIHRvIGlkZW50aWZ5IHRoZSBzY3JpcHRcXG4gICAgKiBAcmV0dXJucyBpbmZvIGFib3V0IGEgcnVubmluZyBzY3JpcHRcXG4gICAgKi9cXG4gICBnZXRSdW5uaW5nU2NyaXB0KGZpbGVuYW1lPzogRmlsZW5hbWVPclBJRCwgaG9zdG5hbWU/OiBzdHJpbmcsIC4uLmFyZ3M6IChzdHJpbmcgfCBudW1iZXIpW10pOiBSdW5uaW5nU2NyaXB0O1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgY29zdCBvZiBwdXJjaGFzaW5nIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuMjUgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGNvc3QgdG8gcHVyY2hhc2UgYSBzZXJ2ZXIgd2l0aCB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiByYW0uXFxuICAgICpcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMxOlxcbiAgICAqIGZvciAoaSA9IDE7IGkgPD0gMjA7IGkrKykge1xcbiAgICAqICAgICB0cHJpbnQoaSArIFxcXCIgLS0gXFxcIiArIGdldFB1cmNoYXNlZFNlcnZlckNvc3QoTWF0aC5wb3coMiwgaSkpKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBmb3IgKGkgPSAxOyBpIDw9IDIwOyBpKyspIHtcXG4gICAgKiAgICAgbnMudHByaW50KGkgKyBcXFwiIC0tIFxcXCIgKyBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KE1hdGgucG93KDIsIGkpKSk7XFxuICAgICogfVxcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSByYW0gLSBBbW91bnQgb2YgUkFNIG9mIGEgcG90ZW50aWFsIHB1cmNoYXNlZCBzZXJ2ZXIsIGluIEdCLiBNdXN0IGJlIGEgcG93ZXIgb2YgMiAoMiwgNCwgOCwgMTYsIGV0Yy4pLiBNYXhpbXVtIHZhbHVlIG9mIDEwNDg1NzYgKDJeMjApLlxcbiAgICAqIEByZXR1cm5zIFRoZSBjb3N0IHRvIHB1cmNoYXNlIGEgc2VydmVyIHdpdGggdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgcmFtLlxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtOiBudW1iZXIpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogMi4yNSBHQlxcbiAgICAqXFxuICAgICogUHVyY2hhc2VkIGEgc2VydmVyIHdpdGggdGhlIHNwZWNpZmllZCBob3N0bmFtZSBhbmQgYW1vdW50IG9mIFJBTS5cXG4gICAgKlxcbiAgICAqIFRoZSBob3N0bmFtZSBhcmd1bWVudCBjYW4gYmUgYW55IGRhdGEgdHlwZSwgYnV0IGl0IHdpbGwgYmUgY29udmVydGVkIHRvIGEgc3RyaW5nXFxuICAgICogYW5kIGhhdmUgd2hpdGVzcGFjZSByZW1vdmVkLiBBbnl0aGluZyB0aGF0IHJlc29sdmVzIHRvIGFuIGVtcHR5IHN0cmluZyB3aWxsIGNhdXNlXFxuICAgICogdGhlIGZ1bmN0aW9uIHRvIGZhaWwuIElmIHRoZXJlIGlzIGFscmVhZHkgYSBzZXJ2ZXIgd2l0aCB0aGUgc3BlY2lmaWVkIGhvc3RuYW1lLFxcbiAgICAqIHRoZW4gdGhlIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBhcHBlbmQgYSBudW1iZXIgYXQgdGhlIGVuZCBvZiB0aGUgaG9zdG5hbWVcXG4gICAgKiBhcmd1bWVudCB2YWx1ZSB1bnRpbCBpdCBmaW5kcyBhIHVuaXF1ZSBob3N0bmFtZS4gRm9yIGV4YW1wbGUsIGlmIHRoZSBzY3JpcHQgY2FsbHNcXG4gICAgKiBgcHVyY2hhc2VTZXJ2ZXIo4oCcZm9v4oCdLCA0KWAgYnV0IGEgc2VydmVyIG5hbWVkIOKAnGZvb+KAnSBhbHJlYWR5IGV4aXN0cywgdGhlIGl0IHdpbGxcXG4gICAgKiBhdXRvbWF0aWNhbGx5IGNoYW5nZSB0aGUgaG9zdG5hbWUgdG8gYGZvby0wYC4gSWYgdGhlcmUgaXMgYWxyZWFkeSBhIHNlcnZlciB3aXRoIHRoZVxcbiAgICAqIGhvc3RuYW1lIGBmb28tMGAsIHRoZW4gaXQgd2lsbCBjaGFuZ2UgdGhlIGhvc3RuYW1lIHRvIGBmb28tMWAsIGFuZCBzbyBvbi5cXG4gICAgKlxcbiAgICAqIE5vdGUgdGhhdCB0aGVyZSBpcyBhIG1heGltdW0gbGltaXQgdG8gdGhlIGFtb3VudCBvZiBzZXJ2ZXJzIHlvdSBjYW4gcHVyY2hhc2UuXFxuICAgICpcXG4gICAgKiBSZXR1cm5zIHRoZSBob3N0bmFtZSBvZiB0aGUgbmV3bHkgcHVyY2hhc2VkIHNlcnZlciBhcyBhIHN0cmluZy4gSWYgdGhlIGZ1bmN0aW9uXFxuICAgICogZmFpbHMgdG8gcHVyY2hhc2UgYSBzZXJ2ZXIsIHRoZW4gaXQgd2lsbCByZXR1cm4gYW4gZW1wdHkgc3RyaW5nLiBUaGUgZnVuY3Rpb24gd2lsbFxcbiAgICAqIGZhaWwgaWYgdGhlIGFyZ3VtZW50cyBwYXNzZWQgaW4gYXJlIGludmFsaWQsIGlmIHRoZSBwbGF5ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2hcXG4gICAgKiBtb25leSB0byBwdXJjaGFzZSB0aGUgc3BlY2lmaWVkIHNlcnZlciwgb3IgaWYgdGhlIHBsYXllciBoYXMgZXhjZWVkZWQgdGhlIG1heGltdW1cXG4gICAgKiBhbW91bnQgb2Ygc2VydmVycy5cXG4gICAgKlxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzE6XFxuICAgICogdmFyIHJhbSA9IDY0O1xcbiAgICAqIHZhciBwcmVmaXggPSBcXFwicHNlcnYtXFxcIjtcXG4gICAgKiBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XFxuICAgICogICAgcHVyY2hhc2VTZXJ2ZXIocHJlZml4ICsgaSwgcmFtKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMjpcXG4gICAgKiBjb25zdCByYW0gPSA2NDtcXG4gICAgKiBjb25zdCBwcmVmaXggPSBcXFwicHNlcnYtXFxcIjtcXG4gICAgKiBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XFxuICAgICogICAgbnMucHVyY2hhc2VTZXJ2ZXIocHJlZml4ICsgaSwgcmFtKTtcXG4gICAgKiB9XFxuICAgICogYGBgXFxuICAgICogQHBhcmFtIGhvc3RuYW1lIC0gSG9zdCBvZiB0aGUgcHVyY2hhc2VkIHNlcnZlci5cXG4gICAgKiBAcGFyYW0gcmFtIC0gQW1vdW50IG9mIFJBTSBvZiB0aGUgcHVyY2hhc2VkIHNlcnZlciwgaW4gR0IuIE11c3QgYmUgYSBwb3dlciBvZiAyICgyLCA0LCA4LCAxNiwgZXRjLikuIE1heGltdW0gdmFsdWUgb2YgMTA0ODU3NiAoMl4yMCkuXFxuICAgICogQHJldHVybnMgVGhlIGhvc3RuYW1lIG9mIHRoZSBuZXdseSBwdXJjaGFzZWQgc2VydmVyLlxcbiAgICAqL1xcbiAgIHB1cmNoYXNlU2VydmVyKGhvc3RuYW1lOiBzdHJpbmcsIHJhbTogbnVtYmVyKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBEZWxldGUgYSBwdXJjaGFzZWQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogMi4yNSBHQlxcbiAgICAqXFxuICAgICogRGVsZXRlcyBvbmUgb2YgeW91ciBwdXJjaGFzZWQgc2VydmVycywgd2hpY2ggaXMgc3BlY2lmaWVkIGJ5IGl0cyBob3N0bmFtZS5cXG4gICAgKlxcbiAgICAqIFRoZSBob3N0bmFtZSBhcmd1bWVudCBjYW4gYmUgYW55IGRhdGEgdHlwZSwgYnV0IGl0IHdpbGwgYmUgY29udmVydGVkIHRvIGEgc3RyaW5nLlxcbiAgICAqIFdoaXRlc3BhY2UgaXMgYXV0b21hdGljYWxseSByZW1vdmVkIGZyb20gdGhlIHN0cmluZy4gVGhpcyBmdW5jdGlvbiB3aWxsIG5vdCBkZWxldGUgYVxcbiAgICAqIHNlcnZlciB0aGF0IHN0aWxsIGhhcyBzY3JpcHRzIHJ1bm5pbmcgb24gaXQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGhlIHNlcnZlciB0byBkZWxldGUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiBzdWNjZXNzZnVsLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIGRlbGV0ZVNlcnZlcihob3N0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIGhvc3RuYW1lcyBvZiBhbGwgb2YgdGhlIHNlcnZlcnMgeW91IGhhdmUgcHVyY2hhc2VkLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgMi4yNSBHQlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgYW4gYXJyYXkgd2l0aCB0aGUgaG9zdG5hbWVzIG9mIGFsbCBvZiB0aGUgc2VydmVycyB5b3UgaGF2ZSBwdXJjaGFzZWQuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VkU2VydmVycygpOiBzdHJpbmdbXTtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgbWF4aW11bSBudW1iZXIgb2Ygc2VydmVycyB5b3UgY2FuIHB1cmNoYXNlLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIHRoZSBtYXhpbXVtIG51bWJlciBvZiBzZXJ2ZXJzIHlvdSBjYW4gcHVyY2hhc2UuXFxuICAgICovXFxuICAgZ2V0UHVyY2hhc2VkU2VydmVyTGltaXQoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBSZXR1cm5zIHRoZSBtYXhpbXVtIFJBTSB0aGF0IGEgcHVyY2hhc2VkIHNlcnZlciBjYW4gaGF2ZS5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgbWF4aW11bSBSQU0gKGluIEdCKSB0aGF0IGEgcHVyY2hhc2VkIHNlcnZlciBjYW4gaGF2ZS5cXG4gICAgKi9cXG4gICBnZXRQdXJjaGFzZWRTZXJ2ZXJNYXhSYW0oKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBXcml0ZSBkYXRhIHRvIGEgZmlsZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIHdyaXRlIGRhdGEgdG8gYSB0ZXh0IGZpbGUgKC50eHQpLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIHdyaXRlIGRhdGEgdG8gdGhhdCB0ZXh0IGZpbGUuIElmIHRoZSBzcGVjaWZpZWQgdGV4dCBmaWxlIGRvZXMgbm90IGV4aXN0LFxcbiAgICAqIHRoZW4gaXQgd2lsbCBiZSBjcmVhdGVkLiBUaGUgdGhpcmQgYXJndW1lbnQgbW9kZSwgZGVmaW5lcyBob3cgdGhlIGRhdGEgd2lsbCBiZSB3cml0dGVuIHRvXFxuICAgICogdGhlIHRleHQgZmlsZS4gSWYgKm1vZGUgaXMgc2V0IHRvIOKAnHfigJ0sIHRoZW4gdGhlIGRhdGEgaXMgd3JpdHRlbiBpbiDigJx3cml0ZeKAnSBtb2RlIHdoaWNoIG1lYW5zXFxuICAgICogdGhhdCBpdCB3aWxsIG92ZXJ3cml0ZSBhbGwgZXhpc3RpbmcgZGF0YSBvbiB0aGUgdGV4dCBmaWxlLiBJZiBtb2RlIGlzIHNldCB0byBhbnkgb3RoZXIgdmFsdWVcXG4gICAgKiB0aGVuIHRoZSBkYXRhIHdpbGwgYmUgd3JpdHRlbiBpbiDigJxhcHBlbmTigJ0gbW9kZSB3aGljaCBtZWFucyB0aGF0IHRoZSBkYXRhIHdpbGwgYmUgYWRkZWQgYXQgdGhlXFxuICAgICogZW5kIG9mIHRoZSB0ZXh0IGZpbGUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaGFuZGxlIC0gRmlsZW5hbWUgb2YgdGhlIHRleHQgZmlsZSB0aGF0IHdpbGwgYmUgd3JpdHRlbiB0by5cXG4gICAgKiBAcGFyYW0gZGF0YSAtIERhdGEgdG8gd3JpdGUuXFxuICAgICogQHBhcmFtIG1vZGUgLSBEZWZpbmVzIHRoZSB3cml0ZSBtb2RlLiBPbmx5IHZhbGlkIHdoZW4gd3JpdGluZyB0byB0ZXh0IGZpbGVzLlxcbiAgICAqL1xcbiAgIHdyaXRlKGhhbmRsZTogc3RyaW5nLCBkYXRhPzogc3RyaW5nW10gfCBudW1iZXIgfCBzdHJpbmcsIG1vZGU/OiBcXFwid1xcXCIgfCBcXFwiYVxcXCIpOiBQcm9taXNlPHZvaWQ+O1xcbiBcXG4gICAvKipcXG4gICAgKiBBdHRlbXB0IHRvIHdyaXRlIHRvIGEgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBBdHRlbXB0cyB0byB3cml0ZSBkYXRhIHRvIHRoZSBzcGVjaWZpZWQgTmV0c2NyaXB0IFBvcnQuXFxuICAgICogSWYgdGhlIHBvcnQgaXMgZnVsbCwgdGhlIGRhdGEgd2lsbCBub3QgYmUgd3JpdHRlbi5cXG4gICAgKiBPdGhlcndpc2UsIHRoZSBkYXRhIHdpbGwgYmUgd3JpdHRlbiBub3JtYWxseS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBwb3J0IC0gUG9ydCBvciB0ZXh0IGZpbGUgdGhhdCB3aWxsIGJlIHdyaXR0ZW4gdG8uXFxuICAgICogQHBhcmFtIGRhdGEgLSBEYXRhIHRvIHdyaXRlLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGRhdGEgaXMgc3VjY2Vzc2Z1bGx5IHdyaXR0ZW4gdG8gdGhlIHBvcnQsIGFuZCBmYWxzZSBvdGhlcndpc2UuXFxuICAgICovXFxuICAgdHJ5V3JpdGVQb3J0KHBvcnQ6IG51bWJlciwgZGF0YTogc3RyaW5nW10gfCBudW1iZXIpOiBQcm9taXNlPGJvb2xlYW4+O1xcbiBcXG4gICAvKipcXG4gICAgKiBSZWFkIGNvbnRlbnQgb2YgYSBmaWxlLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byByZWFkIGRhdGEgZnJvbSBhIHRleHQgZmlsZSAoLnR4dCkuXFxuICAgICpcXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSBkYXRhIGluIHRoZSBzcGVjaWZpZWQgdGV4dFxcbiAgICAqIGZpbGUuIElmIHRoZSB0ZXh0IGZpbGUgZG9lcyBub3QgZXhpc3QsIGFuIGVtcHR5IHN0cmluZyB3aWxsIGJlIHJldHVybmVkLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhhbmRsZSAtIEZpbGVuYW1lIHRvIHJlYWQgZnJvbS5cXG4gICAgKiBAcmV0dXJucyBEYXRhIGluIHRoZSBzcGVjaWZpZWQgdGV4dCBmaWxlLlxcbiAgICAqL1xcbiAgIHJlYWQoaGFuZGxlOiBzdHJpbmcpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBhIGNvcHkgb2YgdGhlIGRhdGEgZnJvbSBhIHBvcnQgd2l0aG91dCBwb3BwaW5nIGl0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBwZWVrIGF0IHRoZSBkYXRhIGZyb20gYSBwb3J0LiBJdCByZXR1cm5zIHRoZVxcbiAgICAqIGZpcnN0IGVsZW1lbnQgaW4gdGhlIHNwZWNpZmllZCBwb3J0IHdpdGhvdXQgcmVtb3ZpbmcgdGhhdCBlbGVtZW50LiBJZlxcbiAgICAqIHRoZSBwb3J0IGlzIGVtcHR5LCB0aGUgc3RyaW5nIOKAnE5VTEwgUE9SVCBEQVRB4oCdIHdpbGwgYmUgcmV0dXJuZWQuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gcG9ydCAtIFBvcnQgdG8gcGVlay4gTXVzdCBiZSBhbiBpbnRlZ2VyIGJldHdlZW4gMSBhbmQgMjAuXFxuICAgICogQHJldHVybnMgRGF0YSBpbiB0aGUgc3BlY2lmaWVkIHBvcnQuXFxuICAgICovXFxuICAgcGVlayhwb3J0OiBudW1iZXIpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIENsZWFyIGRhdGEgZnJvbSBhIGZpbGUuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogRGVsZXRlIGFsbCBkYXRhIGZyb20gdGhhdCB0ZXh0IGZpbGUuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaGFuZGxlIC0gVGV4dCBmaWxlIHRvIGNsZWFyLlxcbiAgICAqL1xcbiAgIGNsZWFyKGhhbmRsZTogc3RyaW5nKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogQ2xlYXIgZGF0YSBmcm9tIGEgcG9ydC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBEZWxldGEgYWxsIGRhdGEgZnJvbSB0aGUgdW5kZXJseWluZyBxdWV1ZS5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBoYW5kbGUgLSBQb3J0IHRvIGNsZWFyLlxcbiAgICAqL1xcbiAgIGNsZWFyUG9ydChoYW5kbGU6IG51bWJlcik6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFdyaXRlIGRhdGEgdG8gYSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFdyaXRlIGRhdGEgdG8gdGhhdCBuZXRzY3JpcHQgcG9ydC5cXG4gICAgKiBAcmV0dXJucyBUaGUgZGF0YSBwb3BwZWQgb2ZmIHRoZSBxdWV1ZSBpZiBpdCB3YXMgZnVsbC5cXG4gICAgKi9cXG4gICB3cml0ZVBvcnQocG9ydDogbnVtYmVyLCBkYXRhOiBzdHJpbmcgfCBudW1iZXIpOiBQcm9taXNlPGFueT47XFxuICAgLyoqXFxuICAgICogUmVhZCBkYXRhIGZyb20gYSBwb3J0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJlYWQgZGF0YSBmcm9tIHRoYXQgcG9ydC4gQSBwb3J0IGlzIGEgc2VyaWFsaXplZCBxdWV1ZS5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmVtb3ZlIHRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhhdCBxdWV1ZSBhbmQgcmV0dXJuIGl0LlxcbiAgICAqIElmIHRoZSBxdWV1ZSBpcyBlbXB0eSwgdGhlbiB0aGUgc3RyaW5nIOKAnE5VTEwgUE9SVCBEQVRB4oCdIHdpbGwgYmUgcmV0dXJuZWQuXFxuICAgICogQHJldHVybnMgdGhlIGRhdGEgcmVhZC5cXG4gICAgKi9cXG4gICByZWFkUG9ydChwb3J0OiBudW1iZXIpOiBhbnk7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBhbGwgZGF0YSBvbiBhIHBvcnQuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogR2V0IGEgaGFuZGxlIHRvIGEgTmV0c2NyaXB0IFBvcnQuXFxuICAgICpcXG4gICAgKiBXQVJOSU5HOiBQb3J0IEhhbmRsZXMgb25seSB3b3JrIGluIE5ldHNjcmlwdEpTIChOZXRzY3JpcHQgMi4wKS4gVGhleSB3aWxsIG5vdCB3b3JrIGluIE5ldHNjcmlwdCAxLjAuXFxuICAgICpcXG4gICAgKiBAc2VlIGh0dHBzOi8vYml0YnVybmVyLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9uZXRzY3JpcHQvbmV0c2NyaXB0bWlzYy5odG1sI25ldHNjcmlwdC1wb3J0c1xcbiAgICAqIEBwYXJhbSBwb3J0IC0gUG9ydCBudW1iZXIuIE11c3QgYmUgYW4gaW50ZWdlciBiZXR3ZWVuIDEgYW5kIDIwLlxcbiAgICAqL1xcbiAgIGdldFBvcnRIYW5kbGUocG9ydDogbnVtYmVyKTogTmV0c2NyaXB0UG9ydDtcXG4gXFxuICAgLyoqXFxuICAgICogRGVsZXRlIGEgZmlsZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBSZW1vdmVzIHRoZSBzcGVjaWZpZWQgZmlsZSBmcm9tIHRoZSBjdXJyZW50IHNlcnZlci4gVGhpcyBmdW5jdGlvbiB3b3JrcyBmb3IgZXZlcnkgZmlsZVxcbiAgICAqIHR5cGUgZXhjZXB0IG1lc3NhZ2UgKC5tc2cpIGZpbGVzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIG5hbWUgLSBGaWxlbmFtZSBvZiBmaWxlIHRvIHJlbW92ZS4gTXVzdCBpbmNsdWRlIHRoZSBleHRlbnNpb24uXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IEFkZHJlc3Mgb2YgdGhlIHNlcnZlciBvbiB3aGljaCB0byBkZWxldGUgdGhlIGZpbGUuIE9wdGlvbmFsLiBEZWZhdWx0cyB0byBjdXJyZW50IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIGl0IHN1Y2Nlc3NmdWxseSBkZWxldGVzIHRoZSBmaWxlLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxcbiAgICAqL1xcbiAgIHJtKG5hbWU6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IGJvb2xlYW47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIGFueSBzY3JpcHQgd2l0aCBhIGZpbGVuYW1lIGlzIHJ1bm5pbmcuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIGFueSBpbnN0YW5jZSBvZiB0aGUgc3BlY2lmaWVkIHNjcmlwdCBpcyBydW5uaW5nXFxuICAgICogb24gdGhlIHRhcmdldCBzZXJ2ZXIsIHJlZ2FyZGxlc3Mgb2YgaXRzIGFyZ3VtZW50cy5cXG4gICAgKlxcbiAgICAqIFRoaXMgaXMgZGlmZmVyZW50IHRoYW4gdGhlIGlzUnVubmluZyBmdW5jdGlvbiBiZWNhdXNlIGl0IGRvZXMgbm90IHRyeSB0b1xcbiAgICAqIGlkZW50aWZ5IGEgc3BlY2lmaWMgaW5zdGFuY2Ugb2YgYSBydW5uaW5nIHNjcmlwdCBieSBpdHMgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYW55IHNjcmlwdCBuYW1lZCBmb28uc2NyaXB0IHJ1bm5pbmcgb24gdGhlIGZvb2Ruc3R1ZmYgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIHNjcmlwdFJ1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBcXFwiZm9vZG5zdHVmZlxcXCIpO1xcbiAgICAqXFxuICAgICogLy9UaGUgZnVuY3Rpb24gY2FsbCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZXJlIGlzIGFueSBzY3JpcHQgbmFtZWQg4oCcZm9vLnNjcmlwdOKAnSBydW5uaW5nIG9uIHRoZSBjdXJyZW50IHNlcnZlciwgYW5kIGZhbHNlIG90aGVyd2lzZTpcXG4gICAgKiBzY3JpcHRSdW5uaW5nKFxcXCJmb28uc2NyaXB0XFxcIiwgZ2V0SG9zdG5hbWUoKSk7XFxuICAgICogYGBgXFxuICAgICogKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIC8vVGhlIGZ1bmN0aW9uIGNhbGwgd2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVyZSBpcyBhbnkgc2NyaXB0IG5hbWVkIGZvby5zY3JpcHQgcnVubmluZyBvbiB0aGUgZm9vZG5zdHVmZiBzZXJ2ZXIsIGFuZCBmYWxzZSBvdGhlcndpc2U6XFxuICAgICogbnMuc2NyaXB0UnVubmluZyhcXFwiZm9vLnNjcmlwdFxcXCIsIFxcXCJmb29kbnN0dWZmXFxcIik7XFxuICAgICpcXG4gICAgKiAvL1RoZSBmdW5jdGlvbiBjYWxsIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlcmUgaXMgYW55IHNjcmlwdCBuYW1lZCDigJxmb28uc2NyaXB04oCdIHJ1bm5pbmcgb24gdGhlIGN1cnJlbnQgc2VydmVyLCBhbmQgZmFsc2Ugb3RoZXJ3aXNlOlxcbiAgICAqIG5zLnNjcmlwdFJ1bm5pbmcoXFxcImZvby5zY3JpcHRcXFwiLCBucy5nZXRIb3N0bmFtZSgpKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0IHRvIGNoZWNrLiBUaGlzIGlzIGNhc2Utc2Vuc2l0aXZlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNwZWNpZmllZCBzY3JpcHQgaXMgcnVubmluZywgYW5kIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICBzY3JpcHRSdW5uaW5nKHNjcmlwdDogc3RyaW5nLCBob3N0OiBzdHJpbmcpOiBib29sZWFuO1xcbiBcXG4gICAvKipcXG4gICAgKiBLaWxsIGFsbCBzY3JpcHRzIHdpdGggYSBmaWxlbmFtZS5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAxIEdCXFxuICAgICpcXG4gICAgKiBLaWxscyBhbGwgc2NyaXB0cyB3aXRoIHRoZSBzcGVjaWZpZWQgZmlsZW5hbWUgb24gdGhlIHRhcmdldCBzZXJ2ZXIgc3BlY2lmaWVkIGJ5IGhvc3RuYW1lLFxcbiAgICAqIHJlZ2FyZGxlc3Mgb2YgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdCB0byBraWxsLiBUaGlzIGlzIGNhc2Utc2Vuc2l0aXZlLlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgb25lIG9yIG1vcmUgc2NyaXB0cyB3ZXJlIHN1Y2Nlc3NmdWxseSBraWxsZWQsIGFuZCBmYWxzZSBpZiBub25lIHdlcmUuXFxuICAgICovXFxuICAgc2NyaXB0S2lsbChzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nKTogYm9vbGVhbjtcXG4gXFxuICAgLyoqXFxuICAgICogUmV0dXJucyB0aGUgY3VycmVudCBzY3JpcHQgbmFtZS5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwIEdCXFxuICAgICogQHJldHVybnMgQ3VycmVudCBzY3JpcHQgbmFtZS5cXG4gICAgKi9cXG4gICBnZXRTY3JpcHROYW1lKCk6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSByYW0gY29zdCBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBSQU0gcmVxdWlyZWQgdG8gcnVuIHRoZSBzcGVjaWZpZWQgc2NyaXB0IG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIFJldHVybnMgMCBpZiB0aGUgc2NyaXB0IGRvZXMgbm90IGV4aXN0LlxcbiAgICAqXFxuICAgICogQHBhcmFtIHNjcmlwdCAtIEZpbGVuYW1lIG9mIHNjcmlwdC4gVGhpcyBpcyBjYXNlLXNlbnNpdGl2ZS5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlciB0aGUgc2NyaXB0IGlzIGxvY2F0ZWQgb24uIFRoaXMgaXMgb3B0aW9uYWwsIElmIGl0IGlzIG5vdCBzcGVjaWZpZWQgdGhlbiB0aGUgZnVuY3Rpb24gd2lsbCBzZSB0aGUgY3VycmVudCBzZXJ2ZXIgYXMgdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIFJBTSAoaW4gR0IpIHJlcXVpcmVkIHRvIHJ1biB0aGUgc3BlY2lmaWVkIHNjcmlwdCBvbiB0aGUgdGFyZ2V0IHNlcnZlciwgYW5kIDAgaWYgdGhlIHNjcmlwdCBkb2VzIG5vdCBleGlzdC5cXG4gICAgKi9cXG4gICBnZXRTY3JpcHRSYW0oc2NyaXB0OiBzdHJpbmcsIGhvc3Q/OiBzdHJpbmcpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgZXhlY3V0aW9uIHRpbWUgb2YgYSBoYWNrKCkgY2FsbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjA1IEdCXFxuICAgICpXaGVuIGBoYWNrYCBjb21wbGV0ZXMgYW4gYW1vdW50IG9mIG1vbmV5IGlzIHN0b2xlbiBkZXBlbmRpbmcgb24gdGhlIHBsYXllcidzIHNraWxscy5cXG4gICAgKiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgdGltZSBpbiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gZXhlY3V0ZSB0aGUgaGFjayBOZXRzY3JpcHQgZnVuY3Rpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogVGhlIGZ1bmN0aW9uIHRha2VzIGluIGFuIG9wdGlvbmFsIGhhY2tMdmwgcGFyYW1ldGVyIHRoYXQgY2FuIGJlIHNwZWNpZmllZCB0byBzZWUgd2hhdCB0aGUgaGFjayB0aW1lIHdvdWxkIGJlIGF0IGRpZmZlcmVudCBoYWNraW5nIGxldmVscy5cXG4gICAgKiBUaGUgcmVxdWlyZWQgdGltZSBpcyBpbmNyZWFzZWQgYnkgdGhlIHNlY3VyaXR5IGxldmVsIG9mIHRoZSB0YXJnZXQgc2VydmVyIGFuZCBkZWNyZWFzZWQgYnkgdGhlIHBsYXllcidzIGhhY2tpbmcgbGV2ZWwuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcmV0dXJucyBSZXR1cm5zIHRoZSBhbW91bnQgb2YgdGltZSBpbiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gZXhlY3V0ZSB0aGUgaGFjayBOZXRzY3JpcHQgZnVuY3Rpb24uIFJldHVybnMgSW5maW5pdHkgaWYgY2FsbGVkIG9uIGEgSGFja25ldCBTZXJ2ZXIuXFxuICAgICovXFxuICAgZ2V0SGFja1RpbWUoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGV4ZWN1dGlvbiB0aW1lIG9mIGEgZ3JvdygpIGNhbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIGdyb3cgTmV0c2NyaXB0IGZ1bmN0aW9uIG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIFRoZSBmdW5jdGlvbiB0YWtlcyBpbiBhbiBvcHRpb25hbCBoYWNrTHZsIHBhcmFtZXRlciB0aGF0IGNhbiBiZSBzcGVjaWZpZWQgdG8gc2VlIHdoYXQgdGhlIGdyb3cgdGltZSB3b3VsZCBiZSBhdCBkaWZmZXJlbnQgaGFja2luZyBsZXZlbHMuXFxuICAgICogVGhlIHJlcXVpcmVkIHRpbWUgaXMgaW5jcmVhc2VkIGJ5IHRoZSBzZWN1cml0eSBsZXZlbCBvZiB0aGUgdGFyZ2V0IHNlcnZlciBhbmQgZGVjcmVhc2VkIGJ5IHRoZSBwbGF5ZXIncyBoYWNraW5nIGxldmVsLlxcbiAgICAqXFxuICAgICogQHBhcmFtIGhvc3QgLSBIb3N0IG9mIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogQHJldHVybnMgUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIGdyb3cgTmV0c2NyaXB0IGZ1bmN0aW9uLiBSZXR1cm5zIEluZmluaXR5IGlmIGNhbGxlZCBvbiBhIEhhY2tuZXQgU2VydmVyLlxcbiAgICAqL1xcbiAgIGdldEdyb3dUaW1lKGhvc3Q6IHN0cmluZyk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBleGVjdXRpb24gdGltZSBvZiBhIHdlYWtlbigpIGNhbGwuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMC4wNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyB0aGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIHdlYWtlbiBOZXRzY3JpcHQgZnVuY3Rpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICogVGhlIGZ1bmN0aW9uIHRha2VzIGluIGFuIG9wdGlvbmFsIGhhY2tMdmwgcGFyYW1ldGVyIHRoYXQgY2FuIGJlIHNwZWNpZmllZCB0byBzZWUgd2hhdCB0aGUgd2Vha2VuIHRpbWUgd291bGQgYmUgYXQgZGlmZmVyZW50IGhhY2tpbmcgbGV2ZWxzLlxcbiAgICAqIFRoZSByZXF1aXJlZCB0aW1lIGlzIGluY3JlYXNlZCBieSB0aGUgc2VjdXJpdHkgbGV2ZWwgb2YgdGhlIHRhcmdldCBzZXJ2ZXIgYW5kIGRlY3JlYXNlZCBieSB0aGUgcGxheWVyJ3MgaGFja2luZyBsZXZlbC5cXG4gICAgKlxcbiAgICAqIEBwYXJhbSBob3N0IC0gSG9zdCBvZiB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZXR1cm5zIFJldHVybnMgdGhlIGFtb3VudCBvZiB0aW1lIGluIG1pbGxpc2Vjb25kcyBpdCB0YWtlcyB0byBleGVjdXRlIHRoZSB3ZWFrZW4gTmV0c2NyaXB0IGZ1bmN0aW9uLiBSZXR1cm5zIEluZmluaXR5IGlmIGNhbGxlZCBvbiBhIEhhY2tuZXQgU2VydmVyLlxcbiAgICAqL1xcbiAgIGdldFdlYWtlblRpbWUoaG9zdDogc3RyaW5nKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBHZXQgdGhlIGluY29tZSBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBpbmNvbWUgdGhlIHNwZWNpZmllZCBzY3JpcHQgZ2VuZXJhdGVzIHdoaWxlIG9ubGluZVxcbiAgICAqICh3aGVuIHRoZSBnYW1lIGlzIG9wZW4sIGRvZXMgbm90IGFwcGx5IGZvciBvZmZsaW5lIGluY29tZSkuIFJlbWVtYmVyIHRoYXRcXG4gICAgKiBhIHNjcmlwdCBpcyB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IGJvdGggaXRzIG5hbWUgYW5kIGl0cyBhcmd1bWVudHMuIFNvIGZvclxcbiAgICAqIGV4YW1wbGUgaWYgeW91IHJhbiBhIHNjcmlwdCB3aXRoIHRoZSBhcmd1bWVudHMg4oCcZm9vZG5zdHVmZuKAnSBhbmQg4oCcNeKAnSB0aGVuXFxuICAgICogaW4gb3JkZXIgdG8gdXNlIHRoaXMgZnVuY3Rpb24gdG8gZ2V0IHRoYXQgc2NyaXB04oCZcyBpbmNvbWUgeW91IG11c3Qgc3BlY2lmeVxcbiAgICAqIHRob3NlIHNhbWUgYXJndW1lbnRzIGluIHRoZSBzYW1lIG9yZGVyIGluIHRoaXMgZnVuY3Rpb24gY2FsbC5cXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgY2FsbGVkIHdpdGggbm8gYXJndW1lbnRzLlxcbiAgICAqIElmIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cywgdGhlbiB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGFuIGFycmF5IG9mIHR3byB2YWx1ZXMuXFxuICAgICogVGhlIGZpcnN0IHZhbHVlIGlzIHRoZSB0b3RhbCBpbmNvbWUgKGRvbGxhciAvIHNlY29uZCkgb2YgYWxsIG9mIHlvdXIgYWN0aXZlIHNjcmlwdHNcXG4gICAgKiAoc2NyaXB0cyB0aGF0IGFyZSBjdXJyZW50bHkgcnVubmluZyBvbiBhbnkgc2VydmVyKS5cXG4gICAgKiBUaGUgc2Vjb25kIHZhbHVlIGlzIHRoZSB0b3RhbCBpbmNvbWUgKGRvbGxhciAvIHNlY29uZCkgdGhhdCB5b3XigJl2ZSBlYXJuZWQgZnJvbSBzY3JpcHRzXFxuICAgICogc2luY2UgeW91IGxhc3QgaW5zdGFsbGVkIEF1Z21lbnRhdGlvbnMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gU2VydmVyIG9uIHdoaWNoIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGluY29tZSB0aGUgc3BlY2lmaWVkIHNjcmlwdCBnZW5lcmF0ZXMgd2hpbGUgb25saW5lLlxcbiAgICAqL1xcbiAgIGdldFNjcmlwdEluY29tZSgpOiBbbnVtYmVyLCBudW1iZXJdO1xcbiAgIGdldFNjcmlwdEluY29tZShzY3JpcHQ6IHN0cmluZywgaG9zdDogc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IG51bWJlcjtcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBleHAgZ2FpbiBvZiBhIHNjcmlwdC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBoYWNraW5nIGV4cGVyaWVuY2UgdGhlIHNwZWNpZmllZCBzY3JpcHQgZ2VuZXJhdGVzIHdoaWxlIG9ubGluZVxcbiAgICAqICh3aGVuIHRoZSBnYW1lIGlzIG9wZW4sIGRvZXMgbm90IGFwcGx5IGZvciBvZmZsaW5lIGV4cGVyaWVuY2UgZ2FpbnMpLiBSZW1lbWJlciB0aGF0IGFcXG4gICAgKiBzY3JpcHQgaXMgdW5pcXVlbHkgaWRlbnRpZmllZCBieSBib3RoIGl0cyBuYW1lIGFuZCBpdHMgYXJndW1lbnRzLlxcbiAgICAqXFxuICAgICogVGhpcyBmdW5jdGlvbiBjYW4gYWxzbyByZXR1cm4gdGhlIHRvdGFsIGV4cGVyaWVuY2UgZ2FpbiByYXRlIG9mIGFsbCBvZiB5b3VyIGFjdGl2ZVxcbiAgICAqIHNjcmlwdHMgYnkgcnVubmluZyB0aGUgZnVuY3Rpb24gd2l0aCBubyBhcmd1bWVudHMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gc2NyaXB0IC0gRmlsZW5hbWUgb2Ygc2NyaXB0LlxcbiAgICAqIEBwYXJhbSBob3N0IC0gU2VydmVyIG9uIHdoaWNoIHNjcmlwdCBpcyBydW5uaW5nLlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gQXJndW1lbnRzIHRoYXQgdGhlIHNjcmlwdCBpcyBydW5uaW5nIHdpdGguXFxuICAgICogQHJldHVybnMgQW1vdW50IG9mIGhhY2tpbmcgZXhwZXJpZW5jZSB0aGUgc3BlY2lmaWVkIHNjcmlwdCBnZW5lcmF0ZXMgd2hpbGUgb25saW5lLlxcbiAgICAqL1xcbiAgIGdldFNjcmlwdEV4cEdhaW4oKTogbnVtYmVyO1xcbiAgIGdldFNjcmlwdEV4cEdhaW4oc2NyaXB0OiBzdHJpbmcsIGhvc3Q6IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiB0aW1lIGluIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgcGFzc2VkIHNpbmNlIHlvdSBsYXN0IGluc3RhbGxlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqXFxuICAgICogQHJlbWFya3MgUkFNIGNvc3Q6IDAuMDUgR0JcXG4gICAgKiBAcmV0dXJucyBUaW1lIGluIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgcGFzc2VkIHNpbmNlIHlvdSBsYXN0IGluc3RhbGxlZCBBdWdtZW50YXRpb25zLlxcbiAgICAqL1xcbiAgIGdldFRpbWVTaW5jZUxhc3RBdWcoKTogbnVtYmVyO1xcbiBcXG4gICAvKipcXG4gICAgKiBGb3JtYXQgYSBzdHJpbmcuXFxuICAgICpcXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4ZWkvc3ByaW50Zi5qc1xcbiAgICAqIEBwYXJhbSBmb3JtYXQgLSBTdHJpbmcgdG8gZm9ybWF0LlxcbiAgICAqIEBwYXJhbSBhcmdzIC0gRm9ybWF0aW5nIGFyZ3VtZW50cy5cXG4gICAgKiBAcmV0dXJucyBGb3JtYXRlZCB0ZXh0LlxcbiAgICAqL1xcbiAgIHNwcmludGYoZm9ybWF0OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogc3RyaW5nO1xcbiBcXG4gICAvKipcXG4gICAgKiBGb3JtYXQgYSBzdHJpbmcgd2l0aCBhbiBhcnJheSBvZiBhcmd1bWVudHMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogc2VlOiBodHRwczovL2dpdGh1Yi5jb20vYWxleGVpL3NwcmludGYuanNcXG4gICAgKiBAcGFyYW0gZm9ybWF0IC0gU3RyaW5nIHRvIGZvcm1hdC5cXG4gICAgKiBAcGFyYW0gYXJncyAtIEZvcm1hdGluZyBhcmd1bWVudHMuXFxuICAgICogQHJldHVybnMgRm9ybWF0ZWQgdGV4dC5cXG4gICAgKi9cXG4gICB2c3ByaW50Zihmb3JtYXQ6IHN0cmluZywgYXJnczogYW55W10pOiBzdHJpbmc7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEZvcm1hdCBhIG51bWJlclxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIENvbnZlcnRzIGEgbnVtYmVyIGludG8gYSBzdHJpbmcgd2l0aCB0aGUgc3BlY2lmaWVkIGZvcm1hdHRlci5cXG4gICAgKiBUaGlzIHVzZXMgdGhlIG51bWVyYWxqcyBsaWJyYXJ5LCBzbyB0aGUgZm9ybWF0dGVycyBtdXN0IGJlIGNvbXBhdGlibGUgd2l0aCB0aGF0LlxcbiAgICAqIFRoaXMgaXMgdGhlIHNhbWUgZnVuY3Rpb24gdGhhdCB0aGUgZ2FtZSBpdHNlbGYgdXNlcyB0byBkaXNwbGF5IG51bWJlcnMuXFxuICAgICpcXG4gICAgKiBzZWU6IGh0dHA6Ly9udW1lcmFsanMuY29tL1xcbiAgICAqIEBwYXJhbSBuIC0gTnVtYmVyIHRvIGZvcm1hdC5cXG4gICAgKiBAcGFyYW0gZm9ybWF0IC0gRm9ybWF0dGVyLlxcbiAgICAqIEByZXR1cm5zIEZvcm1hdGVkIG51bWJlci5cXG4gICAgKi9cXG4gICBuRm9ybWF0KG46IG51bWJlciwgZm9ybWF0OiBzdHJpbmcpOiBzdHJpbmc7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEZvcm1hdCB0aW1lIHRvIHJlYWRhYmxlIHN0cmluZ1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIEBwYXJhbSBtaWxsaXNlY29uZHMgLSBOdW1iZXIgb2YgbWlsbGlzZWNvbmQgdG8gZm9ybWF0LlxcbiAgICAqIEBwYXJhbSBtaWxsaVByZWNpc2lvbiAtIEZvcm1hdCB0aW1lIHdpdGggc3Vic2Vjb25kIHByZWNpc2lvbiwgZGVmYXVsdHMgdG8gZmFsc2UuXFxuICAgICogQHJldHVybnMgVGhlIGZvcm1hdHRlZCB0aW1lLlxcbiAgICAqL1xcbiAgIHRGb3JtYXQobWlsbGlzZWNvbmRzOiBudW1iZXIsIG1pbGxpUHJlY2lzaW9uPzogYm9vbGVhbik6IHN0cmluZztcXG4gXFxuICAgLyoqXFxuICAgICogUHJvbXB0IHRoZSBwbGF5ZXIgd2l0aCBhIFllcy9ObyBtb2RhbC5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwIEdCXFxuICAgICpcXG4gICAgKiBQcm9tcHRzIHRoZSBwbGF5ZXIgd2l0aCBhIGRpYWxvZyBib3ggd2l0aCB0d28gb3B0aW9uczog4oCcWWVz4oCdIGFuZCDigJxOb+KAnS5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRydWUgaWYgdGhlIHBsYXllciBjbGljayDigJxZZXPigJ0gYW5kIGZhbHNlIGlmXFxuICAgICogdGhlIHBsYXllciBjbGlja3Mg4oCcTm/igJ0uIFRoZSBzY3JpcHTigJlzIGV4ZWN1dGlvbiBpcyBoYWx0ZWQgdW50aWwgdGhlIHBsYXllclxcbiAgICAqIHNlbGVjdHMgb25lIG9mIHRoZSBvcHRpb25zLlxcbiAgICAqXFxuICAgICogQHBhcmFtIHR4dCAtIFRleHQgdG8gYXBwZWFyIGluIHRoZSBwcm9tcHQgZGlhbG9nIGJveC5cXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwbGF5ZXIgY2xpY2sg4oCcWWVz4oCdIGFuZCBmYWxzZSBpZiB0aGUgcGxheWVyIGNsaWNrcyDigJxOb+KAnS5cXG4gICAgKi9cXG4gICBwcm9tcHQodHh0OiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+O1xcbiBcXG4gICAvKipcXG4gICAgKiBPcGVuIHVwIGEgbWVzc2FnZSBib3guXFxuICAgICogQHBhcmFtIG1zZyAtIE1lc3NhZ2UgdG8gYWxlcnQuXFxuICAgICovXFxuICAgYWxlcnQobXNnOiBhbnkpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBRdWV1ZSBhIHRvYXN0IChib3R0b20tcmlnaHQgbm90aWZpY2F0aW9uKS5cXG4gICAgKiBAcGFyYW0gbXNnIC0gTWVzc2FnZSBpbiB0aGUgdG9hc3QuXFxuICAgICogQHBhcmFtIHZhcmlhbnQgLSBUeXBlIG9mIHRvYXN0LCBtdXN0IGJlIG9uZSBvZiBzdWNjZXNzLCBpbmZvLCB3YXJuaW5nLCBlcnJvci4gRGVmYXVsdHMgdG8gc3VjY2Vzcy5cXG4gICAgKiBAcGFyYW0gZHVyYXRpb24gLSBEdXJhdGlvbiBvZiB0b2FzdCBpbiBtcy4gQ2FuIGFsc28gYmUgYG51bGxgIHRvIGNyZWF0ZSBhIHBlcnNpc3RlbnQgdG9hc3QuIERlZmF1bHRzIHRvIDIwMDBcXG4gICAgKi9cXG4gICB0b2FzdChtc2c6IGFueSwgdmFyaWFudD86IHN0cmluZywgZHVyYXRpb24/OiBudW1iZXIgfCBudWxsKTogdm9pZDtcXG4gXFxuICAgLyoqXFxuICAgICogRG93bmxvYWQgYSBmaWxlIGZyb20gdGhlIGludGVybmV0LlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIFJldHJpZXZlcyBkYXRhIGZyb20gYSBVUkwgYW5kIGRvd25sb2FkcyBpdCB0byBhIGZpbGUgb24gdGhlIHNwZWNpZmllZCBzZXJ2ZXIuXFxuICAgICogVGhlIGRhdGEgY2FuIG9ubHkgYmUgZG93bmxvYWRlZCB0byBhIHNjcmlwdCAoLnNjcmlwdCwgLm5zLCAuanMpIG9yIGEgdGV4dCBmaWxlICgudHh0KS5cXG4gICAgKiBJZiB0aGUgZmlsZSBhbHJlYWR5IGV4aXN0cywgaXQgd2lsbCBiZSBvdmVyd3JpdHRlbiBieSB0aGlzIGNvbW1hbmQuXFxuICAgICogTm90ZSB0aGF0IGl0IHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIGRvd25sb2FkIGRhdGEgZnJvbSBtYW55IHdlYnNpdGVzIGJlY2F1c2UgdGhleVxcbiAgICAqIGRvIG5vdCBhbGxvdyBjcm9zcy1vcmlnaW4gcmVzb3VyY2Ugc2hhcmluZyAoQ09SUykuXFxuICAgICpcXG4gICAgKiBJTVBPUlRBTlQ6IFRoaXMgaXMgYW4gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIFByb21pc2UuXFxuICAgICogVGhlIFByb21pc2XigJlzIHJlc29sdmVkIHZhbHVlIHdpbGwgYmUgYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIGRhdGEgd2FzXFxuICAgICogc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCBmcm9tIHRoZSBVUkwuIEJlY2F1c2UgdGhlIGZ1bmN0aW9uIGlzIGFzeW5jIGFuZCByZXR1cm5zIGEgUHJvbWlzZSxcXG4gICAgKiBpdCBpcyByZWNvbW1lbmRlZCB5b3UgdXNlIHdnZXQgaW4gTmV0c2NyaXB0SlMgKE5ldHNjcmlwdCAyLjApLlxcbiAgICAqXFxuICAgICogSW4gTmV0c2NyaXB0SlMsIHlvdSBtdXN0IHByZWZhY2UgYW55IGNhbGwgdG8gd2dldCB3aXRoIHRoZSBhd2FpdCBrZXl3b3JkIChsaWtlIHlvdSB3b3VsZCBoYWNrIG9yIHNsZWVwKS5cXG4gICAgKiB3Z2V0IHdpbGwgc3RpbGwgd29yayBpbiBOZXRzY3JpcHQgMS4wLCBidXQgdGhlIGZ1bmN0aW9ucyBleGVjdXRpb24gd2lsbCBub3QgYmUgc3luY2hyb25vdXNcXG4gICAgKiAoaS5lLiBpdCBtYXkgbm90IGV4ZWN1dGUgd2hlbiB5b3UgZXhwZWN0L3dhbnQgaXQgdG8pLlxcbiAgICAqIEZ1cnRoZXJtb3JlLCBzaW5jZSBQcm9taXNlcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBFUzUsXFxuICAgICogeW91IHdpbGwgbm90IGJlIGFibGUgdG8gcHJvY2VzcyB0aGUgcmV0dXJuZWQgdmFsdWUgb2Ygd2dldCBpbiBOZXRzY3JpcHQgMS4wLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB3Z2V0KFxcXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGFuaWVseXhpZS9iaXRidXJuZXIvbWFzdGVyL1JFQURNRS5tZFxcXCIsIFxcXCJnYW1lX3JlYWRtZS50eHRcXFwiKTtcXG4gICAgKiBgYGBcXG4gICAgKiBAZXhhbXBsZVxcbiAgICAqIGBgYHRzXFxuICAgICogLy8gTlMyOlxcbiAgICAqIGF3YWl0IG5zLndnZXQoXFxcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kYW5pZWx5eGllL2JpdGJ1cm5lci9tYXN0ZXIvUkVBRE1FLm1kXFxcIiwgXFxcImdhbWVfcmVhZG1lLnR4dFxcXCIpO1xcbiAgICAqIGBgYFxcbiAgICAqIEBwYXJhbSB1cmwgLSBVUkwgdG8gcHVsbCBkYXRhIGZyb20uXFxuICAgICogQHBhcmFtIHRhcmdldCAtIEZpbGVuYW1lIHRvIHdyaXRlIGRhdGEgdG8uIE11c3QgYmUgc2NyaXB0IG9yIHRleHQgZmlsZS5cXG4gICAgKiBAcGFyYW0gaG9zdCAtIE9wdGlvbmFsIGhvc3RuYW1lL2lwIG9mIHNlcnZlciBmb3IgdGFyZ2V0IGZpbGUuXFxuICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgZGF0YSB3YXMgc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCBmcm9tIHRoZSBVUkwsIGZhbHNlIG90aGVyd2lzZS5cXG4gICAgKi9cXG4gICB3Z2V0KHVybDogc3RyaW5nLCB0YXJnZXQ6IHN0cmluZywgaG9zdD86IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj47XFxuIFxcbiAgIC8qKlxcbiAgICAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBGYWN0aW9uIGZhdm9yIHJlcXVpcmVkIHRvIGJlIGFibGUgdG8gZG9uYXRlIHRvIGEgZmFjdGlvbi5cXG4gICAgKlxcbiAgICAqIEByZW1hcmtzIFJBTSBjb3N0OiAwLjEgR0JcXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgRmFjdGlvbiBmYXZvciByZXF1aXJlZCB0byBiZSBhYmxlIHRvIGRvbmF0ZSB0byBhIGZhY3Rpb24uXFxuICAgICovXFxuICAgZ2V0RmF2b3JUb0RvbmF0ZSgpOiBudW1iZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY3VycmVudCBCaXRub2RlIG11bHRpcGxpZXJzLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDQgR0JcXG4gICAgKlxcbiAgICAqIFJldHVybnMgYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGN1cnJlbnQgQml0Tm9kZSBtdWx0aXBsaWVycy5cXG4gICAgKiBUaGlzIGZ1bmN0aW9uIHJlcXVpcmVzIHlvdSB0byBiZSBpbiBCaXRub2RlIDUgb3IgaGF2ZSBTb3VyY2UtRmlsZSA1IGluIG9yZGVyIHRvIHJ1bi5cXG4gICAgKiBUaGUgbXVsdGlwbGllcnMgYXJlIHJldHVybmVkIGluIGRlY2ltYWwgZm9ybXMgKGUuZy4gMS41IGluc3RlYWQgb2YgMTUwJSkuXFxuICAgICogVGhlIG11bHRpcGxpZXJzIHJlcHJlc2VudCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBjdXJyZW50IEJpdE5vZGUgYW5kXFxuICAgICogdGhlIG9yaWdpbmFsIEJpdE5vZGUgKEJpdE5vZGUtMSkuXFxuICAgICpcXG4gICAgKiBGb3IgZXhhbXBsZSwgaWYgdGhlIENyaW1lTW9uZXkgbXVsdGlwbGllciBoYXMgYSB2YWx1ZSBvZiAwLjEsIHRoZW4gdGhhdCBtZWFuc1xcbiAgICAqIHRoYXQgY29tbWl0dGluZyBjcmltZXMgaW4gdGhlIGN1cnJlbnQgQml0Tm9kZSB3aWxsIG9ubHkgZ2l2ZSAxMCUgb2YgdGhlIG1vbmV5XFxuICAgICogeW91IHdvdWxkIGhhdmUgcmVjZWl2ZWQgaW4gQml0Tm9kZS0xLlxcbiAgICAqXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIE5TMTpcXG4gICAgKiB2YXIgbXVsdHMgPSBnZXRCaXROb2RlTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChtdWx0cy5TZXJ2ZXJNYXhNb25leSk7XFxuICAgICogcHJpbnQobXVsdHMuSGFja0V4cEdhaW4pO1xcbiAgICAqIGBgYFxcbiAgICAqIEBleGFtcGxlXFxuICAgICogYGBgdHNcXG4gICAgKiAvLyBOUzI6XFxuICAgICogY29uc3Qge1NlcnZlck1heE1vbmV5LCBIYWNrRXhwR2Fpbn0gPSBucy5nZXRCaXROb2RlTXVsdGlwbGllcnMoKTtcXG4gICAgKiBwcmludChTZXJ2ZXJNYXhNb25leSk7XFxuICAgICogcHJpbnQoSGFja0V4cEdhaW4pO1xcbiAgICAqIGBgYFxcbiAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIHRoZSBjdXJyZW50IEJpdE5vZGUgbXVsdGlwbGllcnMuXFxuICAgICovXFxuICAgZ2V0Qml0Tm9kZU11bHRpcGxpZXJzKCk6IEJpdE5vZGVNdWx0aXBsaWVycztcXG4gXFxuICAgLyoqXFxuICAgICogR2V0IGEgbGlzdCBvZiBhY3F1aXJlZCBTb3VyY2UtRmlsZXMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBzb3VyY2UgZmlsZXNcXG4gICAgKlxcbiAgICAqIEByZXR1cm5zIEFycmF5IGNvbnRhaW5pbmcgYW4gb2JqZWN0IHdpdGggbnVtYmVyIGFuZCBsZXZlbCBvZiB0aGUgc291cmNlIGZpbGUuXFxuICAgICovXFxuICAgZ2V0T3duZWRTb3VyY2VGaWxlcygpOiBTb3VyY2VGaWxlTHZsW107XFxuIFxcbiAgIC8qKlxcbiAgICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGxheWVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAuNSBHQlxcbiAgICAqXFxuICAgICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvbiBvbiB0aGUgY3VycmVudCBwbGF5ZXIuXFxuICAgICpcXG4gICAgKiBAcmV0dXJucyBQbGF5ZXIgaW5mb1xcbiAgICAqL1xcbiAgIGdldFBsYXllcigpOiBQbGF5ZXI7XFxuIFxcbiAgIC8qKlxcbiAgICAqIEFkZCBjYWxsYmFjayBmdW5jdGlvbiB3aGVuIHRoZSBzY3JpcHQgZGllc1xcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIE5TMiBleGNsdXNpdmVcXG4gICAgKlxcbiAgICAqIEFkZCBjYWxsYmFjayB0byBiZSBleGVjdXRlZCB3aGVuIHRoZSBzY3JpcHQgZGllcy5cXG4gICAgKi9cXG4gICBhdEV4aXQoZjogKCkgPT4gdm9pZCk6IHZvaWQ7XFxuIFxcbiAgIC8qKlxcbiAgICAqIE1vdmUgYSBmaWxlIG9uIHRoZSB0YXJnZXQgc2VydmVyLlxcbiAgICAqIEByZW1hcmtzXFxuICAgICogUkFNIGNvc3Q6IDAgR0JcXG4gICAgKlxcbiAgICAqIE5TMiBleGNsdXNpdmVcXG4gICAgKlxcbiAgICAqIE1vdmUgdGhlIHNvdXJjZSBmaWxlIHRvIHRoZSBzcGVjaWZpZWQgZGVzdGluYXRpb24gb24gdGhlIHRhcmdldCBzZXJ2ZXIuXFxuICAgICpcXG4gICAgKiBUaGlzIGNvbW1hbmQgb25seSB3b3JrcyBmb3Igc2NyaXB0cyBhbmQgdGV4dCBmaWxlcyAoLnR4dCkuIEl0IGNhbm5vdCwgaG93ZXZlciwgIGJlIHVzZWRcXG4gICAgKiB0byBjb252ZXJ0IGZyb20gc2NyaXB0IHRvIHRleHQgZmlsZSwgb3IgdmljZSB2ZXJzYS5cXG4gICAgKlxcbiAgICAqIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gYmUgdXNlZCB0byByZW5hbWUgZmlsZXMuXFxuICAgICpcXG4gICAgKiBAcGFyYW0gaG9zdCAtIEhvc3Qgb2YgdGFyZ2V0IHNlcnZlci5cXG4gICAgKiBAcGFyYW0gc291cmNlIC0gRmlsZW5hbWUgb2YgdGhlIHNvdXJjZSBmaWxlLlxcbiAgICAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIEZpbGVuYW1lIG9mIHRoZSBkZXN0aW5hdGlvbiBmaWxlLlxcbiAgICAqL1xcbiAgIG12KGhvc3Q6IHN0cmluZywgc291cmNlOiBzdHJpbmcsIGRlc3RpbmF0aW9uOiBzdHJpbmcpOiB2b2lkO1xcbiBcXG4gICAvKipcXG4gICAgKiBQYXJzZSBjb21tYW5kIGxpbmUgZmxhZ3MuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMCBHQlxcbiAgICAqXFxuICAgICogQWxsb3dzIHVuaXggbGlrZSBmbGFnIHBhcnNpbmcuXFxuICAgICogQGV4YW1wbGVcXG4gICAgKiBgYGB0c1xcbiAgICAqIC8vIGV4YW1wbGUuc2NyaXB0XFxuICAgICogdmFyIGRhdGEgPSBmbGFncyhbXFxuICAgICogICAgIFsnZGVsYXknLCAwXSwgLy8gYSBkZWZhdWx0IG51bWJlciBtZWFucyB0aGlzIGZsYWcgaXMgYSBudW1iZXJcXG4gICAgKiAgICAgWydzZXJ2ZXInLCAnZm9vZG5zdHVmZiddLCAvLyAgYSBkZWZhdWx0IHN0cmluZyBtZWFucyB0aGlzIGZsYWcgaXMgYSBzdHJpbmdcXG4gICAgKiAgICAgWydleGNsdWRlJywgW11dLCAvLyBhIGRlZmF1bHQgYXJyYXkgbWVhbnMgdGhpcyBmbGFnIGlzIGEgZGVmYXVsdCBhcnJheSBvZiBzdHJpbmdcXG4gICAgKiAgICAgWydoZWxwJywgZmFsc2VdLCAvLyBhIGRlZmF1bHQgYm9vbGVhbiBtZWFucyB0aGlzIGZsYWcgaXMgYSBib29sZWFuXFxuICAgICogXSk7XFxuICAgICogdHByaW50KGRhdGEpO1xcbiAgICAqXFxuICAgICogLy8gZXhhbXBsZS5uc1xcbiAgICAqIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgICogICBjb25zdCBkYXRhID0gbnMuZmxhZ3MoW1xcbiAgICAqICAgICBbJ2RlbGF5JywgMF0sIC8vIGEgZGVmYXVsdCBudW1iZXIgbWVhbnMgdGhpcyBmbGFnIGlzIGEgbnVtYmVyXFxuICAgICogICAgIFsnc2VydmVyJywgJ2Zvb2Ruc3R1ZmYnXSwgLy8gIGEgZGVmYXVsdCBzdHJpbmcgbWVhbnMgdGhpcyBmbGFnIGlzIGEgc3RyaW5nXFxuICAgICogICAgIFsnZXhjbHVkZScsIFtdXSwgLy8gYSBkZWZhdWx0IGFycmF5IG1lYW5zIHRoaXMgZmxhZyBpcyBhIGRlZmF1bHQgYXJyYXkgb2Ygc3RyaW5nXFxuICAgICogICAgIFsnaGVscCcsIGZhbHNlXSwgLy8gYSBkZWZhdWx0IGJvb2xlYW4gbWVhbnMgdGhpcyBmbGFnIGlzIGEgYm9vbGVhblxcbiAgICAqICAgXSk7XFxuICAgICogICBucy50cHJpbnQoZGF0YSk7XFxuICAgICogfVxcbiAgICAqXFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHRcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJkZWxheVxcXCI6MCxcXFwic2VydmVyXFxcIjpcXFwiZm9vZG5zdHVmZlxcXCIsXFxcImV4Y2x1ZGVcXFwiOltdLFxcXCJoZWxwXFxcIjpmYWxzZX1cXG4gICAgKiAvLyBbaG9tZSB+L10+IHJ1biBleGFtcGxlLnNjcmlwdCAtLWRlbGF5IDMwMDBcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJzZXJ2ZXJcXFwiOlxcXCJmb29kbnN0dWZmXFxcIixcXFwiZXhjbHVkZVxcXCI6W10sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMH1cXG4gICAgKiAvLyBbaG9tZSB+L10+IHJ1biBleGFtcGxlLnNjcmlwdCAtLWRlbGF5IDMwMDAgLS1zZXJ2ZXIgaGFyYWtpcmktc3VzaGlcXG4gICAgKiAvLyB7XFxcIl9cXFwiOltdLFxcXCJleGNsdWRlXFxcIjpbXSxcXFwiaGVscFxcXCI6ZmFsc2UsXFxcImRlbGF5XFxcIjozMDAwLFxcXCJzZXJ2ZXJcXFwiOlxcXCJoYXJha2lyaS1zdXNoaVxcXCJ9XFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHQgLS1kZWxheSAzMDAwIC0tc2VydmVyIGhhcmFraXJpLXN1c2hpIGhlbGxvIHdvcmxkXFxuICAgICogLy8ge1xcXCJfXFxcIjpbXFxcImhlbGxvXFxcIixcXFwid29ybGRcXFwiXSxcXFwiZXhjbHVkZVxcXCI6W10sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMCxcXFwic2VydmVyXFxcIjpcXFwiaGFyYWtpcmktc3VzaGlcXFwifVxcbiAgICAqIC8vIFtob21lIH4vXT4gcnVuIGV4YW1wbGUuc2NyaXB0IC0tZGVsYXkgMzAwMCAtLXNlcnZlciBoYXJha2lyaS1zdXNoaSBoZWxsbyB3b3JsZCAtLWV4Y2x1ZGUgYSAtLWV4Y2x1ZGUgYlxcbiAgICAqIC8vIHtcXFwiX1xcXCI6W1xcXCJoZWxsb1xcXCIsXFxcIndvcmxkXFxcIl0sXFxcImhlbHBcXFwiOmZhbHNlLFxcXCJkZWxheVxcXCI6MzAwMCxcXFwic2VydmVyXFxcIjpcXFwiaGFyYWtpcmktc3VzaGlcXFwiLFxcXCJleGNsdWRlXFxcIjpbXFxcImFcXFwiLFxcXCJiXFxcIl19XFxuICAgICogLy8gW2hvbWUgfi9dPiBydW4gZXhhbXBsZS5zY3JpcHQgLS1oZWxwXFxuICAgICogLy8ge1xcXCJfXFxcIjpbXSxcXFwiZGVsYXlcXFwiOjAsXFxcInNlcnZlclxcXCI6XFxcImZvb2Ruc3R1ZmZcXFwiLFxcXCJleGNsdWRlXFxcIjpbXSxcXFwiaGVscFxcXCI6dHJ1ZX1cXG4gICAgKiBgYGBcXG4gICAgKi9cXG4gICBmbGFncyhzY2hlbWE6IFtzdHJpbmcsIHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmdbXV1bXSk6IGFueTtcXG4gXFxuICAgLyoqXFxuICAgICogU2hhcmUgeW91ciBjb21wdXRlciB3aXRoIHlvdXIgZmFjdGlvbnMuXFxuICAgICogQHJlbWFya3NcXG4gICAgKiBSQU0gY29zdDogMi40IEdCXFxuICAgICpcXG4gICAgKiBJbmNyZWFzZXMgeW91ciByZXAgZ2FpbiBvZiBoYWNraW5nIGNvbnRyYWN0cyB3aGlsZSBzaGFyZSBpcyBjYWxsZWQuXFxuICAgICogU2NhbGVzIHdpdGggdGhyZWFkIGNvdW50LlxcbiAgICAqL1xcbiAgIHNoYXJlKCk6IFByb21pc2U8dm9pZD47XFxuIFxcbiAgIC8qKlxcbiAgICAqIENhbGN1bGF0ZSB5b3VyIHNoYXJlIHBvd2VyLiBCYXNlZCBvbiBhbGwgdGhlIGFjdGl2ZSBzaGFyZSBjYWxscy5cXG4gICAgKiBAcmVtYXJrc1xcbiAgICAqIFJBTSBjb3N0OiAwLjIgR0JcXG4gICAgKi9cXG4gICBnZXRTaGFyZVBvd2VyKCk6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvcnBvcmF0aW9uIE9mZmljZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogUmVxdWlyZXMgdGhlIE9mZmljZSBBUEkgdXBncmFkZSBmcm9tIHlvdXIgY29ycG9yYXRpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgT2ZmaWNlQVBJIHtcXG4gICAvKipcXG4gICAgKiBBc3NpZ24gYW4gZW1wbG95ZWUgdG8gYSBqb2IuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBlbXBsb3llZU5hbWUgLSBuYW1lIG9mIHRoZSBlbXBsb3llZVxcbiAgICAqIEBwYXJhbSBqb2IgLSBOYW1lIG9mIHRoZSBqb2IuXFxuICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgaXMgZnVsZmlsbGVkIHdoZW4gdGhlIGFzc2lnbm1lbnQgaXMgY29tcGxldGUuXFxuICAgICovXFxuICAgYXNzaWduSm9iKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBlbXBsb3llZU5hbWU6IHN0cmluZywgam9iOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xcbiAgIC8qKlxcbiAgICAqIEhpcmUgYW4gZW1wbG95ZWUuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIFRoZSBuZXdseSBoaXJlZCBlbXBsb3llZSwgaWYgYW55XFxuICAgICovXFxuICAgaGlyZUVtcGxveWVlKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nKTogRW1wbG95ZWUgfCB1bmRlZmluZWQ7XFxuICAgLyoqXFxuICAgICogVXBncmFkZSBvZmZpY2Ugc2l6ZS5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHNpemUgLSBBbW91bnQgb2YgcG9zaXRpb25zIHRvIG9wZW5cXG4gICAgKi9cXG4gICB1cGdyYWRlT2ZmaWNlU2l6ZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgc2l6ZTogbnVtYmVyKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBUaHJvdyBhIHBhcnR5IGZvciB5b3VyIGVtcGxveWVlc1xcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gY29zdFBlckVtcGxveWVlIC0gQW1vdW50IHRvIHNwZW5kIHBlciBlbXBsb3llZS5cXG4gICAgKiBAcmV0dXJucyBBbW91bnQgb2YgaGFwcGluZXNzIGluY3JlYXNlZC5cXG4gICAgKi9cXG4gICB0aHJvd1BhcnR5KGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBjb3N0UGVyRW1wbG95ZWU6IG51bWJlcik6IFByb21pc2U8bnVtYmVyPjtcXG4gICAvKipcXG4gICAgKiBCdXkgY29mZmVlIGZvciB5b3VyIGVtcGxveWVlc1xcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2hlbiB0aGUgY29mZmVlIGlzIHNlcnZlZC5cXG4gICAgKi9cXG4gICBidXlDb2ZmZWUoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xcbiAgIC8qKlxcbiAgICAqIEhpcmUgQWRWZXJ0LlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqL1xcbiAgIGhpcmVBZFZlcnQoZGl2aXNpb25OYW1lOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIGEgcmVzZWFyY2hcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcmVzZWFyY2hOYW1lIC0gTmFtZSBvZiB0aGUgcmVzZWFyY2hcXG4gICAgKi9cXG4gICByZXNlYXJjaChkaXZpc2lvbk5hbWU6IHN0cmluZywgcmVzZWFyY2hOYW1lOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIEdldCBkYXRhIGFib3V0IGFuIG9mZmljZVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcmV0dXJucyBPZmZpY2UgZGF0YVxcbiAgICAqL1xcbiAgIGdldE9mZmljZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IE9mZmljZTtcXG4gICAvKipcXG4gICAgKiBHZXQgZGF0YSBhYm91dCBhbiBlbXBsb3llZVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gZW1wbG95ZWVOYW1lIC0gTmFtZSBvZiB0aGUgZW1wbG95ZWVcXG4gICAgKiBAcmV0dXJucyBFbXBsb3llZSBkYXRhXFxuICAgICovXFxuICAgZ2V0RW1wbG95ZWUoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIGVtcGxveWVlTmFtZTogc3RyaW5nKTogRW1wbG95ZWU7XFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBjb3N0IHRvIEhpcmUgQWRWZXJ0XFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHJldHVybnMgQ29zdFxcbiAgICAqL1xcbiAgIGdldEhpcmVBZFZlcnRDb3N0KGRpdmlzaW9uTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgbnVtYmVyIG9mIHRpbWVzIHlvdSBoYXZlIEhpcmVkIEFkVmVydFxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEByZXR1cm5zIE51bWJlciBvZiB0aW1lcyB5b3UgaGF2ZSBIaXJlZCBBZFZlcnRcXG4gICAgKi9cXG4gICBnZXRIaXJlQWRWZXJ0Q291bnQoYWRpdmlzaW9uTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCB0aGUgY29zdCB0byB1bmxvY2sgcmVzZWFyY2hcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldFJlc2VhcmNoQ29zdChkaXZpc2lvbk5hbWU6IHN0cmluZywgcmVzZWFyY2hOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0cyBpZiB5b3UgaGF2ZSB1bmxvY2tlZCBhIHJlc2VhcmNoXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIHRydWUgaXMgdW5sb2NrZWQsIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGhhc1Jlc2VhcmNoZWQoZGl2aXNpb25OYW1lOiBzdHJpbmcsIHJlc2VhcmNoTmFtZTogc3RyaW5nKTogYm9vbGVhbjtcXG4gICAvKipcXG4gICAgKiBTZXQgdGhlIGF1dG8gam9iIGFzc2lnbm1lbnQgZm9yIGEgam9iXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBqb2IgLSBOYW1lIG9mIHRoZSBqb2JcXG4gICAgKiBAcGFyYW0gYW1vdW50IC0gTnVtYmVyIG9mIGVtcGxveWVlcyB0byBhc3NpZ24gdG8gdGhhdCBqb2JcXG4gICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2hlbiB0aGUgYXNzaWdubWVudCBpcyBjb21wbGV0ZS5cXG4gICAgKi9cXG4gICBzZXRBdXRvSm9iQXNzaWdubWVudChkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgam9iOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyKTogUHJvbWlzZTxib29sZWFuPjtcXG4gICAvKipcXG4gICAgKiBDb3N0IHRvIFVwZ3JhZGUgb2ZmaWNlIHNpemUuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBzaXplIC0gQW1vdW50IG9mIHBvc2l0aW9ucyB0byBvcGVuXFxuICAgICogQHJldHVybnMgQ29zdCBvZiB1cGdyYWRpbmcgdGhlIG9mZmljZVxcbiAgICAqL1xcbiAgIGdldE9mZmljZVNpemVVcGdyYWRlQ29zdChkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgYXNpemU6IG51bWJlcik6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIENvcnBvcmF0aW9uIFdhcmVob3VzZSBBUElcXG4gICogQHJlbWFya3NcXG4gICogUmVxdWlyZXMgdGhlIFdhcmVob3VzZSBBUEkgdXBncmFkZSBmcm9tIHlvdXIgY29ycG9yYXRpb24uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgV2FyZWhvdXNlQVBJIHtcXG4gICAvKipcXG4gICAgKiBTZXQgbWF0ZXJpYWwgc2VsbCBkYXRhLlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gYW10IC0gQW1vdW50IHRvIHNlbGwsIGNhbiBiZSBcXFwiTUFYXFxcIlxcbiAgICAqIEBwYXJhbSBwcmljZSAtIFByaWNlIHRvIHNlbGwsIGNhbiBiZSBcXFwiTVBcXFwiXFxuICAgICovXFxuICAgc2VsbE1hdGVyaWFsKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBtYXRlcmlhbE5hbWU6IHN0cmluZywgYW10OiBzdHJpbmcsIHByaWNlOiBzdHJpbmcpOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBwcm9kdWN0IHNlbGwgZGF0YS5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBhbXQgLSBBbW91bnQgdG8gc2VsbCwgY2FuIGJlIFxcXCJNQVhcXFwiXFxuICAgICogQHBhcmFtIHByaWNlIC0gUHJpY2UgdG8gc2VsbCwgY2FuIGJlIFxcXCJNUFxcXCJcXG4gICAgKiBAcGFyYW0gYWxsIC0gU2VsbCBpbiBhbGwgY2l0eVxcbiAgICAqL1xcbiAgIHNlbGxQcm9kdWN0KFxcbiAgICAgZGl2aXNpb25OYW1lOiBzdHJpbmcsXFxuICAgICBjaXR5TmFtZTogc3RyaW5nLFxcbiAgICAgcHJvZHVjdE5hbWU6IHN0cmluZyxcXG4gICAgIGFtdDogc3RyaW5nLFxcbiAgICAgcHJpY2U6IHN0cmluZyxcXG4gICAgIGFsbDogYm9vbGVhbixcXG4gICApOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIERpc2NvbnRpbnVlIGEgcHJvZHVjdC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICovXFxuICAgZGlzY29udGludWVQcm9kdWN0KGRpdmlzaW9uTmFtZTogc3RyaW5nLCBwcm9kdWN0TmFtZTogc3RyaW5nKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBTZXQgc21hcnQgc3VwcGx5XFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBlbmFibGVkIC0gc21hcnQgc3VwcGx5IGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRTbWFydFN1cHBseShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgZW5hYmxlZDogYm9vbGVhbik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogU2V0IG1hdGVyaWFsIGJ1eSBkYXRhXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEBwYXJhbSBtYXRlcmlhbE5hbWUgLSBOYW1lIG9mIHRoZSBtYXRlcmlhbFxcbiAgICAqIEBwYXJhbSBhbXQgLSBBbW91bnQgb2YgbWF0ZXJpYWwgdG8gYnV5XFxuICAgICovXFxuICAgYnV5TWF0ZXJpYWwoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIG1hdGVyaWFsTmFtZTogc3RyaW5nLCBhbXQ6IG51bWJlcik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogR2V0IHdhcmVob3VzZSBkYXRhXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIGNpdHlOYW1lIC0gTmFtZSBvZiB0aGUgY2l0eVxcbiAgICAqIEByZXR1cm5zIHdhcmVob3VzZSBkYXRhXFxuICAgICovXFxuICAgZ2V0V2FyZWhvdXNlKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nKTogV2FyZWhvdXNlO1xcbiAgIC8qKlxcbiAgICAqIEdldCBwcm9kdWN0IGRhdGFcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICogQHJldHVybnMgcHJvZHVjdCBkYXRhXFxuICAgICovXFxuICAgZ2V0UHJvZHVjdChkaXZpc2lvbk5hbWU6IHN0cmluZywgcHJvZHVjdE5hbWU6IHN0cmluZyk6IFByb2R1Y3Q7XFxuICAgLyoqXFxuICAgICogR2V0IG1hdGVyaWFsIGRhdGFcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcmV0dXJucyBtYXRlcmlhbCBkYXRhXFxuICAgICovXFxuICAgZ2V0TWF0ZXJpYWwoZGl2aXNpb25OYW1lOiBzdHJpbmcsIGNpdHlOYW1lOiBzdHJpbmcsIG1hdGVyaWFsTmFtZTogc3RyaW5nKTogTWF0ZXJpYWw7XFxuICAgLyoqXFxuICAgICogU2V0IG1hcmtldCBUQSAxIGZvciBhIG1hdGVyaWFsLlxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gb24gLSBtYXJrZXQgdGEgZW5hYmxlZFxcbiAgICAqL1xcbiAgIHNldE1hdGVyaWFsTWFya2V0VEExKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBjaXR5TmFtZTogc3RyaW5nLCBtYXRlcmlhbE5hbWU6IHN0cmluZywgb246IGJvb2xlYW4pOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBtYXJrZXQgVEEgMiBmb3IgYSBtYXRlcmlhbC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIG1hdGVyaWFsTmFtZSAtIE5hbWUgb2YgdGhlIG1hdGVyaWFsXFxuICAgICogQHBhcmFtIG9uIC0gbWFya2V0IHRhIGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRNYXRlcmlhbE1hcmtldFRBMihkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZywgbWF0ZXJpYWxOYW1lOiBzdHJpbmcsIG9uOiBib29sZWFuKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBTZXQgbWFya2V0IFRBIDEgZm9yIGEgcHJvZHVjdC5cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gcHJvZHVjdE5hbWUgLSBOYW1lIG9mIHRoZSBwcm9kdWN0XFxuICAgICogQHBhcmFtIG9uIC0gbWFya2V0IHRhIGVuYWJsZWRcXG4gICAgKi9cXG4gICBzZXRQcm9kdWN0TWFya2V0VEExKGRpdmlzaW9uTmFtZTogc3RyaW5nLCBwcm9kdWN0TmFtZTogc3RyaW5nLCBvbjogYm9vbGVhbik6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogU2V0IG1hcmtldCBUQSAyIGZvciBhIHByb2R1Y3QuXFxuICAgICogQHBhcmFtIGRpdmlzaW9uTmFtZSAtIE5hbWUgb2YgdGhlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBvbiAtIG1hcmtldCB0YSBlbmFibGVkXFxuICAgICovXFxuICAgc2V0UHJvZHVjdE1hcmtldFRBMihkaXZpc2lvbk5hbWU6IHN0cmluZywgcHJvZHVjdE5hbWU6IHN0cmluZywgb246IGJvb2xlYW4pOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFNldCBtYXRlcmlhbCBleHBvcnQgZGF0YVxcbiAgICAqIEBwYXJhbSBzb3VyY2VEaXZpc2lvbiAtIFNvdXJjZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBzb3VyY2VDaXR5IC0gU291cmNlIGNpdHlcXG4gICAgKiBAcGFyYW0gdGFyZ2V0RGl2aXNpb24gLSBUYXJnZXQgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gdGFyZ2V0Q2l0eSAtIFRhcmdldCBjaXR5XFxuICAgICogQHBhcmFtIG1hdGVyaWFsTmFtZSAtIE5hbWUgb2YgdGhlIG1hdGVyaWFsXFxuICAgICogQHBhcmFtIGFtdCAtIEFtb3VudCBvZiBtYXRlcmlhbCB0byBleHBvcnQuXFxuICAgICovXFxuICAgZXhwb3J0TWF0ZXJpYWwoXFxuICAgICBzb3VyY2VEaXZpc2lvbjogc3RyaW5nLFxcbiAgICAgc291cmNlQ2l0eTogc3RyaW5nLFxcbiAgICAgdGFyZ2V0RGl2aXNpb246IHN0cmluZyxcXG4gICAgIHRhcmdldENpdHk6IHN0cmluZyxcXG4gICAgIG1hdGVyaWFsTmFtZTogc3RyaW5nLFxcbiAgICAgYW10OiBudW1iZXIsXFxuICAgKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBDYW5jZWwgbWF0ZXJpYWwgZXhwb3J0XFxuICAgICogQHBhcmFtIHNvdXJjZURpdmlzaW9uIC0gU291cmNlIGRpdmlzaW9uXFxuICAgICogQHBhcmFtIHNvdXJjZUNpdHkgLSBTb3VyY2UgY2l0eVxcbiAgICAqIEBwYXJhbSB0YXJnZXREaXZpc2lvbiAtIFRhcmdldCBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSB0YXJnZXRDaXR5IC0gVGFyZ2V0IGNpdHlcXG4gICAgKiBAcGFyYW0gbWF0ZXJpYWxOYW1lIC0gTmFtZSBvZiB0aGUgbWF0ZXJpYWxcXG4gICAgKiBAcGFyYW0gYW10IC0gQW1vdW50IG9mIG1hdGVyaWFsIHRvIGV4cG9ydC5cXG4gICAgKi9cXG4gICBjYW5jZWxFeHBvcnRNYXRlcmlhbChcXG4gICAgIHNvdXJjZURpdmlzaW9uOiBzdHJpbmcsXFxuICAgICBzb3VyY2VDaXR5OiBzdHJpbmcsXFxuICAgICB0YXJnZXREaXZpc2lvbjogc3RyaW5nLFxcbiAgICAgdGFyZ2V0Q2l0eTogc3RyaW5nLFxcbiAgICAgbWF0ZXJpYWxOYW1lOiBzdHJpbmcsXFxuICAgICBhbXQ6IG51bWJlcixcXG4gICApOiB2b2lkO1xcbiAgIC8qKlxcbiAgICAqIFB1cmNoYXNlIHdhcmVob3VzZSBmb3IgYSBuZXcgY2l0eVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEBwYXJhbSBjaXR5TmFtZSAtIE5hbWUgb2YgdGhlIGNpdHlcXG4gICAgKi9cXG4gICBwdXJjaGFzZVdhcmVob3VzZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogVXBncmFkZSB3YXJlaG91c2VcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICovXFxuICAgdXBncmFkZVdhcmVob3VzZShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgbmV3IHByb2R1Y3RcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICogQHBhcmFtIHByb2R1Y3ROYW1lIC0gTmFtZSBvZiB0aGUgcHJvZHVjdFxcbiAgICAqIEBwYXJhbSBkZXNpZ25JbnZlc3QgLSBBbW91bnQgdG8gaW52ZXN0IGZvciB0aGUgZGVzaWduIG9mIHRoZSBwcm9kdWN0LlxcbiAgICAqIEBwYXJhbSBtYXJrZXRpbmdJbnZlc3QgLSBBbW91bnQgdG8gaW52ZXN0IGZvciB0aGUgbWFya2V0aW5nIG9mIHRoZSBwcm9kdWN0LlxcbiAgICAqL1xcbiAgIG1ha2VQcm9kdWN0KFxcbiAgICAgZGl2aXNpb25OYW1lOiBzdHJpbmcsXFxuICAgICBjaXR5TmFtZTogc3RyaW5nLFxcbiAgICAgcHJvZHVjdE5hbWU6IHN0cmluZyxcXG4gICAgIGRlc2lnbkludmVzdDogbnVtYmVyLFxcbiAgICAgbWFya2V0aW5nSW52ZXN0OiBudW1iZXIsXFxuICAgKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIHB1cmNoYXNlIGEgd2FyZWhvdXNlXFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldFB1cmNoYXNlV2FyZWhvdXNlQ29zdCgpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0cyB0aGUgY29zdCB0byB1cGdyYWRlIGEgd2FyZWhvdXNlIHRvIHRoZSBuZXh0IGxldmVsXFxuICAgICogQHJldHVybnMgY29zdCB0byB1cGdyYWRlXFxuICAgICovXFxuICAgZ2V0VXBncmFkZVdhcmVob3VzZUNvc3QoYWRpdmlzaW9uTmFtZTogYW55LCBhY2l0eU5hbWU6IGFueSk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBDaGVjayBpZiB5b3UgaGF2ZSBhIHdhcmVob3VzZSBpbiBjaXR5XFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB3YXJlaG91c2UgaXMgcHJlc2VudCwgZmFsc2UgaWYgbm90XFxuICAgICovXFxuICAgaGFzV2FyZWhvdXNlKGFkaXZpc2lvbk5hbWU6IGFueSwgYWNpdHlOYW1lOiBhbnkpOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gQVBJXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGV4cG9ydCBpbnRlcmZhY2UgQ29ycG9yYXRpb24gZXh0ZW5kcyBXYXJlaG91c2VBUEksIE9mZmljZUFQSSB7XFxuICAgLyoqXFxuICAgICogQ3JlYXRlIGEgQ29ycG9yYXRpb25cXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gc2VsZkZ1bmQgLSBJZiB5b3Ugc2hvdWxkIHNlbGYgZnVuZCwgZGVmYXVsdHMgdG8gdHJ1ZSwgZmFsc2Ugd2lsbCBvbmx5IHdvcmsgb24gQml0bm9kZSAzXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiBjcmVhdGVkIGFuZCBmYWxzZSBpZiBub3RcXG4gICAgKi9cXG4gICBjcmVhdGVDb3Jwb3JhdGlvbihjb3Jwb3JhdGlvbk5hbWU6IHN0cmluZywgc2VsZkZ1bmQ6IGJvb2xlYW4pOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIENoZWNrIGlmIHlvdSBoYXZlIGEgb25lIHRpbWUgdW5sb2NrYWJsZSB1cGdyYWRlXFxuICAgICogQHBhcmFtIHVwZ3JhZGVOYW1lIC0gTmFtZSBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIHRydWUgaWYgdW5sb2NrZWQgYW5kIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGhhc1VubG9ja1VwZ3JhZGUodXBncmFkZU5hbWU6IHN0cmluZyk6IGJvb2xlYW47XFxuICAgLyoqXFxuICAgICogR2V0cyB0aGUgY29zdCB0byB1bmxvY2sgYSBvbmUgdGltZSB1bmxvY2thYmxlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICogQHJldHVybnMgY29zdCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVubG9ja1VwZ3JhZGVDb3N0KHVwZ3JhZGVOYW1lOiBzdHJpbmcpOiBudW1iZXI7XFxuICAgLyoqXFxuICAgICogR2V0IHRoZSBsZXZlbCBvZiBhIGxldmVsYWJsZSB1cGdyYWRlXFxuICAgICogQHBhcmFtIHVwZ3JhZGVOYW1lIC0gTmFtZSBvZiB0aGUgdXBncmFkZVxcbiAgICAqIEByZXR1cm5zIHRoZSBsZXZlbCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVwZ3JhZGVMZXZlbCh1cGdyYWRlTmFtZTogc3RyaW5nKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldHMgdGhlIGNvc3QgdG8gdW5sb2NrIHRoZSBuZXh0IGxldmVsIG9mIGEgbGV2ZWxhYmxlIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICogQHJldHVybnMgY29zdCBvZiB0aGUgdXBncmFkZVxcbiAgICAqL1xcbiAgIGdldFVwZ3JhZGVMZXZlbENvc3QodXBncmFkZU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIGV4cGFuZCBpbnRvIGEgbmV3IGluZHVzdHJ5XFxuICAgICogQHBhcmFtIGluZHVzdHJ5TmFtZSAtIE5hbWUgb2YgdGhlIGluZHVzdHJ5XFxuICAgICogQHJldHVybnMgY29zdFxcbiAgICAqL1xcbiAgIGdldEV4cGFuZEluZHVzdHJ5Q29zdChpbmR1c3RyeU5hbWU6IHN0cmluZyk6IG51bWJlcjtcXG4gICAvKipcXG4gICAgKiBHZXRzIHRoZSBjb3N0IHRvIGV4cGFuZCBpbnRvIGEgbmV3IGNpdHlcXG4gICAgKiBAcmV0dXJucyBjb3N0XFxuICAgICovXFxuICAgZ2V0RXhwYW5kQ2l0eUNvc3QoKTogbnVtYmVyO1xcbiAgIC8qKlxcbiAgICAqIEdldCBhbiBvZmZlciBmb3IgaW52ZXN0bWVudCBiYXNlZCBvbiB5b3UgY29tcGFuaWVzIGN1cnJlbnQgdmFsdWF0aW9uXFxuICAgICogQHJldHVybnMgQW4gb2ZmZXIgb2YgaW52ZXN0bWVudFxcbiAgICAqL1xcbiAgIGdldEludmVzdG1lbnRPZmZlcigpOiBJbnZlc3RtZW50T2ZmZXI7XFxuICAgLyoqXFxuICAgICogQWNjZXB0IGludmVzdG1lbnQgYmFzZWQgb24geW91IGNvbXBhbmllcyBjdXJyZW50IHZhbHVhdGlvblxcbiAgICAqIEByZW1hcmtzXFxuICAgICogSXMgYmFzZWQgb24gY3VycmVudCB2YWx1YXRpb24gYW5kIHdpbGwgbm90IGhvbmVyIGEgc3BlY2lmaWMgT2ZmZXJcXG4gICAgKiBAcmV0dXJucyBBbiBvZmZlciBvZiBpbnZlc3RtZW50XFxuICAgICovXFxuICAgYWNjZXB0SW52ZXN0bWVudE9mZmVyKCk6IGJvb2xlYW47XFxuICAgLyoqXFxuICAgICogR28gcHVibGljXFxuICAgICogQHBhcmFtIG51bVNoYXJlcyAtIG51bWJlciBvZiBzaGFyZXMgeW91IHdvdWxkIGxpa2UgdG8gaXNzdWUgZm9yIHlvdXIgSVBPXFxuICAgICogQHJldHVybnMgdHJ1ZSBpZiB5b3Ugc3VjY2Vzc2Z1bGx5IGdvIHB1YmxpYywgZmFsc2UgaWYgbm90XFxuICAgICovXFxuICAgZ29QdWJsaWMobnVtU2hhcmVzOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEJyaWJlIGEgZmFjdGlvblxcbiAgICAqIEBwYXJhbSBmYWN0aW9uTmFtZSAtIEZhY3Rpb24gbmFtZVxcbiAgICAqIEBwYXJhbSBhbW91bnRDYXNoIC0gQW1vdW50IG9mIG1vbmV5IHRvIGJyaWJlXFxuICAgICogQHBhcmFtIGFtb3VudFNoYXJlcyAtIEFtb3VudCBvZiBzaGFyZXMgdG8gYnJpYmVcXG4gICAgKiBAcmV0dXJucyBUcnVlIGlmIHN1Y2Nlc3NmdWwsIGZhbHNlIGlmIG5vdFxcbiAgICAqL1xcbiAgIGJyaWJlKGZhY3Rpb25OYW1lOiBzdHJpbmcsIGFtb3VudENhc2g6IG51bWJlciwgYW1vdW50U2hhcmVzOiBudW1iZXIpOiBib29sZWFuO1xcbiAgIC8qKlxcbiAgICAqIEdldCBjb3Jwb3JhdGlvbiBkYXRhXFxuICAgICogQHJldHVybnMgQ29ycG9yYXRpb24gZGF0YVxcbiAgICAqL1xcbiAgIGdldENvcnBvcmF0aW9uKCk6IENvcnBvcmF0aW9uSW5mbztcXG4gICAvKipcXG4gICAgKiBHZXQgZGl2aXNpb24gZGF0YVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqIEByZXR1cm5zIERpdmlzaW9uIGRhdGFcXG4gICAgKi9cXG4gICBnZXREaXZpc2lvbihkaXZpc2lvbk5hbWU6IHN0cmluZyk6IERpdmlzaW9uO1xcbiAgIC8qKlxcbiAgICAqIEV4cGFuZCB0byBhIG5ldyBpbmR1c3RyeVxcbiAgICAqIEBwYXJhbSBpbmR1c3RyeVR5cGUgLSBOYW1lIG9mIHRoZSBpbmR1c3RyeVxcbiAgICAqIEBwYXJhbSBkaXZpc2lvbk5hbWUgLSBOYW1lIG9mIHRoZSBkaXZpc2lvblxcbiAgICAqL1xcbiAgIGV4cGFuZEluZHVzdHJ5KGluZHVzdHJ5VHlwZTogc3RyaW5nLCBkaXZpc2lvbk5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogRXhwYW5kIHRvIGEgbmV3IGNpdHlcXG4gICAgKiBAcGFyYW0gZGl2aXNpb25OYW1lIC0gTmFtZSBvZiB0aGUgZGl2aXNpb25cXG4gICAgKiBAcGFyYW0gY2l0eU5hbWUgLSBOYW1lIG9mIHRoZSBjaXR5XFxuICAgICovXFxuICAgZXhwYW5kQ2l0eShkaXZpc2lvbk5hbWU6IHN0cmluZywgY2l0eU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogVW5sb2NrIGFuIHVwZ3JhZGVcXG4gICAgKiBAcGFyYW0gdXBncmFkZU5hbWUgLSBOYW1lIG9mIHRoZSB1cGdyYWRlXFxuICAgICovXFxuICAgdW5sb2NrVXBncmFkZSh1cGdyYWRlTmFtZTogc3RyaW5nKTogdm9pZDtcXG4gICAvKipcXG4gICAgKiBMZXZlbCBhbiB1cGdyYWRlLlxcbiAgICAqIEBwYXJhbSB1cGdyYWRlTmFtZSAtIE5hbWUgb2YgdGhlIHVwZ3JhZGVcXG4gICAgKi9cXG4gICBsZXZlbFVwZ3JhZGUodXBncmFkZU5hbWU6IHN0cmluZyk6IHZvaWQ7XFxuICAgLyoqXFxuICAgICogSXNzdWUgZGl2aWRlbmRzXFxuICAgICogQHBhcmFtIHBlcmNlbnQgLSBQZXJjZW50IG9mIHByb2ZpdCB0byBpc3N1ZSBhcyBkaXZpZGVuZHMuXFxuICAgICovXFxuICAgaXNzdWVEaXZpZGVuZHMocGVyY2VudDogbnVtYmVyKTogdm9pZDtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdlbmVyYWwgaW5mbyBhYm91dCBhIGNvcnBvcmF0aW9uXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBDb3Jwb3JhdGlvbkluZm8ge1xcbiAgIC8qKiBOYW1lIG9mIHRoZSBjb3Jwb3JhdGlvbiAqL1xcbiAgIG5hbWU6IHN0cmluZztcXG4gICAvKiogRnVuZHMgYXZhaWxhYmxlICovXFxuICAgZnVuZHM6IG51bWJlcjtcXG4gICAvKiogUmV2ZW51ZSBwZXIgc2Vjb25kIHRoaXMgY3ljbGUgKi9cXG4gICByZXZlbnVlOiBudW1iZXI7XFxuICAgLyoqIEV4cGVuc2VzIHBlciBzZWNvbmQgdGhpcyBjeWNsZSAqL1xcbiAgIGV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIEluZGljYXRpbmcgaWYgdGhlIGNvbXBhbnkgaXMgcHVibGljICovXFxuICAgcHVibGljOiBib29sZWFuO1xcbiAgIC8qKiBUb3RhbCBudW1iZXIgb2Ygc2hhcmVzIGlzc3VlcyBieSB0aGlzIGNvcnBvcmF0aW9uICovXFxuICAgdG90YWxTaGFyZXM6IG51bWJlcjtcXG4gICAvKiogQW1vdW50IG9mIHNoYXJlIG93bmVkICovXFxuICAgbnVtU2hhcmVzOiBudW1iZXI7XFxuICAgLyoqIENvb2xkb3duIHVudGlsIHNoYXJlcyBjYW4gYmUgc29sZCBhZ2FpbiAqL1xcbiAgIHNoYXJlU2FsZUNvb2xkb3duOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBzaGFyZXMgaXNzdWVkICovXFxuICAgaXNzdWVkU2hhcmVzOiBudW1iZXI7XFxuICAgLyoqIFByaWNlIG9mIHRoZSBzaGFyZXMgKi9cXG4gICBzaGFyZVByaWNlOiBudW1iZXI7XFxuICAgLyoqIFN0YXRlIG9mIHRoZSBjb3Jwb3JhdGlvbi4gUG9zc2libGUgc3RhdGVzIGFyZSBTVEFSVCwgUFVSQ0hBU0UsIFBST0RVQ1RJT04sIFNBTEUsIEVYUE9SVC4gKi9cXG4gICBzdGF0ZTogc3RyaW5nO1xcbiAgIC8qKiBBcnJheSBvZiBhbGwgZGl2aXNpb25zICovXFxuICAgZGl2aXNpb25zOiBEaXZpc2lvbltdO1xcbiB9XFxuIFxcbiAvKipcXG4gICogRW1wbG95ZWUgaW4gYW4gb2ZmaWNlXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBFbXBsb3llZSB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIGVtcGxveWVlICovXFxuICAgbmFtZTogc3RyaW5nO1xcbiAgIC8qKiBNb3JhbGUgKi9cXG4gICBtb3I6IG51bWJlcjtcXG4gICAvKiogSGFwcGluZXNzICovXFxuICAgaGFwOiBudW1iZXI7XFxuICAgLyoqIEVuZXJneSAqL1xcbiAgIGVuZTogbnVtYmVyO1xcbiAgIGludDogbnVtYmVyO1xcbiAgIGNoYTogbnVtYmVyO1xcbiAgIGV4cDogbnVtYmVyO1xcbiAgIGNyZTogbnVtYmVyO1xcbiAgIGVmZjogbnVtYmVyO1xcbiAgIC8qKiBTYWxhcnkgKi9cXG4gICBzYWw6IG51bWJlcjtcXG4gICAvKiogQ2l0eSAqL1xcbiAgIGxvYzogc3RyaW5nO1xcbiAgIC8qKiBDdXJyZW50IGpvYiAqL1xcbiAgIHBvczogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogUHJvZHVjdCBpbiBhIHdhcmVob3VzZVxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgUHJvZHVjdCB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIHByb2R1Y3QgKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIERlbWFuZCBmb3IgdGhlIHByb2R1Y3QgKi9cXG4gICBkbWQ6IG51bWJlcjtcXG4gICAvKiogQ29tcGV0aXRpb24gZm9yIHRoZSBwcm9kdWN0ICovXFxuICAgY21wOiBudW1iZXI7XFxuICAgLyoqIFByb2R1Y3Rpb24gY29zdCAqL1xcbiAgIHBDb3N0OiBudW1iZXI7XFxuICAgLyoqIFNlbGwgY29zdCwgY2FuIGJlIFxcXCJNUCs1XFxcIiAqL1xcbiAgIHNDb3N0OiBzdHJpbmcgfCBudW1iZXI7XFxuICAgLyoqIERhdGEgcmVmZXJzIHRvIHRoZSBwcm9kdWN0aW9uLCBzYWxlLCBhbmQgcXVhbnRpdHkgb2YgdGhlIHByb2R1Y3RzXFxuICAgICogVGhlc2UgdmFsdWVzIGFyZSBzcGVjaWZpYyB0byBhIGNpdHlcXG4gICAgKiBGb3IgZWFjaCBjaXR5LCB0aGUgZGF0YSBpcyBbcXR5LCBwcm9kLCBzZWxsXSAqL1xcbiAgIGNpdHlEYXRhOiB7IFtrZXk6IHN0cmluZ106IG51bWJlcltdIH07XFxuICAgLyoqIENyZWF0aW9uIHByb2dyZXNzIC0gQSBudW1iZXIgYmV0d2VlbiAwLTEwMCByZXByZXNlbnRpbmcgcGVyY2VudGFnZSAqL1xcbiAgIGRldmVsb3BtZW50UHJvZ3Jlc3M6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIE1hdGVyaWFsIGluIGEgd2FyZWhvdXNlXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBNYXRlcmlhbCB7XFxuICAgLyoqIE5hbWUgb2YgdGhlIG1hdGVyaWFsICovXFxuICAgbmFtZTogc3RyaW5nO1xcbiAgIC8qKiBBbW91bnQgb2YgbWF0ZXJpYWwgICovXFxuICAgcXR5OiBudW1iZXI7XFxuICAgLyoqIFF1YWxpdHkgb2YgdGhlIG1hdGVyaWFsICovXFxuICAgcWx0OiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBtYXRlcmlhbCBwcm9kdWNlZCAgKi9cXG4gICBwcm9kOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBtYXRlcmlhbCBzb2xkICAqL1xcbiAgIHNlbGw6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIFdhcmVob3VzZSBmb3IgYSBkaXZpc2lvbiBpbiBhIGNpdHlcXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIFdhcmVob3VzZSB7XFxuICAgLyoqIEFtb3VudCBvZiBzaXplIHVwZ3JhZGUgYm91Z2h0ICovXFxuICAgbGV2ZWw6IG51bWJlcjtcXG4gICAvKiogQ2l0eSBpbiB3aGljaCB0aGUgd2FyZWhvdXNlIGlzIGxvY2F0ZWQgKi9cXG4gICBsb2M6IHN0cmluZztcXG4gICAvKiogVG90YWwgc3BhY2UgaW4gdGhlIHdhcmVob3VzZSAqL1xcbiAgIHNpemU6IG51bWJlcjtcXG4gICAvKiogVXNlZCBzcGFjZSBpbiB0aGUgd2FyZWhvdXNlICovXFxuICAgc2l6ZVVzZWQ6IG51bWJlcjtcXG4gICAvKiogU21hcnQgU3VwcGx5IHN0YXR1cyBpbiB0aGUgd2FyZWhvdXNlICovXFxuICAgc21hcnRTdXBwbHlFbmFibGVkOiBib29sZWFuO1xcbiB9XFxuIFxcbiAvKipcXG4gICogT2ZmaWNlIGZvciBhIGRpdmlzaW9uIGluIGEgY2l0eS5cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIE9mZmljZSB7XFxuICAgLyoqIENpdHkgb2YgdGhlIG9mZmljZSAqL1xcbiAgIGxvYzogc3RyaW5nO1xcbiAgIC8qKiBNYXhpbXVtIG51bWJlciBvZiBlbXBsb3llZSAqL1xcbiAgIHNpemU6IG51bWJlcjtcXG4gICAvKiogTWluaW11bSBhbW91bnQgb2YgZW5lcmd5IG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtaW5FbmU6IG51bWJlcjtcXG4gICAvKiogTWF4aW11bSBhbW91bnQgb2YgZW5lcmd5IG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtYXhFbmU6IG51bWJlcjtcXG4gICAvKiogTWluaW11bSBoYXBwaW5lc3Mgb2YgdGhlIGVtcGxveWVlcyAqL1xcbiAgIG1pbkhhcDogbnVtYmVyO1xcbiAgIC8qKiBNYXhpbXVtIGhhcHBpbmVzcyBvZiB0aGUgZW1wbG95ZWVzICovXFxuICAgbWF4SGFwOiBudW1iZXI7XFxuICAgLyoqIE1heGltdW0gbW9yYWxlIG9mIHRoZSBlbXBsb3llZXMgKi9cXG4gICBtYXhNb3I6IG51bWJlcjtcXG4gICAvKiogTmFtZSBvZiBhbGwgdGhlIGVtcGxveWVlcyAqL1xcbiAgIGVtcGxveWVlczogc3RyaW5nW107XFxuICAgLyoqIFBvc2l0aW9ucyBvZiB0aGUgZW1wbG95ZWVzICovXFxuICAgZW1wbG95ZWVQcm9kOiBFbXBsb3llZUpvYnM7XFxuIH1cXG4gXFxuIC8qKlxcbiAgKiBPYmplY3QgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgb2YgZW1wbG95ZWUgaW4gZWFjaCBqb2IuXFxuICAqIEBwdWJsaWNcXG4gICovXFxuIGludGVyZmFjZSBFbXBsb3llZUpvYnMge1xcbiAgIE9wZXJhdGlvbnM6IG51bWJlcjtcXG4gICBFbmdpbmVlcjogbnVtYmVyO1xcbiAgIEJ1c2luZXNzOiBudW1iZXI7XFxuICAgTWFuYWdlbWVudDogbnVtYmVyO1xcbiAgIFxcXCJSZXNlYXJjaCAmIERldmVsb3BtZW50XFxcIjogbnVtYmVyO1xcbiAgIFRyYWluaW5nOiBudW1iZXI7XFxuICAgVW5hc3NpZ25lZDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gZGl2aXNpb25cXG4gICogQHB1YmxpY1xcbiAgKi9cXG4gaW50ZXJmYWNlIERpdmlzaW9uIHtcXG4gICAvKiogTmFtZSBvZiB0aGUgZGl2aXNpb24gKi9cXG4gICBuYW1lOiBzdHJpbmc7XFxuICAgLyoqIFR5cGUgb2YgZGl2aXNpb24sIGxpa2UgQWdncmljdWx0dXJlICovXFxuICAgdHlwZTogc3RyaW5nO1xcbiAgIC8qKiBBd2FyZW5lc3Mgb2YgdGhlIGRpdmlzaW9uICovXFxuICAgYXdhcmVuZXNzOiBudW1iZXI7XFxuICAgLyoqIFBvcHVsYXJpdHkgb2YgdGhlIGRpdmlzaW9uICovXFxuICAgcG9wdWxhcml0eTogbnVtYmVyO1xcbiAgIC8qKiBQcm9kdWN0aW9uIG11bHRpcGxpZXIgKi9cXG4gICBwcm9kTXVsdDogbnVtYmVyO1xcbiAgIC8qKiBBbW91bnQgb2YgcmVzZWFyY2ggaW4gdGhhdCBkaXZpc2lvbiAqL1xcbiAgIHJlc2VhcmNoOiBudW1iZXI7XFxuICAgLyoqIFJldmVudWUgbGFzdCBjeWNsZSAqL1xcbiAgIGxhc3RDeWNsZVJldmVudWU6IG51bWJlcjtcXG4gICAvKiogRXhwZW5zZXMgbGFzdCBjeWNsZSAqL1xcbiAgIGxhc3RDeWNsZUV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIFJldmVudWUgdGhpcyBjeWNsZSAqL1xcbiAgIHRoaXNDeWNsZVJldmVudWU6IG51bWJlcjtcXG4gICAvKiogRXhwZW5zZXMgdGhpcyBjeWNsZSAqL1xcbiAgIHRoaXNDeWNsZUV4cGVuc2VzOiBudW1iZXI7XFxuICAgLyoqIEFsbCByZXNlYXJjaCBib3VnaHQgKi9cXG4gICB1cGdyYWRlczogbnVtYmVyW107XFxuICAgLyoqIENpdGllcyBpbiB3aGljaCB0aGlzIGRpdmlzaW9uIGhhcyBleHBhbmRlZCAqL1xcbiAgIGNpdGllczogc3RyaW5nW107XFxuICAgLyoqIFByb2R1Y3RzIGRldmVsb3BlZCBieSB0aGlzIGRpdmlzaW9uICovXFxuICAgcHJvZHVjdHM6IHN0cmluZ1tdO1xcbiB9XFxuIFxcbiAvKipcXG4gICogQ29ycG9yYXRpb24gaW52ZXN0bWVudCBvZmZlclxcbiAgKiBAcHVibGljXFxuICAqL1xcbiBpbnRlcmZhY2UgSW52ZXN0bWVudE9mZmVyIHtcXG4gICAvKiogQW1vdW50IG9mIGZ1bmRzIHlvdSB3aWxsIGdldCBmcm9tIHRoaXMgaW52ZXN0bWVudCAqL1xcbiAgIGZ1bmRzOiBudW1iZXI7XFxuICAgLyoqIEFtb3VudCBvZiBzaGFyZSB5b3Ugd2lsbCBnaXZlIGluIGV4Y2hhbmdlIGZvciB0aGlzIGludmVzdG1lbnQgKi9cXG4gICBzaGFyZXM6IG51bWJlcjtcXG4gICAvKiogQ3VycmVudCByb3VuZCBvZiBmdW5kaW5nIChtYXggNCkgKi9cXG4gICByb3VuZDogbnVtYmVyO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSW50ZXJmYWNlIFRoZW1lXFxuICAqIEBpbnRlcm5hbFxcbiAgKi9cXG4gaW50ZXJmYWNlIFVzZXJJbnRlcmZhY2VUaGVtZSB7XFxuICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xcbiAgIHByaW1hcnlsaWdodDogc3RyaW5nO1xcbiAgIHByaW1hcnk6IHN0cmluZztcXG4gICBwcmltYXJ5ZGFyazogc3RyaW5nO1xcbiAgIHN1Y2Nlc3NsaWdodDogc3RyaW5nO1xcbiAgIHN1Y2Nlc3M6IHN0cmluZztcXG4gICBzdWNjZXNzZGFyazogc3RyaW5nO1xcbiAgIGVycm9ybGlnaHQ6IHN0cmluZztcXG4gICBlcnJvcjogc3RyaW5nO1xcbiAgIGVycm9yZGFyazogc3RyaW5nO1xcbiAgIHNlY29uZGFyeWxpZ2h0OiBzdHJpbmc7XFxuICAgc2Vjb25kYXJ5OiBzdHJpbmc7XFxuICAgc2Vjb25kYXJ5ZGFyazogc3RyaW5nO1xcbiAgIHdhcm5pbmdsaWdodDogc3RyaW5nO1xcbiAgIHdhcm5pbmc6IHN0cmluZztcXG4gICB3YXJuaW5nZGFyazogc3RyaW5nO1xcbiAgIGluZm9saWdodDogc3RyaW5nO1xcbiAgIGluZm86IHN0cmluZztcXG4gICBpbmZvZGFyazogc3RyaW5nO1xcbiAgIHdlbGxsaWdodDogc3RyaW5nO1xcbiAgIHdlbGw6IHN0cmluZztcXG4gICB3aGl0ZTogc3RyaW5nO1xcbiAgIGJsYWNrOiBzdHJpbmc7XFxuICAgaHA6IHN0cmluZztcXG4gICBtb25leTogc3RyaW5nO1xcbiAgIGhhY2s6IHN0cmluZztcXG4gICBjb21iYXQ6IHN0cmluZztcXG4gICBjaGE6IHN0cmluZztcXG4gICBpbnQ6IHN0cmluZztcXG4gICByZXA6IHN0cmluZztcXG4gICBkaXNhYmxlZDogc3RyaW5nO1xcbiAgIGJhY2tncm91bmRwcmltYXJ5OiBzdHJpbmc7XFxuICAgYmFja2dyb3VuZHNlY29uZGFyeTogc3RyaW5nO1xcbiAgIGJ1dHRvbjogc3RyaW5nO1xcbiB9XFxuIFxcbiAvKipcXG4gICogSW50ZXJmYWNlIFN0eWxlc1xcbiAgKiBAaW50ZXJuYWxcXG4gICovXFxuIGludGVyZmFjZSBJU3R5bGVTZXR0aW5ncyB7XFxuICAgZm9udEZhbWlseTogc3RyaW5nO1xcbiAgIGxpbmVIZWlnaHQ6IG51bWJlcjtcXG4gfVxcbiBcXG4gLyoqXFxuICAqIEdhbWUgSW5mb3JtYXRpb25cXG4gICogQGludGVybmFsXFxuICAqL1xcbiBpbnRlcmZhY2UgR2FtZUluZm8ge1xcbiAgIHZlcnNpb246IHN0cmluZztcXG4gICBjb21taXQ6IHN0cmluZztcXG4gICBwbGF0Zm9ybTogc3RyaW5nO1xcbiB9XCIsXCJmaWxlbmFtZVwiOlwiaW5kZXguZC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIxNzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJuMDBkbGVzXCIsXCJmb29kbnN0dWZmXCIsXCJzaWdtYS1jb3NtZXRpY3NcIixcImpvZXNndW5zXCIsXCJob25nLWZhbmctdGVhXCIsXCJoYXJha2lyaS1zdXNoaVwiLFwiaXJvbi1neW1cIixcInBzMFwiLFwicHMxXCIsXCJwczJcIixcInBzM1wiLFwicHM0XCIsXCJwczVcIixcInBzNlwiLFwicHM3XCIsXCJwczhcIixcInBzOVwiLFwicHMxMFwiLFwicHMxMVwiLFwicHMxMlwiLFwicHMxM1wiLFwicHMxNFwiLFwicHMxNVwiLFwicHMxNlwiLFwicHMxN1wiLFwicHMxOFwiLFwicHMxOVwiLFwicHMyMFwiLFwicHMyMVwiLFwicHMyMlwiLFwicHMyM1wiLFwicHMyNFwiLFwiZGFya3dlYlwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbe1wiY3RvclwiOlwiVGV4dEZpbGVcIixcImRhdGFcIjp7XCJmblwiOlwiaGFja25ldC1sb3JkLWNmZy5qc29uLnR4dFwiLFwidGV4dFwiOlwie1xcblxcdFxcXCJwaWxsb3dcXFwiOiAyMDAwMDAwXFxufVwifX1dLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJlY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ1LjQuOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkVDb3JwXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjQ3MjgwNzE0MjQxLFwibW9uZXlNYXhcIjoxMTgyMDE3ODU2MDI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjExNjEsXCJzZXJ2ZXJHcm93dGhcIjo5OX19LFwibWVnYWNvcnBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1lZ2Fjb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NC41LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNZWdhQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJwb3dlcmhvdXNlLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTksXCJoYWNrRGlmZmljdWx0eVwiOjk5LFwibWluRGlmZmljdWx0eVwiOjMzLFwibW9uZXlBdmFpbGFibGVcIjo1MzIzNzAxMzgwNCxcIm1vbmV5TWF4XCI6MTMzMDkyNTM0NTEwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMzMxLFwic2VydmVyR3Jvd3RoXCI6OTl9fSxcImItYW5kLWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImItYW5kLWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY2LjYuNy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIjRzaWdtYVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4OCxcImhhY2tEaWZmaWN1bHR5XCI6ODgsXCJtaW5EaWZmaWN1bHR5XCI6MjksXCJtb25leUF2YWlsYWJsZVwiOjI2MDA0MzUxOTgyLFwibW9uZXlNYXhcIjo2NTAxMDg3OTk1NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA0NCxcInNlcnZlckdyb3d0aFwiOjY5fX0sXCJibGFkZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYmxhZGVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY3LjguOC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbml0ZWtcIixcImZ1bGNydW1hc3NldHNcIixcIlRoZS1DYXZlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk1LFwiaGFja0RpZmZpY3VsdHlcIjo5NSxcIm1pbkRpZmZpY3VsdHlcIjozMixcIm1vbmV5QXZhaWxhYmxlXCI6MTE5NTkyNzA0NzEsXCJtb25leU1heFwiOjI5ODk4MTc2MTc3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjEsXCJzZXJ2ZXJHcm93dGhcIjo3MH19LFwibndvXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJud29cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg0LjMuNy4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJ0aGUtaGlkZGVuLXdvcmxkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5XT1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTksXCJoYWNrRGlmZmljdWx0eVwiOjk5LFwibWluRGlmZmljdWx0eVwiOjMzLFwibW9uZXlBdmFpbGFibGVcIjozODU4Mjk0ODE0OCxcIm1vbmV5TWF4XCI6OTY0NTczNzAzNzAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNjIsXCJzZXJ2ZXJHcm93dGhcIjo4Nn19LFwiY2xhcmtpbmNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNsYXJraW5jXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMS4xLjYuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIixcImNvc3Qtb2YtaW1tb3J0YWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCIuXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjUxLFwiaGFja0RpZmZpY3VsdHlcIjo1MSxcIm1pbkRpZmZpY3VsdHlcIjoxNyxcIm1vbmV5QXZhaWxhYmxlXCI6MjAwNzE2OTUwOTQsXCJtb25leU1heFwiOjUwMTc5MjM3NzM1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMTQ5LFwic2VydmVyR3Jvd3RoXCI6NzF9fSxcIm9tbml0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbml0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEuNC43LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wiY29kZWQtaW50ZWxsaWdlbmNlLmxpdFwiLFwiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaVRlayBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZnVsY3J1bXRlY2hcIixcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk2LFwiaGFja0RpZmZpY3VsdHlcIjo5NixcIm1pbkRpZmZpY3VsdHlcIjozMixcIm1vbmV5QXZhaWxhYmxlXCI6MTM2MDcwMTgyOTEsXCJtb25leU1heFwiOjM0MDE3NTQ1NzI3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5ODksXCJzZXJ2ZXJHcm93dGhcIjo5N319LFwiNHNpZ21hXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCI0c2lnbWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQyLjQuMi4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widml0YWxpZmVcIixcImItYW5kLWFcIixcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1OSxcImhhY2tEaWZmaWN1bHR5XCI6NTksXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjE2NTU2MzI3MzgwLFwibW9uZXlNYXhcIjo0MTM5MDgxODQ1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3MCxcInNlcnZlckdyb3d0aFwiOjkzfX0sXCJrdWFpLWdvbmdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImt1YWktZ29uZ1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuMC4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzdG9ybXRlY2hcIixcIm53b1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5NyxcImhhY2tEaWZmaWN1bHR5XCI6OTcsXCJtaW5EaWZmaWN1bHR5XCI6MzIsXCJtb25leUF2YWlsYWJsZVwiOjI1NDQ0MTQ4MDgwLFwibW9uZXlNYXhcIjo2MzYxMDM3MDIwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTIxOSxcInNlcnZlckdyb3d0aFwiOjk2fX0sXCJmdWxjcnVtdGVjaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZnVsY3J1bXRlY2hcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgwLjcuNi42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyMDQ4LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcIm9tbml0ZWtcIixcIi5cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODQsXCJoYWNrRGlmZmljdWx0eVwiOjg0LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjoxNzk0MzIxNzc2LFwibW9uZXlNYXhcIjo0NDg1ODA0NDQwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMjAzLFwic2VydmVyR3Jvd3RoXCI6ODN9fSxcImZ1bGNydW1hc3NldHNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImZ1bGNydW1hc3NldHNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQzLjcuMS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZ1bGNydW0gVGVjaG5vbG9naWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MTAwMDAwMCxcIm1vbmV5TWF4XCI6MjUwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTE3MixcInNlcnZlckdyb3d0aFwiOjF9fSxcInN0b3JtdGVjaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwic3Rvcm10ZWNoXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1OS43LjEuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdG9ybSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicnVuNHRoZWgxMTF6XCIsXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODAsXCJoYWNrRGlmZmljdWx0eVwiOjgwLFwibWluRGlmZmljdWx0eVwiOjI3LFwibW9uZXlBdmFpbGFibGVcIjoxMDMyMjk1MTMzLFwibW9uZXlNYXhcIjoyNTgwNzM3ODMyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDIsXCJzZXJ2ZXJHcm93dGhcIjo4M319LFwiZGVmY29tbVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZGVmY29tbVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNC45LjguOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJEZWZDb21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImRlbHRhb25lXCIsXCJub3ZhLW1lZFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjk0MTEyODk4MCxcIm1vbmV5TWF4XCI6MjM1MjgyMjQ1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6OTcxLFwic2VydmVyR3Jvd3RoXCI6NjB9fSxcImluZm9jb21tXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJpbmZvY29tbVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMC41LjguMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJJbmZvQ29tbVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ1bml2LWVuZXJneVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OSxcImhhY2tEaWZmaWN1bHR5XCI6NzksXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjc3NTYxMDA0NyxcIm1vbmV5TWF4XCI6MTkzOTAyNTExNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6OTM0LFwic2VydmVyR3Jvd3RoXCI6NTZ9fSxcImhlbGlvc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiaGVsaW9zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzLjYuOC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wiYmV5b25kLW1hbi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIZWxpb3MgTGFic1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjo2NTU4OTU5MjMsXCJtb25leU1heFwiOjE2Mzk3Mzk4MDc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgwNCxcInNlcnZlckdyb3d0aFwiOjc2fX0sXCJ2aXRhbGlmZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc5LjAuNi40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVml0YUxpZmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGl0YW4tbGFic1wiLFwiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjgwLFwiaGFja0RpZmZpY3VsdHlcIjo4MCxcIm1pbkRpZmZpY3VsdHlcIjoyNyxcIm1vbmV5QXZhaWxhYmxlXCI6NzcwNTUyMjIyLFwibW9uZXlNYXhcIjoxOTI2MzgwNTU1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NDUsXCJzZXJ2ZXJHcm93dGhcIjo3MH19LFwiaWNhcnVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJpY2FydXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjkuMC45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkljYXJ1cyBNaWNyb3N5c3RlbXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVsdGFvbmVcIixcInpiLWRlZlwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NSxcImhhY2tEaWZmaWN1bHR5XCI6ODUsXCJtaW5EaWZmaWN1bHR5XCI6MjgsXCJtb25leUF2YWlsYWJsZVwiOjkxNzMyNzIzNCxcIm1vbmV5TWF4XCI6MjI5MzMxODA4NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODc0LFwic2VydmVyR3Jvd3RoXCI6ODZ9fSxcInVuaXYtZW5lcmd5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml2LWVuZXJneVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODQuMy4zLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjEyOCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml2ZXJzYWwgRW5lcmd5XCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInVuaXRhbGlmZVwiLFwiaW5mb2NvbW1cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODcsXCJoYWNrRGlmZmljdWx0eVwiOjg3LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjoxMTk4ODM0NjE4LFwibW9uZXlNYXhcIjoyOTk3MDg2NTQ1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NDQsXCJzZXJ2ZXJHcm93dGhcIjo5MH19LFwidGl0YW4tbGFic1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidGl0YW4tbGFic1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTMuMi43LjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJjb2RlZC1pbnRlbGxpZ2VuY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGl0YW4gTGFib3JhdG9yaWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWRlZlwiLFwidml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjo4MjQwODczMTcsXCJtb25leU1heFwiOjIwNjAyMTgyOTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgzOSxcInNlcnZlckdyb3d0aFwiOjc3fX0sXCJtaWNyb2R5bmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1pY3JvZHluZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTkuOC44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNaWNyb2R5bmUgVGVjaG5vbG9naWVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5vdmEtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcyLFwiaGFja0RpZmZpY3VsdHlcIjo3MixcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6NTI0OTIzODQ5LFwibW9uZXlNYXhcIjoxMzEyMzA5NjIyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MDAsXCJzZXJ2ZXJHcm93dGhcIjo3N319LFwidGFpeWFuZy1kaWdpdGFsXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ0YWl5YW5nLWRpZ2l0YWxcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ3LjYuNy43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiLFwiYnJpZ2h0ZXItdGhhbi10aGUtc3VuLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRhaXlhbmcgRGlnaXRhbFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6ZXVzLW1lZFwiLFwicnVuNHRoZWgxMTF6XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcxLFwiaGFja0RpZmZpY3VsdHlcIjo3MSxcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6ODkwNDA0NzAxLFwibW9uZXlNYXhcIjoyMjI2MDExNzUyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MzUsXCJzZXJ2ZXJHcm93dGhcIjo3OH19LFwiZ2FsYWN0aWMtY3liZXJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImdhbGFjdGljLWN5YmVyXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4OC4zLjguN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJHYWxhY3RpYyBDeWJlcnN5c3RlbXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjo3NTc4OTA2OTMsXCJtb25leU1heFwiOjE4OTQ3MjY3MzI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg1MCxcInNlcnZlckdyb3d0aFwiOjczfX0sXCJhZXJvY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYWVyb2NvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQwLjQuOS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJtYW4tYW5kLW1hY2hpbmUubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQWVyb0NvcnBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWxwaGEtZW50XCIsXCJ1bml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjoxMDE4Njk1Mjg5LFwibW9uZXlNYXhcIjoyNTQ2NzM4MjIyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NTQsXCJzZXJ2ZXJHcm93dGhcIjo1OX19LFwib21uaWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbmlhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4zLjIuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6NjQsXCJtZXNzYWdlc1wiOltcImhpc3Rvcnktb2Ytc3ludGhvaWRzLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk9tbmlhIEN5YmVyc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzbmFwLWZpdG5lc3NcIixcInpldXMtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjg4LFwiaGFja0RpZmZpY3VsdHlcIjo4OCxcIm1pbkRpZmZpY3VsdHlcIjoyOSxcIm1vbmV5QXZhaWxhYmxlXCI6OTU1NjMwMjkzLFwibW9uZXlNYXhcIjoyMzg5MDc1NzMyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4OTcsXCJzZXJ2ZXJHcm93dGhcIjo2NX19LFwiemItZGVmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6Yi1kZWZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM1LjkuOC41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaQiBEZWZlbnNlIEluZHVzdHJpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaWNhcnVzXCIsXCJ0aXRhbi1sYWJzXCIsXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTUsXCJoYWNrRGlmZmljdWx0eVwiOjU1LFwibWluRGlmZmljdWx0eVwiOjE4LFwibW9uZXlBdmFpbGFibGVcIjoxMDAzMDI3MjAzLFwibW9uZXlNYXhcIjoyNTA3NTY4MDA3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3OTIsXCJzZXJ2ZXJHcm93dGhcIjo2OX19LFwiYXBwbGllZC1lbmVyZ2V0aWNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI2LjUuMC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFwcGxpZWQgRW5lcmdldGljc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6Yi1kZWZcIixcImZ1bGNydW10ZWNoXCIsXCJoZWxpb3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjAsXCJoYWNrRGlmZmljdWx0eVwiOjYwLFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjo5MTA0MDM5ODksXCJtb25leU1heFwiOjIyNzYwMDk5NzI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjc4NCxcInNlcnZlckdyb3d0aFwiOjczfX0sXCJzb2xhcmlzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQxMDIwOC1Kb2Unc0d1bnMuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlsxODcsMTA3LDQ4LDcyXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcInR5cGVcIjoyfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInNvbGFyaXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQyLjQuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCIsXCJ0aGUtZmFpbGVkLWZyb250aWVyLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJkZWx0YW9uZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NSxcImhhY2tEaWZmaWN1bHR5XCI6NzUsXCJtaW5EaWZmaWN1bHR5XCI6MjUsXCJtb25leUF2YWlsYWJsZVwiOjcxNzIyODA2OCxcIm1vbmV5TWF4XCI6MTc5MzA3MDE3MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODEwLFwic2VydmVyR3Jvd3RoXCI6NzB9fSxcImRlbHRhb25lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkZWx0YW9uZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTYuMy4yLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRGVsdGFPbmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZ2xvYmFsLXBoYXJtXCIsXCJkZWZjb21tXCIsXCJpY2FydXNcIixcInNvbGFyaXNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjoxMzk5OTcwMTkxLFwibW9uZXlNYXhcIjozNDk5OTI1NDc3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzIsXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiZ2xvYmFsLXBoYXJtXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJnbG9iYWwtcGhhcm1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ4LjcuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wiQS1HcmVlbi1Ub21vcnJvdy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInJoby1jb25zdHJ1Y3Rpb25cIixcImRlbHRhb25lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc5LFwiaGFja0RpZmZpY3VsdHlcIjo3OSxcIm1pbkRpZmZpY3VsdHlcIjoyNixcIm1vbmV5QXZhaWxhYmxlXCI6MTUxMjMyNDQ4MSxcIm1vbmV5TWF4XCI6Mzc4MDgxMTIwMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODE2LFwic2VydmVyR3Jvd3RoXCI6OTB9fSxcIm5vdmEtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJub3ZhLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMi45LjIuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOb3ZhIE1lZGljYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVmY29tbVwiLFwibWljcm9keW5lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcwLFwiaGFja0RpZmZpY3VsdHlcIjo3MCxcIm1pbkRpZmZpY3VsdHlcIjoyMyxcIm1vbmV5QXZhaWxhYmxlXCI6MTIwNzEzNTc2MCxcIm1vbmV5TWF4XCI6MzAxNzgzOTQwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODA1LFwic2VydmVyR3Jvd3RoXCI6NzJ9fSxcInpldXMtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6ZXVzLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTguMy40LjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWmV1cyBNZWRpY2FsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbmlhXCIsXCJ0YWl5YW5nLWRpZ2l0YWxcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjoxMzA1MDE3MTQ4LFwibW9uZXlNYXhcIjozMjYyNTQyODcwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjIsXCJzZXJ2ZXJHcm93dGhcIjo4MH19LFwidW5pdGFsaWZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg4LjguMy40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml0YUxpZmUgR3JvdXBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWVyb2NvcnBcIixcInVuaXYtZW5lcmd5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc1LFwiaGFja0RpZmZpY3VsdHlcIjo3NSxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6MTAxMjgyNTA4OSxcIm1vbmV5TWF4XCI6MjUzMjA2MjcyMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Nzc2LFwic2VydmVyR3Jvd3RoXCI6NzZ9fSxcImxleG8tY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibGV4by1jb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1LjkuNy40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJMZXhvQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJJLkkuSS5JXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYyLFwiaGFja0RpZmZpY3VsdHlcIjo2MixcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NzkzMDQzNDY2LFwibW9uZXlNYXhcIjoxOTgyNjA4NjY1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo2OTMsXCJzZXJ2ZXJHcm93dGhcIjo1NX19LFwicmhvLWNvbnN0cnVjdGlvblwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicmhvLWNvbnN0cnVjdGlvblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODEuMy4wLjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlJobyBDb25zdHJ1Y3Rpb25cIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicm90aG1hbi11bmlcIixcImdsb2JhbC1waGFybVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1NixcImhhY2tEaWZmaWN1bHR5XCI6NTYsXCJtaW5EaWZmaWN1bHR5XCI6MTksXCJtb25leUF2YWlsYWJsZVwiOjUxNjU0MjM5MCxcIm1vbmV5TWF4XCI6MTI5MTM1NTk3NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTIyLFwic2VydmVyR3Jvd3RoXCI6NTV9fSxcImFscGhhLWVudFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01MDExNDMtSm9lJ3NHdW5zLmNjdFwiLFwidHlwZVwiOlwiU3ViYXJyYXkgd2l0aCBNYXhpbXVtIFN1bVwiLFwiZGF0YVwiOlsxLDEsLTUsLTMsLTEwLDMsLTIsLTEsLTUsOSwwLDYsNCwtMSwtNSwtMyw1LDEsLTUsMl0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJKb2UncyBHdW5zXCIsXCJ0eXBlXCI6Mn19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhbHBoYS1lbnRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY2LjYuMi4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIkkuSS5JLklcIixcImFlcm9jb3JwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYzLFwiaGFja0RpZmZpY3VsdHlcIjo2MyxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6Njg4MDgxMjk1LFwibW9uZXlNYXhcIjoxNzIwMjAzMjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1NzksXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiYWV2dW0tcG9saWNlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXZ1bS1wb2xpY2VcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIwLjMuNC41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWluc3RpdHV0ZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3MixcImhhY2tEaWZmaWN1bHR5XCI6NzIsXCJtaW5EaWZmaWN1bHR5XCI6MjQsXCJtb25leUF2YWlsYWJsZVwiOjM2ODYwMTkzMCxcIm1vbmV5TWF4XCI6OTIxNTA0ODI1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0MTAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwicm90aG1hbi11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtOTkxMjkyLmNjdFwiLFwidHlwZVwiOlwiRmluZCBBbGwgVmFsaWQgTWF0aCBFeHByZXNzaW9uc1wiLFwiZGF0YVwiOltcIjE0MzI2MjQ5XCIsLTk3XSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicm90aG1hbi11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkyLjEuNy42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJ0ZW5zaW9ucy1pbi10ZWNoLXJhY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiUm90aG1hbiBVbml2ZXJzaXR5XCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImF2bW5pdGUtMDJoXCIsXCJyaG8tY29uc3RydWN0aW9uXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ4LFwiaGFja0RpZmZpY3VsdHlcIjo0OCxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MjQ1ODA1ODY2LFwibW9uZXlNYXhcIjo2MTQ1MTQ2NjUwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjM3OCxcInNlcnZlckdyb3d0aFwiOjQ1fX0sXCJ6Yi1pbnN0aXR1dGVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNzYzNDcyLmNjdFwiLFwidHlwZVwiOlwiTWluaW11bSBQYXRoIFN1bSBpbiBhIFRyaWFuZ2xlXCIsXCJkYXRhXCI6W1s1XSxbMywzXSxbNSw1LDVdLFs3LDUsMiwyXSxbNCw2LDMsNCw1XSxbNCw3LDUsNiwyLDVdLFs4LDUsNiw2LDYsOSwxXSxbNyw1LDQsOCw2LDgsMSw0XSxbNSw2LDksNCwyLDIsMiwzLDZdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiemItaW5zdGl0dXRlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MS41LjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6NjQsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkIgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiY3J1c2gtZml0bmVzc1wiLFwiYWV2dW0tcG9saWNlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjcyLFwiaGFja0RpZmZpY3VsdHlcIjo3MixcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6MTA4MTg1MDcxNyxcIm1vbmV5TWF4XCI6MjcwNDYyNjc5MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NzMyLFwic2VydmVyR3Jvd3RoXCI6Nzd9fSxcInN1bW1pdC11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN1bW1pdC11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjE3LjcuNi42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdW1taXQgVW5pdmVyc2l0eVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhdm1uaXRlLTAyaFwiLFwibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjIsXCJoYWNrRGlmZmljdWx0eVwiOjYyLFwibWluRGlmZmljdWx0eVwiOjIxLFwibW9uZXlBdmFpbGFibGVcIjoyMTM4NDkyNjIsXCJtb25leU1heFwiOjUzNDYyMzE1NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDU5LFwic2VydmVyR3Jvd3RoXCI6NTR9fSxcInN5c2NvcmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN5c2NvcmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU3LjguNC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlN5c0NvcmUgU2VjdXJpdGllc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjb21wdGVrXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc2LFwiaGFja0RpZmZpY3VsdHlcIjo3NixcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6NDUwMjk4NTYwLFwibW9uZXlNYXhcIjoxMTI1NzQ2NDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo2MDIsXCJzZXJ2ZXJHcm93dGhcIjo2OX19LFwiY2F0YWx5c3RcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTEzNTAwLmNjdFwiLFwidHlwZVwiOlwiQXJyYXkgSnVtcGluZyBHYW1lXCIsXCJkYXRhXCI6WzgsOSwyLDksMCwyLDMsMSwxLDEwLDgsMCwxMCw1LDAsNiw1LDEwXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiY2F0YWx5c3RcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjAuNC4xLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXCJ0ZW5zaW9ucy1pbi10ZWNoLXJhY2UubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ2F0YWx5c3QgVmVudHVyZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiY29tcHRla1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MCxcImhhY2tEaWZmaWN1bHR5XCI6NjAsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjM2ODA2ODM5OCxcIm1vbmV5TWF4XCI6OTIwMTcwOTk1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0MTMsXCJzZXJ2ZXJHcm93dGhcIjo1Mn19LFwidGhlLWh1YlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwidGhlLWh1YlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjIuMy44LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRoZSBIdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicGhhbnRhc3lcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NDAsXCJoYWNrRGlmZmljdWx0eVwiOjQwLFwibWluRGlmZmljdWx0eVwiOjEzLFwibW9uZXlBdmFpbGFibGVcIjoxNjg4MzYyODcsXCJtb25leU1heFwiOjQyMjA5MDcxNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Mjg4LFwic2VydmVyR3Jvd3RoXCI6NTR9fSxcImNvbXB0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNvbXB0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQuMC4yLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIm1hbi1hbmQtbWFjaGluZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJDb21wdVRla1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJwaGFudGFzeVwiLFwic3lzY29yZVwiLFwiY2F0YWx5c3RcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjoyNDY3NjUzMzAsXCJtb25leU1heFwiOjYxNjkxMzMyNTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MzgyLFwic2VydmVyR3Jvd3RoXCI6NDl9fSxcIm5ldGxpbmtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm5ldGxpbmtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjUxLjUuMC4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2ltdWxhdGVkLXJlYWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTmV0TGluayBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lsdmVyLWhlbGl4XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY5LFwiaGFja0RpZmZpY3VsdHlcIjo2OSxcIm1pbkRpZmZpY3VsdHlcIjoyMyxcIm1vbmV5QXZhaWxhYmxlXCI6Mjc1MDAwMDAwLFwibW9uZXlNYXhcIjo2ODc1MDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQxNSxcInNlcnZlckdyb3d0aFwiOjcxfX0sXCJqb2huc29uLW9ydGhvXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJqb2huc29uLW9ydGhvXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1NS42LjkuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJKb2huc29uIE9ydGhvcGVkaWNzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInBoYW50YXN5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQzLFwiaGFja0RpZmZpY3VsdHlcIjo0MyxcIm1pbkRpZmZpY3VsdHlcIjoxNCxcIm1vbmV5QXZhaWxhYmxlXCI6NzQ4NTY1MTMsXCJtb25leU1heFwiOjE4NzE0MTI4MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjU2LFwic2VydmVyR3Jvd3RoXCI6NDR9fSxcIm4wMGRsZXNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwibjAwZGxlc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTUuNS44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjQsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTm9vZGxlIEJhclwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyLjQsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcIm4wMGRsZXNcIl0sXCJkYXRhTWFwXCI6e1wibjAwZGxlc1wiOls2MzgyMDIyLDExMTEsMzcsMF19LFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MTMxNi41NjA4NTY0MTY2NTU3LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MDIsXCJvbmxpbmVFeHBHYWluZWRcIjozODIzLjg3NTAwMDAwMDA3NCxcIm9ubGluZU1vbmV5TWFkZVwiOjYzODIwMjIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjE4OTg5LjAxMDAwMDAzNjI2LFwicGlkXCI6MSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGYwNzAyNzAtOGQ0Mi00ZjhhLWI4NzktOTQ3ZTljM2I3NmM1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3Mn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHMgdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHQvL1xcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83Njc0YmQwMi0xYzJjLTRjN2UtYjIxZC00YzA5YWZjMzRhNzJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjp0cnVlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjo0LjYwNTk5OTk5OTk5OTczLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjEzMjEzNDYuNDQ0MjEzMDExNSxcIm1vbmV5TWF4XCI6MTc1MDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MzAwMH19LFwiZm9vZG5zdHVmZlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJmb29kbnN0dWZmXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS4wLjEuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcInNlY3Rvci0xMi1jcmltZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJGb29kTlN0dWZmXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjE0LjQsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImZvb2Ruc3R1ZmZcIl0sXCJkYXRhTWFwXCI6e1wiZm9vZG5zdHVmZlwiOlswLDAsMjEwNiwxNzRdfSxcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjQ2ODMuNTg0NTUyNDk5OTk5NSxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MTE1NDcuOTA0OTk5OTk5OTk5LFwib25saW5lRXhwR2FpbmVkXCI6MTM2ODAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxODkwMC40MTAwMDAwMzU5MDMsXCJwaWRcIjoyLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcInRocmVhZHNcIjo2LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84Njk3MTRlNC1lMmVjLTQwNDAtYjQ1OC1mODAxN2EzMzBlZTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjgwfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjNTg0NzQzLTQwNmYtNDRjOC1iYzExLWIzOTEyODg4NjI4YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwiemVyMFwiLFwibmVjdGFyLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjEwLFwiaGFja0RpZmZpY3VsdHlcIjo3LjcyNzk5OTk5OTk5OTkyNSxcIm1pbkRpZmZpY3VsdHlcIjozLFwibW9uZXlBdmFpbGFibGVcIjozMjIxNTExLjMzMTA0OTI3NyxcIm1vbmV5TWF4XCI6NTAwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjV9fSxcInNpZ21hLWNvc21ldGljc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02NjYxMTQtSm9lJ3NHdW5zLmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbMTEsMzUsNTAsMzgsOSwzXSxbMjIsNDEsMjcsMTUsOCwxMV0sWzIyLDQ5LDE5LDIsNCwyMV0sWzIzLDIxLDIwLDQ0LDQ5LDE2XSxbMTksNDUsMTAsMjYsNCwyMF0sWzM4LDQzLDI4LDQwLDQxLDM3XSxbMjAsMTUsMTAsMTUsNDAsM10sWzI3LDEwLDM2LDM1LDExLDI3XSxbNywzOCwzMyw2LDIsMzJdLFs0MCwzMCwzNSwyLDI1LDZdLFsxMywxLDMxLDMxLDI3LDMyXSxbMjgsNDMsOSwyNSwyMyw0M11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiSm9lJ3MgR3Vuc1wiLFwidHlwZVwiOjJ9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU4LjcuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWdtYSBDb3NtZXRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcInNpZ21hLWNvc21ldGljc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCIsXCJtYXgtaGFyZHdhcmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjp0cnVlLFwiYmFzZURpZmZpY3VsdHlcIjoxMCxcImhhY2tEaWZmaWN1bHR5XCI6Ny45NzM5OTk5OTk5OTk5MzksXCJtaW5EaWZmaWN1bHR5XCI6MyxcIm1vbmV5QXZhaWxhYmxlXCI6MjM3MzA4NS4yODUyNzExNjc4LFwibW9uZXlNYXhcIjo1NzUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1LFwic2VydmVyR3Jvd3RoXCI6MTB9fSxcImpvZXNndW5zXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImpvZXNndW5zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyNS4zLjQuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSm9lJ3MgR3Vuc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNC40LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2VzZ3Vuc1wiXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxMzQ1Njg3OCw4NCwxMzk4LDE4Nl19LFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6Mzg5My4wNzUyMzEyNSxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MTE1NDcuOTA3LFwib25saW5lRXhwR2FpbmVkXCI6MTI1MTAsXCJvbmxpbmVNb25leU1hZGVcIjoxMzQ1Njg3OCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTg4NjcuMjEwMDAwMDM1NzUzLFwicGlkXCI6MyxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjYsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdiYTUyNTUxLTEwMWItNGFjMy1hZDJmLWZhMGZmNWEzYTY2NlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODh9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzIHRvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0Ly9cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjZlZGMxNTItODQ5My00MmFiLTk5ZmEtY2ZmNzMxOTk0YWU2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwiQ1NFQ1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6dHJ1ZSxcImJhc2VEaWZmaWN1bHR5XCI6MTUsXCJoYWNrRGlmZmljdWx0eVwiOjcuMjAzOTk5OTk5OTk5OTUyLFwibWluRGlmZmljdWx0eVwiOjUsXCJtb25leUF2YWlsYWJsZVwiOjQ2ODYzMTk0LjU2NjYwNjE4LFwibW9uZXlNYXhcIjo2MjUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJ6ZXIwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6ZXIwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzOC41LjUuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkVSMCBOaWdodGNsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZm9vZG5zdHVmZlwiLFwibmVvLW5ldFwiLFwic2lsdmVyLWhlbGl4XCIsXCJvbWVnYS1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MjUsXCJoYWNrRGlmZmljdWx0eVwiOjI1LFwibWluRGlmZmljdWx0eVwiOjgsXCJtb25leUF2YWlsYWJsZVwiOjc1MDAwMDAsXCJtb25leU1heFwiOjE4NzUwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3NSxcInNlcnZlckdyb3d0aFwiOjQwfX0sXCJuZWN0YXItbmV0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm5lY3Rhci1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg2LjEuMy43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZWN0YXIgTmlnaHRjbHViIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTQuNCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wibmVjdGFyLW5ldFwiXSxcImRhdGFNYXBcIjp7XCJuZWN0YXItbmV0XCI6WzAsMCw5NDIsMTc0XX0sXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjoyNzg0Ljk5ODQxMTI1LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MDksXCJvbmxpbmVFeHBHYWluZWRcIjoxMDA0NCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjE4Njk3LjIxMDAwMDAzNDk5LFwicGlkXCI6NCxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJ0aHJlYWRzXCI6NixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmY3YzU1NzctNjA3Mi00YmFlLTgwYTAtZTUyMjQ4MmEyYTIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwNX1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHMgdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHQvL1xcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZWFybHktaGFjay10ZW1wbGF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYmFkZTBjZi05YmZlLTQxODAtYWJlMi03OTc2MDMwZDI5NTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImZvb2Ruc3R1ZmZcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MjAsXCJoYWNrRGlmZmljdWx0eVwiOjEwLjE2Mzk5OTk5OTk5OTg2MSxcIm1pbkRpZmZpY3VsdHlcIjo3LFwibW9uZXlBdmFpbGFibGVcIjo2MzQ4MzQwLjg1MzAyMjg4OCxcIm1vbmV5TWF4XCI6Njg3NTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwibmVvLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibmVvLW5ldFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjYuMi4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJ0aGUtaGlkZGVuLXdvcmxkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5lbyBOaWdodGNsdWIgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6ZXIwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI1LFwiaGFja0RpZmZpY3VsdHlcIjoyNSxcIm1pbkRpZmZpY3VsdHlcIjo4LFwibW9uZXlBdmFpbGFibGVcIjo1MDAwMDAwLFwibW9uZXlNYXhcIjoxMjUwMDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjEsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwic2lsdmVyLWhlbGl4XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzaWx2ZXItaGVsaXhcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc3LjEuNi45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wibmV3LXRyaWFkcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWx2ZXIgSGVsaXhcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiemVyMFwiLFwibmV0bGlua1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMCxcImhhY2tEaWZmaWN1bHR5XCI6MzAsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjQ1MDAwMDAwLFwibW9uZXlNYXhcIjoxMTI1MDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjE1MCxcInNlcnZlckdyb3d0aFwiOjMwfX0sXCJob25nLWZhbmctdGVhXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJob25nLWZhbmctdGVhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1Ny45LjUuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcImJyaWdodGVyLXRoYW4tdGhlLXN1bi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIb25nRmFuZyBUZWFob3VzZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjozMDAwMDAwLFwibW9uZXlNYXhcIjo3NTAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJoYXJha2lyaS1zdXNoaVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNzkuNC4yLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkhhcmFLaXJpIFN1c2hpIEJhciBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxMS40MDE5OTk5OTk5OTk5OTIsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6Mzk4OTkyNixcIm1vbmV5TWF4XCI6MTAwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjEsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQwLFwic2VydmVyR3Jvd3RoXCI6NDB9fSxcInBoYW50YXN5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJwaGFudGFzeVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuMi44LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBoYW50YXN5IENsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiQ1NFQ1wiLFwidGhlLWh1YlwiLFwiY29tcHRla1wiLFwiam9obnNvbi1vcnRob1wiLFwiY3J1c2gtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoyMCxcImhhY2tEaWZmaWN1bHR5XCI6MjAsXCJtaW5EaWZmaWN1bHR5XCI6NyxcIm1vbmV5QXZhaWxhYmxlXCI6MjQwMDAwMDAsXCJtb25leU1heFwiOjYwMDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwibWF4LWhhcmR3YXJlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtYXgtaGFyZHdhcmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ0LjYuNS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJNYXggSGFyZHdhcmUgU3RvcmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lnbWEtY29zbWV0aWNzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjoxMDAwMDAwMCxcIm1vbmV5TWF4XCI6MjUwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoxLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjgwLFwic2VydmVyR3Jvd3RoXCI6MzB9fSxcIm9tZWdhLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwib21lZ2EtbmV0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5OC43LjAuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInRoZS1uZXctZ29kLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk9tZWdhIFNvZnR3YXJlXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInplcjBcIixcImF2bW5pdGUtMDJoXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI5LFwiaGFja0RpZmZpY3VsdHlcIjoyOSxcIm1pbkRpZmZpY3VsdHlcIjoxMCxcIm1vbmV5QXZhaWxhYmxlXCI6NjE3ODA2NzgsXCJtb25leU1heFwiOjE1NDQ1MTY5NTAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjIwLFwic2VydmVyR3Jvd3RoXCI6MzZ9fSxcImNydXNoLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImNydXNoLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkyLjIuMC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNydXNoIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicGhhbnRhc3lcIixcInpiLWluc3RpdHV0ZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0NSxcImhhY2tEaWZmaWN1bHR5XCI6NDUsXCJtaW5EaWZmaWN1bHR5XCI6MTUsXCJtb25leUF2YWlsYWJsZVwiOjU4MTU4NjgwLFwibW9uZXlNYXhcIjoxNDUzOTY3MDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjI3MyxcInNlcnZlckdyb3d0aFwiOjMxfX0sXCJpcm9uLWd5bVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJpcm9uLWd5bVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOS4wLjAuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSXJvbiBHeW0gTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS4yLFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJpcm9uLWd5bVwiXSxcImRhdGFNYXBcIjp7XCJpcm9uLWd5bVwiOlswLDAsMCwyMzRdfSxcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjI5OS4yNDI0MDY2NjY2NjY3LFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjoxMTU0Ny45MTEsXCJvbmxpbmVFeHBHYWluZWRcIjoyODA4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTE3MDYuNDEwMDAwMDA3NjU0LFwicGlkXCI6NSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjEzLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZGQ1YWZjNy03ZWI1LTQ2YmYtOWY0Ny0zN2VjNmNmODhiYjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NjYxfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBucy5hcmdzWzBdO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0cyB0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdC8vXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJlYXJseS1oYWNrLXRlbXBsYXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImVhcmx5LWhhY2stdGVtcGxhdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI4NGU2ZGFiLTgyZWItNGQ5NC05MjA5LTU5NmNjN2YwODkwMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOnRydWUsXCJiYXNlRGlmZmljdWx0eVwiOjMwLFwiaGFja0RpZmZpY3VsdHlcIjoxNS4xNTAwMDAwMDAwMDAwMixcIm1pbkRpZmZpY3VsdHlcIjoxMCxcIm1vbmV5QXZhaWxhYmxlXCI6MjAwMDAwMDAsXCJtb25leU1heFwiOjUwMDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAsXCJzZXJ2ZXJHcm93dGhcIjoyMH19LFwibWlsbGVuaXVtLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm1pbGxlbml1bS1maXRuZXNzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyMi41LjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1pbGxlbml1bSBGaXRuZXNzIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3VtbWl0LXVuaVwiLFwiZ2FsYWN0aWMtY3liZXJcIixcInNuYXAtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0NSxcImhhY2tEaWZmaWN1bHR5XCI6NDUsXCJtaW5EaWZmaWN1bHR5XCI6MTUsXCJtb25leUF2YWlsYWJsZVwiOjI1MDAwMDAwMCxcIm1vbmV5TWF4XCI6NjI1MDAwMDAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo0NzgsXCJzZXJ2ZXJHcm93dGhcIjozN319LFwicG93ZXJob3VzZS1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJwb3dlcmhvdXNlLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc5LjkuMC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJQb3dlcmhvdXNlIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCIsXCJlY29ycFwiLFwibWVnYWNvcnBcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo5MDAwMDAwMDAsXCJtb25leU1heFwiOjIyNTAwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNTYsXCJzZXJ2ZXJHcm93dGhcIjo1N319LFwic25hcC1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzbmFwLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgyLjMuMi43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlNuYXAgRml0bmVzc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtaWxsZW5pdW0tZml0bmVzc1wiLFwib21uaWFcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo0NTAwMDAwMDAsXCJtb25leU1heFwiOjExMjUwMDAwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjcxNixcInNlcnZlckdyb3d0aFwiOjUwfX0sXCJydW40dGhlaDExMXpcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInJ1bjR0aGVoMTExelwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOC42LjkuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInNpbXVsYXRlZC1yZWFsaXR5LmxpdFwiLFwidGhlLW5ldy1nb2QubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGhlIFJ1bm5lcnNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGFpeWFuZy1kaWdpdGFsXCIsXCJzdG9ybXRlY2hcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUyMSxcInNlcnZlckdyb3d0aFwiOjB9fSxcIkkuSS5JLklcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIkkuSS5JLklcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjYwLjIuMC4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkkuSS5JLklcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXZtbml0ZS0wMmhcIixcImxleG8tY29ycFwiLFwiYWxwaGEtZW50XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozNjQsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJhdm1uaXRlLTAyaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC05NzE4MC5jY3RcIixcInR5cGVcIjpcIk1pbmltdW0gUGF0aCBTdW0gaW4gYSBUcmlhbmdsZVwiLFwiZGF0YVwiOltbNV0sWzgsNV0sWzIsOSwyXSxbMiw2LDcsN11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhdm1uaXRlLTAyaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuNC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjEyOCxcIm1lc3NhZ2VzXCI6W1wiZGVtb2NyYWN5LWlzLWRlYWQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTml0ZVNlY1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJvbWVnYS1uZXRcIixcInJvdGhtYW4tdW5pXCIsXCJzdW1taXQtdW5pXCIsXCJJLkkuSS5JXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoyMjAsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCIuXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCIuXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS44LjkuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiLlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJmdWxjcnVtdGVjaFwiLFwiY2xhcmtpbmNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUzMCxcInNlcnZlckdyb3d0aFwiOjB9fSxcIkNTRUNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiQ1NFQ1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTEuOS4wLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkN5YmVyU2VjXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImpvZXNndW5zXCIsXCJwaGFudGFzeVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6dHJ1ZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoxLFwib3BlblBvcnRDb3VudFwiOjEsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjU1LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiVGhlLUNhdmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIlRoZS1DYXZlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0Ni43LjMuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYWxwaGEtb21lZ2EubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImJsYWRlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjUsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJ3MHIxZF9kNDNtMG5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIncwcjFkX2Q0M20wblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjguNi4wLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwidzByMWRfZDQzbTBuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozMDAwLFwic2VydmVyR3Jvd3RoXCI6MH19LFwicHMwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuNC4xLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzcyNDQ1MzgsNDUsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM4MC42MjUsXCJvbmxpbmVNb25leU1hZGVcIjo3MjQ0NTM4LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo0MyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMwXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWJjMDUxMWUtMjI4NS00Njk4LTg0N2ItZGFmNzRjOGM5MTAzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2MH1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80ZGFhZGI0Yi03MzVjLTQ3MGYtYTRhMC1lYmFiMWEyMWMwODdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTA0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjQuOC41LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzkzNzE3NTcsNTcsMzY5LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzQyNS42MjUsXCJvbmxpbmVNb25leU1hZGVcIjo5MzcxNzU3LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo0NCxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDUzNmI4NWUtMjU3ZS00MTFmLTkzZGUtNzIzNjY3NmFmOGM4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE2Mn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lNTJiMzYzNS0xZmFlLTQwMTYtODlhMC1mOWJiYmM3NmQ3MzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTA2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjIuMS42LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzczMzc0NDIsNDUsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjczMzc0NDIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ1LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iMGRkNTAwMy02NDMyLTRiZTktYjI0My02ZDgzZGQyZDAyZmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzliY2RkMTg5LWE0MmUtNGVhYi05NzQxLWI1YmIyMTkzNTQ2ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MDh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS4yLjAuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTg3MjExMywzNiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzI0LjM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjU4NzIxMTMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ2LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczNcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84NjcyZGFiYi0xODg0LTQ5YTktOGI0Ni02NmRiMjZhZGNkZjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY2fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FkNjRkNGE5LWZhMmMtNDNhZS1iMmVlLTYxZjlmN2Y4MWQxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNy4yLjQuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTI4NTMyOCwzMywzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzAxLjg3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjUyODUzMjgsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjQ3LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczRcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lN2MwMWUxYy1kMDkzLTQ2NDAtOGJiOS1lNjZkMTllYjdhYTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY4fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IxODY2ZjE0LThhM2MtNDBiYi1hOTVhLTE1YWIxMWRiYWVmM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM1XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMy44LjIuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNzMyNTEyNyw0NSwzNjAsMzldfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzQxLjI1LFwib25saW5lTW9uZXlNYWRlXCI6NzMyNTEyNyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NDgsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzNVwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q3OGE3YTJiLTI4MTctNDUyNy04ODMwLTMzYzhmMmUzNmYzZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzB9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vM2FjZjJiNzktZDRlMi00MjhlLWJkYmUtNTg0N2UzMGQ4MGY1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTE0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzNlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIzLjEuMS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls2NzczNzEyLDQyLDM3MiwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzNTguMTI1LFwib25saW5lTW9uZXlNYWRlXCI6Njc3MzcxMixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NDksXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzNlwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIyMmM5OGRmLTZlNTMtNDNkMy1iZTgyLTVlZjIyMTk2NGEwM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzJ9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDVmODZkMWUtNjFhZi00ZjBiLTgyZjEtNmE2OGQxODAzNzQ5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzN1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczdcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQuNS41LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzQ5MzE1MTcsMzAsMzc1LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzI4NSxcIm9ubGluZU1vbmV5TWFkZVwiOjQ5MzE1MTcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjUwLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczdcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85N2ZlZjAxMS1mYmE1LTRiNWEtOGVmZS04Y2M2YjVlZTg1YzNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTc0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QzYjAxMWMwLTk3YmYtNDIzNC04NWZiLWFhMGQyMGUyNmE5MlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczhcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHM4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2Ni43LjEuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjc2NzAxOSw0MiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzYzLjc1LFwib25saW5lTW9uZXlNYWRlXCI6Njc2NzAxOSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTEsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzOFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEzZWYxMGQ4LWFmOWUtNGZlNC1hYTU5LWM3YzA2YWEwMTA2NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzV9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDBkMDNkMjktMjZkZC00YTRiLWEzYzQtMDQzOGNkMTQ2YTU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUyMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTIwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzOVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjYuOS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls5Mzk3MjkzLDU3LDM2MywzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM0MjAsXCJvbmxpbmVNb25leU1hZGVcIjo5Mzk3MjkzLFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo1MixcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHM5XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zYjY3NjU1ZC0wNDc1LTRkYjMtYjlhYy1jYWYwODI2NDA4OTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTIyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczEwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MC41LjAuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjgyNDk2Nyw0MiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzYzLjc1LFwib25saW5lTW9uZXlNYWRlXCI6NjgyNDk2NyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTMsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTBcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mYzhmZGFiMS05NTY0LTQwOTYtYjI4MS04NWY5MTJhZDBhODdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjQ2fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzAzMDRkM2FlLWUzYjktNDhiNy05OTg2LTMyNjIxZTZjMjg1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczExXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1MS4zLjguNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjQxNTMzMiwzOSwzNjMsMzldfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzI0LjM3NSxcIm9ubGluZU1vbmV5TWFkZVwiOjY0MTUzMzIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjU0LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczExXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZjgzMjY5ODktM2Q2YS00NDlkLTk1YjQtYjgzNDhiZGIwOTg0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI0OX1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOTZhMGI2MS01MDM4LTQwZDgtOGY4Ni01MzQ1YjA3YmExMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTI2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMTJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMxMlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTAuOC42LjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzExNzc5MTcwLDcyLDM2MCwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM0OTguNzUsXCJvbmxpbmVNb25leU1hZGVcIjoxMTc3OTE3MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTUsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yYjNjMDFjZi0xMmQyLTRiN2MtOTJiYy1kMGFhYTlhZjk1ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjUyfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JmOGFkNTFmLThmMjctNDJiOC04YmU5LWFhZGI2ZGVkOTYwNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxM1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczEzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4yLjAuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTgzNzY5MSwzNiwzNzUsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzE4Ljc1LFwib25saW5lTW9uZXlNYWRlXCI6NTgzNzY5MSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTYsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTNcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NzBjNzk3Mi1mODU4LTQ4ZjgtYWViNi04YzU0NWY0ZTlmNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjU1fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFjZWNiZTRlLWQ4MjgtNGQ0NC1iYzVlLTAyNjJlZjhkYThjOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxNFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyLjIuOS4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls3NjkwODQ1LDQ4LDM2OSwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzODYuMjUsXCJvbmxpbmVNb25leU1hZGVcIjo3NjkwODQ1LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo1NyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxNFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBmN2MwZjFhLWU3Y2UtNGFkMC1hMDc3LTdhZjYzMTc4YjQ1ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNTh9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWJkYzMxZTktY2ZhNC00ZmU4LWI0MWYtMzg5OGYzZTM4MWZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUzMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjUzMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczE1XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMTVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIyLjIuMi4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls1OTM2NzIxLDM2LDM3MiwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzMjQuMzc1LFwib25saW5lTW9uZXlNYWRlXCI6NTkzNjcyMSxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NTgsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTVcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yMTFmN2FlZi0yMWUwLTQ4NGUtYTY1MC1kM2YwNjJiNGI3NGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjYxfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc0OWY4MGE3LThjYzYtNDNiMS1iMGExLTNjN2VmZmIwYWZlOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxNlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE2XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2My4xLjYuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbODc3MzY0NCw1NCwzNzIsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDI1LjYyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjg3NzM2NDQsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjU5LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE2XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDMzNmYxZTAtY2IzMS00MmYzLThiMTMtM2IxYzE1MDg4YWY2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI2NH1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjdmMmE5OS01Y2M4LTRkYjQtOGJkNS1mZDNmNmE3MWIxYjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTM2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTM2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMTdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMxN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTcuMi40LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzY4NzM2NjMsNDIsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM1Mi41LFwib25saW5lTW9uZXlNYWRlXCI6Njg3MzY2MyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NjAsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTdcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MjEyZjE3Mi1mZDk0LTQxNmItOWZjZC05NDY4OTZhYTBiNmFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY3fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzM1MjllMWY3LWE5YzctNDkxYS1hODAxLTgwMjUyZmMxYTAwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1Mzh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxOFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4NS4wLjMuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNjQxODM4MywzOSwzNjksMzZdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzMwLFwib25saW5lTW9uZXlNYWRlXCI6NjQxODM4MyxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NzU1OS4wMDk5OTk5OTUyODQ1LFwicGlkXCI6NjEsXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMThcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYTgyYzdkZi03YzNlLTQ3ZWMtOWY3Ny00NzE3NjhlNzI2ZTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjcwfV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdHZhciB0YXJnZXQgPSBcXFwiam9lc2d1bnNcXFwiO1xcblxcblxcdC8vIE1ha2Ugc3VyZSB0aGUgc2VydmVyIGhhcyBhdCBsZWFzdCA3NSUgb2YgcG9zc2libGUgbW9uZXkgYmVmb3JlIGhhY2tpbmcgaXRcXG5cXHR2YXIgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC43NTtcXG5cXG5cXHQvLyBJZiB0aGUgc2VjdXJpdHkgaXMgaGlnaGVyIHRoYW4gdGhpcyB3ZSBtdXN0IHdlYWtlbiBmaXJzdFxcblxcdHZhciBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDU7XFxuXFx0XFxuXFx0Ly9Vc2UgQlJVVEVTU0guZXhlIGlmIGV4aXN0c3RvIG9wZW4gU1NIIFBvcnRcXG5cXHQvL2lmIChucy5maWxlRXhpc3RzKFxcXCJCcnV0ZVNTSC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuXFx0bnMuYnJ1dGVzc2godGFyZ2V0KTtcXG5cXHQvL31cXG5cXG5cXHQvL05vIHJvb3Q/IEdldCByb290IVxcblxcdC8vbnMubnVrZSh0YXJnZXQpO1xcblxcdC8vIEluZmluaXRseSBsb29wIGhhY2svZ3Jvdy93ZWFrZW4gb24gdGFyZ2V0XFxuXFx0d2hpbGUoXFxcIklDRVxcXCIpIHtcXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGlmKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCl7XFxuXFx0XFx0XFx0YXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZkZjljN2I0LTc1ZTktNDJlNC1hMzQ2LTU1NjY4Mjc0MTdhMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMxOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHMxOVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwczE5XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2NS4wLjIuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6Ny4zNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e1wiam9lc2d1bnNcIjpbNTg0ODcwMSwzNiwzNjYsMzZdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMzEzLjEyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjU4NDg3MDEsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjYyLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczE5XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWNlZTQ4MzItNDUyOC00ZTkzLWE4MjAtZTVjYjA3MDY2ZGQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3M31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZTNlNzVjNi04OTdiLTQzOTItYWY4YS03NmQyYzA1NTRhZTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDAuNy4zLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzkyODAzNjgsNTcsMzY2LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzQzMS4yNSxcIm9ubGluZU1vbmV5TWFkZVwiOjkyODAzNjgsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjYzLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIwXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmU0OGI2YTYtMGFhNi00YjE3LWJmMWYtMTk2ZDBjNzY3OWYwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwN31dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xMzczMjlkZi1jMWJlLTRlNTgtYWI2NS1iY2MxYzc4MDM2ODhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQ0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyMVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODcuMS40LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzcxMTYwNTcsNDUsMzY5LDMzXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM2OS4zNzUsXCJvbmxpbmVNb25leU1hZGVcIjo3MTE2MDU3LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NCxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyMVwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA5NGY3YjAzLTI4MTAtNDI3OS04Y2JhLTY4YWI1MTc0ZDhhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTB9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzJkMTkyZTQtYmM4Mi00MWNmLWIzZDUtY2U3NzZhZmExY2Y1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczIyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMjJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM5LjIuMC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOlsxMTE3MjQ1OSw2OSwzNjYsMzBdfSxcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDkzLjEyNSxcIm9ubGluZU1vbmV5TWFkZVwiOjExMTcyNDU5LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NSxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyMlwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I1YTI0ZjBkLTQzYTYtNGIwOC05ODg5LWMxMWJkNjViNzczNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTN9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGU5YTNlY2YtYzVjYS00ZmNiLTkwODQtYmYxZjQ2YTkwODNmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU0OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwczIzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzMjNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg4LjIuNC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo4LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LjM1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXSxcImRhdGFNYXBcIjp7XCJqb2VzZ3Vuc1wiOls1MzMwMDczLDMzLDM3NSwzM119LFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMzMDcuNSxcIm9ubGluZU1vbmV5TWFkZVwiOjUzMzAwNzMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjc1NTkuMDA5OTk5OTk1Mjg0NSxcInBpZFwiOjY2LFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczIzXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWJmYjE0MzMtYTEwNS00ZDA5LTlkODMtYTQ5YTc2YTk2NTFkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMxNn1dfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHR2YXIgdGFyZ2V0ID0gXFxcImpvZXNndW5zXFxcIjtcXG5cXG5cXHQvLyBNYWtlIHN1cmUgdGhlIHNlcnZlciBoYXMgYXQgbGVhc3QgNzUlIG9mIHBvc3NpYmxlIG1vbmV5IGJlZm9yZSBoYWNraW5nIGl0XFxuXFx0dmFyIG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuXFxuXFx0Ly8gSWYgdGhlIHNlY3VyaXR5IGlzIGhpZ2hlciB0aGFuIHRoaXMgd2UgbXVzdCB3ZWFrZW4gZmlyc3RcXG5cXHR2YXIgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyA1O1xcblxcdFxcblxcdC8vVXNlIEJSVVRFU1NILmV4ZSBpZiBleGlzdHN0byBvcGVuIFNTSCBQb3J0XFxuXFx0Ly9pZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcblxcdG5zLmJydXRlc3NoKHRhcmdldCk7XFxuXFx0Ly99XFxuXFxuXFx0Ly9ObyByb290PyBHZXQgcm9vdCFcXG5cXHQvL25zLm51a2UodGFyZ2V0KTtcXG5cXHQvLyBJbmZpbml0bHkgbG9vcCBoYWNrL2dyb3cvd2Vha2VuIG9uIHRhcmdldFxcblxcdHdoaWxlKFxcXCJJQ0VcXFwiKSB7XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcblxcdFxcdFxcdGNvbnRpbnVlO1xcblxcdFxcdH1cXG5cXHRcXHRpZihucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpe1xcblxcdFxcdFxcdGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0YXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOGI4Y2I5ZC1jYzc0LTQwNTEtOGE4Ny03M2IxMjIyMTlkM2NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTUwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcInBzMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NTUwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiYnJ1dGVzc2hcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzMjRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHMyNFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuOS4wLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjcuMzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltdLFwiZGF0YU1hcFwiOntcImpvZXNndW5zXCI6WzY3ODcwNTYsNDIsMzc1LDMwXX0sXCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzM1OC4xMjUsXCJvbmxpbmVNb25leU1hZGVcIjo2Nzg3MDU2LFwib25saW5lUnVubmluZ1RpbWVcIjo3NTU5LjAwOTk5OTk5NTI4NDUsXCJwaWRcIjo2NyxcInJhbVVzYWdlXCI6Mi40NSxcInNlcnZlclwiOlwicHMyNFwiLFwidGhyZWFkc1wiOjMsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ExYmUwNmVjLWFhNmItNGU2MS1iMWRjLTJmNjIwNTJkODgzY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTl9XX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHRhcmdldCA9IFxcXCJqb2VzZ3Vuc1xcXCI7XFxuXFxuXFx0Ly8gTWFrZSBzdXJlIHRoZSBzZXJ2ZXIgaGFzIGF0IGxlYXN0IDc1JSBvZiBwb3NzaWJsZSBtb25leSBiZWZvcmUgaGFja2luZyBpdFxcblxcdHZhciBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjc1O1xcblxcblxcdC8vIElmIHRoZSBzZWN1cml0eSBpcyBoaWdoZXIgdGhhbiB0aGlzIHdlIG11c3Qgd2Vha2VuIGZpcnN0XFxuXFx0dmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG5cXHRcXG5cXHQvL1VzZSBCUlVURVNTSC5leGUgaWYgZXhpc3RzdG8gb3BlbiBTU0ggUG9ydFxcblxcdC8vaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIHtcXG5cXHRucy5icnV0ZXNzaCh0YXJnZXQpO1xcblxcdC8vfVxcblxcblxcdC8vTm8gcm9vdD8gR2V0IHJvb3QhXFxuXFx0Ly9ucy5udWtlKHRhcmdldCk7XFxuXFx0Ly8gSW5maW5pdGx5IGxvb3AgaGFjay9ncm93L3dlYWtlbiBvbiB0YXJnZXRcXG5cXHR3aGlsZShcXFwiSUNFXFxcIikge1xcblxcdFxcdGlmKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG5cXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHR9XFxuXFx0XFx0aWYobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKXtcXG5cXHRcXHRcXHRhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuXFx0XFx0XFx0Y29udGludWU7XFxuXFx0XFx0fVxcblxcdFxcdGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG5cXHR9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzI1MzgzMWItZDM3Ni00NDVhLWE2MjgtOTc5MWI4MTRkYzIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU1MX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJwczI0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjU1MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImJydXRlc3NoXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJkYXJrd2ViXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkYXJrd2ViXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI2MS4yLjUuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MSxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fX0iLCJDb21wYW5pZXNTYXZlIjoie1wiRUNvcnBcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRUNvcnBcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjozLFwic2FsYXJ5TXVsdGlwbGllclwiOjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk1lZ2FDb3JwXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MyxcInNhbGFyeU11bHRpcGxpZXJcIjozLFwiam9iU3RhdFJlcU9mZnNldFwiOjI0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJCYWNobWFuICYgQXNzb2NpYXRlc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJCYWNobWFuICYgQXNzb2NpYXRlc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNixcInNhbGFyeU11bHRpcGxpZXJcIjoyLjYsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkJsYWRlIEluZHVzdHJpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQmxhZGUgSW5kdXN0cmllc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTldPXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5XT1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQ2xhcmtlIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJDbGFya2UgSW5jb3Jwb3JhdGVkXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yNSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjI1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbW5pVGVrIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbW5pVGVrIEluY29ycG9yYXRlZFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi4yNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGb3VyIFNpZ21hXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi41LFwic2FsYXJ5TXVsdGlwbGllclwiOjIuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yLFwic2FsYXJ5TXVsdGlwbGllclwiOjIuMixcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiU3Rvcm0gVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlN0b3JtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJEZWZDb21tXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkRlZkNvbW1cIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43NSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjc1LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJIZWxpb3MgTGFic1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJIZWxpb3MgTGFic1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJWaXRhTGlmZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJWaXRhTGlmZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJJY2FydXMgTWljcm9zeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkljYXJ1cyBNaWNyb3N5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS45LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuOSxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiVW5pdmVyc2FsIEVuZXJneVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJVbml2ZXJzYWwgRW5lcmd5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2FsYWN0aWMgQ3liZXJzeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjksXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS45LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJBZXJvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXJvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjcsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS43LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbW5pYSBDeWJlcnN5c3RlbXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiT21uaWEgQ3liZXJzeXN0ZW1zXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjcsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTb2xhcmlzIFNwYWNlIFN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRGVsdGFPbmVcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiRGVsdGFPbmVcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS42LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNixcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2xvYmFsIFBoYXJtYWNldXRpY2Fsc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb3ZhIE1lZGljYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjc1LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNzUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJDZW50cmFsIEludGVsbGlnZW5jZSBBZ2VuY3lcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjE0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOYXRpb25hbCBTZWN1cml0eSBBZ2VuY3lcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTmF0aW9uYWwgU2VjdXJpdHkgQWdlbmN5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiV2F0Y2hkb2cgU2VjdXJpdHlcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiV2F0Y2hkb2cgU2VjdXJpdHlcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS41LFwiam9iU3RhdFJlcU9mZnNldFwiOjEyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJMZXhvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJMZXhvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS40LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNCxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJSaG8gQ29uc3RydWN0aW9uXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlJobyBDb25zdHJ1Y3Rpb25cIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS4zLFwic2FsYXJ5TXVsdGlwbGllclwiOjEuMyxcImpvYlN0YXRSZXFPZmZzZXRcIjo0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJBbHBoYSBFbnRlcnByaXNlc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBbHBoYSBFbnRlcnByaXNlc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6OTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MCxcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWV2dW0gUG9saWNlIEhlYWRxdWFydGVyc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlN5c0NvcmUgU2VjdXJpdGllc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTeXNDb3JlIFNlY3VyaXRpZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNvbXB1VGVrXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkNvbXB1VGVrXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjc0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5ldExpbmsgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5ldExpbmsgVGVjaG5vbG9naWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNhcm1pY2hhZWwgU2VjdXJpdHlcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2FybWljaGFlbCBTZWN1cml0eVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiRmllbGQgQWdlbnRcIjp0cnVlLFwiU2VjcmV0IEFnZW50XCI6dHJ1ZSxcIlNwZWNpYWwgT3BlcmF0aXZlXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NzQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MTgxLjA1NTkxNzk0ODcyMDk3LFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGb29kTlN0dWZmXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjUuNTIwNjYxNTM4NDYxNTIzLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJKb2UncyBHdW5zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjIyNi4yMTAxMDc2OTIzMDA3LFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbWVnYSBTb2Z0d2FyZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbWVnYSBTb2Z0d2FyZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4xLFwiam9iU3RhdFJlcU9mZnNldFwiOjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5vb2RsZSBCYXJcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm9vZGxlIEJhclwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiV2FpdGVyXCI6dHJ1ZSxcIlBhcnQtdGltZSBXYWl0ZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLFwic2FsYXJ5TXVsdGlwbGllclwiOjEsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLFwiaXNNZWdhY29ycFwiOmZhbHNlfX19IiwiRmFjdGlvbnNTYXZlIjoie1wiSWxsdW1pbmF0aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIlN5bnRoZXRpYyBIZWFydFwiLFwiU3luZmlicmlsIE11c2NsZVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJRTGlua1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSWxsdW1pbmF0aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkRhZWRhbHVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlRoZSBSZWQgUGlsbFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRGFlZGFsdXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgQ292ZW5hbnRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiR3JhcGhlbmUgQm9uZSBMYWNpbmdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlNQVE4tOTcgR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlRoZSBDb3ZlbmFudFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkVDb3JwXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiR3JhcGhlbmUgQmlvbmljIFNwaW5lIFVwZ3JhZGVcIixcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlIE9wdGltaXphdGlvbiBTdWJtb2R1bGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiRUNvcnAgSFZNaW5kIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkVDb3JwXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTWVnYUNvcnBcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJHcmFwaGVuZSBCaW9uaWMgTGVncyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJDb3JkaUFSQyBGdXNpb24gUmVhY3RvclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTWVnYUNvcnBcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCYWNobWFuICYgQXNzb2NpYXRlc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiU21hcnRKYXdcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQmxhZGUgSW5kdXN0cmllc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSUlcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJIeXBlclNpZ2h0IENvcm5lYWwgSW1wbGFudFwiLFwiTmVvdHJhXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTldPXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJBRFItVjEgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElJSVwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJYYW5pcGhlclwiLFwiSHlkcm9mbGFtZSBMZWZ0IEFybVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTldPXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2xhcmtlIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb25hbCBEZW5zaWZpY2F0aW9uXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwibmV4dFNFTlMgR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJPbW5pVGVrIEluY29ycG9yYXRlZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSVwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJSUlcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJPbW5pVGVrIEluZm9Mb2FkXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJPbW5pVGVrIEluY29ycG9yYXRlZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkZvdXIgU2lnbWFcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkZvY3VzV2lyZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiQURSLVYyIFBoZXJvbW9uZSBHZW5lXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSUlcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJDb21iYXQgUmliIElcIixcIkNvbWJhdCBSaWIgSUlcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiSHlwZXJTaWdodCBDb3JuZWFsIEltcGxhbnRcIixcIlBob3Rvc3ludGhldGljIENlbGxzXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJLdWFpR29uZyBJbnRlcm5hdGlvbmFsXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRnVsY3J1bSBTZWNyZXQgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIk5FTUVBTiBTdWJkZXJtYWwgV2VhdmVcIixcIkdyYXBoZW5lIEJvbmUgTGFjaW5nc1wiLFwiR3JhcGhlbmUgQmlvbmljIFNwaW5lIFVwZ3JhZGVcIixcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkFydGlmaWNpYWwgQmlvLW5ldXJhbCBOZXR3b3JrIEltcGxhbnRcIixcIkVuaGFuY2VkIE15ZWxpbiBTaGVhdGhpbmdcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgTmV1cm9OZXQgSW5qZWN0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRnVsY3J1bSBTZWNyZXQgVGVjaG5vbG9naWVzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQml0UnVubmVyc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkFydGlmaWNpYWwgQmlvLW5ldXJhbCBOZXR3b3JrIEltcGxhbnRcIixcIkVuaGFuY2VkIE15ZWxpbiBTaGVhdGhpbmdcIixcIkRhdGFKYWNrXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIk5ldXJhbCBBY2NlbGVyYXRvclwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJSUlcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSVZcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gVlwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlcIixcIkJpdFJ1bm5lcnMgTmV1cm9saW5rXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCaXRSdW5uZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiVGhlIEJsYWNrIEhhbmRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBcnRpZmljaWFsIFN5bmFwdGljIFBvdGVudGlhdGlvblwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJVlwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJUaGUgQmxhY2sgSGFuZFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIEJsYWNrIEhhbmRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJOaXRlU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQml0V2lyZVwiLFwiQXJ0aWZpY2lhbCBTeW5hcHRpYyBQb3RlbnRpYXRpb25cIixcIk5ldXJhbC1SZXRlbnRpb24gRW5oYW5jZW1lbnRcIixcIkRhdGFKYWNrXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlcIixcIkNSVFg0Mi1BQSBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTml0ZVNlY1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkFldnVtXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiU3luYXB0aWMgRW5oYW5jZW1lbnQgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSVwiLFwiUENNYXRyaXhcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkFldnVtXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2hvbmdxaW5nXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJlZ2VuIEdlbmUgTW9kaWZpY2F0aW9uXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJDaG9uZ3FpbmdcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJJc2hpbWFcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkNvbWJhdCBSaWIgSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJJTkZSQVJFVCBFbmhhbmNlbWVudFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSXNoaW1hXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTmV3IFRva3lvXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk51dHJpR2VuIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk5ldyBUb2t5b1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNlY3Rvci0xMlwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOnRydWUsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkNhc2hSb290IFN0YXJ0ZXIgS2l0XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJWb2xoYXZlblwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkRlcm1hRm9yY2UgUGFydGljbGUgQmFycmllclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVm9saGF2ZW5cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJTcGVha2VycyBmb3IgdGhlIERlYWRcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJVbnN0YWJsZSBDaXJjYWRpYW4gTW9kdWxhdG9yXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIkJpb25pYyBTcGluZVwiLFwiQmlvbmljIExlZ3NcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiVGhlIFNoYWRvdydzIFNpbXVsYWNydW1cIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiR3JhcGhlbmUgQnJhY2hpQmxhZGVzIFVwZ3JhZGVcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlNwZWFrZXJzIGZvciB0aGUgRGVhZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRoZSBEYXJrIEFybXlcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJDb21iYXQgUmliIElcIixcIkNvbWJhdCBSaWIgSUlcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIldpcmVkIFJlZmxleGVzXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkdyYXBoZW5lIEJpb25pYyBBcm1zIFVwZ3JhZGVcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlRoZSBEYXJrIEFybXlcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgU3luZGljYXRlXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkJyYWNoaUJsYWRlc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIFN5bmRpY2F0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNpbGhvdWV0dGVcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIlRJVE4tNDEgR2VuZS1Nb2RpZmljYXRpb24gSW5qZWN0aW9uXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiU2lsaG91ZXR0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRldHJhZHNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJCaW9uaWMgQXJtc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGV0cmFkc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNsdW0gU25ha2VzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJDb21iYXQgUmliIElcIixcIldpcmVkIFJlZmxleGVzXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiU21hcnRTb25hciBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTbHVtIFNuYWtlc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk5ldGJ1cm5lcnNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjp0cnVlLFwiYXVnbWVudGF0aW9uc1wiOltcIkhhY2tuZXQgTm9kZSBDUFUgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBDYWNoZSBBcmNoaXRlY3R1cmUgTmV1cmFsLVVwbG9hZFwiLFwiSGFja25ldCBOb2RlIE5JQyBBcmNoaXRlY3R1cmUgTmV1cmFsLVVwbG9hZFwiLFwiSGFja25ldCBOb2RlIEtlcm5lbCBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiSGFja25ldCBOb2RlIENvcmUgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MSxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJOZXRidXJuZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MzQ4LjM4NDM1ODk3NDM3NDI3fX0sXCJUaWFuIERpIEh1aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTb2NpYWwgTmVnb3RpYXRpb24gQXNzaXN0YW50IChTLk4uQSlcIixcIk5ldXJvcmVjZXB0b3IgTWFuYWdlbWVudCBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaWFuIERpIEh1aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkN5YmVyU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJCaXRXaXJlXCIsXCJTeW5hcHRpYyBFbmhhbmNlbWVudCBJbXBsYW50XCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElcIl0sXCJmYXZvclwiOjEsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjp0cnVlLFwibmFtZVwiOlwiQ3liZXJTZWNcIixcInBsYXllclJlcHV0YXRpb25cIjozOTIyLjE4NTIwNTEyODE5OTR9fSxcIkJsYWRlYnVybmVyc1wiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVzcGVyVGVjaCBCbGFkZWJ1cm5lciBFeWV3ZWFyXCIsXCJFTVMtNCBSZWNvbWJpbmF0aW9uXCIsXCJPUklPTi1NS0lWIFNob3VsZGVyXCIsXCJIeXBlcmlvbiBQbGFzbWEgQ2Fubm9uIFYxXCIsXCJIeXBlcmlvbiBQbGFzbWEgQ2Fubm9uIFYyXCIsXCJHT0xFTSBTZXJ1bVwiLFwiVmFuZ2VsaXMgVmlydXNcIixcIlZhbmdlbGlzIFZpcnVzIDMuMFwiLFwiSS5OLlQuRS5SLkwuSS5OLksuRS5EXCIsXCJCbGFkZSdzIFJ1bm5lcnNcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vclwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBQb3dlciBDZWxscyBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IEVuZXJneSBTaGllbGRpbmcgVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBVbmliZWFtIFVwZ3JhZGVcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vcjogT21uaWJlYW0gVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBJUFUgVXBncmFkZVwiLFwiVGhlIEJsYWRlJ3MgU2ltdWxhY3J1bVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQmxhZGVidXJuZXJzXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQ2h1cmNoIG9mIHRoZSBNYWNoaW5lIEdvZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIlN0YW5laydzIEdpZnQgLSBHZW5lc2lzXCIsXCJTdGFuZWsncyBHaWZ0IC0gQXdha2VuaW5nXCIsXCJTdGFuZWsncyBHaWZ0IC0gU2VyZW5pdHlcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkNodXJjaCBvZiB0aGUgTWFjaGluZSBHb2RcIixcInBsYXllclJlcHV0YXRpb25cIjowfX19IiwiQWxpYXNlc1NhdmUiOiJ7fSIsIkdsb2JhbEFsaWFzZXNTYXZlIjoie30iLCJNZXNzYWdlc1NhdmUiOiJ7XCJqMC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImowLm1zZ1wiLFwibXNnXCI6XCJJIGtub3cgeW91IGNhbiBzZW5zZSBpdC4gSSBrbm93IHlvdSdyZSBzZWFyY2hpbmcgZm9yIGl0LiBJdCdzIHdoeSB5b3Ugc3BlbmQgbmlnaHQgYWZ0ZXIgbmlnaHQgYXQgeW91ciBjb21wdXRlci4gPGJyPjxicj5JdCdzIHJlYWwsIEkndmUgc2VlbiBpdC4gQW5kIEkgY2FuIGhlbHAgeW91IGZpbmQgaXQuIEJ1dCBub3QgcmlnaHQgbm93LiBZb3UncmUgbm90IHJlYWR5IHlldC48YnI+PGJyPlVzZSB0aGlzIHByb2dyYW0gdG8gdHJhY2sgeW91ciBwcm9ncmVzczxicj48YnI+VGhlIGZsMWdodC5leGUgcHJvZ3JhbSB3YXMgYWRkZWQgdG8geW91ciBob21lIGNvbXB1dGVyPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImoxLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajEubXNnXCIsXCJtc2dcIjpcIlNvb24geW91IHdpbGwgYmUgY29udGFjdGVkIGJ5IGEgaGFja2luZyBncm91cCBrbm93biBhcyBDeWJlclNlYy4gVGhleSBjYW4gaGVscCB5b3Ugd2l0aCB5b3VyIHNlYXJjaC4gPGJyPjxicj5Zb3Ugc2hvdWxkIGpvaW4gdGhlbSwgZ2FybmVyIHRoZWlyIGZhdm9yLCBhbmQgZXhwbG9pdCB0aGVtIGZvciB0aGVpciBBdWdtZW50YXRpb25zLiBCdXQgZG8gbm90IHRydXN0IHRoZW0uIFRoZXkgYXJlIG5vdCB3aGF0IHRoZXkgc2VlbS4gTm8gb25lIGlzLjxicj48YnI+LWp1bXAzUlwiLFwicmVjdmRcIjp0cnVlfX0sXCJqMi5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImoyLm1zZ1wiLFwibXNnXCI6XCJEbyBub3QgdHJ5IHRvIHNhdmUgdGhlIHdvcmxkLiBUaGVyZSBpcyBubyB3b3JsZCB0byBzYXZlLiBJZiB5b3Ugd2FudCB0byBmaW5kIHRoZSB0cnV0aCwgd29ycnkgb25seSBhYm91dCB5b3Vyc2VsZi4gRXRoaWNzIGFuZCBtb3JhbHMgd2lsbCBnZXQgeW91IGtpbGxlZC4gPGJyPjxicj5XYXRjaCBvdXQgZm9yIGEgaGFja2luZyBncm91cCBrbm93biBhcyBOaXRlU2VjLjxicj48YnI+LWp1bXAzUlwiLFwicmVjdmRcIjp0cnVlfX0sXCJqMy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImozLm1zZ1wiLFwibXNnXCI6XCJZb3UgbXVzdCBsZWFybiB0byB3YWxrIGJlZm9yZSB5b3UgY2FuIHJ1bi4gQW5kIHlvdSBtdXN0IHJ1biBiZWZvcmUgeW91IGNhbiBmbHkuIExvb2sgZm9yIHRoZSBibGFjayBoYW5kLiA8YnI+PGJyPkkuSS5JLkkgPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCJqNC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImo0Lm1zZ1wiLFwibXNnXCI6XCJUbyBmaW5kIHdoYXQgeW91IGFyZSBzZWFyY2hpbmcgZm9yLCB5b3UgbXVzdCB1bmRlcnN0YW5kIHRoZSBiaXRzLiBUaGUgYml0cyBhcmUgYWxsIGFyb3VuZCB1cy4gVGhlIHJ1bm5lcnMgd2lsbCBoZWxwIHlvdS48YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImNzZWMtdGVzdC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImNzZWMtdGVzdC5tc2dcIixcIm1zZ1wiOlwiV2UndmUgYmVlbiB3YXRjaGluZyB5b3UuIFlvdXIgc2tpbGxzIGFyZSB2ZXJ5IGltcHJlc3NpdmUuIEJ1dCB5b3UncmUgd2FzdGluZyB5b3VyIHRhbGVudHMuIElmIHlvdSBqb2luIHVzLCB5b3UgY2FuIHB1dCB5b3VyIHNraWxscyB0byBnb29kIHVzZSBhbmQgY2hhbmdlIHRoZSB3b3JsZCBmb3IgdGhlIGJldHRlci4gSWYgeW91IGpvaW4gdXMsIHdlIGNhbiB1bmxvY2sgeW91ciBmdWxsIHBvdGVudGlhbC4gPGJyPjxicj5CdXQgZmlyc3QsIHlvdSBtdXN0IHBhc3Mgb3VyIHRlc3QuIEZpbmQgYW5kIGluc3RhbGwgdGhlIGJhY2tkb29yIG9uIG91ciBzZXJ2ZXIuIDxicj48YnI+LUN5YmVyU2VjXCIsXCJyZWN2ZFwiOnRydWV9fSxcIm5pdGVzZWMtdGVzdC5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcIm5pdGVzZWMtdGVzdC5tc2dcIixcIm1zZ1wiOlwiUGVvcGxlIHNheSB0aGF0IHRoZSBjb3JydXB0ZWQgZ292ZXJubWVudHMgYW5kIGNvcnBvcmF0aW9ucyBydWxlIHRoZSB3b3JsZC4gWWVzLCBtYXliZSB0aGV5IGRvLiBCdXQgZG8geW91IGtub3cgd2hvIGV2ZXJ5b25lIHJlYWxseSBmZWFycz8gUGVvcGxlIGxpa2UgdXMuIEJlY2F1c2UgdGhleSBjYW4ndCBoaWRlIGZyb20gdXMuIEJlY2F1c2UgdGhleSBjYW4ndCBmaWdodCBzaGFkb3dzIGFuZCBpZGVhcyB3aXRoIGJ1bGxldHMuIDxicj48YnI+Sm9pbiB1cywgYW5kIHBlb3BsZSB3aWxsIGZlYXIgeW91LCB0b28uIDxicj48YnI+RmluZCBhbmQgaW5zdGFsbCB0aGUgYmFja2Rvb3Igb24gb3VyIHNlcnZlci4gVGhlbiwgd2Ugd2lsbCBjb250YWN0IHlvdSBhZ2Fpbi48YnI+PGJyPi1OaXRlU2VjXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCIxOWRmajNsMW5kLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiMTlkZmozbDFuZC5tc2dcIixcIm1zZ1wiOlwiV2Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuIFdlIGtub3cgd2hhdCBkcml2ZXMgeW91LiBXZSBrbm93IHdoYXQgeW91IGFyZSBsb29raW5nIGZvci4gPGJyPjxicj4gV2UgY2FuIGhlbHAgeW91IGZpbmQgdGhlIGFuc3dlcnMuPGJyPjxicj5ydW40dGhlaDExMXpcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImljYXJ1cy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImljYXJ1cy5tc2dcIixcIm1zZ1wiOlwiQCkoI1YlKk4pQCgjKikqQylAIyUqKSpWKUAjKColVkApKCNWTiUqKUAjKColPGJyPilAQigqIyUpQClNI0IqJVYpX19fX0ZJTkRfX18jJEApIyUoQiopQCMoKiVCKTxicj5AXyMoJV9AI00oQkRTUE9NQl9fVEhFLUNBVkVfIykkKCpAIyQpQCNCTkJFR0I8YnI+REZMU01GVk1WKSNAKCQqKUAjKiRNVilAIygqJFYpTSMoKiQpTUAoIypWTSQpXCIsXCJyZWN2ZFwiOmZhbHNlfX19IiwiU3RvY2tNYXJrZXRTYXZlIjoie1wibGFzdFVwZGF0ZVwiOjAsXCJPcmRlcnNcIjp7fSxcInN0b3JlZEN5Y2xlc1wiOjAsXCJ0aWNrc1VudGlsQ3ljbGVcIjowfSIsIlNldHRpbmdzU2F2ZSI6IntcIkFjdGl2ZVNjcmlwdHNTZXJ2ZXJQYWdlU2l6ZVwiOjEwLFwiQWN0aXZlU2NyaXB0c1NjcmlwdFBhZ2VTaXplXCI6MTAsXCJBdXRvc2F2ZUludGVydmFsXCI6NjAsXCJDb2RlSW5zdHJ1Y3Rpb25SdW5UaW1lXCI6MjUsXCJEaXNhYmxlQVNDSUlBcnRcIjpmYWxzZSxcIkRpc2FibGVIb3RrZXlzXCI6ZmFsc2UsXCJEaXNhYmxlVGV4dEVmZmVjdHNcIjpmYWxzZSxcIkRpc2FibGVPdmVydmlld1Byb2dyZXNzQmFyc1wiOmZhbHNlLFwiRW5hYmxlQmFzaEhvdGtleXNcIjp0cnVlLFwiVGltZXN0YW1wc0Zvcm1hdFwiOlwiXCIsXCJMb2NhbGVcIjpcImVuXCIsXCJNYXhMb2dDYXBhY2l0eVwiOjUwLFwiTWF4UG9ydENhcGFjaXR5XCI6NTAsXCJNYXhUZXJtaW5hbENhcGFjaXR5XCI6NTAwLFwiT3duZWRBdWdtZW50YXRpb25zT3JkZXJcIjoxLFwiUHVyY2hhc2VBdWdtZW50YXRpb25zT3JkZXJcIjowLFwiU2F2ZUdhbWVPbkZpbGVTYXZlXCI6dHJ1ZSxcIlN1cHByZXNzQnV5QXVnbWVudGF0aW9uQ29uZmlybWF0aW9uXCI6ZmFsc2UsXCJTdXBwcmVzc0ZhY3Rpb25JbnZpdGVzXCI6ZmFsc2UsXCJTdXBwcmVzc01lc3NhZ2VzXCI6ZmFsc2UsXCJTdXBwcmVzc1RyYXZlbENvbmZpcm1hdGlvblwiOmZhbHNlLFwiU3VwcHJlc3NCbGFkZWJ1cm5lclBvcHVwXCI6ZmFsc2UsXCJTdXBwcmVzc1RJWFBvcHVwXCI6ZmFsc2UsXCJTdXBwcmVzc1NhdmVkR2FtZVRvYXN0XCI6ZmFsc2UsXCJVc2VJRUM2MDAyN18yXCI6dHJ1ZSxcIkV4Y2x1ZGVSdW5uaW5nU2NyaXB0c0Zyb21TYXZlXCI6ZmFsc2UsXCJJc1NpZGViYXJPcGVuZWRcIjpmYWxzZSxcIk1vbmFjb1RoZW1lXCI6XCJtb25va2FpXCIsXCJNb25hY29JbnNlcnRTcGFjZXNcIjpmYWxzZSxcIk1vbmFjb0ZvbnRTaXplXCI6MjAsXCJNb25hY29WaW1cIjpmYWxzZSxcIk1vbmFjb1dvcmRXcmFwXCI6XCJvZmZcIixcInRoZW1lXCI6e1wicHJpbWFyeWxpZ2h0XCI6XCIjMGYwXCIsXCJwcmltYXJ5XCI6XCIjMGMwXCIsXCJwcmltYXJ5ZGFya1wiOlwiIzA5MFwiLFwic3VjY2Vzc2xpZ2h0XCI6XCIjMGYwXCIsXCJzdWNjZXNzXCI6XCIjMGMwXCIsXCJzdWNjZXNzZGFya1wiOlwiIzA5MFwiLFwiZXJyb3JsaWdodFwiOlwiI2YwMFwiLFwiZXJyb3JcIjpcIiNjMDBcIixcImVycm9yZGFya1wiOlwiIzkwMFwiLFwic2Vjb25kYXJ5bGlnaHRcIjpcIiNBQUFcIixcInNlY29uZGFyeVwiOlwiIzg4OFwiLFwic2Vjb25kYXJ5ZGFya1wiOlwiIzY2NlwiLFwid2FybmluZ2xpZ2h0XCI6XCIjZmYwXCIsXCJ3YXJuaW5nXCI6XCIjY2MwXCIsXCJ3YXJuaW5nZGFya1wiOlwiIzk5MFwiLFwiaW5mb2xpZ2h0XCI6XCIjNjlmXCIsXCJpbmZvXCI6XCIjMzZjXCIsXCJpbmZvZGFya1wiOlwiIzAzOVwiLFwid2VsbGxpZ2h0XCI6XCIjNDQ0XCIsXCJ3ZWxsXCI6XCIjMjIyXCIsXCJ3aGl0ZVwiOlwiI2ZmZlwiLFwiYmxhY2tcIjpcIiMwMDBcIixcImhwXCI6XCIjZGQzNDM0XCIsXCJtb25leVwiOlwiI2ZmZDcwMFwiLFwiaGFja1wiOlwiI2FkZmYyZlwiLFwiY29tYmF0XCI6XCIjZmFmZmRmXCIsXCJjaGFcIjpcIiNhNjcxZDFcIixcImludFwiOlwiIzY0OTVlZFwiLFwicmVwXCI6XCIjZmFmZmRmXCIsXCJkaXNhYmxlZFwiOlwiIzY2Y2ZiY1wiLFwiYmFja2dyb3VuZHByaW1hcnlcIjpcIiMwMDBcIixcImJhY2tncm91bmRzZWNvbmRhcnlcIjpcIiMwMDBcIixcImJ1dHRvblwiOlwiIzMzM1wifSxcInN0eWxlc1wiOntcImxpbmVIZWlnaHRcIjoxLjUsXCJmb250RmFtaWx5XCI6XCJMdWNpZGEgQ29uc29sZSwgTHVjaWRhIFNhbnMgVW5pY29kZSwgRmlyYSBNb25vLCBDb25zb2xhcywgQ291cmllciBOZXcsIENvdXJpZXIsIG1vbm9zcGFjZSwgVGltZXMgTmV3IFJvbWFuXCJ9LFwib3ZlcnZpZXdcIjp7XCJ4XCI6MCxcInlcIjowLFwib3BlbmVkXCI6dHJ1ZX19IiwiVmVyc2lvblNhdmUiOiIxMCIsIkFsbEdhbmdzU2F2ZSI6IiIsIkxhc3RFeHBvcnRCb251cyI6IjE2NDI5MjkwNjU2MzYiLCJTdGFuZWtzR2lmdFNhdmUiOiJ7XCJjdG9yXCI6XCJTdGFuZWtzR2lmdFwiLFwiZGF0YVwiOntcInN0b3JlZEN5Y2xlc1wiOjAsXCJmcmFnbWVudHNcIjpbXX19IiwiU2F2ZVRpbWVzdGFtcCI6IjE2NDI5MjkwNjU2NDMifX0=\",\"filename\":\"/Saves/save1.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":5655}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"ps0\",\"ps1\",\"ps2\",\"ps3\",\"ps4\",\"ps5\",\"ps6\",\"ps7\",\"ps8\",\"ps9\",\"ps10\",\"ps11\",\"ps12\",\"ps13\",\"ps14\",\"ps15\",\"ps16\",\"ps17\",\"ps18\",\"ps19\",\"ps20\",\"ps21\",\"ps22\",\"ps23\",\"ps24\",\"darkweb\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hacknet-lord-cfg.json.txt\",\"text\":\"{\\n\\t\\\"pillow\\\": 2000000\\n}\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"45.4.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":47280714241,\"moneyMax\":1182017856025,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1161,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"64.5.1.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":53237013804,\"moneyMax\":1330925345100,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1331,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"66.6.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":26004351982,\"moneyMax\":650108799550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1044,\"serverGrowth\":69}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"67.8.8.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":11959270471,\"moneyMax\":298981761775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":921,\"serverGrowth\":70}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"84.3.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":38582948148,\"moneyMax\":964573703700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1062,\"serverGrowth\":86}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"31.1.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":20071695094,\"moneyMax\":501792377350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1149,\"serverGrowth\":71}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"1.4.7.2\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":13607018291,\"moneyMax\":340175457275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":989,\"serverGrowth\":97}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"42.4.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":16556327380,\"moneyMax\":413908184500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1070,\"serverGrowth\":93}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"23.0.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":25444148080,\"moneyMax\":636103702000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1219,\"serverGrowth\":96}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"80.7.6.6\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1794321776,\"moneyMax\":44858044400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1203,\"serverGrowth\":83}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"43.7.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1172,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"59.7.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1032295133,\"moneyMax\":25807378325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":902,\"serverGrowth\":83}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"4.9.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":941128980,\"moneyMax\":23528224500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":971,\"serverGrowth\":60}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"0.5.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":775610047,\"moneyMax\":19390251175,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":934,\"serverGrowth\":56}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"3.6.8.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":655895923,\"moneyMax\":16397398075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":804,\"serverGrowth\":76}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"79.0.6.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":770552222,\"moneyMax\":19263805550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":845,\"serverGrowth\":70}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"22.9.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":917327234,\"moneyMax\":22933180850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":874,\"serverGrowth\":86}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"84.3.3.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1198834618,\"moneyMax\":29970865450,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":844,\"serverGrowth\":90}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"93.2.7.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":824087317,\"moneyMax\":20602182925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":839,\"serverGrowth\":77}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"99.8.8.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":524923849,\"moneyMax\":13123096225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":800,\"serverGrowth\":77}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"47.6.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":890404701,\"moneyMax\":22260117525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":935,\"serverGrowth\":78}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"88.3.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":757890693,\"moneyMax\":18947267325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":850,\"serverGrowth\":73}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"40.4.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"alpha-ent\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1018695289,\"moneyMax\":25467382225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":854,\"serverGrowth\":59}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"65.3.2.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":955630293,\"moneyMax\":23890757325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":897,\"serverGrowth\":65}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"35.9.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"titan-labs\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":1003027203,\"moneyMax\":25075680075,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":792,\"serverGrowth\":69}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"26.5.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":910403989,\"moneyMax\":22760099725,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":784,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-410208-Joe'sGuns.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[187,107,48,72],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"42.4.7.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":717228068,\"moneyMax\":17930701700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":810,\"serverGrowth\":70}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"56.3.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"icarus\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1399970191,\"moneyMax\":34999254775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":872,\"serverGrowth\":60}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"48.7.7.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":1512324481,\"moneyMax\":37808112025,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":816,\"serverGrowth\":90}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"2.9.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":1207135760,\"moneyMax\":30178394000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":805,\"serverGrowth\":72}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"98.3.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":1305017148,\"moneyMax\":32625428700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":822,\"serverGrowth\":80}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"88.8.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1012825089,\"moneyMax\":25320627225,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":776,\"serverGrowth\":76}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"5.9.7.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":793043466,\"moneyMax\":19826086650,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":693,\"serverGrowth\":55}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"81.3.0.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rothman-uni\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":516542390,\"moneyMax\":12913559750,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":522,\"serverGrowth\":55}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-501143-Joe'sGuns.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,1,-5,-3,-10,3,-2,-1,-5,9,0,6,4,-1,-5,-3,5,1,-5,2],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"66.6.2.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":688081295,\"moneyMax\":17202032375,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":579,\"serverGrowth\":60}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aevum-police\",\"httpPortOpen\":false,\"ip\":\"20.3.4.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":368601930,\"moneyMax\":9215048250,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":410,\"serverGrowth\":35}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-991292.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"14326249\",-97],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"92.1.7.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"rho-construction\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":48,\"minDifficulty\":16,\"moneyAvailable\":245805866,\"moneyMax\":6145146650,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":378,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-763472.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[5],[3,3],[5,5,5],[7,5,2,2],[4,6,3,4,5],[4,7,5,6,2,5],[8,5,6,6,6,9,1],[7,5,4,8,6,8,1,4],[5,6,9,4,2,2,2,3,6]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"41.5.9.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1081850717,\"moneyMax\":27046267925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":732,\"serverGrowth\":77}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"17.7.6.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":213849262,\"moneyMax\":5346231550,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":459,\"serverGrowth\":54}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"57.8.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":450298560,\"moneyMax\":11257464000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":602,\"serverGrowth\":69}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-513500.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,9,2,9,0,2,3,1,1,10,8,0,10,5,0,6,5,10],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"0.4.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":368068398,\"moneyMax\":9201709950,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":413,\"serverGrowth\":52}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"62.3.8.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":40,\"minDifficulty\":13,\"moneyAvailable\":168836287,\"moneyMax\":4220907175,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":288,\"serverGrowth\":54}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"4.0.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"syscore\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":246765330,\"moneyMax\":6169133250,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":382,\"serverGrowth\":49}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"51.5.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":415,\"serverGrowth\":71}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"55.6.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":74856513,\"moneyMax\":1871412825,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":256,\"serverGrowth\":44}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"55.5.8.5\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[6820602,1191,41,0]},\"filename\":\"early-hack-template.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1316.5608564166557,\"offlineMoneyMade\":0,\"offlineRunningTime\":11547.902,\"onlineExpGained\":4107.6750000000875,\"onlineMoneyMade\":6820602,\"onlineRunningTime\":20094.01000004028,\"pid\":1,\"ramUsage\":2.4,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///0f070270-8d42-4f8a-b879-947e9c3b76c5\",\"moduleSequenceNumber\":272}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///7674bd02-1c2c-4c7e-b21d-4c09afc34a72\",\"moduleSequenceNumber\":41}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"n00dles\",\"moduleSequenceNumber\":41,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":4.78399999999971,\"minDifficulty\":1,\"moneyAvailable\":1455938.335112061,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"81.0.1.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2274,186]},\"filename\":\"early-hack-template.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4683.5845524999995,\"offlineMoneyMade\":0,\"offlineRunningTime\":11547.904999999999,\"onlineExpGained\":14760,\"onlineMoneyMade\":0,\"onlineRunningTime\":20005.410000039923,\"pid\":2,\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///869714e4-e2ec-4040-b458-f8017a330ee2\",\"moduleSequenceNumber\":280}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///dc584743-406f-44c8-bc11-b3912888628a\",\"moduleSequenceNumber\":42}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":42,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":7.799999999999925,\"minDifficulty\":3,\"moneyAvailable\":3317630.0706077153,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-666114-Joe'sGuns.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[11,35,50,38,9,3],[22,41,27,15,8,11],[22,49,19,2,4,21],[23,21,20,44,49,16],[19,45,10,26,4,20],[38,43,28,40,41,37],[20,15,10,15,40,3],[27,10,36,35,11,27],[7,38,33,6,2,32],[40,30,35,2,25,6],[13,1,31,31,27,32],[28,43,9,25,23,43]],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"58.7.6.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":28,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":7.973999999999939,\"minDifficulty\":3,\"moneyAvailable\":2373085.2852711678,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"25.3.4.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///66edc152-8493-42ab-99fa-cff731994ae6\",\"moduleSequenceNumber\":43}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"joesguns\",\"moduleSequenceNumber\":43,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":9.859999999999996,\"minDifficulty\":5,\"moneyAvailable\":39898135.97328743,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"38.5.5.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"86.1.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1038,174]},\"filename\":\"early-hack-template.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2784.99841125,\"offlineMoneyMade\":0,\"offlineRunningTime\":11547.909,\"onlineExpGained\":10908,\"onlineMoneyMade\":0,\"onlineRunningTime\":19802.21000003901,\"pid\":4,\"ramUsage\":2.4,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///2f7c5577-6072-4bae-80a0-e522482a2a22\",\"moduleSequenceNumber\":305}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///ebade0cf-9bfe-4180-abe2-7976030d2953\",\"moduleSequenceNumber\":44}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"nectar-net\",\"moduleSequenceNumber\":44,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"foodnstuff\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":10.547999999999847,\"minDifficulty\":7,\"moneyAvailable\":6805430.45208663,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"26.2.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"77.1.6.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"57.9.5.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"79.4.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":11.401999999999992,\"minDifficulty\":5,\"moneyAvailable\":3989926,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"40.2.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"comptek\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"44.6.5.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"98.7.0.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":29,\"hackDifficulty\":29,\"minDifficulty\":10,\"moneyAvailable\":61780678,\"moneyMax\":1544516950,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":220,\"serverGrowth\":36}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"92.2.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":58158680,\"moneyMax\":1453967000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":273,\"serverGrowth\":31}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"9.0.0.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,39,247]},\"filename\":\"early-hack-template.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":299.2424066666667,\"offlineMoneyMade\":0,\"offlineRunningTime\":11547.911,\"onlineExpGained\":3432,\"onlineMoneyMade\":0,\"onlineRunningTime\":12811.410000011674,\"pid\":5,\"ramUsage\":2.4,\"server\":\"iron-gym\",\"threads\":13,\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///3dd5afc7-7eb5-46bf-9f47-37ec6cf88bb6\",\"moduleSequenceNumber\":661}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if exists to open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\t//\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"early-hack-template.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-hack-template.js\",\"url\":\"blob:file:///284e6dab-82eb-4d94-9209-596cc7f08902\",\"moduleSequenceNumber\":45}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"iron-gym\",\"moduleSequenceNumber\":45,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":14.668000000000019,\"minDifficulty\":10,\"moneyAvailable\":20348864.40725134,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"22.5.9.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\",\"galactic-cyber\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":478,\"serverGrowth\":37}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"79.9.0.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1056,\"serverGrowth\":57}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"82.3.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":716,\"serverGrowth\":50}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"8.6.9.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":521,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"60.2.0.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":364,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-97180.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[5],[8,5],[2,9,2],[2,6,7,7]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"23.4.0.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"summit-uni\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":220,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"65.8.9.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":530,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"51.9.0.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"joesguns\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":55,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"46.7.3.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"68.6.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"ps0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps0\",\"httpPortOpen\":false,\"ip\":\"40.4.1.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[9638598,60,435,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3965.625,\"onlineMoneyMade\":9638598,\"onlineRunningTime\":8664.009999996426,\"pid\":43,\"ramUsage\":2.45,\"server\":\"ps0\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///abc0511e-2285-4698-847b-daf74c8c9103\",\"moduleSequenceNumber\":160}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///4daadb4b-735c-470f-a4a0-ebab1a21c087\",\"moduleSequenceNumber\":504}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps0\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps1\",\"httpPortOpen\":false,\"ip\":\"24.8.5.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[11889606,72,429,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4010.625,\"onlineMoneyMade\":11889606,\"onlineRunningTime\":8664.009999996426,\"pid\":44,\"ramUsage\":2.45,\"server\":\"ps1\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///0536b85e-257e-411f-93de-7236676af8c8\",\"moduleSequenceNumber\":162}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///e52b3635-1fae-4016-89a0-f9bbbc76d737\",\"moduleSequenceNumber\":506}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps1\",\"moduleSequenceNumber\":506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps2\",\"httpPortOpen\":false,\"ip\":\"62.1.6.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[9320163,57,435,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3943.125,\"onlineMoneyMade\":9320163,\"onlineRunningTime\":8664.009999996426,\"pid\":45,\"ramUsage\":2.45,\"server\":\"ps2\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///b0dd5003-6432-4be9-b243-6d83dd2d02fe\",\"moduleSequenceNumber\":164}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///9bcdd189-a42e-4eab-9741-b5bb2193546e\",\"moduleSequenceNumber\":508}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps2\",\"moduleSequenceNumber\":508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps3\",\"httpPortOpen\":false,\"ip\":\"81.2.0.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8358141,51,435,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3909.375,\"onlineMoneyMade\":8358141,\"onlineRunningTime\":8664.009999996426,\"pid\":46,\"ramUsage\":2.45,\"server\":\"ps3\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///8672dabb-1884-49a9-8b46-66db26adcdf2\",\"moduleSequenceNumber\":166}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///ad64d4a9-fa2c-43ae-b2ee-61f9f7f81d10\",\"moduleSequenceNumber\":510}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps3\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps4\",\"httpPortOpen\":false,\"ip\":\"17.2.4.0\",\"isConnectedTo\":true,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[0,0,6,0]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.81000000000049,\"pid\":87,\"ramUsage\":2.45,\"server\":\"ps4\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///266b669d-9c11-4de6-9637-b65aeae832f9\",\"moduleSequenceNumber\":6140}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///39fd420e-5c21-4d21-b78a-99fcec12857d\",\"moduleSequenceNumber\":6505}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps4\",\"moduleSequenceNumber\":6505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps5\",\"httpPortOpen\":false,\"ip\":\"33.8.2.9\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8840949,54,423,42]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3903.75,\"onlineMoneyMade\":8840949,\"onlineRunningTime\":8664.009999996426,\"pid\":48,\"ramUsage\":2.45,\"server\":\"ps5\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///d78a7a2b-2817-4527-8830-33c8f2e36f3d\",\"moduleSequenceNumber\":170}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///3acf2b79-d4e2-428e-bdbe-5847e30d80f5\",\"moduleSequenceNumber\":514}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps5\",\"moduleSequenceNumber\":514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps6\",\"httpPortOpen\":false,\"ip\":\"23.1.1.7\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8244054,51,432,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3898.125,\"onlineMoneyMade\":8244054,\"onlineRunningTime\":8664.009999996426,\"pid\":49,\"ramUsage\":2.45,\"server\":\"ps6\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///222c98df-6e53-43d3-be82-5ef221964a03\",\"moduleSequenceNumber\":172}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///d5f86d1e-61af-4f0b-82f1-6a68d1803749\",\"moduleSequenceNumber\":516}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps6\",\"moduleSequenceNumber\":516,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps7\",\"httpPortOpen\":false,\"ip\":\"4.5.5.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[7820160,48,435,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3892.5,\"onlineMoneyMade\":7820160,\"onlineRunningTime\":8664.009999996426,\"pid\":50,\"ramUsage\":2.45,\"server\":\"ps7\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///97fef011-fba5-4b5a-8efe-8cc6b5ee85c3\",\"moduleSequenceNumber\":174}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///d3b011c0-97bf-4234-85fb-aa0d20e26a92\",\"moduleSequenceNumber\":518}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps7\",\"moduleSequenceNumber\":518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps8\",\"httpPortOpen\":false,\"ip\":\"66.7.1.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[10122291,63,432,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3976.875,\"onlineMoneyMade\":10122291,\"onlineRunningTime\":8664.009999996426,\"pid\":51,\"ramUsage\":2.45,\"server\":\"ps8\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///13ef10d8-af9e-4fe4-aa59-c7c06aa01065\",\"moduleSequenceNumber\":175}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///40d03d29-26dd-4a4b-a3c4-0438cd146a54\",\"moduleSequenceNumber\":520}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps8\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps9\",\"httpPortOpen\":false,\"ip\":\"22.6.9.0\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[13833900,84,420,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4072.5,\"onlineMoneyMade\":13833900,\"onlineRunningTime\":8664.009999996426,\"pid\":52,\"ramUsage\":2.45,\"server\":\"ps9\",\"threads\":3,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///3b67655d-0475-4db3-b9ac-caf082640893\",\"moduleSequenceNumber\":522}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps9\",\"moduleSequenceNumber\":522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps10\",\"httpPortOpen\":false,\"ip\":\"40.5.0.6\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[7319595,45,432,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3864.375,\"onlineMoneyMade\":7319595,\"onlineRunningTime\":8664.009999996426,\"pid\":53,\"ramUsage\":2.45,\"server\":\"ps10\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///fc8fdab1-9564-4096-b281-85f912ad0a87\",\"moduleSequenceNumber\":246}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///0304d3ae-e3b9-48b7-9986-32621e6c285e\",\"moduleSequenceNumber\":524}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps10\",\"moduleSequenceNumber\":524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps11\",\"httpPortOpen\":false,\"ip\":\"51.3.8.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8276169,51,423,42]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3892.5,\"onlineMoneyMade\":8276169,\"onlineRunningTime\":8664.009999996426,\"pid\":54,\"ramUsage\":2.45,\"server\":\"ps11\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///f8326989-3d6a-449d-95b4-b8348bdb0984\",\"moduleSequenceNumber\":249}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///b96a0b61-5038-40d8-8f86-5345b07ba117\",\"moduleSequenceNumber\":526}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps11\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps12\",\"httpPortOpen\":false,\"ip\":\"90.8.6.0\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[14206392,87,420,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4089.375,\"onlineMoneyMade\":14206392,\"onlineRunningTime\":8664.009999996426,\"pid\":55,\"ramUsage\":2.45,\"server\":\"ps12\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///2b3c01cf-12d2-4b7c-92bc-d0aaa9af95e8\",\"moduleSequenceNumber\":252}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///bf8ad51f-8f27-42b8-8be9-aadb6ded9605\",\"moduleSequenceNumber\":528}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps12\",\"moduleSequenceNumber\":528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps13\",\"httpPortOpen\":false,\"ip\":\"65.2.0.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8271414,51,435,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3909.375,\"onlineMoneyMade\":8271414,\"onlineRunningTime\":8664.009999996426,\"pid\":56,\"ramUsage\":2.45,\"server\":\"ps13\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///670c7972-f858-48f8-aeb6-8c545f4e9f60\",\"moduleSequenceNumber\":255}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///1cecbe4e-d828-4d44-bc5e-0262ef8da8c9\",\"moduleSequenceNumber\":530}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps13\",\"moduleSequenceNumber\":530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps14\",\"httpPortOpen\":false,\"ip\":\"2.2.9.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[10056303,63,429,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3971.25,\"onlineMoneyMade\":10056303,\"onlineRunningTime\":8664.009999996426,\"pid\":57,\"ramUsage\":2.45,\"server\":\"ps14\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///0f7c0f1a-e7ce-4ad0-a077-7af63178b45d\",\"moduleSequenceNumber\":258}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///ebdc31e9-cfa4-4fe8-b41f-3898f3e381fe\",\"moduleSequenceNumber\":532}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps14\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps15\",\"httpPortOpen\":false,\"ip\":\"22.2.2.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8875218,54,429,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3909.375,\"onlineMoneyMade\":8875218,\"onlineRunningTime\":8664.009999996426,\"pid\":58,\"ramUsage\":2.45,\"server\":\"ps15\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///211f7aef-21e0-484e-a650-d3f062b4b74b\",\"moduleSequenceNumber\":261}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///749f80a7-8cc6-43b1-b0a1-3c7effb0afe9\",\"moduleSequenceNumber\":534}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps15\",\"moduleSequenceNumber\":534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps16\",\"httpPortOpen\":false,\"ip\":\"63.1.6.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[11165304,69,432,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4010.625,\"onlineMoneyMade\":11165304,\"onlineRunningTime\":8664.009999996426,\"pid\":59,\"ramUsage\":2.45,\"server\":\"ps16\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///0336f1e0-cb31-42f3-8b13-3b1c15088af6\",\"moduleSequenceNumber\":264}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///db7f2a99-5cc8-4db4-8bd5-fd3f6a71b1b6\",\"moduleSequenceNumber\":536}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps16\",\"moduleSequenceNumber\":536,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps17\",\"httpPortOpen\":false,\"ip\":\"97.2.4.9\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[10271157,63,435,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3982.5,\"onlineMoneyMade\":10271157,\"onlineRunningTime\":8664.009999996426,\"pid\":60,\"ramUsage\":2.45,\"server\":\"ps17\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///7212f172-fd94-416b-9fcd-946896aa0b6a\",\"moduleSequenceNumber\":267}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///3529e1f7-a9c7-491a-a801-80252fc1a00e\",\"moduleSequenceNumber\":538}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps17\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps18\",\"httpPortOpen\":false,\"ip\":\"85.0.3.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[7436892,45,432,39]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3870,\"onlineMoneyMade\":7436892,\"onlineRunningTime\":8664.009999996426,\"pid\":61,\"ramUsage\":2.45,\"server\":\"ps18\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///ea82c7df-7c3e-47ec-9f77-471768e726e6\",\"moduleSequenceNumber\":270}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///fdf9c7b4-75e9-42e4-a346-5566827417a2\",\"moduleSequenceNumber\":540}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps18\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps19\",\"httpPortOpen\":false,\"ip\":\"65.0.2.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[6868998,42,426,39]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3836.25,\"onlineMoneyMade\":6868998,\"onlineRunningTime\":8664.009999996426,\"pid\":62,\"ramUsage\":2.45,\"server\":\"ps19\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///5cee4832-4528-4e93-a820-e5cb07066dd2\",\"moduleSequenceNumber\":273}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///7e3e75c6-897b-4392-af8a-76d2c0554ae2\",\"moduleSequenceNumber\":542}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps19\",\"moduleSequenceNumber\":542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps20\",\"httpPortOpen\":false,\"ip\":\"40.7.3.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[10632465,66,426,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3982.5,\"onlineMoneyMade\":10632465,\"onlineRunningTime\":8664.009999996426,\"pid\":63,\"ramUsage\":2.45,\"server\":\"ps20\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///2e48b6a6-0aa6-4b17-bf1f-196d0c7679f0\",\"moduleSequenceNumber\":307}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///137329df-c1be-4e58-ab65-bcc1c7803688\",\"moduleSequenceNumber\":544}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps20\",\"moduleSequenceNumber\":544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps21\",\"httpPortOpen\":false,\"ip\":\"87.1.4.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[8107584,51,432,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3909.375,\"onlineMoneyMade\":8107584,\"onlineRunningTime\":8664.009999996426,\"pid\":64,\"ramUsage\":2.45,\"server\":\"ps21\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///094f7b03-2810-4279-8cba-68ab5174d8ac\",\"moduleSequenceNumber\":310}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///72d192e4-bc82-41cf-b3d5-ce776afa1cf5\",\"moduleSequenceNumber\":546}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps21\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps22\",\"httpPortOpen\":false,\"ip\":\"39.2.0.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[12660633,78,429,33]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4055.625,\"onlineMoneyMade\":12660633,\"onlineRunningTime\":8664.009999996426,\"pid\":65,\"ramUsage\":2.45,\"server\":\"ps22\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///b5a24f0d-43a6-4b08-9889-c11bd65b7734\",\"moduleSequenceNumber\":313}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///8e9a3ecf-c5ca-4fcb-9084-bf1f46a9083f\",\"moduleSequenceNumber\":548}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps22\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps23\",\"httpPortOpen\":false,\"ip\":\"88.2.4.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[7210074,45,435,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3875.625,\"onlineMoneyMade\":7210074,\"onlineRunningTime\":8664.009999996426,\"pid\":66,\"ramUsage\":2.45,\"server\":\"ps23\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///abfb1433-a105-4d09-9d83-a49a76a9651d\",\"moduleSequenceNumber\":316}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///b8b8cb9d-cc74-4051-8a87-73b122219d3c\",\"moduleSequenceNumber\":550}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps23\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ps24\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"ps24\",\"httpPortOpen\":false,\"ip\":\"20.9.0.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[9760749,60,429,36]},\"filename\":\"farm.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3943.125,\"onlineMoneyMade\":9760749,\"onlineRunningTime\":8664.009999996426,\"pid\":67,\"ramUsage\":2.45,\"server\":\"ps24\",\"threads\":3,\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///a1be06ec-aa6b-4e61-b1dc-2f62052d883c\",\"moduleSequenceNumber\":319}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"joesguns\\\";\\n\\n\\t// Make sure the server has at least 75% of possible money before hacking it\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\t// If the security is higher than this we must weaken first\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\t\\n\\t//Use BRUTESSH.exe if existsto open SSH Port\\n\\t//if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n\\tns.brutessh(target);\\n\\t//}\\n\\n\\t//No root? Get root!\\n\\t//ns.nuke(target);\\n\\t// Infinitly loop hack/grow/weaken on target\\n\\twhile(\\\"ICE\\\") {\\n\\t\\tif(ns.getServerSecurityLevel(target) > securityThresh){\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tif(ns.getServerMoneyAvailable(target) < moneyThresh){\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tawait ns.hack(target);\\n\\t}\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///c253831b-d376-445a-a628-9791b814dc23\",\"moduleSequenceNumber\":551}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"ps24\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"61.2.5.9\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":13.885932307692325,\"favor\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":181.05591794872097,\"favor\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":5.520661538461523,\"favor\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":226.2101076923007,\"favor\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":394.42602564106187}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":3968.2268717946986}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":false}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":false}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":true,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":true,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1642929065636","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1642930170746"}}